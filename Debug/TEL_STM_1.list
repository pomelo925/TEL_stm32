
TEL_STM_1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000002cc  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000dab0  080002d0  080002d0  000102d0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000002ac  0800dd80  0800dd80  0001dd80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM          00000008  0800e02c  0800e02c  0001e02c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000010  0800e034  0800e034  0001e034  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .fini_array   00000004  0800e044  0800e044  0001e044  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .data         0000007c  24000000  0800e048  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          00001004  24000080  0800e0c4  00020080  2**3
                  ALLOC
  8 ._user_heap_stack 00000604  24001084  0800e0c4  00021084  2**0
                  ALLOC
  9 .ARM.attributes 0000002e  00000000  00000000  0002007c  2**0
                  CONTENTS, READONLY
 10 .debug_info   000265ef  00000000  00000000  000200aa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev 000043b9  00000000  00000000  00046699  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_aranges 00001518  00000000  00000000  0004aa58  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_ranges 000013c8  00000000  00000000  0004bf70  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_macro  00035ae7  00000000  00000000  0004d338  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_line   0001ce11  00000000  00000000  00082e1f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_str    00153a3c  00000000  00000000  0009fc30  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .comment      00000050  00000000  00000000  001f366c  2**0
                  CONTENTS, READONLY
 18 .debug_frame  00005c94  00000000  00000000  001f36bc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080002d0 <__do_global_dtors_aux>:
 80002d0:	b510      	push	{r4, lr}
 80002d2:	4c05      	ldr	r4, [pc, #20]	; (80002e8 <__do_global_dtors_aux+0x18>)
 80002d4:	7823      	ldrb	r3, [r4, #0]
 80002d6:	b933      	cbnz	r3, 80002e6 <__do_global_dtors_aux+0x16>
 80002d8:	4b04      	ldr	r3, [pc, #16]	; (80002ec <__do_global_dtors_aux+0x1c>)
 80002da:	b113      	cbz	r3, 80002e2 <__do_global_dtors_aux+0x12>
 80002dc:	4804      	ldr	r0, [pc, #16]	; (80002f0 <__do_global_dtors_aux+0x20>)
 80002de:	f3af 8000 	nop.w
 80002e2:	2301      	movs	r3, #1
 80002e4:	7023      	strb	r3, [r4, #0]
 80002e6:	bd10      	pop	{r4, pc}
 80002e8:	24000080 	.word	0x24000080
 80002ec:	00000000 	.word	0x00000000
 80002f0:	0800dd68 	.word	0x0800dd68

080002f4 <frame_dummy>:
 80002f4:	b508      	push	{r3, lr}
 80002f6:	4b03      	ldr	r3, [pc, #12]	; (8000304 <frame_dummy+0x10>)
 80002f8:	b11b      	cbz	r3, 8000302 <frame_dummy+0xe>
 80002fa:	4903      	ldr	r1, [pc, #12]	; (8000308 <frame_dummy+0x14>)
 80002fc:	4803      	ldr	r0, [pc, #12]	; (800030c <frame_dummy+0x18>)
 80002fe:	f3af 8000 	nop.w
 8000302:	bd08      	pop	{r3, pc}
 8000304:	00000000 	.word	0x00000000
 8000308:	24000084 	.word	0x24000084
 800030c:	0800dd68 	.word	0x0800dd68

08000310 <strlen>:
 8000310:	4603      	mov	r3, r0
 8000312:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000316:	2a00      	cmp	r2, #0
 8000318:	d1fb      	bne.n	8000312 <strlen+0x2>
 800031a:	1a18      	subs	r0, r3, r0
 800031c:	3801      	subs	r0, #1
 800031e:	4770      	bx	lr

08000320 <__aeabi_uldivmod>:
 8000320:	b953      	cbnz	r3, 8000338 <__aeabi_uldivmod+0x18>
 8000322:	b94a      	cbnz	r2, 8000338 <__aeabi_uldivmod+0x18>
 8000324:	2900      	cmp	r1, #0
 8000326:	bf08      	it	eq
 8000328:	2800      	cmpeq	r0, #0
 800032a:	bf1c      	itt	ne
 800032c:	f04f 31ff 	movne.w	r1, #4294967295
 8000330:	f04f 30ff 	movne.w	r0, #4294967295
 8000334:	f000 b974 	b.w	8000620 <__aeabi_idiv0>
 8000338:	f1ad 0c08 	sub.w	ip, sp, #8
 800033c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000340:	f000 f806 	bl	8000350 <__udivmoddi4>
 8000344:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000348:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800034c:	b004      	add	sp, #16
 800034e:	4770      	bx	lr

08000350 <__udivmoddi4>:
 8000350:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000354:	9d08      	ldr	r5, [sp, #32]
 8000356:	4604      	mov	r4, r0
 8000358:	468e      	mov	lr, r1
 800035a:	2b00      	cmp	r3, #0
 800035c:	d14d      	bne.n	80003fa <__udivmoddi4+0xaa>
 800035e:	428a      	cmp	r2, r1
 8000360:	4694      	mov	ip, r2
 8000362:	d969      	bls.n	8000438 <__udivmoddi4+0xe8>
 8000364:	fab2 f282 	clz	r2, r2
 8000368:	b152      	cbz	r2, 8000380 <__udivmoddi4+0x30>
 800036a:	fa01 f302 	lsl.w	r3, r1, r2
 800036e:	f1c2 0120 	rsb	r1, r2, #32
 8000372:	fa20 f101 	lsr.w	r1, r0, r1
 8000376:	fa0c fc02 	lsl.w	ip, ip, r2
 800037a:	ea41 0e03 	orr.w	lr, r1, r3
 800037e:	4094      	lsls	r4, r2
 8000380:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000384:	0c21      	lsrs	r1, r4, #16
 8000386:	fbbe f6f8 	udiv	r6, lr, r8
 800038a:	fa1f f78c 	uxth.w	r7, ip
 800038e:	fb08 e316 	mls	r3, r8, r6, lr
 8000392:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000396:	fb06 f107 	mul.w	r1, r6, r7
 800039a:	4299      	cmp	r1, r3
 800039c:	d90a      	bls.n	80003b4 <__udivmoddi4+0x64>
 800039e:	eb1c 0303 	adds.w	r3, ip, r3
 80003a2:	f106 30ff 	add.w	r0, r6, #4294967295
 80003a6:	f080 811f 	bcs.w	80005e8 <__udivmoddi4+0x298>
 80003aa:	4299      	cmp	r1, r3
 80003ac:	f240 811c 	bls.w	80005e8 <__udivmoddi4+0x298>
 80003b0:	3e02      	subs	r6, #2
 80003b2:	4463      	add	r3, ip
 80003b4:	1a5b      	subs	r3, r3, r1
 80003b6:	b2a4      	uxth	r4, r4
 80003b8:	fbb3 f0f8 	udiv	r0, r3, r8
 80003bc:	fb08 3310 	mls	r3, r8, r0, r3
 80003c0:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 80003c4:	fb00 f707 	mul.w	r7, r0, r7
 80003c8:	42a7      	cmp	r7, r4
 80003ca:	d90a      	bls.n	80003e2 <__udivmoddi4+0x92>
 80003cc:	eb1c 0404 	adds.w	r4, ip, r4
 80003d0:	f100 33ff 	add.w	r3, r0, #4294967295
 80003d4:	f080 810a 	bcs.w	80005ec <__udivmoddi4+0x29c>
 80003d8:	42a7      	cmp	r7, r4
 80003da:	f240 8107 	bls.w	80005ec <__udivmoddi4+0x29c>
 80003de:	4464      	add	r4, ip
 80003e0:	3802      	subs	r0, #2
 80003e2:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 80003e6:	1be4      	subs	r4, r4, r7
 80003e8:	2600      	movs	r6, #0
 80003ea:	b11d      	cbz	r5, 80003f4 <__udivmoddi4+0xa4>
 80003ec:	40d4      	lsrs	r4, r2
 80003ee:	2300      	movs	r3, #0
 80003f0:	e9c5 4300 	strd	r4, r3, [r5]
 80003f4:	4631      	mov	r1, r6
 80003f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003fa:	428b      	cmp	r3, r1
 80003fc:	d909      	bls.n	8000412 <__udivmoddi4+0xc2>
 80003fe:	2d00      	cmp	r5, #0
 8000400:	f000 80ef 	beq.w	80005e2 <__udivmoddi4+0x292>
 8000404:	2600      	movs	r6, #0
 8000406:	e9c5 0100 	strd	r0, r1, [r5]
 800040a:	4630      	mov	r0, r6
 800040c:	4631      	mov	r1, r6
 800040e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000412:	fab3 f683 	clz	r6, r3
 8000416:	2e00      	cmp	r6, #0
 8000418:	d14a      	bne.n	80004b0 <__udivmoddi4+0x160>
 800041a:	428b      	cmp	r3, r1
 800041c:	d302      	bcc.n	8000424 <__udivmoddi4+0xd4>
 800041e:	4282      	cmp	r2, r0
 8000420:	f200 80f9 	bhi.w	8000616 <__udivmoddi4+0x2c6>
 8000424:	1a84      	subs	r4, r0, r2
 8000426:	eb61 0303 	sbc.w	r3, r1, r3
 800042a:	2001      	movs	r0, #1
 800042c:	469e      	mov	lr, r3
 800042e:	2d00      	cmp	r5, #0
 8000430:	d0e0      	beq.n	80003f4 <__udivmoddi4+0xa4>
 8000432:	e9c5 4e00 	strd	r4, lr, [r5]
 8000436:	e7dd      	b.n	80003f4 <__udivmoddi4+0xa4>
 8000438:	b902      	cbnz	r2, 800043c <__udivmoddi4+0xec>
 800043a:	deff      	udf	#255	; 0xff
 800043c:	fab2 f282 	clz	r2, r2
 8000440:	2a00      	cmp	r2, #0
 8000442:	f040 8092 	bne.w	800056a <__udivmoddi4+0x21a>
 8000446:	eba1 010c 	sub.w	r1, r1, ip
 800044a:	ea4f 471c 	mov.w	r7, ip, lsr #16
 800044e:	fa1f fe8c 	uxth.w	lr, ip
 8000452:	2601      	movs	r6, #1
 8000454:	0c20      	lsrs	r0, r4, #16
 8000456:	fbb1 f3f7 	udiv	r3, r1, r7
 800045a:	fb07 1113 	mls	r1, r7, r3, r1
 800045e:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000462:	fb0e f003 	mul.w	r0, lr, r3
 8000466:	4288      	cmp	r0, r1
 8000468:	d908      	bls.n	800047c <__udivmoddi4+0x12c>
 800046a:	eb1c 0101 	adds.w	r1, ip, r1
 800046e:	f103 38ff 	add.w	r8, r3, #4294967295
 8000472:	d202      	bcs.n	800047a <__udivmoddi4+0x12a>
 8000474:	4288      	cmp	r0, r1
 8000476:	f200 80cb 	bhi.w	8000610 <__udivmoddi4+0x2c0>
 800047a:	4643      	mov	r3, r8
 800047c:	1a09      	subs	r1, r1, r0
 800047e:	b2a4      	uxth	r4, r4
 8000480:	fbb1 f0f7 	udiv	r0, r1, r7
 8000484:	fb07 1110 	mls	r1, r7, r0, r1
 8000488:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 800048c:	fb0e fe00 	mul.w	lr, lr, r0
 8000490:	45a6      	cmp	lr, r4
 8000492:	d908      	bls.n	80004a6 <__udivmoddi4+0x156>
 8000494:	eb1c 0404 	adds.w	r4, ip, r4
 8000498:	f100 31ff 	add.w	r1, r0, #4294967295
 800049c:	d202      	bcs.n	80004a4 <__udivmoddi4+0x154>
 800049e:	45a6      	cmp	lr, r4
 80004a0:	f200 80bb 	bhi.w	800061a <__udivmoddi4+0x2ca>
 80004a4:	4608      	mov	r0, r1
 80004a6:	eba4 040e 	sub.w	r4, r4, lr
 80004aa:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 80004ae:	e79c      	b.n	80003ea <__udivmoddi4+0x9a>
 80004b0:	f1c6 0720 	rsb	r7, r6, #32
 80004b4:	40b3      	lsls	r3, r6
 80004b6:	fa22 fc07 	lsr.w	ip, r2, r7
 80004ba:	ea4c 0c03 	orr.w	ip, ip, r3
 80004be:	fa20 f407 	lsr.w	r4, r0, r7
 80004c2:	fa01 f306 	lsl.w	r3, r1, r6
 80004c6:	431c      	orrs	r4, r3
 80004c8:	40f9      	lsrs	r1, r7
 80004ca:	ea4f 491c 	mov.w	r9, ip, lsr #16
 80004ce:	fa00 f306 	lsl.w	r3, r0, r6
 80004d2:	fbb1 f8f9 	udiv	r8, r1, r9
 80004d6:	0c20      	lsrs	r0, r4, #16
 80004d8:	fa1f fe8c 	uxth.w	lr, ip
 80004dc:	fb09 1118 	mls	r1, r9, r8, r1
 80004e0:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80004e4:	fb08 f00e 	mul.w	r0, r8, lr
 80004e8:	4288      	cmp	r0, r1
 80004ea:	fa02 f206 	lsl.w	r2, r2, r6
 80004ee:	d90b      	bls.n	8000508 <__udivmoddi4+0x1b8>
 80004f0:	eb1c 0101 	adds.w	r1, ip, r1
 80004f4:	f108 3aff 	add.w	sl, r8, #4294967295
 80004f8:	f080 8088 	bcs.w	800060c <__udivmoddi4+0x2bc>
 80004fc:	4288      	cmp	r0, r1
 80004fe:	f240 8085 	bls.w	800060c <__udivmoddi4+0x2bc>
 8000502:	f1a8 0802 	sub.w	r8, r8, #2
 8000506:	4461      	add	r1, ip
 8000508:	1a09      	subs	r1, r1, r0
 800050a:	b2a4      	uxth	r4, r4
 800050c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000510:	fb09 1110 	mls	r1, r9, r0, r1
 8000514:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000518:	fb00 fe0e 	mul.w	lr, r0, lr
 800051c:	458e      	cmp	lr, r1
 800051e:	d908      	bls.n	8000532 <__udivmoddi4+0x1e2>
 8000520:	eb1c 0101 	adds.w	r1, ip, r1
 8000524:	f100 34ff 	add.w	r4, r0, #4294967295
 8000528:	d26c      	bcs.n	8000604 <__udivmoddi4+0x2b4>
 800052a:	458e      	cmp	lr, r1
 800052c:	d96a      	bls.n	8000604 <__udivmoddi4+0x2b4>
 800052e:	3802      	subs	r0, #2
 8000530:	4461      	add	r1, ip
 8000532:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000536:	fba0 9402 	umull	r9, r4, r0, r2
 800053a:	eba1 010e 	sub.w	r1, r1, lr
 800053e:	42a1      	cmp	r1, r4
 8000540:	46c8      	mov	r8, r9
 8000542:	46a6      	mov	lr, r4
 8000544:	d356      	bcc.n	80005f4 <__udivmoddi4+0x2a4>
 8000546:	d053      	beq.n	80005f0 <__udivmoddi4+0x2a0>
 8000548:	b15d      	cbz	r5, 8000562 <__udivmoddi4+0x212>
 800054a:	ebb3 0208 	subs.w	r2, r3, r8
 800054e:	eb61 010e 	sbc.w	r1, r1, lr
 8000552:	fa01 f707 	lsl.w	r7, r1, r7
 8000556:	fa22 f306 	lsr.w	r3, r2, r6
 800055a:	40f1      	lsrs	r1, r6
 800055c:	431f      	orrs	r7, r3
 800055e:	e9c5 7100 	strd	r7, r1, [r5]
 8000562:	2600      	movs	r6, #0
 8000564:	4631      	mov	r1, r6
 8000566:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800056a:	f1c2 0320 	rsb	r3, r2, #32
 800056e:	40d8      	lsrs	r0, r3
 8000570:	fa0c fc02 	lsl.w	ip, ip, r2
 8000574:	fa21 f303 	lsr.w	r3, r1, r3
 8000578:	4091      	lsls	r1, r2
 800057a:	4301      	orrs	r1, r0
 800057c:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000580:	fa1f fe8c 	uxth.w	lr, ip
 8000584:	fbb3 f0f7 	udiv	r0, r3, r7
 8000588:	fb07 3610 	mls	r6, r7, r0, r3
 800058c:	0c0b      	lsrs	r3, r1, #16
 800058e:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000592:	fb00 f60e 	mul.w	r6, r0, lr
 8000596:	429e      	cmp	r6, r3
 8000598:	fa04 f402 	lsl.w	r4, r4, r2
 800059c:	d908      	bls.n	80005b0 <__udivmoddi4+0x260>
 800059e:	eb1c 0303 	adds.w	r3, ip, r3
 80005a2:	f100 38ff 	add.w	r8, r0, #4294967295
 80005a6:	d22f      	bcs.n	8000608 <__udivmoddi4+0x2b8>
 80005a8:	429e      	cmp	r6, r3
 80005aa:	d92d      	bls.n	8000608 <__udivmoddi4+0x2b8>
 80005ac:	3802      	subs	r0, #2
 80005ae:	4463      	add	r3, ip
 80005b0:	1b9b      	subs	r3, r3, r6
 80005b2:	b289      	uxth	r1, r1
 80005b4:	fbb3 f6f7 	udiv	r6, r3, r7
 80005b8:	fb07 3316 	mls	r3, r7, r6, r3
 80005bc:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80005c0:	fb06 f30e 	mul.w	r3, r6, lr
 80005c4:	428b      	cmp	r3, r1
 80005c6:	d908      	bls.n	80005da <__udivmoddi4+0x28a>
 80005c8:	eb1c 0101 	adds.w	r1, ip, r1
 80005cc:	f106 38ff 	add.w	r8, r6, #4294967295
 80005d0:	d216      	bcs.n	8000600 <__udivmoddi4+0x2b0>
 80005d2:	428b      	cmp	r3, r1
 80005d4:	d914      	bls.n	8000600 <__udivmoddi4+0x2b0>
 80005d6:	3e02      	subs	r6, #2
 80005d8:	4461      	add	r1, ip
 80005da:	1ac9      	subs	r1, r1, r3
 80005dc:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 80005e0:	e738      	b.n	8000454 <__udivmoddi4+0x104>
 80005e2:	462e      	mov	r6, r5
 80005e4:	4628      	mov	r0, r5
 80005e6:	e705      	b.n	80003f4 <__udivmoddi4+0xa4>
 80005e8:	4606      	mov	r6, r0
 80005ea:	e6e3      	b.n	80003b4 <__udivmoddi4+0x64>
 80005ec:	4618      	mov	r0, r3
 80005ee:	e6f8      	b.n	80003e2 <__udivmoddi4+0x92>
 80005f0:	454b      	cmp	r3, r9
 80005f2:	d2a9      	bcs.n	8000548 <__udivmoddi4+0x1f8>
 80005f4:	ebb9 0802 	subs.w	r8, r9, r2
 80005f8:	eb64 0e0c 	sbc.w	lr, r4, ip
 80005fc:	3801      	subs	r0, #1
 80005fe:	e7a3      	b.n	8000548 <__udivmoddi4+0x1f8>
 8000600:	4646      	mov	r6, r8
 8000602:	e7ea      	b.n	80005da <__udivmoddi4+0x28a>
 8000604:	4620      	mov	r0, r4
 8000606:	e794      	b.n	8000532 <__udivmoddi4+0x1e2>
 8000608:	4640      	mov	r0, r8
 800060a:	e7d1      	b.n	80005b0 <__udivmoddi4+0x260>
 800060c:	46d0      	mov	r8, sl
 800060e:	e77b      	b.n	8000508 <__udivmoddi4+0x1b8>
 8000610:	3b02      	subs	r3, #2
 8000612:	4461      	add	r1, ip
 8000614:	e732      	b.n	800047c <__udivmoddi4+0x12c>
 8000616:	4630      	mov	r0, r6
 8000618:	e709      	b.n	800042e <__udivmoddi4+0xde>
 800061a:	4464      	add	r4, ip
 800061c:	3802      	subs	r0, #2
 800061e:	e742      	b.n	80004a6 <__udivmoddi4+0x156>

08000620 <__aeabi_idiv0>:
 8000620:	4770      	bx	lr
 8000622:	bf00      	nop

08000624 <_ZN3ros16normalizeSecNSecERmS0_>:
 8000624:	b480      	push	{r7}
 8000626:	b085      	sub	sp, #20
 8000628:	af00      	add	r7, sp, #0
 800062a:	6078      	str	r0, [r7, #4]
 800062c:	6039      	str	r1, [r7, #0]
 800062e:	683b      	ldr	r3, [r7, #0]
 8000630:	681b      	ldr	r3, [r3, #0]
 8000632:	0a5a      	lsrs	r2, r3, #9
 8000634:	490f      	ldr	r1, [pc, #60]	; (8000674 <_ZN3ros16normalizeSecNSecERmS0_+0x50>)
 8000636:	fba1 1202 	umull	r1, r2, r1, r2
 800063a:	09d2      	lsrs	r2, r2, #7
 800063c:	490e      	ldr	r1, [pc, #56]	; (8000678 <_ZN3ros16normalizeSecNSecERmS0_+0x54>)
 800063e:	fb01 f202 	mul.w	r2, r1, r2
 8000642:	1a9b      	subs	r3, r3, r2
 8000644:	60fb      	str	r3, [r7, #12]
 8000646:	683b      	ldr	r3, [r7, #0]
 8000648:	681b      	ldr	r3, [r3, #0]
 800064a:	0a5b      	lsrs	r3, r3, #9
 800064c:	4a09      	ldr	r2, [pc, #36]	; (8000674 <_ZN3ros16normalizeSecNSecERmS0_+0x50>)
 800064e:	fba2 2303 	umull	r2, r3, r2, r3
 8000652:	09db      	lsrs	r3, r3, #7
 8000654:	60bb      	str	r3, [r7, #8]
 8000656:	687b      	ldr	r3, [r7, #4]
 8000658:	681a      	ldr	r2, [r3, #0]
 800065a:	68bb      	ldr	r3, [r7, #8]
 800065c:	441a      	add	r2, r3
 800065e:	687b      	ldr	r3, [r7, #4]
 8000660:	601a      	str	r2, [r3, #0]
 8000662:	683b      	ldr	r3, [r7, #0]
 8000664:	68fa      	ldr	r2, [r7, #12]
 8000666:	601a      	str	r2, [r3, #0]
 8000668:	bf00      	nop
 800066a:	3714      	adds	r7, #20
 800066c:	46bd      	mov	sp, r7
 800066e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000672:	4770      	bx	lr
 8000674:	00044b83 	.word	0x00044b83
 8000678:	3b9aca00 	.word	0x3b9aca00

0800067c <_Z13DC_motor_initv>:
DC_motor fr(105,3,0.002,0.001,512,13.2,200);
DC_motor fl(5.2,2,0.001,0.001,512,13.2,200);
DC_motor br(155,2,0.002,0.001,512,13.2,200);
DC_motor bl(155,5,0.006,0.001,512,13.2,200);

void DC_motor_init(){
 800067c:	b580      	push	{r7, lr}
 800067e:	af00      	add	r7, sp, #0
	HAL_TIM_Encoder_Start(&htim2, TIM_CHANNEL_1);
 8000680:	2100      	movs	r1, #0
 8000682:	481a      	ldr	r0, [pc, #104]	; (80006ec <_Z13DC_motor_initv+0x70>)
 8000684:	f00a f892 	bl	800a7ac <HAL_TIM_Encoder_Start>
	HAL_TIM_Encoder_Start(&htim2, TIM_CHANNEL_2);
 8000688:	2104      	movs	r1, #4
 800068a:	4818      	ldr	r0, [pc, #96]	; (80006ec <_Z13DC_motor_initv+0x70>)
 800068c:	f00a f88e 	bl	800a7ac <HAL_TIM_Encoder_Start>
	HAL_TIM_Encoder_Start(&htim5, TIM_CHANNEL_1);
 8000690:	2100      	movs	r1, #0
 8000692:	4817      	ldr	r0, [pc, #92]	; (80006f0 <_Z13DC_motor_initv+0x74>)
 8000694:	f00a f88a 	bl	800a7ac <HAL_TIM_Encoder_Start>
	HAL_TIM_Encoder_Start(&htim5, TIM_CHANNEL_2);
 8000698:	2104      	movs	r1, #4
 800069a:	4815      	ldr	r0, [pc, #84]	; (80006f0 <_Z13DC_motor_initv+0x74>)
 800069c:	f00a f886 	bl	800a7ac <HAL_TIM_Encoder_Start>
	HAL_TIM_Encoder_Start(&htim3, TIM_CHANNEL_1);
 80006a0:	2100      	movs	r1, #0
 80006a2:	4814      	ldr	r0, [pc, #80]	; (80006f4 <_Z13DC_motor_initv+0x78>)
 80006a4:	f00a f882 	bl	800a7ac <HAL_TIM_Encoder_Start>
	HAL_TIM_Encoder_Start(&htim3, TIM_CHANNEL_2);
 80006a8:	2104      	movs	r1, #4
 80006aa:	4812      	ldr	r0, [pc, #72]	; (80006f4 <_Z13DC_motor_initv+0x78>)
 80006ac:	f00a f87e 	bl	800a7ac <HAL_TIM_Encoder_Start>
	HAL_TIM_Encoder_Start(&htim4, TIM_CHANNEL_1);
 80006b0:	2100      	movs	r1, #0
 80006b2:	4811      	ldr	r0, [pc, #68]	; (80006f8 <_Z13DC_motor_initv+0x7c>)
 80006b4:	f00a f87a 	bl	800a7ac <HAL_TIM_Encoder_Start>
	HAL_TIM_Encoder_Start(&htim4, TIM_CHANNEL_2);
 80006b8:	2104      	movs	r1, #4
 80006ba:	480f      	ldr	r0, [pc, #60]	; (80006f8 <_Z13DC_motor_initv+0x7c>)
 80006bc:	f00a f876 	bl	800a7ac <HAL_TIM_Encoder_Start>
	HAL_TIM_Base_Start_IT(&htim13);
 80006c0:	480e      	ldr	r0, [pc, #56]	; (80006fc <_Z13DC_motor_initv+0x80>)
 80006c2:	f009 fd87 	bl	800a1d4 <HAL_TIM_Base_Start_IT>
	HAL_TIM_PWM_Start_IT(&htim12, TIM_CHANNEL_2);
 80006c6:	2104      	movs	r1, #4
 80006c8:	480d      	ldr	r0, [pc, #52]	; (8000700 <_Z13DC_motor_initv+0x84>)
 80006ca:	f009 fe61 	bl	800a390 <HAL_TIM_PWM_Start_IT>
	HAL_TIM_PWM_Start_IT(&htim12, TIM_CHANNEL_1);
 80006ce:	2100      	movs	r1, #0
 80006d0:	480b      	ldr	r0, [pc, #44]	; (8000700 <_Z13DC_motor_initv+0x84>)
 80006d2:	f009 fe5d 	bl	800a390 <HAL_TIM_PWM_Start_IT>
	HAL_TIM_PWM_Start_IT(&htim15, TIM_CHANNEL_2);
 80006d6:	2104      	movs	r1, #4
 80006d8:	480a      	ldr	r0, [pc, #40]	; (8000704 <_Z13DC_motor_initv+0x88>)
 80006da:	f009 fe59 	bl	800a390 <HAL_TIM_PWM_Start_IT>
	HAL_TIM_PWM_Start_IT(&htim15, TIM_CHANNEL_1);
 80006de:	2100      	movs	r1, #0
 80006e0:	4808      	ldr	r0, [pc, #32]	; (8000704 <_Z13DC_motor_initv+0x88>)
 80006e2:	f009 fe55 	bl	800a390 <HAL_TIM_PWM_Start_IT>
}
 80006e6:	bf00      	nop
 80006e8:	bd80      	pop	{r7, pc}
 80006ea:	bf00      	nop
 80006ec:	240002e0 	.word	0x240002e0
 80006f0:	240003c4 	.word	0x240003c4
 80006f4:	2400032c 	.word	0x2400032c
 80006f8:	24000378 	.word	0x24000378
 80006fc:	2400045c 	.word	0x2400045c
 8000700:	24000410 	.word	0x24000410
 8000704:	240004a8 	.word	0x240004a8

08000708 <_ZN8DC_motorC1Eddddddd>:

DC_motor::DC_motor(double p, double i, double d, double time, double res, double ratio, double limit){
 8000708:	b480      	push	{r7}
 800070a:	b091      	sub	sp, #68	; 0x44
 800070c:	af00      	add	r7, sp, #0
 800070e:	63f8      	str	r0, [r7, #60]	; 0x3c
 8000710:	ed87 0b0c 	vstr	d0, [r7, #48]	; 0x30
 8000714:	ed87 1b0a 	vstr	d1, [r7, #40]	; 0x28
 8000718:	ed87 2b08 	vstr	d2, [r7, #32]
 800071c:	ed87 3b06 	vstr	d3, [r7, #24]
 8000720:	ed87 4b04 	vstr	d4, [r7, #16]
 8000724:	ed87 5b02 	vstr	d5, [r7, #8]
 8000728:	ed87 6b00 	vstr	d6, [r7]
 800072c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800072e:	2200      	movs	r2, #0
 8000730:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
	this->p = p;
 8000734:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8000736:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	; 0x30
 800073a:	e9c1 2300 	strd	r2, r3, [r1]
	this->i = i;
 800073e:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8000740:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8000744:	e9c1 2304 	strd	r2, r3, [r1, #16]
	this->d = d;
 8000748:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800074a:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 800074e:	e9c1 2308 	strd	r2, r3, [r1, #32]
	this->time = time;
 8000752:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8000754:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8000758:	e9c1 2312 	strd	r2, r3, [r1, #72]	; 0x48
	this->res_encoder = res;
 800075c:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800075e:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8000762:	e9c1 2316 	strd	r2, r3, [r1, #88]	; 0x58
	this->sr_ratio = ratio;
 8000766:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8000768:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 800076c:	e9c1 2318 	strd	r2, r3, [r1, #96]	; 0x60
	this->I_limit=limit;
 8000770:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8000772:	e9d7 2300 	ldrd	r2, r3, [r7]
 8000776:	e9c1 231e 	strd	r2, r3, [r1, #120]	; 0x78
}
 800077a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800077c:	4618      	mov	r0, r3
 800077e:	3744      	adds	r7, #68	; 0x44
 8000780:	46bd      	mov	sp, r7
 8000782:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000786:	4770      	bx	lr

08000788 <_ZN8DC_motor10PIDControlEv>:

void DC_motor::PIDControl(void){
 8000788:	b480      	push	{r7}
 800078a:	b083      	sub	sp, #12
 800078c:	af00      	add	r7, sp, #0
 800078e:	6078      	str	r0, [r7, #4]

	pid_check++;
 8000790:	687b      	ldr	r3, [r7, #4]
 8000792:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8000796:	1c5a      	adds	r2, r3, #1
 8000798:	687b      	ldr	r3, [r7, #4]
 800079a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
	temp = error;
 800079e:	687b      	ldr	r3, [r7, #4]
 80007a0:	e9d3 231a 	ldrd	r2, r3, [r3, #104]	; 0x68
 80007a4:	6879      	ldr	r1, [r7, #4]
 80007a6:	e9c1 2320 	strd	r2, r3, [r1, #128]	; 0x80
	rps_now = (double) CountNow / 4 / res_encoder / sr_ratio / time;
 80007aa:	687b      	ldr	r3, [r7, #4]
 80007ac:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	; 0x70
 80007b0:	ee07 3a90 	vmov	s15, r3
 80007b4:	eeb8 7be7 	vcvt.f64.s32	d7, s15
 80007b8:	eeb1 6b00 	vmov.f64	d6, #16	; 0x40800000  4.0
 80007bc:	ee87 5b06 	vdiv.f64	d5, d7, d6
 80007c0:	687b      	ldr	r3, [r7, #4]
 80007c2:	ed93 7b16 	vldr	d7, [r3, #88]	; 0x58
 80007c6:	ee85 6b07 	vdiv.f64	d6, d5, d7
 80007ca:	687b      	ldr	r3, [r7, #4]
 80007cc:	ed93 7b18 	vldr	d7, [r3, #96]	; 0x60
 80007d0:	ee86 5b07 	vdiv.f64	d5, d6, d7
 80007d4:	687b      	ldr	r3, [r7, #4]
 80007d6:	ed93 6b12 	vldr	d6, [r3, #72]	; 0x48
 80007da:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80007de:	687b      	ldr	r3, [r7, #4]
 80007e0:	ed83 7b10 	vstr	d7, [r3, #64]	; 0x40
	if(rps_now>10||rps_now<-10){
 80007e4:	687b      	ldr	r3, [r7, #4]
 80007e6:	ed93 7b10 	vldr	d7, [r3, #64]	; 0x40
 80007ea:	eeb2 6b04 	vmov.f64	d6, #36	; 0x41200000  10.0
 80007ee:	eeb4 7bc6 	vcmpe.f64	d7, d6
 80007f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80007f6:	dc09      	bgt.n	800080c <_ZN8DC_motor10PIDControlEv+0x84>
 80007f8:	687b      	ldr	r3, [r7, #4]
 80007fa:	ed93 7b10 	vldr	d7, [r3, #64]	; 0x40
 80007fe:	eeba 6b04 	vmov.f64	d6, #164	; 0xc1200000 -10.0
 8000802:	eeb4 7bc6 	vcmpe.f64	d7, d6
 8000806:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800080a:	d50d      	bpl.n	8000828 <_ZN8DC_motor10PIDControlEv+0xa0>
		rps_now=0;
 800080c:	6879      	ldr	r1, [r7, #4]
 800080e:	f04f 0200 	mov.w	r2, #0
 8000812:	f04f 0300 	mov.w	r3, #0
 8000816:	e9c1 2310 	strd	r2, r3, [r1, #64]	; 0x40
		I=0;
 800081a:	6879      	ldr	r1, [r7, #4]
 800081c:	f04f 0200 	mov.w	r2, #0
 8000820:	f04f 0300 	mov.w	r3, #0
 8000824:	e9c1 2306 	strd	r2, r3, [r1, #24]
	}
	error = rps_goal - rps_now;
 8000828:	687b      	ldr	r3, [r7, #4]
 800082a:	ed93 6b0e 	vldr	d6, [r3, #56]	; 0x38
 800082e:	687b      	ldr	r3, [r7, #4]
 8000830:	ed93 7b10 	vldr	d7, [r3, #64]	; 0x40
 8000834:	ee36 7b47 	vsub.f64	d7, d6, d7
 8000838:	687b      	ldr	r3, [r7, #4]
 800083a:	ed83 7b1a 	vstr	d7, [r3, #104]	; 0x68
	P = p * error;
 800083e:	687b      	ldr	r3, [r7, #4]
 8000840:	ed93 6b00 	vldr	d6, [r3]
 8000844:	687b      	ldr	r3, [r7, #4]
 8000846:	ed93 7b1a 	vldr	d7, [r3, #104]	; 0x68
 800084a:	ee26 7b07 	vmul.f64	d7, d6, d7
 800084e:	687b      	ldr	r3, [r7, #4]
 8000850:	ed83 7b02 	vstr	d7, [r3, #8]
	sum = i * error * time;
 8000854:	687b      	ldr	r3, [r7, #4]
 8000856:	ed93 6b04 	vldr	d6, [r3, #16]
 800085a:	687b      	ldr	r3, [r7, #4]
 800085c:	ed93 7b1a 	vldr	d7, [r3, #104]	; 0x68
 8000860:	ee26 6b07 	vmul.f64	d6, d6, d7
 8000864:	687b      	ldr	r3, [r7, #4]
 8000866:	ed93 7b12 	vldr	d7, [r3, #72]	; 0x48
 800086a:	ee26 7b07 	vmul.f64	d7, d6, d7
 800086e:	687b      	ldr	r3, [r7, #4]
 8000870:	ed83 7b14 	vstr	d7, [r3, #80]	; 0x50
	I = I + sum;
 8000874:	687b      	ldr	r3, [r7, #4]
 8000876:	ed93 6b06 	vldr	d6, [r3, #24]
 800087a:	687b      	ldr	r3, [r7, #4]
 800087c:	ed93 7b14 	vldr	d7, [r3, #80]	; 0x50
 8000880:	ee36 7b07 	vadd.f64	d7, d6, d7
 8000884:	687b      	ldr	r3, [r7, #4]
 8000886:	ed83 7b06 	vstr	d7, [r3, #24]
	if (rps_now == 0) {
 800088a:	687b      	ldr	r3, [r7, #4]
 800088c:	ed93 7b10 	vldr	d7, [r3, #64]	; 0x40
 8000890:	eeb5 7b40 	vcmp.f64	d7, #0.0
 8000894:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8000898:	d106      	bne.n	80008a8 <_ZN8DC_motor10PIDControlEv+0x120>
		I = 0;
 800089a:	6879      	ldr	r1, [r7, #4]
 800089c:	f04f 0200 	mov.w	r2, #0
 80008a0:	f04f 0300 	mov.w	r3, #0
 80008a4:	e9c1 2306 	strd	r2, r3, [r1, #24]
	}
	if (I >= I_limit) {
 80008a8:	687b      	ldr	r3, [r7, #4]
 80008aa:	ed93 6b06 	vldr	d6, [r3, #24]
 80008ae:	687b      	ldr	r3, [r7, #4]
 80008b0:	ed93 7b1e 	vldr	d7, [r3, #120]	; 0x78
 80008b4:	eeb4 6bc7 	vcmpe.f64	d6, d7
 80008b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80008bc:	db05      	blt.n	80008ca <_ZN8DC_motor10PIDControlEv+0x142>
		I = I_limit;
 80008be:	687b      	ldr	r3, [r7, #4]
 80008c0:	e9d3 231e 	ldrd	r2, r3, [r3, #120]	; 0x78
 80008c4:	6879      	ldr	r1, [r7, #4]
 80008c6:	e9c1 2306 	strd	r2, r3, [r1, #24]
	}
	if (I < -I_limit) {
 80008ca:	687b      	ldr	r3, [r7, #4]
 80008cc:	ed93 6b06 	vldr	d6, [r3, #24]
 80008d0:	687b      	ldr	r3, [r7, #4]
 80008d2:	ed93 7b1e 	vldr	d7, [r3, #120]	; 0x78
 80008d6:	eeb1 7b47 	vneg.f64	d7, d7
 80008da:	eeb4 6bc7 	vcmpe.f64	d6, d7
 80008de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80008e2:	d507      	bpl.n	80008f4 <_ZN8DC_motor10PIDControlEv+0x16c>
		I = -I_limit;
 80008e4:	687b      	ldr	r3, [r7, #4]
 80008e6:	ed93 7b1e 	vldr	d7, [r3, #120]	; 0x78
 80008ea:	eeb1 7b47 	vneg.f64	d7, d7
 80008ee:	687b      	ldr	r3, [r7, #4]
 80008f0:	ed83 7b06 	vstr	d7, [r3, #24]
	}
	D = d * (error - temp) / time;
 80008f4:	687b      	ldr	r3, [r7, #4]
 80008f6:	ed93 6b08 	vldr	d6, [r3, #32]
 80008fa:	687b      	ldr	r3, [r7, #4]
 80008fc:	ed93 5b1a 	vldr	d5, [r3, #104]	; 0x68
 8000900:	687b      	ldr	r3, [r7, #4]
 8000902:	ed93 7b20 	vldr	d7, [r3, #128]	; 0x80
 8000906:	ee35 7b47 	vsub.f64	d7, d5, d7
 800090a:	ee26 5b07 	vmul.f64	d5, d6, d7
 800090e:	687b      	ldr	r3, [r7, #4]
 8000910:	ed93 6b12 	vldr	d6, [r3, #72]	; 0x48
 8000914:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8000918:	687b      	ldr	r3, [r7, #4]
 800091a:	ed83 7b0a 	vstr	d7, [r3, #40]	; 0x28
	PID = P + I + D;
 800091e:	687b      	ldr	r3, [r7, #4]
 8000920:	ed93 6b02 	vldr	d6, [r3, #8]
 8000924:	687b      	ldr	r3, [r7, #4]
 8000926:	ed93 7b06 	vldr	d7, [r3, #24]
 800092a:	ee36 6b07 	vadd.f64	d6, d6, d7
 800092e:	687b      	ldr	r3, [r7, #4]
 8000930:	ed93 7b0a 	vldr	d7, [r3, #40]	; 0x28
 8000934:	ee36 7b07 	vadd.f64	d7, d6, d7
 8000938:	687b      	ldr	r3, [r7, #4]
 800093a:	ed83 7b0c 	vstr	d7, [r3, #48]	; 0x30


}
 800093e:	bf00      	nop
 8000940:	370c      	adds	r7, #12
 8000942:	46bd      	mov	sp, r7
 8000944:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000948:	4770      	bx	lr
 800094a:	0000      	movs	r0, r0
 800094c:	0000      	movs	r0, r0
	...

08000950 <_Z41__static_initialization_and_destruction_0ii>:
 8000950:	b580      	push	{r7, lr}
 8000952:	b082      	sub	sp, #8
 8000954:	af00      	add	r7, sp, #0
 8000956:	6078      	str	r0, [r7, #4]
 8000958:	6039      	str	r1, [r7, #0]
 800095a:	687b      	ldr	r3, [r7, #4]
 800095c:	2b01      	cmp	r3, #1
 800095e:	d148      	bne.n	80009f2 <_Z41__static_initialization_and_destruction_0ii+0xa2>
 8000960:	683b      	ldr	r3, [r7, #0]
 8000962:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000966:	4293      	cmp	r3, r2
 8000968:	d143      	bne.n	80009f2 <_Z41__static_initialization_and_destruction_0ii+0xa2>
DC_motor fr(105,3,0.002,0.001,512,13.2,200);
 800096a:	ed9f 6b25 	vldr	d6, [pc, #148]	; 8000a00 <_Z41__static_initialization_and_destruction_0ii+0xb0>
 800096e:	ed9f 5b26 	vldr	d5, [pc, #152]	; 8000a08 <_Z41__static_initialization_and_destruction_0ii+0xb8>
 8000972:	ed9f 4b27 	vldr	d4, [pc, #156]	; 8000a10 <_Z41__static_initialization_and_destruction_0ii+0xc0>
 8000976:	ed9f 3b28 	vldr	d3, [pc, #160]	; 8000a18 <_Z41__static_initialization_and_destruction_0ii+0xc8>
 800097a:	ed9f 2b29 	vldr	d2, [pc, #164]	; 8000a20 <_Z41__static_initialization_and_destruction_0ii+0xd0>
 800097e:	eeb0 1b08 	vmov.f64	d1, #8	; 0x40400000  3.0
 8000982:	ed9f 0b29 	vldr	d0, [pc, #164]	; 8000a28 <_Z41__static_initialization_and_destruction_0ii+0xd8>
 8000986:	4830      	ldr	r0, [pc, #192]	; (8000a48 <_Z41__static_initialization_and_destruction_0ii+0xf8>)
 8000988:	f7ff febe 	bl	8000708 <_ZN8DC_motorC1Eddddddd>
DC_motor fl(5.2,2,0.001,0.001,512,13.2,200);
 800098c:	ed9f 6b1c 	vldr	d6, [pc, #112]	; 8000a00 <_Z41__static_initialization_and_destruction_0ii+0xb0>
 8000990:	ed9f 5b1d 	vldr	d5, [pc, #116]	; 8000a08 <_Z41__static_initialization_and_destruction_0ii+0xb8>
 8000994:	ed9f 4b1e 	vldr	d4, [pc, #120]	; 8000a10 <_Z41__static_initialization_and_destruction_0ii+0xc0>
 8000998:	ed9f 3b1f 	vldr	d3, [pc, #124]	; 8000a18 <_Z41__static_initialization_and_destruction_0ii+0xc8>
 800099c:	ed9f 2b1e 	vldr	d2, [pc, #120]	; 8000a18 <_Z41__static_initialization_and_destruction_0ii+0xc8>
 80009a0:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80009a4:	ed9f 0b22 	vldr	d0, [pc, #136]	; 8000a30 <_Z41__static_initialization_and_destruction_0ii+0xe0>
 80009a8:	4828      	ldr	r0, [pc, #160]	; (8000a4c <_Z41__static_initialization_and_destruction_0ii+0xfc>)
 80009aa:	f7ff fead 	bl	8000708 <_ZN8DC_motorC1Eddddddd>
DC_motor br(155,2,0.002,0.001,512,13.2,200);
 80009ae:	ed9f 6b14 	vldr	d6, [pc, #80]	; 8000a00 <_Z41__static_initialization_and_destruction_0ii+0xb0>
 80009b2:	ed9f 5b15 	vldr	d5, [pc, #84]	; 8000a08 <_Z41__static_initialization_and_destruction_0ii+0xb8>
 80009b6:	ed9f 4b16 	vldr	d4, [pc, #88]	; 8000a10 <_Z41__static_initialization_and_destruction_0ii+0xc0>
 80009ba:	ed9f 3b17 	vldr	d3, [pc, #92]	; 8000a18 <_Z41__static_initialization_and_destruction_0ii+0xc8>
 80009be:	ed9f 2b18 	vldr	d2, [pc, #96]	; 8000a20 <_Z41__static_initialization_and_destruction_0ii+0xd0>
 80009c2:	eeb0 1b00 	vmov.f64	d1, #0	; 0x40000000  2.0
 80009c6:	ed9f 0b1c 	vldr	d0, [pc, #112]	; 8000a38 <_Z41__static_initialization_and_destruction_0ii+0xe8>
 80009ca:	4821      	ldr	r0, [pc, #132]	; (8000a50 <_Z41__static_initialization_and_destruction_0ii+0x100>)
 80009cc:	f7ff fe9c 	bl	8000708 <_ZN8DC_motorC1Eddddddd>
DC_motor bl(155,5,0.006,0.001,512,13.2,200);
 80009d0:	ed9f 6b0b 	vldr	d6, [pc, #44]	; 8000a00 <_Z41__static_initialization_and_destruction_0ii+0xb0>
 80009d4:	ed9f 5b0c 	vldr	d5, [pc, #48]	; 8000a08 <_Z41__static_initialization_and_destruction_0ii+0xb8>
 80009d8:	ed9f 4b0d 	vldr	d4, [pc, #52]	; 8000a10 <_Z41__static_initialization_and_destruction_0ii+0xc0>
 80009dc:	ed9f 3b0e 	vldr	d3, [pc, #56]	; 8000a18 <_Z41__static_initialization_and_destruction_0ii+0xc8>
 80009e0:	ed9f 2b17 	vldr	d2, [pc, #92]	; 8000a40 <_Z41__static_initialization_and_destruction_0ii+0xf0>
 80009e4:	eeb1 1b04 	vmov.f64	d1, #20	; 0x40a00000  5.0
 80009e8:	ed9f 0b13 	vldr	d0, [pc, #76]	; 8000a38 <_Z41__static_initialization_and_destruction_0ii+0xe8>
 80009ec:	4819      	ldr	r0, [pc, #100]	; (8000a54 <_Z41__static_initialization_and_destruction_0ii+0x104>)
 80009ee:	f7ff fe8b 	bl	8000708 <_ZN8DC_motorC1Eddddddd>
}
 80009f2:	bf00      	nop
 80009f4:	3708      	adds	r7, #8
 80009f6:	46bd      	mov	sp, r7
 80009f8:	bd80      	pop	{r7, pc}
 80009fa:	bf00      	nop
 80009fc:	f3af 8000 	nop.w
 8000a00:	00000000 	.word	0x00000000
 8000a04:	40690000 	.word	0x40690000
 8000a08:	66666666 	.word	0x66666666
 8000a0c:	402a6666 	.word	0x402a6666
 8000a10:	00000000 	.word	0x00000000
 8000a14:	40800000 	.word	0x40800000
 8000a18:	d2f1a9fc 	.word	0xd2f1a9fc
 8000a1c:	3f50624d 	.word	0x3f50624d
 8000a20:	d2f1a9fc 	.word	0xd2f1a9fc
 8000a24:	3f60624d 	.word	0x3f60624d
 8000a28:	00000000 	.word	0x00000000
 8000a2c:	405a4000 	.word	0x405a4000
 8000a30:	cccccccd 	.word	0xcccccccd
 8000a34:	4014cccc 	.word	0x4014cccc
 8000a38:	00000000 	.word	0x00000000
 8000a3c:	40636000 	.word	0x40636000
 8000a40:	bc6a7efa 	.word	0xbc6a7efa
 8000a44:	3f789374 	.word	0x3f789374
 8000a48:	240000a0 	.word	0x240000a0
 8000a4c:	24000130 	.word	0x24000130
 8000a50:	240001c0 	.word	0x240001c0
 8000a54:	24000250 	.word	0x24000250

08000a58 <_GLOBAL__sub_I_fr>:
 8000a58:	b580      	push	{r7, lr}
 8000a5a:	af00      	add	r7, sp, #0
 8000a5c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8000a60:	2001      	movs	r0, #1
 8000a62:	f7ff ff75 	bl	8000950 <_Z41__static_initialization_and_destruction_0ii>
 8000a66:	bd80      	pop	{r7, pc}

08000a68 <_Z10debug_loopv>:

/** debug which function **/
bool mecanum_debug = true;


void debug_loop(){
 8000a68:	b580      	push	{r7, lr}
 8000a6a:	af00      	add	r7, sp, #0
	while(1){
		if(mecanum_debug) STM::run_mecanum();
 8000a6c:	4b03      	ldr	r3, [pc, #12]	; (8000a7c <_Z10debug_loopv+0x14>)
 8000a6e:	781b      	ldrb	r3, [r3, #0]
 8000a70:	2b00      	cmp	r3, #0
 8000a72:	d0fb      	beq.n	8000a6c <_Z10debug_loopv+0x4>
 8000a74:	f003 fce0 	bl	8004438 <_ZN3STM11run_mecanumEv>
 8000a78:	e7f8      	b.n	8000a6c <_Z10debug_loopv+0x4>
 8000a7a:	bf00      	nop
 8000a7c:	24000001 	.word	0x24000001

08000a80 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000a80:	b580      	push	{r7, lr}
 8000a82:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000a84:	f003 ff20 	bl	80048c8 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000a88:	f000 f818 	bl	8000abc <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000a8c:	f000 fb56 	bl	800113c <MX_GPIO_Init>
  MX_TIM2_Init();
 8000a90:	f000 f884 	bl	8000b9c <MX_TIM2_Init>
  MX_TIM3_Init();
 8000a94:	f000 f8d6 	bl	8000c44 <MX_TIM3_Init>
  MX_TIM4_Init();
 8000a98:	f000 f92a 	bl	8000cf0 <MX_TIM4_Init>
  MX_TIM5_Init();
 8000a9c:	f000 f97e 	bl	8000d9c <MX_TIM5_Init>
  MX_TIM12_Init();
 8000aa0:	f000 f9d2 	bl	8000e48 <MX_TIM12_Init>
  MX_TIM13_Init();
 8000aa4:	f000 fa20 	bl	8000ee8 <MX_TIM13_Init>
  MX_TIM15_Init();
 8000aa8:	f000 fa42 	bl	8000f30 <MX_TIM15_Init>
  MX_DMA_Init();
 8000aac:	f000 fb1e 	bl	80010ec <MX_DMA_Init>
  MX_USART1_UART_Init();
 8000ab0:	f000 fad0 	bl	8001054 <MX_USART1_UART_Init>
  /* USER CODE BEGIN 2 */
  main_function();
 8000ab4:	f000 fc36 	bl	8001324 <main_function>
  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8000ab8:	e7fe      	b.n	8000ab8 <main+0x38>
	...

08000abc <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000abc:	b580      	push	{r7, lr}
 8000abe:	b09c      	sub	sp, #112	; 0x70
 8000ac0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000ac2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000ac6:	224c      	movs	r2, #76	; 0x4c
 8000ac8:	2100      	movs	r1, #0
 8000aca:	4618      	mov	r0, r3
 8000acc:	f00c ffc2 	bl	800da54 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ad0:	1d3b      	adds	r3, r7, #4
 8000ad2:	2220      	movs	r2, #32
 8000ad4:	2100      	movs	r1, #0
 8000ad6:	4618      	mov	r0, r3
 8000ad8:	f00c ffbc 	bl	800da54 <memset>

  /** Supply configuration update enable
  */
  HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 8000adc:	2002      	movs	r0, #2
 8000ade:	f007 f891 	bl	8007c04 <HAL_PWREx_ConfigSupply>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 8000ae2:	2300      	movs	r3, #0
 8000ae4:	603b      	str	r3, [r7, #0]
 8000ae6:	4b2c      	ldr	r3, [pc, #176]	; (8000b98 <SystemClock_Config+0xdc>)
 8000ae8:	699b      	ldr	r3, [r3, #24]
 8000aea:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 8000aee:	4a2a      	ldr	r2, [pc, #168]	; (8000b98 <SystemClock_Config+0xdc>)
 8000af0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000af4:	6193      	str	r3, [r2, #24]
 8000af6:	4b28      	ldr	r3, [pc, #160]	; (8000b98 <SystemClock_Config+0xdc>)
 8000af8:	699b      	ldr	r3, [r3, #24]
 8000afa:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000afe:	603b      	str	r3, [r7, #0]
 8000b00:	683b      	ldr	r3, [r7, #0]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY)) {}
 8000b02:	bf00      	nop
 8000b04:	4b24      	ldr	r3, [pc, #144]	; (8000b98 <SystemClock_Config+0xdc>)
 8000b06:	699b      	ldr	r3, [r3, #24]
 8000b08:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8000b0c:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8000b10:	d1f8      	bne.n	8000b04 <SystemClock_Config+0x48>

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000b12:	2301      	movs	r3, #1
 8000b14:	627b      	str	r3, [r7, #36]	; 0x24
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000b16:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000b1a:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000b1c:	2302      	movs	r3, #2
 8000b1e:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000b20:	2302      	movs	r3, #2
 8000b22:	64fb      	str	r3, [r7, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLM = 1;
 8000b24:	2301      	movs	r3, #1
 8000b26:	653b      	str	r3, [r7, #80]	; 0x50
  RCC_OscInitStruct.PLL.PLLN = 42;
 8000b28:	232a      	movs	r3, #42	; 0x2a
 8000b2a:	657b      	str	r3, [r7, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLP = 1;
 8000b2c:	2301      	movs	r3, #1
 8000b2e:	65bb      	str	r3, [r7, #88]	; 0x58
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8000b30:	2302      	movs	r3, #2
 8000b32:	65fb      	str	r3, [r7, #92]	; 0x5c
  RCC_OscInitStruct.PLL.PLLR = 2;
 8000b34:	2302      	movs	r3, #2
 8000b36:	663b      	str	r3, [r7, #96]	; 0x60
  RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_3;
 8000b38:	230c      	movs	r3, #12
 8000b3a:	667b      	str	r3, [r7, #100]	; 0x64
  RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 8000b3c:	2300      	movs	r3, #0
 8000b3e:	66bb      	str	r3, [r7, #104]	; 0x68
  RCC_OscInitStruct.PLL.PLLFRACN = 0;
 8000b40:	2300      	movs	r3, #0
 8000b42:	66fb      	str	r3, [r7, #108]	; 0x6c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000b44:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000b48:	4618      	mov	r0, r3
 8000b4a:	f007 f895 	bl	8007c78 <HAL_RCC_OscConfig>
 8000b4e:	4603      	mov	r3, r0
 8000b50:	2b00      	cmp	r3, #0
 8000b52:	d001      	beq.n	8000b58 <SystemClock_Config+0x9c>
  {
    Error_Handler();
 8000b54:	f000 fbe0 	bl	8001318 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000b58:	233f      	movs	r3, #63	; 0x3f
 8000b5a:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2
                              |RCC_CLOCKTYPE_D3PCLK1|RCC_CLOCKTYPE_D1PCLK1;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000b5c:	2303      	movs	r3, #3
 8000b5e:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV2;
 8000b60:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8000b64:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 8000b66:	2308      	movs	r3, #8
 8000b68:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 8000b6a:	2340      	movs	r3, #64	; 0x40
 8000b6c:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 8000b6e:	2340      	movs	r3, #64	; 0x40
 8000b70:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 8000b72:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000b76:	61fb      	str	r3, [r7, #28]
  RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 8000b78:	2340      	movs	r3, #64	; 0x40
 8000b7a:	623b      	str	r3, [r7, #32]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000b7c:	1d3b      	adds	r3, r7, #4
 8000b7e:	2102      	movs	r1, #2
 8000b80:	4618      	mov	r0, r3
 8000b82:	f007 fc27 	bl	80083d4 <HAL_RCC_ClockConfig>
 8000b86:	4603      	mov	r3, r0
 8000b88:	2b00      	cmp	r3, #0
 8000b8a:	d001      	beq.n	8000b90 <SystemClock_Config+0xd4>
  {
    Error_Handler();
 8000b8c:	f000 fbc4 	bl	8001318 <Error_Handler>
  }
}
 8000b90:	bf00      	nop
 8000b92:	3770      	adds	r7, #112	; 0x70
 8000b94:	46bd      	mov	sp, r7
 8000b96:	bd80      	pop	{r7, pc}
 8000b98:	58024800 	.word	0x58024800

08000b9c <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8000b9c:	b580      	push	{r7, lr}
 8000b9e:	b08c      	sub	sp, #48	; 0x30
 8000ba0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 8000ba2:	f107 030c 	add.w	r3, r7, #12
 8000ba6:	2224      	movs	r2, #36	; 0x24
 8000ba8:	2100      	movs	r1, #0
 8000baa:	4618      	mov	r0, r3
 8000bac:	f00c ff52 	bl	800da54 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000bb0:	463b      	mov	r3, r7
 8000bb2:	2200      	movs	r2, #0
 8000bb4:	601a      	str	r2, [r3, #0]
 8000bb6:	605a      	str	r2, [r3, #4]
 8000bb8:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8000bba:	4b21      	ldr	r3, [pc, #132]	; (8000c40 <MX_TIM2_Init+0xa4>)
 8000bbc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000bc0:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 8000bc2:	4b1f      	ldr	r3, [pc, #124]	; (8000c40 <MX_TIM2_Init+0xa4>)
 8000bc4:	2200      	movs	r2, #0
 8000bc6:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000bc8:	4b1d      	ldr	r3, [pc, #116]	; (8000c40 <MX_TIM2_Init+0xa4>)
 8000bca:	2200      	movs	r2, #0
 8000bcc:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 4294967295;
 8000bce:	4b1c      	ldr	r3, [pc, #112]	; (8000c40 <MX_TIM2_Init+0xa4>)
 8000bd0:	f04f 32ff 	mov.w	r2, #4294967295
 8000bd4:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000bd6:	4b1a      	ldr	r3, [pc, #104]	; (8000c40 <MX_TIM2_Init+0xa4>)
 8000bd8:	2200      	movs	r2, #0
 8000bda:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000bdc:	4b18      	ldr	r3, [pc, #96]	; (8000c40 <MX_TIM2_Init+0xa4>)
 8000bde:	2200      	movs	r2, #0
 8000be0:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 8000be2:	2303      	movs	r3, #3
 8000be4:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 8000be6:	2300      	movs	r3, #0
 8000be8:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8000bea:	2301      	movs	r3, #1
 8000bec:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8000bee:	2300      	movs	r3, #0
 8000bf0:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 0;
 8000bf2:	2300      	movs	r3, #0
 8000bf4:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 8000bf6:	2300      	movs	r3, #0
 8000bf8:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8000bfa:	2301      	movs	r3, #1
 8000bfc:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 8000bfe:	2300      	movs	r3, #0
 8000c00:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 0;
 8000c02:	2300      	movs	r3, #0
 8000c04:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim2, &sConfig) != HAL_OK)
 8000c06:	f107 030c 	add.w	r3, r7, #12
 8000c0a:	4619      	mov	r1, r3
 8000c0c:	480c      	ldr	r0, [pc, #48]	; (8000c40 <MX_TIM2_Init+0xa4>)
 8000c0e:	f009 fd27 	bl	800a660 <HAL_TIM_Encoder_Init>
 8000c12:	4603      	mov	r3, r0
 8000c14:	2b00      	cmp	r3, #0
 8000c16:	d001      	beq.n	8000c1c <MX_TIM2_Init+0x80>
  {
    Error_Handler();
 8000c18:	f000 fb7e 	bl	8001318 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000c1c:	2300      	movs	r3, #0
 8000c1e:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000c20:	2300      	movs	r3, #0
 8000c22:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8000c24:	463b      	mov	r3, r7
 8000c26:	4619      	mov	r1, r3
 8000c28:	4805      	ldr	r0, [pc, #20]	; (8000c40 <MX_TIM2_Init+0xa4>)
 8000c2a:	f00a fc4b 	bl	800b4c4 <HAL_TIMEx_MasterConfigSynchronization>
 8000c2e:	4603      	mov	r3, r0
 8000c30:	2b00      	cmp	r3, #0
 8000c32:	d001      	beq.n	8000c38 <MX_TIM2_Init+0x9c>
  {
    Error_Handler();
 8000c34:	f000 fb70 	bl	8001318 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */

}
 8000c38:	bf00      	nop
 8000c3a:	3730      	adds	r7, #48	; 0x30
 8000c3c:	46bd      	mov	sp, r7
 8000c3e:	bd80      	pop	{r7, pc}
 8000c40:	240002e0 	.word	0x240002e0

08000c44 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8000c44:	b580      	push	{r7, lr}
 8000c46:	b08c      	sub	sp, #48	; 0x30
 8000c48:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 8000c4a:	f107 030c 	add.w	r3, r7, #12
 8000c4e:	2224      	movs	r2, #36	; 0x24
 8000c50:	2100      	movs	r1, #0
 8000c52:	4618      	mov	r0, r3
 8000c54:	f00c fefe 	bl	800da54 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000c58:	463b      	mov	r3, r7
 8000c5a:	2200      	movs	r2, #0
 8000c5c:	601a      	str	r2, [r3, #0]
 8000c5e:	605a      	str	r2, [r3, #4]
 8000c60:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8000c62:	4b21      	ldr	r3, [pc, #132]	; (8000ce8 <MX_TIM3_Init+0xa4>)
 8000c64:	4a21      	ldr	r2, [pc, #132]	; (8000cec <MX_TIM3_Init+0xa8>)
 8000c66:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 0;
 8000c68:	4b1f      	ldr	r3, [pc, #124]	; (8000ce8 <MX_TIM3_Init+0xa4>)
 8000c6a:	2200      	movs	r2, #0
 8000c6c:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000c6e:	4b1e      	ldr	r3, [pc, #120]	; (8000ce8 <MX_TIM3_Init+0xa4>)
 8000c70:	2200      	movs	r2, #0
 8000c72:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 65535;
 8000c74:	4b1c      	ldr	r3, [pc, #112]	; (8000ce8 <MX_TIM3_Init+0xa4>)
 8000c76:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000c7a:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000c7c:	4b1a      	ldr	r3, [pc, #104]	; (8000ce8 <MX_TIM3_Init+0xa4>)
 8000c7e:	2200      	movs	r2, #0
 8000c80:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000c82:	4b19      	ldr	r3, [pc, #100]	; (8000ce8 <MX_TIM3_Init+0xa4>)
 8000c84:	2200      	movs	r2, #0
 8000c86:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 8000c88:	2301      	movs	r3, #1
 8000c8a:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 8000c8c:	2300      	movs	r3, #0
 8000c8e:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8000c90:	2301      	movs	r3, #1
 8000c92:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8000c94:	2300      	movs	r3, #0
 8000c96:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 0;
 8000c98:	2300      	movs	r3, #0
 8000c9a:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 8000c9c:	2300      	movs	r3, #0
 8000c9e:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8000ca0:	2301      	movs	r3, #1
 8000ca2:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 8000ca4:	2300      	movs	r3, #0
 8000ca6:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 0;
 8000ca8:	2300      	movs	r3, #0
 8000caa:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
 8000cac:	f107 030c 	add.w	r3, r7, #12
 8000cb0:	4619      	mov	r1, r3
 8000cb2:	480d      	ldr	r0, [pc, #52]	; (8000ce8 <MX_TIM3_Init+0xa4>)
 8000cb4:	f009 fcd4 	bl	800a660 <HAL_TIM_Encoder_Init>
 8000cb8:	4603      	mov	r3, r0
 8000cba:	2b00      	cmp	r3, #0
 8000cbc:	d001      	beq.n	8000cc2 <MX_TIM3_Init+0x7e>
  {
    Error_Handler();
 8000cbe:	f000 fb2b 	bl	8001318 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000cc2:	2300      	movs	r3, #0
 8000cc4:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000cc6:	2300      	movs	r3, #0
 8000cc8:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8000cca:	463b      	mov	r3, r7
 8000ccc:	4619      	mov	r1, r3
 8000cce:	4806      	ldr	r0, [pc, #24]	; (8000ce8 <MX_TIM3_Init+0xa4>)
 8000cd0:	f00a fbf8 	bl	800b4c4 <HAL_TIMEx_MasterConfigSynchronization>
 8000cd4:	4603      	mov	r3, r0
 8000cd6:	2b00      	cmp	r3, #0
 8000cd8:	d001      	beq.n	8000cde <MX_TIM3_Init+0x9a>
  {
    Error_Handler();
 8000cda:	f000 fb1d 	bl	8001318 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 8000cde:	bf00      	nop
 8000ce0:	3730      	adds	r7, #48	; 0x30
 8000ce2:	46bd      	mov	sp, r7
 8000ce4:	bd80      	pop	{r7, pc}
 8000ce6:	bf00      	nop
 8000ce8:	2400032c 	.word	0x2400032c
 8000cec:	40000400 	.word	0x40000400

08000cf0 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 8000cf0:	b580      	push	{r7, lr}
 8000cf2:	b08c      	sub	sp, #48	; 0x30
 8000cf4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 8000cf6:	f107 030c 	add.w	r3, r7, #12
 8000cfa:	2224      	movs	r2, #36	; 0x24
 8000cfc:	2100      	movs	r1, #0
 8000cfe:	4618      	mov	r0, r3
 8000d00:	f00c fea8 	bl	800da54 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000d04:	463b      	mov	r3, r7
 8000d06:	2200      	movs	r2, #0
 8000d08:	601a      	str	r2, [r3, #0]
 8000d0a:	605a      	str	r2, [r3, #4]
 8000d0c:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8000d0e:	4b21      	ldr	r3, [pc, #132]	; (8000d94 <MX_TIM4_Init+0xa4>)
 8000d10:	4a21      	ldr	r2, [pc, #132]	; (8000d98 <MX_TIM4_Init+0xa8>)
 8000d12:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 0;
 8000d14:	4b1f      	ldr	r3, [pc, #124]	; (8000d94 <MX_TIM4_Init+0xa4>)
 8000d16:	2200      	movs	r2, #0
 8000d18:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000d1a:	4b1e      	ldr	r3, [pc, #120]	; (8000d94 <MX_TIM4_Init+0xa4>)
 8000d1c:	2200      	movs	r2, #0
 8000d1e:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 65535;
 8000d20:	4b1c      	ldr	r3, [pc, #112]	; (8000d94 <MX_TIM4_Init+0xa4>)
 8000d22:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000d26:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000d28:	4b1a      	ldr	r3, [pc, #104]	; (8000d94 <MX_TIM4_Init+0xa4>)
 8000d2a:	2200      	movs	r2, #0
 8000d2c:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000d2e:	4b19      	ldr	r3, [pc, #100]	; (8000d94 <MX_TIM4_Init+0xa4>)
 8000d30:	2200      	movs	r2, #0
 8000d32:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 8000d34:	2301      	movs	r3, #1
 8000d36:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 8000d38:	2300      	movs	r3, #0
 8000d3a:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8000d3c:	2301      	movs	r3, #1
 8000d3e:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8000d40:	2300      	movs	r3, #0
 8000d42:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 0;
 8000d44:	2300      	movs	r3, #0
 8000d46:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 8000d48:	2300      	movs	r3, #0
 8000d4a:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8000d4c:	2301      	movs	r3, #1
 8000d4e:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 8000d50:	2300      	movs	r3, #0
 8000d52:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 0;
 8000d54:	2300      	movs	r3, #0
 8000d56:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim4, &sConfig) != HAL_OK)
 8000d58:	f107 030c 	add.w	r3, r7, #12
 8000d5c:	4619      	mov	r1, r3
 8000d5e:	480d      	ldr	r0, [pc, #52]	; (8000d94 <MX_TIM4_Init+0xa4>)
 8000d60:	f009 fc7e 	bl	800a660 <HAL_TIM_Encoder_Init>
 8000d64:	4603      	mov	r3, r0
 8000d66:	2b00      	cmp	r3, #0
 8000d68:	d001      	beq.n	8000d6e <MX_TIM4_Init+0x7e>
  {
    Error_Handler();
 8000d6a:	f000 fad5 	bl	8001318 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000d6e:	2300      	movs	r3, #0
 8000d70:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000d72:	2300      	movs	r3, #0
 8000d74:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 8000d76:	463b      	mov	r3, r7
 8000d78:	4619      	mov	r1, r3
 8000d7a:	4806      	ldr	r0, [pc, #24]	; (8000d94 <MX_TIM4_Init+0xa4>)
 8000d7c:	f00a fba2 	bl	800b4c4 <HAL_TIMEx_MasterConfigSynchronization>
 8000d80:	4603      	mov	r3, r0
 8000d82:	2b00      	cmp	r3, #0
 8000d84:	d001      	beq.n	8000d8a <MX_TIM4_Init+0x9a>
  {
    Error_Handler();
 8000d86:	f000 fac7 	bl	8001318 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */

}
 8000d8a:	bf00      	nop
 8000d8c:	3730      	adds	r7, #48	; 0x30
 8000d8e:	46bd      	mov	sp, r7
 8000d90:	bd80      	pop	{r7, pc}
 8000d92:	bf00      	nop
 8000d94:	24000378 	.word	0x24000378
 8000d98:	40000800 	.word	0x40000800

08000d9c <MX_TIM5_Init>:
  * @brief TIM5 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM5_Init(void)
{
 8000d9c:	b580      	push	{r7, lr}
 8000d9e:	b08c      	sub	sp, #48	; 0x30
 8000da0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM5_Init 0 */

  /* USER CODE END TIM5_Init 0 */

  TIM_Encoder_InitTypeDef sConfig = {0};
 8000da2:	f107 030c 	add.w	r3, r7, #12
 8000da6:	2224      	movs	r2, #36	; 0x24
 8000da8:	2100      	movs	r1, #0
 8000daa:	4618      	mov	r0, r3
 8000dac:	f00c fe52 	bl	800da54 <memset>
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000db0:	463b      	mov	r3, r7
 8000db2:	2200      	movs	r2, #0
 8000db4:	601a      	str	r2, [r3, #0]
 8000db6:	605a      	str	r2, [r3, #4]
 8000db8:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM5_Init 1 */

  /* USER CODE END TIM5_Init 1 */
  htim5.Instance = TIM5;
 8000dba:	4b21      	ldr	r3, [pc, #132]	; (8000e40 <MX_TIM5_Init+0xa4>)
 8000dbc:	4a21      	ldr	r2, [pc, #132]	; (8000e44 <MX_TIM5_Init+0xa8>)
 8000dbe:	601a      	str	r2, [r3, #0]
  htim5.Init.Prescaler = 0;
 8000dc0:	4b1f      	ldr	r3, [pc, #124]	; (8000e40 <MX_TIM5_Init+0xa4>)
 8000dc2:	2200      	movs	r2, #0
 8000dc4:	605a      	str	r2, [r3, #4]
  htim5.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000dc6:	4b1e      	ldr	r3, [pc, #120]	; (8000e40 <MX_TIM5_Init+0xa4>)
 8000dc8:	2200      	movs	r2, #0
 8000dca:	609a      	str	r2, [r3, #8]
  htim5.Init.Period = 4294967295;
 8000dcc:	4b1c      	ldr	r3, [pc, #112]	; (8000e40 <MX_TIM5_Init+0xa4>)
 8000dce:	f04f 32ff 	mov.w	r2, #4294967295
 8000dd2:	60da      	str	r2, [r3, #12]
  htim5.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000dd4:	4b1a      	ldr	r3, [pc, #104]	; (8000e40 <MX_TIM5_Init+0xa4>)
 8000dd6:	2200      	movs	r2, #0
 8000dd8:	611a      	str	r2, [r3, #16]
  htim5.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000dda:	4b19      	ldr	r3, [pc, #100]	; (8000e40 <MX_TIM5_Init+0xa4>)
 8000ddc:	2200      	movs	r2, #0
 8000dde:	619a      	str	r2, [r3, #24]
  sConfig.EncoderMode = TIM_ENCODERMODE_TI1;
 8000de0:	2301      	movs	r3, #1
 8000de2:	60fb      	str	r3, [r7, #12]
  sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 8000de4:	2300      	movs	r3, #0
 8000de6:	613b      	str	r3, [r7, #16]
  sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 8000de8:	2301      	movs	r3, #1
 8000dea:	617b      	str	r3, [r7, #20]
  sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 8000dec:	2300      	movs	r3, #0
 8000dee:	61bb      	str	r3, [r7, #24]
  sConfig.IC1Filter = 0;
 8000df0:	2300      	movs	r3, #0
 8000df2:	61fb      	str	r3, [r7, #28]
  sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 8000df4:	2300      	movs	r3, #0
 8000df6:	623b      	str	r3, [r7, #32]
  sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 8000df8:	2301      	movs	r3, #1
 8000dfa:	627b      	str	r3, [r7, #36]	; 0x24
  sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 8000dfc:	2300      	movs	r3, #0
 8000dfe:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfig.IC2Filter = 0;
 8000e00:	2300      	movs	r3, #0
 8000e02:	62fb      	str	r3, [r7, #44]	; 0x2c
  if (HAL_TIM_Encoder_Init(&htim5, &sConfig) != HAL_OK)
 8000e04:	f107 030c 	add.w	r3, r7, #12
 8000e08:	4619      	mov	r1, r3
 8000e0a:	480d      	ldr	r0, [pc, #52]	; (8000e40 <MX_TIM5_Init+0xa4>)
 8000e0c:	f009 fc28 	bl	800a660 <HAL_TIM_Encoder_Init>
 8000e10:	4603      	mov	r3, r0
 8000e12:	2b00      	cmp	r3, #0
 8000e14:	d001      	beq.n	8000e1a <MX_TIM5_Init+0x7e>
  {
    Error_Handler();
 8000e16:	f000 fa7f 	bl	8001318 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000e1a:	2300      	movs	r3, #0
 8000e1c:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000e1e:	2300      	movs	r3, #0
 8000e20:	60bb      	str	r3, [r7, #8]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim5, &sMasterConfig) != HAL_OK)
 8000e22:	463b      	mov	r3, r7
 8000e24:	4619      	mov	r1, r3
 8000e26:	4806      	ldr	r0, [pc, #24]	; (8000e40 <MX_TIM5_Init+0xa4>)
 8000e28:	f00a fb4c 	bl	800b4c4 <HAL_TIMEx_MasterConfigSynchronization>
 8000e2c:	4603      	mov	r3, r0
 8000e2e:	2b00      	cmp	r3, #0
 8000e30:	d001      	beq.n	8000e36 <MX_TIM5_Init+0x9a>
  {
    Error_Handler();
 8000e32:	f000 fa71 	bl	8001318 <Error_Handler>
  }
  /* USER CODE BEGIN TIM5_Init 2 */

  /* USER CODE END TIM5_Init 2 */

}
 8000e36:	bf00      	nop
 8000e38:	3730      	adds	r7, #48	; 0x30
 8000e3a:	46bd      	mov	sp, r7
 8000e3c:	bd80      	pop	{r7, pc}
 8000e3e:	bf00      	nop
 8000e40:	240003c4 	.word	0x240003c4
 8000e44:	40000c00 	.word	0x40000c00

08000e48 <MX_TIM12_Init>:
  * @brief TIM12 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM12_Init(void)
{
 8000e48:	b580      	push	{r7, lr}
 8000e4a:	b088      	sub	sp, #32
 8000e4c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM12_Init 0 */

  /* USER CODE END TIM12_Init 0 */

  TIM_OC_InitTypeDef sConfigOC = {0};
 8000e4e:	1d3b      	adds	r3, r7, #4
 8000e50:	2200      	movs	r2, #0
 8000e52:	601a      	str	r2, [r3, #0]
 8000e54:	605a      	str	r2, [r3, #4]
 8000e56:	609a      	str	r2, [r3, #8]
 8000e58:	60da      	str	r2, [r3, #12]
 8000e5a:	611a      	str	r2, [r3, #16]
 8000e5c:	615a      	str	r2, [r3, #20]
 8000e5e:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM12_Init 1 */

  /* USER CODE END TIM12_Init 1 */
  htim12.Instance = TIM12;
 8000e60:	4b1f      	ldr	r3, [pc, #124]	; (8000ee0 <MX_TIM12_Init+0x98>)
 8000e62:	4a20      	ldr	r2, [pc, #128]	; (8000ee4 <MX_TIM12_Init+0x9c>)
 8000e64:	601a      	str	r2, [r3, #0]
  htim12.Init.Prescaler = 83;
 8000e66:	4b1e      	ldr	r3, [pc, #120]	; (8000ee0 <MX_TIM12_Init+0x98>)
 8000e68:	2253      	movs	r2, #83	; 0x53
 8000e6a:	605a      	str	r2, [r3, #4]
  htim12.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000e6c:	4b1c      	ldr	r3, [pc, #112]	; (8000ee0 <MX_TIM12_Init+0x98>)
 8000e6e:	2200      	movs	r2, #0
 8000e70:	609a      	str	r2, [r3, #8]
  htim12.Init.Period = 49;
 8000e72:	4b1b      	ldr	r3, [pc, #108]	; (8000ee0 <MX_TIM12_Init+0x98>)
 8000e74:	2231      	movs	r2, #49	; 0x31
 8000e76:	60da      	str	r2, [r3, #12]
  htim12.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000e78:	4b19      	ldr	r3, [pc, #100]	; (8000ee0 <MX_TIM12_Init+0x98>)
 8000e7a:	2200      	movs	r2, #0
 8000e7c:	611a      	str	r2, [r3, #16]
  htim12.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000e7e:	4b18      	ldr	r3, [pc, #96]	; (8000ee0 <MX_TIM12_Init+0x98>)
 8000e80:	2200      	movs	r2, #0
 8000e82:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim12) != HAL_OK)
 8000e84:	4816      	ldr	r0, [pc, #88]	; (8000ee0 <MX_TIM12_Init+0x98>)
 8000e86:	f009 fa2b 	bl	800a2e0 <HAL_TIM_PWM_Init>
 8000e8a:	4603      	mov	r3, r0
 8000e8c:	2b00      	cmp	r3, #0
 8000e8e:	d001      	beq.n	8000e94 <MX_TIM12_Init+0x4c>
  {
    Error_Handler();
 8000e90:	f000 fa42 	bl	8001318 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000e94:	2360      	movs	r3, #96	; 0x60
 8000e96:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8000e98:	2300      	movs	r3, #0
 8000e9a:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000e9c:	2300      	movs	r3, #0
 8000e9e:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000ea0:	2300      	movs	r3, #0
 8000ea2:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8000ea4:	1d3b      	adds	r3, r7, #4
 8000ea6:	2200      	movs	r2, #0
 8000ea8:	4619      	mov	r1, r3
 8000eaa:	480d      	ldr	r0, [pc, #52]	; (8000ee0 <MX_TIM12_Init+0x98>)
 8000eac:	f009 fe2c 	bl	800ab08 <HAL_TIM_PWM_ConfigChannel>
 8000eb0:	4603      	mov	r3, r0
 8000eb2:	2b00      	cmp	r3, #0
 8000eb4:	d001      	beq.n	8000eba <MX_TIM12_Init+0x72>
  {
    Error_Handler();
 8000eb6:	f000 fa2f 	bl	8001318 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8000eba:	1d3b      	adds	r3, r7, #4
 8000ebc:	2204      	movs	r2, #4
 8000ebe:	4619      	mov	r1, r3
 8000ec0:	4807      	ldr	r0, [pc, #28]	; (8000ee0 <MX_TIM12_Init+0x98>)
 8000ec2:	f009 fe21 	bl	800ab08 <HAL_TIM_PWM_ConfigChannel>
 8000ec6:	4603      	mov	r3, r0
 8000ec8:	2b00      	cmp	r3, #0
 8000eca:	d001      	beq.n	8000ed0 <MX_TIM12_Init+0x88>
  {
    Error_Handler();
 8000ecc:	f000 fa24 	bl	8001318 <Error_Handler>
  }
  /* USER CODE BEGIN TIM12_Init 2 */

  /* USER CODE END TIM12_Init 2 */
  HAL_TIM_MspPostInit(&htim12);
 8000ed0:	4803      	ldr	r0, [pc, #12]	; (8000ee0 <MX_TIM12_Init+0x98>)
 8000ed2:	f003 f907 	bl	80040e4 <HAL_TIM_MspPostInit>

}
 8000ed6:	bf00      	nop
 8000ed8:	3720      	adds	r7, #32
 8000eda:	46bd      	mov	sp, r7
 8000edc:	bd80      	pop	{r7, pc}
 8000ede:	bf00      	nop
 8000ee0:	24000410 	.word	0x24000410
 8000ee4:	40001800 	.word	0x40001800

08000ee8 <MX_TIM13_Init>:
  * @brief TIM13 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM13_Init(void)
{
 8000ee8:	b580      	push	{r7, lr}
 8000eea:	af00      	add	r7, sp, #0
  /* USER CODE END TIM13_Init 0 */

  /* USER CODE BEGIN TIM13_Init 1 */

  /* USER CODE END TIM13_Init 1 */
  htim13.Instance = TIM13;
 8000eec:	4b0e      	ldr	r3, [pc, #56]	; (8000f28 <MX_TIM13_Init+0x40>)
 8000eee:	4a0f      	ldr	r2, [pc, #60]	; (8000f2c <MX_TIM13_Init+0x44>)
 8000ef0:	601a      	str	r2, [r3, #0]
  htim13.Init.Prescaler = 83;
 8000ef2:	4b0d      	ldr	r3, [pc, #52]	; (8000f28 <MX_TIM13_Init+0x40>)
 8000ef4:	2253      	movs	r2, #83	; 0x53
 8000ef6:	605a      	str	r2, [r3, #4]
  htim13.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000ef8:	4b0b      	ldr	r3, [pc, #44]	; (8000f28 <MX_TIM13_Init+0x40>)
 8000efa:	2200      	movs	r2, #0
 8000efc:	609a      	str	r2, [r3, #8]
  htim13.Init.Period = 999;
 8000efe:	4b0a      	ldr	r3, [pc, #40]	; (8000f28 <MX_TIM13_Init+0x40>)
 8000f00:	f240 32e7 	movw	r2, #999	; 0x3e7
 8000f04:	60da      	str	r2, [r3, #12]
  htim13.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000f06:	4b08      	ldr	r3, [pc, #32]	; (8000f28 <MX_TIM13_Init+0x40>)
 8000f08:	2200      	movs	r2, #0
 8000f0a:	611a      	str	r2, [r3, #16]
  htim13.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000f0c:	4b06      	ldr	r3, [pc, #24]	; (8000f28 <MX_TIM13_Init+0x40>)
 8000f0e:	2200      	movs	r2, #0
 8000f10:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim13) != HAL_OK)
 8000f12:	4805      	ldr	r0, [pc, #20]	; (8000f28 <MX_TIM13_Init+0x40>)
 8000f14:	f009 f906 	bl	800a124 <HAL_TIM_Base_Init>
 8000f18:	4603      	mov	r3, r0
 8000f1a:	2b00      	cmp	r3, #0
 8000f1c:	d001      	beq.n	8000f22 <MX_TIM13_Init+0x3a>
  {
    Error_Handler();
 8000f1e:	f000 f9fb 	bl	8001318 <Error_Handler>
  }
  /* USER CODE BEGIN TIM13_Init 2 */

  /* USER CODE END TIM13_Init 2 */

}
 8000f22:	bf00      	nop
 8000f24:	bd80      	pop	{r7, pc}
 8000f26:	bf00      	nop
 8000f28:	2400045c 	.word	0x2400045c
 8000f2c:	40001c00 	.word	0x40001c00

08000f30 <MX_TIM15_Init>:
  * @brief TIM15 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM15_Init(void)
{
 8000f30:	b580      	push	{r7, lr}
 8000f32:	b098      	sub	sp, #96	; 0x60
 8000f34:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM15_Init 0 */

  /* USER CODE END TIM15_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8000f36:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8000f3a:	2200      	movs	r2, #0
 8000f3c:	601a      	str	r2, [r3, #0]
 8000f3e:	605a      	str	r2, [r3, #4]
 8000f40:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8000f42:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8000f46:	2200      	movs	r2, #0
 8000f48:	601a      	str	r2, [r3, #0]
 8000f4a:	605a      	str	r2, [r3, #4]
 8000f4c:	609a      	str	r2, [r3, #8]
 8000f4e:	60da      	str	r2, [r3, #12]
 8000f50:	611a      	str	r2, [r3, #16]
 8000f52:	615a      	str	r2, [r3, #20]
 8000f54:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8000f56:	1d3b      	adds	r3, r7, #4
 8000f58:	2234      	movs	r2, #52	; 0x34
 8000f5a:	2100      	movs	r1, #0
 8000f5c:	4618      	mov	r0, r3
 8000f5e:	f00c fd79 	bl	800da54 <memset>

  /* USER CODE BEGIN TIM15_Init 1 */

  /* USER CODE END TIM15_Init 1 */
  htim15.Instance = TIM15;
 8000f62:	4b3a      	ldr	r3, [pc, #232]	; (800104c <MX_TIM15_Init+0x11c>)
 8000f64:	4a3a      	ldr	r2, [pc, #232]	; (8001050 <MX_TIM15_Init+0x120>)
 8000f66:	601a      	str	r2, [r3, #0]
  htim15.Init.Prescaler = 83;
 8000f68:	4b38      	ldr	r3, [pc, #224]	; (800104c <MX_TIM15_Init+0x11c>)
 8000f6a:	2253      	movs	r2, #83	; 0x53
 8000f6c:	605a      	str	r2, [r3, #4]
  htim15.Init.CounterMode = TIM_COUNTERMODE_UP;
 8000f6e:	4b37      	ldr	r3, [pc, #220]	; (800104c <MX_TIM15_Init+0x11c>)
 8000f70:	2200      	movs	r2, #0
 8000f72:	609a      	str	r2, [r3, #8]
  htim15.Init.Period = 49;
 8000f74:	4b35      	ldr	r3, [pc, #212]	; (800104c <MX_TIM15_Init+0x11c>)
 8000f76:	2231      	movs	r2, #49	; 0x31
 8000f78:	60da      	str	r2, [r3, #12]
  htim15.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8000f7a:	4b34      	ldr	r3, [pc, #208]	; (800104c <MX_TIM15_Init+0x11c>)
 8000f7c:	2200      	movs	r2, #0
 8000f7e:	611a      	str	r2, [r3, #16]
  htim15.Init.RepetitionCounter = 0;
 8000f80:	4b32      	ldr	r3, [pc, #200]	; (800104c <MX_TIM15_Init+0x11c>)
 8000f82:	2200      	movs	r2, #0
 8000f84:	615a      	str	r2, [r3, #20]
  htim15.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8000f86:	4b31      	ldr	r3, [pc, #196]	; (800104c <MX_TIM15_Init+0x11c>)
 8000f88:	2200      	movs	r2, #0
 8000f8a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim15) != HAL_OK)
 8000f8c:	482f      	ldr	r0, [pc, #188]	; (800104c <MX_TIM15_Init+0x11c>)
 8000f8e:	f009 f9a7 	bl	800a2e0 <HAL_TIM_PWM_Init>
 8000f92:	4603      	mov	r3, r0
 8000f94:	2b00      	cmp	r3, #0
 8000f96:	d001      	beq.n	8000f9c <MX_TIM15_Init+0x6c>
  {
    Error_Handler();
 8000f98:	f000 f9be 	bl	8001318 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8000f9c:	2300      	movs	r3, #0
 8000f9e:	657b      	str	r3, [r7, #84]	; 0x54
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8000fa0:	2300      	movs	r3, #0
 8000fa2:	65fb      	str	r3, [r7, #92]	; 0x5c
  if (HAL_TIMEx_MasterConfigSynchronization(&htim15, &sMasterConfig) != HAL_OK)
 8000fa4:	f107 0354 	add.w	r3, r7, #84	; 0x54
 8000fa8:	4619      	mov	r1, r3
 8000faa:	4828      	ldr	r0, [pc, #160]	; (800104c <MX_TIM15_Init+0x11c>)
 8000fac:	f00a fa8a 	bl	800b4c4 <HAL_TIMEx_MasterConfigSynchronization>
 8000fb0:	4603      	mov	r3, r0
 8000fb2:	2b00      	cmp	r3, #0
 8000fb4:	d001      	beq.n	8000fba <MX_TIM15_Init+0x8a>
  {
    Error_Handler();
 8000fb6:	f000 f9af 	bl	8001318 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8000fba:	2360      	movs	r3, #96	; 0x60
 8000fbc:	63bb      	str	r3, [r7, #56]	; 0x38
  sConfigOC.Pulse = 0;
 8000fbe:	2300      	movs	r3, #0
 8000fc0:	63fb      	str	r3, [r7, #60]	; 0x3c
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8000fc2:	2300      	movs	r3, #0
 8000fc4:	643b      	str	r3, [r7, #64]	; 0x40
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 8000fc6:	2300      	movs	r3, #0
 8000fc8:	647b      	str	r3, [r7, #68]	; 0x44
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8000fca:	2300      	movs	r3, #0
 8000fcc:	64bb      	str	r3, [r7, #72]	; 0x48
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8000fce:	2300      	movs	r3, #0
 8000fd0:	64fb      	str	r3, [r7, #76]	; 0x4c
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8000fd2:	2300      	movs	r3, #0
 8000fd4:	653b      	str	r3, [r7, #80]	; 0x50
  if (HAL_TIM_PWM_ConfigChannel(&htim15, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8000fd6:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8000fda:	2200      	movs	r2, #0
 8000fdc:	4619      	mov	r1, r3
 8000fde:	481b      	ldr	r0, [pc, #108]	; (800104c <MX_TIM15_Init+0x11c>)
 8000fe0:	f009 fd92 	bl	800ab08 <HAL_TIM_PWM_ConfigChannel>
 8000fe4:	4603      	mov	r3, r0
 8000fe6:	2b00      	cmp	r3, #0
 8000fe8:	d001      	beq.n	8000fee <MX_TIM15_Init+0xbe>
  {
    Error_Handler();
 8000fea:	f000 f995 	bl	8001318 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim15, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8000fee:	f107 0338 	add.w	r3, r7, #56	; 0x38
 8000ff2:	2204      	movs	r2, #4
 8000ff4:	4619      	mov	r1, r3
 8000ff6:	4815      	ldr	r0, [pc, #84]	; (800104c <MX_TIM15_Init+0x11c>)
 8000ff8:	f009 fd86 	bl	800ab08 <HAL_TIM_PWM_ConfigChannel>
 8000ffc:	4603      	mov	r3, r0
 8000ffe:	2b00      	cmp	r3, #0
 8001000:	d001      	beq.n	8001006 <MX_TIM15_Init+0xd6>
  {
    Error_Handler();
 8001002:	f000 f989 	bl	8001318 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8001006:	2300      	movs	r3, #0
 8001008:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 800100a:	2300      	movs	r3, #0
 800100c:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 800100e:	2300      	movs	r3, #0
 8001010:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8001012:	2300      	movs	r3, #0
 8001014:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8001016:	2300      	movs	r3, #0
 8001018:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 800101a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800101e:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.BreakFilter = 0;
 8001020:	2300      	movs	r3, #0
 8001022:	61fb      	str	r3, [r7, #28]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8001024:	2300      	movs	r3, #0
 8001026:	637b      	str	r3, [r7, #52]	; 0x34
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim15, &sBreakDeadTimeConfig) != HAL_OK)
 8001028:	1d3b      	adds	r3, r7, #4
 800102a:	4619      	mov	r1, r3
 800102c:	4807      	ldr	r0, [pc, #28]	; (800104c <MX_TIM15_Init+0x11c>)
 800102e:	f00a fae5 	bl	800b5fc <HAL_TIMEx_ConfigBreakDeadTime>
 8001032:	4603      	mov	r3, r0
 8001034:	2b00      	cmp	r3, #0
 8001036:	d001      	beq.n	800103c <MX_TIM15_Init+0x10c>
  {
    Error_Handler();
 8001038:	f000 f96e 	bl	8001318 <Error_Handler>
  }
  /* USER CODE BEGIN TIM15_Init 2 */

  /* USER CODE END TIM15_Init 2 */
  HAL_TIM_MspPostInit(&htim15);
 800103c:	4803      	ldr	r0, [pc, #12]	; (800104c <MX_TIM15_Init+0x11c>)
 800103e:	f003 f851 	bl	80040e4 <HAL_TIM_MspPostInit>

}
 8001042:	bf00      	nop
 8001044:	3760      	adds	r7, #96	; 0x60
 8001046:	46bd      	mov	sp, r7
 8001048:	bd80      	pop	{r7, pc}
 800104a:	bf00      	nop
 800104c:	240004a8 	.word	0x240004a8
 8001050:	40014000 	.word	0x40014000

08001054 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8001054:	b580      	push	{r7, lr}
 8001056:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8001058:	4b22      	ldr	r3, [pc, #136]	; (80010e4 <MX_USART1_UART_Init+0x90>)
 800105a:	4a23      	ldr	r2, [pc, #140]	; (80010e8 <MX_USART1_UART_Init+0x94>)
 800105c:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 800105e:	4b21      	ldr	r3, [pc, #132]	; (80010e4 <MX_USART1_UART_Init+0x90>)
 8001060:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8001064:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8001066:	4b1f      	ldr	r3, [pc, #124]	; (80010e4 <MX_USART1_UART_Init+0x90>)
 8001068:	2200      	movs	r2, #0
 800106a:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 800106c:	4b1d      	ldr	r3, [pc, #116]	; (80010e4 <MX_USART1_UART_Init+0x90>)
 800106e:	2200      	movs	r2, #0
 8001070:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8001072:	4b1c      	ldr	r3, [pc, #112]	; (80010e4 <MX_USART1_UART_Init+0x90>)
 8001074:	2200      	movs	r2, #0
 8001076:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8001078:	4b1a      	ldr	r3, [pc, #104]	; (80010e4 <MX_USART1_UART_Init+0x90>)
 800107a:	220c      	movs	r2, #12
 800107c:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800107e:	4b19      	ldr	r3, [pc, #100]	; (80010e4 <MX_USART1_UART_Init+0x90>)
 8001080:	2200      	movs	r2, #0
 8001082:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8001084:	4b17      	ldr	r3, [pc, #92]	; (80010e4 <MX_USART1_UART_Init+0x90>)
 8001086:	2200      	movs	r2, #0
 8001088:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 800108a:	4b16      	ldr	r3, [pc, #88]	; (80010e4 <MX_USART1_UART_Init+0x90>)
 800108c:	2200      	movs	r2, #0
 800108e:	621a      	str	r2, [r3, #32]
  huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8001090:	4b14      	ldr	r3, [pc, #80]	; (80010e4 <MX_USART1_UART_Init+0x90>)
 8001092:	2200      	movs	r2, #0
 8001094:	625a      	str	r2, [r3, #36]	; 0x24
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8001096:	4b13      	ldr	r3, [pc, #76]	; (80010e4 <MX_USART1_UART_Init+0x90>)
 8001098:	2200      	movs	r2, #0
 800109a:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_UART_Init(&huart1) != HAL_OK)
 800109c:	4811      	ldr	r0, [pc, #68]	; (80010e4 <MX_USART1_UART_Init+0x90>)
 800109e:	f00a fb6b 	bl	800b778 <HAL_UART_Init>
 80010a2:	4603      	mov	r3, r0
 80010a4:	2b00      	cmp	r3, #0
 80010a6:	d001      	beq.n	80010ac <MX_USART1_UART_Init+0x58>
  {
    Error_Handler();
 80010a8:	f000 f936 	bl	8001318 <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 80010ac:	2100      	movs	r1, #0
 80010ae:	480d      	ldr	r0, [pc, #52]	; (80010e4 <MX_USART1_UART_Init+0x90>)
 80010b0:	f00c fbb2 	bl	800d818 <HAL_UARTEx_SetTxFifoThreshold>
 80010b4:	4603      	mov	r3, r0
 80010b6:	2b00      	cmp	r3, #0
 80010b8:	d001      	beq.n	80010be <MX_USART1_UART_Init+0x6a>
  {
    Error_Handler();
 80010ba:	f000 f92d 	bl	8001318 <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 80010be:	2100      	movs	r1, #0
 80010c0:	4808      	ldr	r0, [pc, #32]	; (80010e4 <MX_USART1_UART_Init+0x90>)
 80010c2:	f00c fbe7 	bl	800d894 <HAL_UARTEx_SetRxFifoThreshold>
 80010c6:	4603      	mov	r3, r0
 80010c8:	2b00      	cmp	r3, #0
 80010ca:	d001      	beq.n	80010d0 <MX_USART1_UART_Init+0x7c>
  {
    Error_Handler();
 80010cc:	f000 f924 	bl	8001318 <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 80010d0:	4804      	ldr	r0, [pc, #16]	; (80010e4 <MX_USART1_UART_Init+0x90>)
 80010d2:	f00c fb68 	bl	800d7a6 <HAL_UARTEx_DisableFifoMode>
 80010d6:	4603      	mov	r3, r0
 80010d8:	2b00      	cmp	r3, #0
 80010da:	d001      	beq.n	80010e0 <MX_USART1_UART_Init+0x8c>
  {
    Error_Handler();
 80010dc:	f000 f91c 	bl	8001318 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 80010e0:	bf00      	nop
 80010e2:	bd80      	pop	{r7, pc}
 80010e4:	240004f4 	.word	0x240004f4
 80010e8:	40011000 	.word	0x40011000

080010ec <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 80010ec:	b580      	push	{r7, lr}
 80010ee:	b082      	sub	sp, #8
 80010f0:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 80010f2:	4b11      	ldr	r3, [pc, #68]	; (8001138 <MX_DMA_Init+0x4c>)
 80010f4:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 80010f8:	4a0f      	ldr	r2, [pc, #60]	; (8001138 <MX_DMA_Init+0x4c>)
 80010fa:	f043 0301 	orr.w	r3, r3, #1
 80010fe:	f8c2 30d8 	str.w	r3, [r2, #216]	; 0xd8
 8001102:	4b0d      	ldr	r3, [pc, #52]	; (8001138 <MX_DMA_Init+0x4c>)
 8001104:	f8d3 30d8 	ldr.w	r3, [r3, #216]	; 0xd8
 8001108:	f003 0301 	and.w	r3, r3, #1
 800110c:	607b      	str	r3, [r7, #4]
 800110e:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream0_IRQn, 0, 0);
 8001110:	2200      	movs	r2, #0
 8001112:	2100      	movs	r1, #0
 8001114:	200b      	movs	r0, #11
 8001116:	f003 fd44 	bl	8004ba2 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream0_IRQn);
 800111a:	200b      	movs	r0, #11
 800111c:	f003 fd5b 	bl	8004bd6 <HAL_NVIC_EnableIRQ>
  /* DMA1_Stream1_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream1_IRQn, 0, 0);
 8001120:	2200      	movs	r2, #0
 8001122:	2100      	movs	r1, #0
 8001124:	200c      	movs	r0, #12
 8001126:	f003 fd3c 	bl	8004ba2 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream1_IRQn);
 800112a:	200c      	movs	r0, #12
 800112c:	f003 fd53 	bl	8004bd6 <HAL_NVIC_EnableIRQ>

}
 8001130:	bf00      	nop
 8001132:	3708      	adds	r7, #8
 8001134:	46bd      	mov	sp, r7
 8001136:	bd80      	pop	{r7, pc}
 8001138:	58024400 	.word	0x58024400

0800113c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800113c:	b580      	push	{r7, lr}
 800113e:	b08c      	sub	sp, #48	; 0x30
 8001140:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001142:	f107 031c 	add.w	r3, r7, #28
 8001146:	2200      	movs	r2, #0
 8001148:	601a      	str	r2, [r3, #0]
 800114a:	605a      	str	r2, [r3, #4]
 800114c:	609a      	str	r2, [r3, #8]
 800114e:	60da      	str	r2, [r3, #12]
 8001150:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001152:	4b6b      	ldr	r3, [pc, #428]	; (8001300 <MX_GPIO_Init+0x1c4>)
 8001154:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001158:	4a69      	ldr	r2, [pc, #420]	; (8001300 <MX_GPIO_Init+0x1c4>)
 800115a:	f043 0310 	orr.w	r3, r3, #16
 800115e:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001162:	4b67      	ldr	r3, [pc, #412]	; (8001300 <MX_GPIO_Init+0x1c4>)
 8001164:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001168:	f003 0310 	and.w	r3, r3, #16
 800116c:	61bb      	str	r3, [r7, #24]
 800116e:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001170:	4b63      	ldr	r3, [pc, #396]	; (8001300 <MX_GPIO_Init+0x1c4>)
 8001172:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001176:	4a62      	ldr	r2, [pc, #392]	; (8001300 <MX_GPIO_Init+0x1c4>)
 8001178:	f043 0304 	orr.w	r3, r3, #4
 800117c:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001180:	4b5f      	ldr	r3, [pc, #380]	; (8001300 <MX_GPIO_Init+0x1c4>)
 8001182:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001186:	f003 0304 	and.w	r3, r3, #4
 800118a:	617b      	str	r3, [r7, #20]
 800118c:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800118e:	4b5c      	ldr	r3, [pc, #368]	; (8001300 <MX_GPIO_Init+0x1c4>)
 8001190:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8001194:	4a5a      	ldr	r2, [pc, #360]	; (8001300 <MX_GPIO_Init+0x1c4>)
 8001196:	f043 0320 	orr.w	r3, r3, #32
 800119a:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 800119e:	4b58      	ldr	r3, [pc, #352]	; (8001300 <MX_GPIO_Init+0x1c4>)
 80011a0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80011a4:	f003 0320 	and.w	r3, r3, #32
 80011a8:	613b      	str	r3, [r7, #16]
 80011aa:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80011ac:	4b54      	ldr	r3, [pc, #336]	; (8001300 <MX_GPIO_Init+0x1c4>)
 80011ae:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80011b2:	4a53      	ldr	r2, [pc, #332]	; (8001300 <MX_GPIO_Init+0x1c4>)
 80011b4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80011b8:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 80011bc:	4b50      	ldr	r3, [pc, #320]	; (8001300 <MX_GPIO_Init+0x1c4>)
 80011be:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80011c2:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80011c6:	60fb      	str	r3, [r7, #12]
 80011c8:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80011ca:	4b4d      	ldr	r3, [pc, #308]	; (8001300 <MX_GPIO_Init+0x1c4>)
 80011cc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80011d0:	4a4b      	ldr	r2, [pc, #300]	; (8001300 <MX_GPIO_Init+0x1c4>)
 80011d2:	f043 0301 	orr.w	r3, r3, #1
 80011d6:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 80011da:	4b49      	ldr	r3, [pc, #292]	; (8001300 <MX_GPIO_Init+0x1c4>)
 80011dc:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80011e0:	f003 0301 	and.w	r3, r3, #1
 80011e4:	60bb      	str	r3, [r7, #8]
 80011e6:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80011e8:	4b45      	ldr	r3, [pc, #276]	; (8001300 <MX_GPIO_Init+0x1c4>)
 80011ea:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80011ee:	4a44      	ldr	r2, [pc, #272]	; (8001300 <MX_GPIO_Init+0x1c4>)
 80011f0:	f043 0302 	orr.w	r3, r3, #2
 80011f4:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 80011f8:	4b41      	ldr	r3, [pc, #260]	; (8001300 <MX_GPIO_Init+0x1c4>)
 80011fa:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80011fe:	f003 0302 	and.w	r3, r3, #2
 8001202:	607b      	str	r3, [r7, #4]
 8001204:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001206:	4b3e      	ldr	r3, [pc, #248]	; (8001300 <MX_GPIO_Init+0x1c4>)
 8001208:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800120c:	4a3c      	ldr	r2, [pc, #240]	; (8001300 <MX_GPIO_Init+0x1c4>)
 800120e:	f043 0308 	orr.w	r3, r3, #8
 8001212:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8001216:	4b3a      	ldr	r3, [pc, #232]	; (8001300 <MX_GPIO_Init+0x1c4>)
 8001218:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800121c:	f003 0308 	and.w	r3, r3, #8
 8001220:	603b      	str	r3, [r7, #0]
 8001222:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOE, GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_8, GPIO_PIN_RESET);
 8001224:	2200      	movs	r2, #0
 8001226:	f44f 718e 	mov.w	r1, #284	; 0x11c
 800122a:	4836      	ldr	r0, [pc, #216]	; (8001304 <MX_GPIO_Init+0x1c8>)
 800122c:	f006 fcd0 	bl	8007bd0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13|GPIO_PIN_5, GPIO_PIN_RESET);
 8001230:	2200      	movs	r2, #0
 8001232:	f242 0120 	movw	r1, #8224	; 0x2020
 8001236:	4834      	ldr	r0, [pc, #208]	; (8001308 <MX_GPIO_Init+0x1cc>)
 8001238:	f006 fcca 	bl	8007bd0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOF, GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_11|GPIO_PIN_15, GPIO_PIN_RESET);
 800123c:	2200      	movs	r2, #0
 800123e:	f44f 410b 	mov.w	r1, #35584	; 0x8b00
 8001242:	4832      	ldr	r0, [pc, #200]	; (800130c <MX_GPIO_Init+0x1d0>)
 8001244:	f006 fcc4 	bl	8007bd0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_8|GPIO_PIN_9, GPIO_PIN_RESET);
 8001248:	2200      	movs	r2, #0
 800124a:	f44f 514c 	mov.w	r1, #13056	; 0x3300
 800124e:	4830      	ldr	r0, [pc, #192]	; (8001310 <MX_GPIO_Init+0x1d4>)
 8001250:	f006 fcbe 	bl	8007bd0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_8|GPIO_PIN_14, GPIO_PIN_RESET);
 8001254:	2200      	movs	r2, #0
 8001256:	f44f 4182 	mov.w	r1, #16640	; 0x4100
 800125a:	482e      	ldr	r0, [pc, #184]	; (8001314 <MX_GPIO_Init+0x1d8>)
 800125c:	f006 fcb8 	bl	8007bd0 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PE2 PE3 PE4 PE8 */
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_8;
 8001260:	f44f 738e 	mov.w	r3, #284	; 0x11c
 8001264:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001266:	2301      	movs	r3, #1
 8001268:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800126a:	2300      	movs	r3, #0
 800126c:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800126e:	2300      	movs	r3, #0
 8001270:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001272:	f107 031c 	add.w	r3, r7, #28
 8001276:	4619      	mov	r1, r3
 8001278:	4822      	ldr	r0, [pc, #136]	; (8001304 <MX_GPIO_Init+0x1c8>)
 800127a:	f006 fb01 	bl	8007880 <HAL_GPIO_Init>

  /*Configure GPIO pins : PC13 PC5 */
  GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_5;
 800127e:	f242 0320 	movw	r3, #8224	; 0x2020
 8001282:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001284:	2301      	movs	r3, #1
 8001286:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001288:	2300      	movs	r3, #0
 800128a:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800128c:	2300      	movs	r3, #0
 800128e:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001290:	f107 031c 	add.w	r3, r7, #28
 8001294:	4619      	mov	r1, r3
 8001296:	481c      	ldr	r0, [pc, #112]	; (8001308 <MX_GPIO_Init+0x1cc>)
 8001298:	f006 faf2 	bl	8007880 <HAL_GPIO_Init>

  /*Configure GPIO pins : PF8 PF9 PF11 PF15 */
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_11|GPIO_PIN_15;
 800129c:	f44f 430b 	mov.w	r3, #35584	; 0x8b00
 80012a0:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80012a2:	2301      	movs	r3, #1
 80012a4:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012a6:	2300      	movs	r3, #0
 80012a8:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80012aa:	2300      	movs	r3, #0
 80012ac:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80012ae:	f107 031c 	add.w	r3, r7, #28
 80012b2:	4619      	mov	r1, r3
 80012b4:	4815      	ldr	r0, [pc, #84]	; (800130c <MX_GPIO_Init+0x1d0>)
 80012b6:	f006 fae3 	bl	8007880 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB12 PB13 PB8 PB9 */
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_8|GPIO_PIN_9;
 80012ba:	f44f 534c 	mov.w	r3, #13056	; 0x3300
 80012be:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80012c0:	2301      	movs	r3, #1
 80012c2:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012c4:	2300      	movs	r3, #0
 80012c6:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80012c8:	2300      	movs	r3, #0
 80012ca:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80012cc:	f107 031c 	add.w	r3, r7, #28
 80012d0:	4619      	mov	r1, r3
 80012d2:	480f      	ldr	r0, [pc, #60]	; (8001310 <MX_GPIO_Init+0x1d4>)
 80012d4:	f006 fad4 	bl	8007880 <HAL_GPIO_Init>

  /*Configure GPIO pins : PD8 PD14 */
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_14;
 80012d8:	f44f 4382 	mov.w	r3, #16640	; 0x4100
 80012dc:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80012de:	2301      	movs	r3, #1
 80012e0:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80012e2:	2300      	movs	r3, #0
 80012e4:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80012e6:	2300      	movs	r3, #0
 80012e8:	62bb      	str	r3, [r7, #40]	; 0x28
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80012ea:	f107 031c 	add.w	r3, r7, #28
 80012ee:	4619      	mov	r1, r3
 80012f0:	4808      	ldr	r0, [pc, #32]	; (8001314 <MX_GPIO_Init+0x1d8>)
 80012f2:	f006 fac5 	bl	8007880 <HAL_GPIO_Init>

}
 80012f6:	bf00      	nop
 80012f8:	3730      	adds	r7, #48	; 0x30
 80012fa:	46bd      	mov	sp, r7
 80012fc:	bd80      	pop	{r7, pc}
 80012fe:	bf00      	nop
 8001300:	58024400 	.word	0x58024400
 8001304:	58021000 	.word	0x58021000
 8001308:	58020800 	.word	0x58020800
 800130c:	58021400 	.word	0x58021400
 8001310:	58020400 	.word	0x58020400
 8001314:	58020c00 	.word	0x58020c00

08001318 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001318:	b480      	push	{r7}
 800131a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 800131c:	b672      	cpsid	i
}
 800131e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8001320:	e7fe      	b.n	8001320 <Error_Handler+0x8>
	...

08001324 <main_function>:
#include "debug.h"
#include "ros_main.h"
#include "stm_main.h"


void main_function(){
 8001324:	b580      	push	{r7, lr}
 8001326:	af00      	add	r7, sp, #0
	ROS::setup();
 8001328:	f001 ff00 	bl	800312c <_ZN3ROS5setupEv>
	STM::setup();
 800132c:	f003 f87e 	bl	800442c <_ZN3STM5setupEv>

	while(1){
		if(debug_mode) debug_loop();
 8001330:	4b04      	ldr	r3, [pc, #16]	; (8001344 <main_function+0x20>)
 8001332:	781b      	ldrb	r3, [r3, #0]
 8001334:	2b00      	cmp	r3, #0
 8001336:	d002      	beq.n	800133e <main_function+0x1a>
 8001338:	f7ff fb96 	bl	8000a68 <_Z10debug_loopv>
 800133c:	e7f8      	b.n	8001330 <main_function+0xc>
		else ROS::loop();
 800133e:	f001 ff05 	bl	800314c <_ZN3ROS4loopEv>
		if(debug_mode) debug_loop();
 8001342:	e7f5      	b.n	8001330 <main_function+0xc>
 8001344:	24000000 	.word	0x24000000

08001348 <_ZN8CAR_INFOC1Ev>:

typedef struct{
	double Vx=0;
	double Vy=0;
	double Omega=0;
} CAR_INFO;
 8001348:	b480      	push	{r7}
 800134a:	b083      	sub	sp, #12
 800134c:	af00      	add	r7, sp, #0
 800134e:	6078      	str	r0, [r7, #4]
 8001350:	6879      	ldr	r1, [r7, #4]
 8001352:	f04f 0200 	mov.w	r2, #0
 8001356:	f04f 0300 	mov.w	r3, #0
 800135a:	e9c1 2300 	strd	r2, r3, [r1]
 800135e:	6879      	ldr	r1, [r7, #4]
 8001360:	f04f 0200 	mov.w	r2, #0
 8001364:	f04f 0300 	mov.w	r3, #0
 8001368:	e9c1 2302 	strd	r2, r3, [r1, #8]
 800136c:	6879      	ldr	r1, [r7, #4]
 800136e:	f04f 0200 	mov.w	r2, #0
 8001372:	f04f 0300 	mov.w	r3, #0
 8001376:	e9c1 2304 	strd	r2, r3, [r1, #16]
 800137a:	687b      	ldr	r3, [r7, #4]
 800137c:	4618      	mov	r0, r3
 800137e:	370c      	adds	r7, #12
 8001380:	46bd      	mov	sp, r7
 8001382:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001386:	4770      	bx	lr

08001388 <_ZN7MecanumC1Ev>:
#include "mecanum.h"
#include "dc_motor.h"

Mecanum mecanum;

Mecanum::Mecanum(void){
 8001388:	b580      	push	{r7, lr}
 800138a:	b082      	sub	sp, #8
 800138c:	af00      	add	r7, sp, #0
 800138e:	6078      	str	r0, [r7, #4]
 8001390:	687b      	ldr	r3, [r7, #4]
 8001392:	4618      	mov	r0, r3
 8001394:	f7ff ffd8 	bl	8001348 <_ZN8CAR_INFOC1Ev>
 8001398:	687b      	ldr	r3, [r7, #4]
 800139a:	3318      	adds	r3, #24
 800139c:	4618      	mov	r0, r3
 800139e:	f7ff ffd3 	bl	8001348 <_ZN8CAR_INFOC1Ev>
 80013a2:	6879      	ldr	r1, [r7, #4]
 80013a4:	f04f 0200 	mov.w	r2, #0
 80013a8:	4b0f      	ldr	r3, [pc, #60]	; (80013e8 <_ZN7MecanumC1Ev+0x60>)
 80013aa:	e9c1 230c 	strd	r2, r3, [r1, #48]	; 0x30
 80013ae:	6879      	ldr	r1, [r7, #4]
 80013b0:	a309      	add	r3, pc, #36	; (adr r3, 80013d8 <_ZN7MecanumC1Ev+0x50>)
 80013b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80013b6:	e9c1 230e 	strd	r2, r3, [r1, #56]	; 0x38
 80013ba:	6879      	ldr	r1, [r7, #4]
 80013bc:	a308      	add	r3, pc, #32	; (adr r3, 80013e0 <_ZN7MecanumC1Ev+0x58>)
 80013be:	e9d3 2300 	ldrd	r2, r3, [r3]
 80013c2:	e9c1 2310 	strd	r2, r3, [r1, #64]	; 0x40
	DC_motor_init();
 80013c6:	f7ff f959 	bl	800067c <_Z13DC_motor_initv>
}
 80013ca:	687b      	ldr	r3, [r7, #4]
 80013cc:	4618      	mov	r0, r3
 80013ce:	3708      	adds	r7, #8
 80013d0:	46bd      	mov	sp, r7
 80013d2:	bd80      	pop	{r7, pc}
 80013d4:	f3af 8000 	nop.w
 80013d8:	cccccccd 	.word	0xcccccccd
 80013dc:	4020cccc 	.word	0x4020cccc
 80013e0:	39581062 	.word	0x39581062
 80013e4:	400d48b4 	.word	0x400d48b4
 80013e8:	40270000 	.word	0x40270000

080013ec <_ZN7Mecanum3runEv>:

// calculate wheel (-> PID) -> calculate car -> pub
void Mecanum::run(void){
 80013ec:	b580      	push	{r7, lr}
 80013ee:	b082      	sub	sp, #8
 80013f0:	af00      	add	r7, sp, #0
 80013f2:	6078      	str	r0, [r7, #4]
	tf2_wheel_speed();
 80013f4:	6878      	ldr	r0, [r7, #4]
 80013f6:	f000 f807 	bl	8001408 <_ZN7Mecanum15tf2_wheel_speedEv>
	tf2_car_speed();
 80013fa:	6878      	ldr	r0, [r7, #4]
 80013fc:	f000 f894 	bl	8001528 <_ZN7Mecanum13tf2_car_speedEv>
}
 8001400:	bf00      	nop
 8001402:	3708      	adds	r7, #8
 8001404:	46bd      	mov	sp, r7
 8001406:	bd80      	pop	{r7, pc}

08001408 <_ZN7Mecanum15tf2_wheel_speedEv>:

// alter wheel speed
void Mecanum::tf2_wheel_speed(void){
 8001408:	b480      	push	{r7}
 800140a:	b083      	sub	sp, #12
 800140c:	af00      	add	r7, sp, #0
 800140e:	6078      	str	r0, [r7, #4]
	fr.rps_goal = (CAR_Goal.Vy - CAR_Goal.Vx + CAR_Goal.Omega*(a+b) )/radius;
 8001410:	687b      	ldr	r3, [r7, #4]
 8001412:	ed93 6b02 	vldr	d6, [r3, #8]
 8001416:	687b      	ldr	r3, [r7, #4]
 8001418:	ed93 7b00 	vldr	d7, [r3]
 800141c:	ee36 6b47 	vsub.f64	d6, d6, d7
 8001420:	687b      	ldr	r3, [r7, #4]
 8001422:	ed93 5b04 	vldr	d5, [r3, #16]
 8001426:	687b      	ldr	r3, [r7, #4]
 8001428:	ed93 4b0c 	vldr	d4, [r3, #48]	; 0x30
 800142c:	687b      	ldr	r3, [r7, #4]
 800142e:	ed93 7b0e 	vldr	d7, [r3, #56]	; 0x38
 8001432:	ee34 7b07 	vadd.f64	d7, d4, d7
 8001436:	ee25 7b07 	vmul.f64	d7, d5, d7
 800143a:	ee36 5b07 	vadd.f64	d5, d6, d7
 800143e:	687b      	ldr	r3, [r7, #4]
 8001440:	ed93 6b10 	vldr	d6, [r3, #64]	; 0x40
 8001444:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8001448:	4b32      	ldr	r3, [pc, #200]	; (8001514 <_ZN7Mecanum15tf2_wheel_speedEv+0x10c>)
 800144a:	ed83 7b0e 	vstr	d7, [r3, #56]	; 0x38
	fl.rps_goal = (CAR_Goal.Vy + CAR_Goal.Vx - CAR_Goal.Omega*(a+b) )/radius;
 800144e:	687b      	ldr	r3, [r7, #4]
 8001450:	ed93 6b02 	vldr	d6, [r3, #8]
 8001454:	687b      	ldr	r3, [r7, #4]
 8001456:	ed93 7b00 	vldr	d7, [r3]
 800145a:	ee36 6b07 	vadd.f64	d6, d6, d7
 800145e:	687b      	ldr	r3, [r7, #4]
 8001460:	ed93 5b04 	vldr	d5, [r3, #16]
 8001464:	687b      	ldr	r3, [r7, #4]
 8001466:	ed93 4b0c 	vldr	d4, [r3, #48]	; 0x30
 800146a:	687b      	ldr	r3, [r7, #4]
 800146c:	ed93 7b0e 	vldr	d7, [r3, #56]	; 0x38
 8001470:	ee34 7b07 	vadd.f64	d7, d4, d7
 8001474:	ee25 7b07 	vmul.f64	d7, d5, d7
 8001478:	ee36 5b47 	vsub.f64	d5, d6, d7
 800147c:	687b      	ldr	r3, [r7, #4]
 800147e:	ed93 6b10 	vldr	d6, [r3, #64]	; 0x40
 8001482:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8001486:	4b24      	ldr	r3, [pc, #144]	; (8001518 <_ZN7Mecanum15tf2_wheel_speedEv+0x110>)
 8001488:	ed83 7b0e 	vstr	d7, [r3, #56]	; 0x38
	bl.rps_goal = (CAR_Goal.Vy - CAR_Goal.Vx - CAR_Goal.Omega*(a+b) )/radius;
 800148c:	687b      	ldr	r3, [r7, #4]
 800148e:	ed93 6b02 	vldr	d6, [r3, #8]
 8001492:	687b      	ldr	r3, [r7, #4]
 8001494:	ed93 7b00 	vldr	d7, [r3]
 8001498:	ee36 6b47 	vsub.f64	d6, d6, d7
 800149c:	687b      	ldr	r3, [r7, #4]
 800149e:	ed93 5b04 	vldr	d5, [r3, #16]
 80014a2:	687b      	ldr	r3, [r7, #4]
 80014a4:	ed93 4b0c 	vldr	d4, [r3, #48]	; 0x30
 80014a8:	687b      	ldr	r3, [r7, #4]
 80014aa:	ed93 7b0e 	vldr	d7, [r3, #56]	; 0x38
 80014ae:	ee34 7b07 	vadd.f64	d7, d4, d7
 80014b2:	ee25 7b07 	vmul.f64	d7, d5, d7
 80014b6:	ee36 5b47 	vsub.f64	d5, d6, d7
 80014ba:	687b      	ldr	r3, [r7, #4]
 80014bc:	ed93 6b10 	vldr	d6, [r3, #64]	; 0x40
 80014c0:	ee85 7b06 	vdiv.f64	d7, d5, d6
 80014c4:	4b15      	ldr	r3, [pc, #84]	; (800151c <_ZN7Mecanum15tf2_wheel_speedEv+0x114>)
 80014c6:	ed83 7b0e 	vstr	d7, [r3, #56]	; 0x38
	br.rps_goal = (CAR_Goal.Vy + CAR_Goal.Vx + CAR_Goal.Omega*(a+b) )/radius;
 80014ca:	687b      	ldr	r3, [r7, #4]
 80014cc:	ed93 6b02 	vldr	d6, [r3, #8]
 80014d0:	687b      	ldr	r3, [r7, #4]
 80014d2:	ed93 7b00 	vldr	d7, [r3]
 80014d6:	ee36 6b07 	vadd.f64	d6, d6, d7
 80014da:	687b      	ldr	r3, [r7, #4]
 80014dc:	ed93 5b04 	vldr	d5, [r3, #16]
 80014e0:	687b      	ldr	r3, [r7, #4]
 80014e2:	ed93 4b0c 	vldr	d4, [r3, #48]	; 0x30
 80014e6:	687b      	ldr	r3, [r7, #4]
 80014e8:	ed93 7b0e 	vldr	d7, [r3, #56]	; 0x38
 80014ec:	ee34 7b07 	vadd.f64	d7, d4, d7
 80014f0:	ee25 7b07 	vmul.f64	d7, d5, d7
 80014f4:	ee36 5b07 	vadd.f64	d5, d6, d7
 80014f8:	687b      	ldr	r3, [r7, #4]
 80014fa:	ed93 6b10 	vldr	d6, [r3, #64]	; 0x40
 80014fe:	ee85 7b06 	vdiv.f64	d7, d5, d6
 8001502:	4b07      	ldr	r3, [pc, #28]	; (8001520 <_ZN7Mecanum15tf2_wheel_speedEv+0x118>)
 8001504:	ed83 7b0e 	vstr	d7, [r3, #56]	; 0x38
}
 8001508:	bf00      	nop
 800150a:	370c      	adds	r7, #12
 800150c:	46bd      	mov	sp, r7
 800150e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001512:	4770      	bx	lr
 8001514:	240000a0 	.word	0x240000a0
 8001518:	24000130 	.word	0x24000130
 800151c:	24000250 	.word	0x24000250
 8001520:	240001c0 	.word	0x240001c0
 8001524:	00000000 	.word	0x00000000

08001528 <_ZN7Mecanum13tf2_car_speedEv>:


// give current car speed
void Mecanum::tf2_car_speed(void){
 8001528:	b480      	push	{r7}
 800152a:	b083      	sub	sp, #12
 800152c:	af00      	add	r7, sp, #0
 800152e:	6078      	str	r0, [r7, #4]
	CAR_Now.Vx = (1/4)*radius*(fl.rps_now + fr.rps_now + bl.rps_now + br.rps_now);
 8001530:	687b      	ldr	r3, [r7, #4]
 8001532:	ed93 7b10 	vldr	d7, [r3, #64]	; 0x40
 8001536:	ed9f 6b36 	vldr	d6, [pc, #216]	; 8001610 <_ZN7Mecanum13tf2_car_speedEv+0xe8>
 800153a:	ee27 6b06 	vmul.f64	d6, d7, d6
 800153e:	4b36      	ldr	r3, [pc, #216]	; (8001618 <_ZN7Mecanum13tf2_car_speedEv+0xf0>)
 8001540:	ed93 5b10 	vldr	d5, [r3, #64]	; 0x40
 8001544:	4b35      	ldr	r3, [pc, #212]	; (800161c <_ZN7Mecanum13tf2_car_speedEv+0xf4>)
 8001546:	ed93 7b10 	vldr	d7, [r3, #64]	; 0x40
 800154a:	ee35 5b07 	vadd.f64	d5, d5, d7
 800154e:	4b34      	ldr	r3, [pc, #208]	; (8001620 <_ZN7Mecanum13tf2_car_speedEv+0xf8>)
 8001550:	ed93 7b10 	vldr	d7, [r3, #64]	; 0x40
 8001554:	ee35 5b07 	vadd.f64	d5, d5, d7
 8001558:	4b32      	ldr	r3, [pc, #200]	; (8001624 <_ZN7Mecanum13tf2_car_speedEv+0xfc>)
 800155a:	ed93 7b10 	vldr	d7, [r3, #64]	; 0x40
 800155e:	ee35 7b07 	vadd.f64	d7, d5, d7
 8001562:	ee26 7b07 	vmul.f64	d7, d6, d7
 8001566:	687b      	ldr	r3, [r7, #4]
 8001568:	ed83 7b06 	vstr	d7, [r3, #24]
	CAR_Now.Vy = (1/4)*radius*(-fl.rps_now + fr.rps_now + bl.rps_now - br.rps_now);
 800156c:	687b      	ldr	r3, [r7, #4]
 800156e:	ed93 7b10 	vldr	d7, [r3, #64]	; 0x40
 8001572:	ed9f 6b27 	vldr	d6, [pc, #156]	; 8001610 <_ZN7Mecanum13tf2_car_speedEv+0xe8>
 8001576:	ee27 6b06 	vmul.f64	d6, d7, d6
 800157a:	4b28      	ldr	r3, [pc, #160]	; (800161c <_ZN7Mecanum13tf2_car_speedEv+0xf4>)
 800157c:	ed93 5b10 	vldr	d5, [r3, #64]	; 0x40
 8001580:	4b25      	ldr	r3, [pc, #148]	; (8001618 <_ZN7Mecanum13tf2_car_speedEv+0xf0>)
 8001582:	ed93 7b10 	vldr	d7, [r3, #64]	; 0x40
 8001586:	ee35 5b47 	vsub.f64	d5, d5, d7
 800158a:	4b25      	ldr	r3, [pc, #148]	; (8001620 <_ZN7Mecanum13tf2_car_speedEv+0xf8>)
 800158c:	ed93 7b10 	vldr	d7, [r3, #64]	; 0x40
 8001590:	ee35 5b07 	vadd.f64	d5, d5, d7
 8001594:	4b23      	ldr	r3, [pc, #140]	; (8001624 <_ZN7Mecanum13tf2_car_speedEv+0xfc>)
 8001596:	ed93 7b10 	vldr	d7, [r3, #64]	; 0x40
 800159a:	ee35 7b47 	vsub.f64	d7, d5, d7
 800159e:	ee26 7b07 	vmul.f64	d7, d6, d7
 80015a2:	687b      	ldr	r3, [r7, #4]
 80015a4:	ed83 7b08 	vstr	d7, [r3, #32]
	CAR_Now.Omega = (1/4)*radius*(1/(a+b))*(-fl.rps_now + fr.rps_now - bl.rps_now + br.rps_now);
 80015a8:	687b      	ldr	r3, [r7, #4]
 80015aa:	ed93 7b10 	vldr	d7, [r3, #64]	; 0x40
 80015ae:	ed9f 6b18 	vldr	d6, [pc, #96]	; 8001610 <_ZN7Mecanum13tf2_car_speedEv+0xe8>
 80015b2:	ee27 6b06 	vmul.f64	d6, d7, d6
 80015b6:	687b      	ldr	r3, [r7, #4]
 80015b8:	ed93 5b0c 	vldr	d5, [r3, #48]	; 0x30
 80015bc:	687b      	ldr	r3, [r7, #4]
 80015be:	ed93 7b0e 	vldr	d7, [r3, #56]	; 0x38
 80015c2:	ee35 5b07 	vadd.f64	d5, d5, d7
 80015c6:	eeb7 4b00 	vmov.f64	d4, #112	; 0x3f800000  1.0
 80015ca:	ee84 7b05 	vdiv.f64	d7, d4, d5
 80015ce:	ee26 6b07 	vmul.f64	d6, d6, d7
 80015d2:	4b12      	ldr	r3, [pc, #72]	; (800161c <_ZN7Mecanum13tf2_car_speedEv+0xf4>)
 80015d4:	ed93 5b10 	vldr	d5, [r3, #64]	; 0x40
 80015d8:	4b0f      	ldr	r3, [pc, #60]	; (8001618 <_ZN7Mecanum13tf2_car_speedEv+0xf0>)
 80015da:	ed93 7b10 	vldr	d7, [r3, #64]	; 0x40
 80015de:	ee35 5b47 	vsub.f64	d5, d5, d7
 80015e2:	4b0f      	ldr	r3, [pc, #60]	; (8001620 <_ZN7Mecanum13tf2_car_speedEv+0xf8>)
 80015e4:	ed93 7b10 	vldr	d7, [r3, #64]	; 0x40
 80015e8:	ee35 5b47 	vsub.f64	d5, d5, d7
 80015ec:	4b0d      	ldr	r3, [pc, #52]	; (8001624 <_ZN7Mecanum13tf2_car_speedEv+0xfc>)
 80015ee:	ed93 7b10 	vldr	d7, [r3, #64]	; 0x40
 80015f2:	ee35 7b07 	vadd.f64	d7, d5, d7
 80015f6:	ee26 7b07 	vmul.f64	d7, d6, d7
 80015fa:	687b      	ldr	r3, [r7, #4]
 80015fc:	ed83 7b0a 	vstr	d7, [r3, #40]	; 0x28
}
 8001600:	bf00      	nop
 8001602:	370c      	adds	r7, #12
 8001604:	46bd      	mov	sp, r7
 8001606:	f85d 7b04 	ldr.w	r7, [sp], #4
 800160a:	4770      	bx	lr
 800160c:	f3af 8000 	nop.w
	...
 8001618:	24000130 	.word	0x24000130
 800161c:	240000a0 	.word	0x240000a0
 8001620:	24000250 	.word	0x24000250
 8001624:	240001c0 	.word	0x240001c0

08001628 <_Z41__static_initialization_and_destruction_0ii>:
 8001628:	b580      	push	{r7, lr}
 800162a:	b082      	sub	sp, #8
 800162c:	af00      	add	r7, sp, #0
 800162e:	6078      	str	r0, [r7, #4]
 8001630:	6039      	str	r1, [r7, #0]
 8001632:	687b      	ldr	r3, [r7, #4]
 8001634:	2b01      	cmp	r3, #1
 8001636:	d107      	bne.n	8001648 <_Z41__static_initialization_and_destruction_0ii+0x20>
 8001638:	683b      	ldr	r3, [r7, #0]
 800163a:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800163e:	4293      	cmp	r3, r2
 8001640:	d102      	bne.n	8001648 <_Z41__static_initialization_and_destruction_0ii+0x20>
Mecanum mecanum;
 8001642:	4803      	ldr	r0, [pc, #12]	; (8001650 <_Z41__static_initialization_and_destruction_0ii+0x28>)
 8001644:	f7ff fea0 	bl	8001388 <_ZN7MecanumC1Ev>
}
 8001648:	bf00      	nop
 800164a:	3708      	adds	r7, #8
 800164c:	46bd      	mov	sp, r7
 800164e:	bd80      	pop	{r7, pc}
 8001650:	24000678 	.word	0x24000678

08001654 <_GLOBAL__sub_I_mecanum>:
 8001654:	b580      	push	{r7, lr}
 8001656:	af00      	add	r7, sp, #0
 8001658:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800165c:	2001      	movs	r0, #1
 800165e:	f7ff ffe3 	bl	8001628 <_Z41__static_initialization_and_destruction_0ii>
 8001662:	bd80      	pop	{r7, pc}

08001664 <_ZN3ros4TimeC1Ev>:
class Time
{
public:
  uint32_t sec, nsec;

  Time() : sec(0), nsec(0) {}
 8001664:	b480      	push	{r7}
 8001666:	b083      	sub	sp, #12
 8001668:	af00      	add	r7, sp, #0
 800166a:	6078      	str	r0, [r7, #4]
 800166c:	687b      	ldr	r3, [r7, #4]
 800166e:	2200      	movs	r2, #0
 8001670:	601a      	str	r2, [r3, #0]
 8001672:	687b      	ldr	r3, [r7, #4]
 8001674:	2200      	movs	r2, #0
 8001676:	605a      	str	r2, [r3, #4]
 8001678:	687b      	ldr	r3, [r7, #4]
 800167a:	4618      	mov	r0, r3
 800167c:	370c      	adds	r7, #12
 800167e:	46bd      	mov	sp, r7
 8001680:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001684:	4770      	bx	lr
	...

08001688 <_ZN3ros3MsgC1Ev>:

namespace ros
{

/* Base Message Type */
class Msg
 8001688:	b480      	push	{r7}
 800168a:	b083      	sub	sp, #12
 800168c:	af00      	add	r7, sp, #0
 800168e:	6078      	str	r0, [r7, #4]
 8001690:	4a04      	ldr	r2, [pc, #16]	; (80016a4 <_ZN3ros3MsgC1Ev+0x1c>)
 8001692:	687b      	ldr	r3, [r7, #4]
 8001694:	601a      	str	r2, [r3, #0]
 8001696:	687b      	ldr	r3, [r7, #4]
 8001698:	4618      	mov	r0, r3
 800169a:	370c      	adds	r7, #12
 800169c:	46bd      	mov	sp, r7
 800169e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016a2:	4770      	bx	lr
 80016a4:	0800dfdc 	.word	0x0800dfdc

080016a8 <_ZN8std_msgs4TimeC1Ev>:
  {
    public:
      typedef ros::Time _data_type;
      _data_type data;

    Time():
 80016a8:	b580      	push	{r7, lr}
 80016aa:	b082      	sub	sp, #8
 80016ac:	af00      	add	r7, sp, #0
 80016ae:	6078      	str	r0, [r7, #4]
      data()
 80016b0:	687b      	ldr	r3, [r7, #4]
 80016b2:	4618      	mov	r0, r3
 80016b4:	f7ff ffe8 	bl	8001688 <_ZN3ros3MsgC1Ev>
 80016b8:	4a06      	ldr	r2, [pc, #24]	; (80016d4 <_ZN8std_msgs4TimeC1Ev+0x2c>)
 80016ba:	687b      	ldr	r3, [r7, #4]
 80016bc:	601a      	str	r2, [r3, #0]
 80016be:	687b      	ldr	r3, [r7, #4]
 80016c0:	3304      	adds	r3, #4
 80016c2:	4618      	mov	r0, r3
 80016c4:	f7ff ffce 	bl	8001664 <_ZN3ros4TimeC1Ev>
    {
    }
 80016c8:	687b      	ldr	r3, [r7, #4]
 80016ca:	4618      	mov	r0, r3
 80016cc:	3708      	adds	r7, #8
 80016ce:	46bd      	mov	sp, r7
 80016d0:	bd80      	pop	{r7, pc}
 80016d2:	bf00      	nop
 80016d4:	0800dfc4 	.word	0x0800dfc4

080016d8 <_ZNK8std_msgs4Time9serializeEPh>:

    virtual int serialize(unsigned char *outbuffer) const
 80016d8:	b480      	push	{r7}
 80016da:	b085      	sub	sp, #20
 80016dc:	af00      	add	r7, sp, #0
 80016de:	6078      	str	r0, [r7, #4]
 80016e0:	6039      	str	r1, [r7, #0]
    {
      int offset = 0;
 80016e2:	2300      	movs	r3, #0
 80016e4:	60fb      	str	r3, [r7, #12]
      *(outbuffer + offset + 0) = (this->data.sec >> (8 * 0)) & 0xFF;
 80016e6:	687b      	ldr	r3, [r7, #4]
 80016e8:	6859      	ldr	r1, [r3, #4]
 80016ea:	68fb      	ldr	r3, [r7, #12]
 80016ec:	683a      	ldr	r2, [r7, #0]
 80016ee:	4413      	add	r3, r2
 80016f0:	b2ca      	uxtb	r2, r1
 80016f2:	701a      	strb	r2, [r3, #0]
      *(outbuffer + offset + 1) = (this->data.sec >> (8 * 1)) & 0xFF;
 80016f4:	687b      	ldr	r3, [r7, #4]
 80016f6:	685b      	ldr	r3, [r3, #4]
 80016f8:	0a19      	lsrs	r1, r3, #8
 80016fa:	68fb      	ldr	r3, [r7, #12]
 80016fc:	3301      	adds	r3, #1
 80016fe:	683a      	ldr	r2, [r7, #0]
 8001700:	4413      	add	r3, r2
 8001702:	b2ca      	uxtb	r2, r1
 8001704:	701a      	strb	r2, [r3, #0]
      *(outbuffer + offset + 2) = (this->data.sec >> (8 * 2)) & 0xFF;
 8001706:	687b      	ldr	r3, [r7, #4]
 8001708:	685b      	ldr	r3, [r3, #4]
 800170a:	0c19      	lsrs	r1, r3, #16
 800170c:	68fb      	ldr	r3, [r7, #12]
 800170e:	3302      	adds	r3, #2
 8001710:	683a      	ldr	r2, [r7, #0]
 8001712:	4413      	add	r3, r2
 8001714:	b2ca      	uxtb	r2, r1
 8001716:	701a      	strb	r2, [r3, #0]
      *(outbuffer + offset + 3) = (this->data.sec >> (8 * 3)) & 0xFF;
 8001718:	687b      	ldr	r3, [r7, #4]
 800171a:	685b      	ldr	r3, [r3, #4]
 800171c:	0e19      	lsrs	r1, r3, #24
 800171e:	68fb      	ldr	r3, [r7, #12]
 8001720:	3303      	adds	r3, #3
 8001722:	683a      	ldr	r2, [r7, #0]
 8001724:	4413      	add	r3, r2
 8001726:	b2ca      	uxtb	r2, r1
 8001728:	701a      	strb	r2, [r3, #0]
      offset += sizeof(this->data.sec);
 800172a:	68fb      	ldr	r3, [r7, #12]
 800172c:	3304      	adds	r3, #4
 800172e:	60fb      	str	r3, [r7, #12]
      *(outbuffer + offset + 0) = (this->data.nsec >> (8 * 0)) & 0xFF;
 8001730:	687b      	ldr	r3, [r7, #4]
 8001732:	6899      	ldr	r1, [r3, #8]
 8001734:	68fb      	ldr	r3, [r7, #12]
 8001736:	683a      	ldr	r2, [r7, #0]
 8001738:	4413      	add	r3, r2
 800173a:	b2ca      	uxtb	r2, r1
 800173c:	701a      	strb	r2, [r3, #0]
      *(outbuffer + offset + 1) = (this->data.nsec >> (8 * 1)) & 0xFF;
 800173e:	687b      	ldr	r3, [r7, #4]
 8001740:	689b      	ldr	r3, [r3, #8]
 8001742:	0a19      	lsrs	r1, r3, #8
 8001744:	68fb      	ldr	r3, [r7, #12]
 8001746:	3301      	adds	r3, #1
 8001748:	683a      	ldr	r2, [r7, #0]
 800174a:	4413      	add	r3, r2
 800174c:	b2ca      	uxtb	r2, r1
 800174e:	701a      	strb	r2, [r3, #0]
      *(outbuffer + offset + 2) = (this->data.nsec >> (8 * 2)) & 0xFF;
 8001750:	687b      	ldr	r3, [r7, #4]
 8001752:	689b      	ldr	r3, [r3, #8]
 8001754:	0c19      	lsrs	r1, r3, #16
 8001756:	68fb      	ldr	r3, [r7, #12]
 8001758:	3302      	adds	r3, #2
 800175a:	683a      	ldr	r2, [r7, #0]
 800175c:	4413      	add	r3, r2
 800175e:	b2ca      	uxtb	r2, r1
 8001760:	701a      	strb	r2, [r3, #0]
      *(outbuffer + offset + 3) = (this->data.nsec >> (8 * 3)) & 0xFF;
 8001762:	687b      	ldr	r3, [r7, #4]
 8001764:	689b      	ldr	r3, [r3, #8]
 8001766:	0e19      	lsrs	r1, r3, #24
 8001768:	68fb      	ldr	r3, [r7, #12]
 800176a:	3303      	adds	r3, #3
 800176c:	683a      	ldr	r2, [r7, #0]
 800176e:	4413      	add	r3, r2
 8001770:	b2ca      	uxtb	r2, r1
 8001772:	701a      	strb	r2, [r3, #0]
      offset += sizeof(this->data.nsec);
 8001774:	68fb      	ldr	r3, [r7, #12]
 8001776:	3304      	adds	r3, #4
 8001778:	60fb      	str	r3, [r7, #12]
      return offset;
 800177a:	68fb      	ldr	r3, [r7, #12]
    }
 800177c:	4618      	mov	r0, r3
 800177e:	3714      	adds	r7, #20
 8001780:	46bd      	mov	sp, r7
 8001782:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001786:	4770      	bx	lr

08001788 <_ZN8std_msgs4Time11deserializeEPh>:

    virtual int deserialize(unsigned char *inbuffer)
 8001788:	b480      	push	{r7}
 800178a:	b085      	sub	sp, #20
 800178c:	af00      	add	r7, sp, #0
 800178e:	6078      	str	r0, [r7, #4]
 8001790:	6039      	str	r1, [r7, #0]
    {
      int offset = 0;
 8001792:	2300      	movs	r3, #0
 8001794:	60fb      	str	r3, [r7, #12]
      this->data.sec =  ((uint32_t) (*(inbuffer + offset)));
 8001796:	68fb      	ldr	r3, [r7, #12]
 8001798:	683a      	ldr	r2, [r7, #0]
 800179a:	4413      	add	r3, r2
 800179c:	781b      	ldrb	r3, [r3, #0]
 800179e:	461a      	mov	r2, r3
 80017a0:	687b      	ldr	r3, [r7, #4]
 80017a2:	605a      	str	r2, [r3, #4]
      this->data.sec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 80017a4:	687b      	ldr	r3, [r7, #4]
 80017a6:	685a      	ldr	r2, [r3, #4]
 80017a8:	68fb      	ldr	r3, [r7, #12]
 80017aa:	3301      	adds	r3, #1
 80017ac:	6839      	ldr	r1, [r7, #0]
 80017ae:	440b      	add	r3, r1
 80017b0:	781b      	ldrb	r3, [r3, #0]
 80017b2:	021b      	lsls	r3, r3, #8
 80017b4:	431a      	orrs	r2, r3
 80017b6:	687b      	ldr	r3, [r7, #4]
 80017b8:	605a      	str	r2, [r3, #4]
      this->data.sec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 80017ba:	687b      	ldr	r3, [r7, #4]
 80017bc:	685a      	ldr	r2, [r3, #4]
 80017be:	68fb      	ldr	r3, [r7, #12]
 80017c0:	3302      	adds	r3, #2
 80017c2:	6839      	ldr	r1, [r7, #0]
 80017c4:	440b      	add	r3, r1
 80017c6:	781b      	ldrb	r3, [r3, #0]
 80017c8:	041b      	lsls	r3, r3, #16
 80017ca:	431a      	orrs	r2, r3
 80017cc:	687b      	ldr	r3, [r7, #4]
 80017ce:	605a      	str	r2, [r3, #4]
      this->data.sec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 80017d0:	687b      	ldr	r3, [r7, #4]
 80017d2:	685a      	ldr	r2, [r3, #4]
 80017d4:	68fb      	ldr	r3, [r7, #12]
 80017d6:	3303      	adds	r3, #3
 80017d8:	6839      	ldr	r1, [r7, #0]
 80017da:	440b      	add	r3, r1
 80017dc:	781b      	ldrb	r3, [r3, #0]
 80017de:	061b      	lsls	r3, r3, #24
 80017e0:	431a      	orrs	r2, r3
 80017e2:	687b      	ldr	r3, [r7, #4]
 80017e4:	605a      	str	r2, [r3, #4]
      offset += sizeof(this->data.sec);
 80017e6:	68fb      	ldr	r3, [r7, #12]
 80017e8:	3304      	adds	r3, #4
 80017ea:	60fb      	str	r3, [r7, #12]
      this->data.nsec =  ((uint32_t) (*(inbuffer + offset)));
 80017ec:	68fb      	ldr	r3, [r7, #12]
 80017ee:	683a      	ldr	r2, [r7, #0]
 80017f0:	4413      	add	r3, r2
 80017f2:	781b      	ldrb	r3, [r3, #0]
 80017f4:	461a      	mov	r2, r3
 80017f6:	687b      	ldr	r3, [r7, #4]
 80017f8:	609a      	str	r2, [r3, #8]
      this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 80017fa:	687b      	ldr	r3, [r7, #4]
 80017fc:	689a      	ldr	r2, [r3, #8]
 80017fe:	68fb      	ldr	r3, [r7, #12]
 8001800:	3301      	adds	r3, #1
 8001802:	6839      	ldr	r1, [r7, #0]
 8001804:	440b      	add	r3, r1
 8001806:	781b      	ldrb	r3, [r3, #0]
 8001808:	021b      	lsls	r3, r3, #8
 800180a:	431a      	orrs	r2, r3
 800180c:	687b      	ldr	r3, [r7, #4]
 800180e:	609a      	str	r2, [r3, #8]
      this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 8001810:	687b      	ldr	r3, [r7, #4]
 8001812:	689a      	ldr	r2, [r3, #8]
 8001814:	68fb      	ldr	r3, [r7, #12]
 8001816:	3302      	adds	r3, #2
 8001818:	6839      	ldr	r1, [r7, #0]
 800181a:	440b      	add	r3, r1
 800181c:	781b      	ldrb	r3, [r3, #0]
 800181e:	041b      	lsls	r3, r3, #16
 8001820:	431a      	orrs	r2, r3
 8001822:	687b      	ldr	r3, [r7, #4]
 8001824:	609a      	str	r2, [r3, #8]
      this->data.nsec |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 8001826:	687b      	ldr	r3, [r7, #4]
 8001828:	689a      	ldr	r2, [r3, #8]
 800182a:	68fb      	ldr	r3, [r7, #12]
 800182c:	3303      	adds	r3, #3
 800182e:	6839      	ldr	r1, [r7, #0]
 8001830:	440b      	add	r3, r1
 8001832:	781b      	ldrb	r3, [r3, #0]
 8001834:	061b      	lsls	r3, r3, #24
 8001836:	431a      	orrs	r2, r3
 8001838:	687b      	ldr	r3, [r7, #4]
 800183a:	609a      	str	r2, [r3, #8]
      offset += sizeof(this->data.nsec);
 800183c:	68fb      	ldr	r3, [r7, #12]
 800183e:	3304      	adds	r3, #4
 8001840:	60fb      	str	r3, [r7, #12]
     return offset;
 8001842:	68fb      	ldr	r3, [r7, #12]
    }
 8001844:	4618      	mov	r0, r3
 8001846:	3714      	adds	r7, #20
 8001848:	46bd      	mov	sp, r7
 800184a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800184e:	4770      	bx	lr

08001850 <_ZN8std_msgs4Time7getTypeEv>:

    const char * getType(){ return "std_msgs/Time"; };
 8001850:	b480      	push	{r7}
 8001852:	b083      	sub	sp, #12
 8001854:	af00      	add	r7, sp, #0
 8001856:	6078      	str	r0, [r7, #4]
 8001858:	4b03      	ldr	r3, [pc, #12]	; (8001868 <_ZN8std_msgs4Time7getTypeEv+0x18>)
 800185a:	4618      	mov	r0, r3
 800185c:	370c      	adds	r7, #12
 800185e:	46bd      	mov	sp, r7
 8001860:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001864:	4770      	bx	lr
 8001866:	bf00      	nop
 8001868:	0800dd80 	.word	0x0800dd80

0800186c <_ZN8std_msgs4Time6getMD5Ev>:
    const char * getMD5(){ return "cd7166c74c552c311fbcc2fe5a7bc289"; };
 800186c:	b480      	push	{r7}
 800186e:	b083      	sub	sp, #12
 8001870:	af00      	add	r7, sp, #0
 8001872:	6078      	str	r0, [r7, #4]
 8001874:	4b03      	ldr	r3, [pc, #12]	; (8001884 <_ZN8std_msgs4Time6getMD5Ev+0x18>)
 8001876:	4618      	mov	r0, r3
 8001878:	370c      	adds	r7, #12
 800187a:	46bd      	mov	sp, r7
 800187c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001880:	4770      	bx	lr
 8001882:	bf00      	nop
 8001884:	0800dd90 	.word	0x0800dd90

08001888 <_ZN14rosserial_msgs9TopicInfoC1Ev>:
      enum { ID_PARAMETER_REQUEST = 6 };
      enum { ID_LOG = 7 };
      enum { ID_TIME = 10 };
      enum { ID_TX_STOP = 11 };

    TopicInfo():
 8001888:	b580      	push	{r7, lr}
 800188a:	b082      	sub	sp, #8
 800188c:	af00      	add	r7, sp, #0
 800188e:	6078      	str	r0, [r7, #4]
      topic_id(0),
      topic_name(""),
      message_type(""),
      md5sum(""),
      buffer_size(0)
 8001890:	687b      	ldr	r3, [r7, #4]
 8001892:	4618      	mov	r0, r3
 8001894:	f7ff fef8 	bl	8001688 <_ZN3ros3MsgC1Ev>
 8001898:	4a0b      	ldr	r2, [pc, #44]	; (80018c8 <_ZN14rosserial_msgs9TopicInfoC1Ev+0x40>)
 800189a:	687b      	ldr	r3, [r7, #4]
 800189c:	601a      	str	r2, [r3, #0]
 800189e:	687b      	ldr	r3, [r7, #4]
 80018a0:	2200      	movs	r2, #0
 80018a2:	809a      	strh	r2, [r3, #4]
 80018a4:	687b      	ldr	r3, [r7, #4]
 80018a6:	4a09      	ldr	r2, [pc, #36]	; (80018cc <_ZN14rosserial_msgs9TopicInfoC1Ev+0x44>)
 80018a8:	609a      	str	r2, [r3, #8]
 80018aa:	687b      	ldr	r3, [r7, #4]
 80018ac:	4a07      	ldr	r2, [pc, #28]	; (80018cc <_ZN14rosserial_msgs9TopicInfoC1Ev+0x44>)
 80018ae:	60da      	str	r2, [r3, #12]
 80018b0:	687b      	ldr	r3, [r7, #4]
 80018b2:	4a06      	ldr	r2, [pc, #24]	; (80018cc <_ZN14rosserial_msgs9TopicInfoC1Ev+0x44>)
 80018b4:	611a      	str	r2, [r3, #16]
 80018b6:	687b      	ldr	r3, [r7, #4]
 80018b8:	2200      	movs	r2, #0
 80018ba:	615a      	str	r2, [r3, #20]
    {
    }
 80018bc:	687b      	ldr	r3, [r7, #4]
 80018be:	4618      	mov	r0, r3
 80018c0:	3708      	adds	r7, #8
 80018c2:	46bd      	mov	sp, r7
 80018c4:	bd80      	pop	{r7, pc}
 80018c6:	bf00      	nop
 80018c8:	0800dfac 	.word	0x0800dfac
 80018cc:	0800ddb4 	.word	0x0800ddb4

080018d0 <_ZNK14rosserial_msgs9TopicInfo9serializeEPh>:

    virtual int serialize(unsigned char *outbuffer) const
 80018d0:	b580      	push	{r7, lr}
 80018d2:	b088      	sub	sp, #32
 80018d4:	af00      	add	r7, sp, #0
 80018d6:	6078      	str	r0, [r7, #4]
 80018d8:	6039      	str	r1, [r7, #0]
    {
      int offset = 0;
 80018da:	2300      	movs	r3, #0
 80018dc:	61fb      	str	r3, [r7, #28]
      *(outbuffer + offset + 0) = (this->topic_id >> (8 * 0)) & 0xFF;
 80018de:	687b      	ldr	r3, [r7, #4]
 80018e0:	8899      	ldrh	r1, [r3, #4]
 80018e2:	69fb      	ldr	r3, [r7, #28]
 80018e4:	683a      	ldr	r2, [r7, #0]
 80018e6:	4413      	add	r3, r2
 80018e8:	b2ca      	uxtb	r2, r1
 80018ea:	701a      	strb	r2, [r3, #0]
      *(outbuffer + offset + 1) = (this->topic_id >> (8 * 1)) & 0xFF;
 80018ec:	687b      	ldr	r3, [r7, #4]
 80018ee:	889b      	ldrh	r3, [r3, #4]
 80018f0:	0a1b      	lsrs	r3, r3, #8
 80018f2:	b299      	uxth	r1, r3
 80018f4:	69fb      	ldr	r3, [r7, #28]
 80018f6:	3301      	adds	r3, #1
 80018f8:	683a      	ldr	r2, [r7, #0]
 80018fa:	4413      	add	r3, r2
 80018fc:	b2ca      	uxtb	r2, r1
 80018fe:	701a      	strb	r2, [r3, #0]
      offset += sizeof(this->topic_id);
 8001900:	69fb      	ldr	r3, [r7, #28]
 8001902:	3302      	adds	r3, #2
 8001904:	61fb      	str	r3, [r7, #28]
      uint32_t length_topic_name = strlen(this->topic_name);
 8001906:	687b      	ldr	r3, [r7, #4]
 8001908:	689b      	ldr	r3, [r3, #8]
 800190a:	4618      	mov	r0, r3
 800190c:	f7fe fd00 	bl	8000310 <strlen>
 8001910:	61b8      	str	r0, [r7, #24]
      varToArr(outbuffer + offset, length_topic_name);
 8001912:	69fb      	ldr	r3, [r7, #28]
 8001914:	683a      	ldr	r2, [r7, #0]
 8001916:	4413      	add	r3, r2
 8001918:	69b9      	ldr	r1, [r7, #24]
 800191a:	4618      	mov	r0, r3
 800191c:	f001 fc44 	bl	80031a8 <_ZN3ros3Msg8varToArrIPhmEEvT_T0_>
      offset += 4;
 8001920:	69fb      	ldr	r3, [r7, #28]
 8001922:	3304      	adds	r3, #4
 8001924:	61fb      	str	r3, [r7, #28]
      memcpy(outbuffer + offset, this->topic_name, length_topic_name);
 8001926:	69fb      	ldr	r3, [r7, #28]
 8001928:	683a      	ldr	r2, [r7, #0]
 800192a:	18d0      	adds	r0, r2, r3
 800192c:	687b      	ldr	r3, [r7, #4]
 800192e:	689b      	ldr	r3, [r3, #8]
 8001930:	69ba      	ldr	r2, [r7, #24]
 8001932:	4619      	mov	r1, r3
 8001934:	f00c f880 	bl	800da38 <memcpy>
      offset += length_topic_name;
 8001938:	69fa      	ldr	r2, [r7, #28]
 800193a:	69bb      	ldr	r3, [r7, #24]
 800193c:	4413      	add	r3, r2
 800193e:	61fb      	str	r3, [r7, #28]
      uint32_t length_message_type = strlen(this->message_type);
 8001940:	687b      	ldr	r3, [r7, #4]
 8001942:	68db      	ldr	r3, [r3, #12]
 8001944:	4618      	mov	r0, r3
 8001946:	f7fe fce3 	bl	8000310 <strlen>
 800194a:	6178      	str	r0, [r7, #20]
      varToArr(outbuffer + offset, length_message_type);
 800194c:	69fb      	ldr	r3, [r7, #28]
 800194e:	683a      	ldr	r2, [r7, #0]
 8001950:	4413      	add	r3, r2
 8001952:	6979      	ldr	r1, [r7, #20]
 8001954:	4618      	mov	r0, r3
 8001956:	f001 fc27 	bl	80031a8 <_ZN3ros3Msg8varToArrIPhmEEvT_T0_>
      offset += 4;
 800195a:	69fb      	ldr	r3, [r7, #28]
 800195c:	3304      	adds	r3, #4
 800195e:	61fb      	str	r3, [r7, #28]
      memcpy(outbuffer + offset, this->message_type, length_message_type);
 8001960:	69fb      	ldr	r3, [r7, #28]
 8001962:	683a      	ldr	r2, [r7, #0]
 8001964:	18d0      	adds	r0, r2, r3
 8001966:	687b      	ldr	r3, [r7, #4]
 8001968:	68db      	ldr	r3, [r3, #12]
 800196a:	697a      	ldr	r2, [r7, #20]
 800196c:	4619      	mov	r1, r3
 800196e:	f00c f863 	bl	800da38 <memcpy>
      offset += length_message_type;
 8001972:	69fa      	ldr	r2, [r7, #28]
 8001974:	697b      	ldr	r3, [r7, #20]
 8001976:	4413      	add	r3, r2
 8001978:	61fb      	str	r3, [r7, #28]
      uint32_t length_md5sum = strlen(this->md5sum);
 800197a:	687b      	ldr	r3, [r7, #4]
 800197c:	691b      	ldr	r3, [r3, #16]
 800197e:	4618      	mov	r0, r3
 8001980:	f7fe fcc6 	bl	8000310 <strlen>
 8001984:	6138      	str	r0, [r7, #16]
      varToArr(outbuffer + offset, length_md5sum);
 8001986:	69fb      	ldr	r3, [r7, #28]
 8001988:	683a      	ldr	r2, [r7, #0]
 800198a:	4413      	add	r3, r2
 800198c:	6939      	ldr	r1, [r7, #16]
 800198e:	4618      	mov	r0, r3
 8001990:	f001 fc0a 	bl	80031a8 <_ZN3ros3Msg8varToArrIPhmEEvT_T0_>
      offset += 4;
 8001994:	69fb      	ldr	r3, [r7, #28]
 8001996:	3304      	adds	r3, #4
 8001998:	61fb      	str	r3, [r7, #28]
      memcpy(outbuffer + offset, this->md5sum, length_md5sum);
 800199a:	69fb      	ldr	r3, [r7, #28]
 800199c:	683a      	ldr	r2, [r7, #0]
 800199e:	18d0      	adds	r0, r2, r3
 80019a0:	687b      	ldr	r3, [r7, #4]
 80019a2:	691b      	ldr	r3, [r3, #16]
 80019a4:	693a      	ldr	r2, [r7, #16]
 80019a6:	4619      	mov	r1, r3
 80019a8:	f00c f846 	bl	800da38 <memcpy>
      offset += length_md5sum;
 80019ac:	69fa      	ldr	r2, [r7, #28]
 80019ae:	693b      	ldr	r3, [r7, #16]
 80019b0:	4413      	add	r3, r2
 80019b2:	61fb      	str	r3, [r7, #28]
      union {
        int32_t real;
        uint32_t base;
      } u_buffer_size;
      u_buffer_size.real = this->buffer_size;
 80019b4:	687b      	ldr	r3, [r7, #4]
 80019b6:	695b      	ldr	r3, [r3, #20]
 80019b8:	60fb      	str	r3, [r7, #12]
      *(outbuffer + offset + 0) = (u_buffer_size.base >> (8 * 0)) & 0xFF;
 80019ba:	68f9      	ldr	r1, [r7, #12]
 80019bc:	69fb      	ldr	r3, [r7, #28]
 80019be:	683a      	ldr	r2, [r7, #0]
 80019c0:	4413      	add	r3, r2
 80019c2:	b2ca      	uxtb	r2, r1
 80019c4:	701a      	strb	r2, [r3, #0]
      *(outbuffer + offset + 1) = (u_buffer_size.base >> (8 * 1)) & 0xFF;
 80019c6:	68fb      	ldr	r3, [r7, #12]
 80019c8:	0a19      	lsrs	r1, r3, #8
 80019ca:	69fb      	ldr	r3, [r7, #28]
 80019cc:	3301      	adds	r3, #1
 80019ce:	683a      	ldr	r2, [r7, #0]
 80019d0:	4413      	add	r3, r2
 80019d2:	b2ca      	uxtb	r2, r1
 80019d4:	701a      	strb	r2, [r3, #0]
      *(outbuffer + offset + 2) = (u_buffer_size.base >> (8 * 2)) & 0xFF;
 80019d6:	68fb      	ldr	r3, [r7, #12]
 80019d8:	0c19      	lsrs	r1, r3, #16
 80019da:	69fb      	ldr	r3, [r7, #28]
 80019dc:	3302      	adds	r3, #2
 80019de:	683a      	ldr	r2, [r7, #0]
 80019e0:	4413      	add	r3, r2
 80019e2:	b2ca      	uxtb	r2, r1
 80019e4:	701a      	strb	r2, [r3, #0]
      *(outbuffer + offset + 3) = (u_buffer_size.base >> (8 * 3)) & 0xFF;
 80019e6:	68fb      	ldr	r3, [r7, #12]
 80019e8:	0e19      	lsrs	r1, r3, #24
 80019ea:	69fb      	ldr	r3, [r7, #28]
 80019ec:	3303      	adds	r3, #3
 80019ee:	683a      	ldr	r2, [r7, #0]
 80019f0:	4413      	add	r3, r2
 80019f2:	b2ca      	uxtb	r2, r1
 80019f4:	701a      	strb	r2, [r3, #0]
      offset += sizeof(this->buffer_size);
 80019f6:	69fb      	ldr	r3, [r7, #28]
 80019f8:	3304      	adds	r3, #4
 80019fa:	61fb      	str	r3, [r7, #28]
      return offset;
 80019fc:	69fb      	ldr	r3, [r7, #28]
    }
 80019fe:	4618      	mov	r0, r3
 8001a00:	3720      	adds	r7, #32
 8001a02:	46bd      	mov	sp, r7
 8001a04:	bd80      	pop	{r7, pc}

08001a06 <_ZN14rosserial_msgs9TopicInfo11deserializeEPh>:

    virtual int deserialize(unsigned char *inbuffer)
 8001a06:	b580      	push	{r7, lr}
 8001a08:	b08a      	sub	sp, #40	; 0x28
 8001a0a:	af00      	add	r7, sp, #0
 8001a0c:	6078      	str	r0, [r7, #4]
 8001a0e:	6039      	str	r1, [r7, #0]
    {
      int offset = 0;
 8001a10:	2300      	movs	r3, #0
 8001a12:	61bb      	str	r3, [r7, #24]
      this->topic_id =  ((uint16_t) (*(inbuffer + offset)));
 8001a14:	69bb      	ldr	r3, [r7, #24]
 8001a16:	683a      	ldr	r2, [r7, #0]
 8001a18:	4413      	add	r3, r2
 8001a1a:	781b      	ldrb	r3, [r3, #0]
 8001a1c:	b29a      	uxth	r2, r3
 8001a1e:	687b      	ldr	r3, [r7, #4]
 8001a20:	809a      	strh	r2, [r3, #4]
      this->topic_id |= ((uint16_t) (*(inbuffer + offset + 1))) << (8 * 1);
 8001a22:	687b      	ldr	r3, [r7, #4]
 8001a24:	889b      	ldrh	r3, [r3, #4]
 8001a26:	b21a      	sxth	r2, r3
 8001a28:	69bb      	ldr	r3, [r7, #24]
 8001a2a:	3301      	adds	r3, #1
 8001a2c:	6839      	ldr	r1, [r7, #0]
 8001a2e:	440b      	add	r3, r1
 8001a30:	781b      	ldrb	r3, [r3, #0]
 8001a32:	021b      	lsls	r3, r3, #8
 8001a34:	b21b      	sxth	r3, r3
 8001a36:	4313      	orrs	r3, r2
 8001a38:	b21b      	sxth	r3, r3
 8001a3a:	b29a      	uxth	r2, r3
 8001a3c:	687b      	ldr	r3, [r7, #4]
 8001a3e:	809a      	strh	r2, [r3, #4]
      offset += sizeof(this->topic_id);
 8001a40:	69bb      	ldr	r3, [r7, #24]
 8001a42:	3302      	adds	r3, #2
 8001a44:	61bb      	str	r3, [r7, #24]
      uint32_t length_topic_name;
      arrToVar(length_topic_name, (inbuffer + offset));
 8001a46:	69bb      	ldr	r3, [r7, #24]
 8001a48:	683a      	ldr	r2, [r7, #0]
 8001a4a:	441a      	add	r2, r3
 8001a4c:	f107 0314 	add.w	r3, r7, #20
 8001a50:	4611      	mov	r1, r2
 8001a52:	4618      	mov	r0, r3
 8001a54:	f001 fbc6 	bl	80031e4 <_ZN3ros3Msg8arrToVarImPhEEvRT_T0_>
      offset += 4;
 8001a58:	69bb      	ldr	r3, [r7, #24]
 8001a5a:	3304      	adds	r3, #4
 8001a5c:	61bb      	str	r3, [r7, #24]
      for(unsigned int k= offset; k< offset+length_topic_name; ++k){
 8001a5e:	69bb      	ldr	r3, [r7, #24]
 8001a60:	627b      	str	r3, [r7, #36]	; 0x24
 8001a62:	69ba      	ldr	r2, [r7, #24]
 8001a64:	697b      	ldr	r3, [r7, #20]
 8001a66:	4413      	add	r3, r2
 8001a68:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001a6a:	429a      	cmp	r2, r3
 8001a6c:	d20c      	bcs.n	8001a88 <_ZN14rosserial_msgs9TopicInfo11deserializeEPh+0x82>
          inbuffer[k-1]=inbuffer[k];
 8001a6e:	683a      	ldr	r2, [r7, #0]
 8001a70:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a72:	441a      	add	r2, r3
 8001a74:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a76:	3b01      	subs	r3, #1
 8001a78:	6839      	ldr	r1, [r7, #0]
 8001a7a:	440b      	add	r3, r1
 8001a7c:	7812      	ldrb	r2, [r2, #0]
 8001a7e:	701a      	strb	r2, [r3, #0]
      for(unsigned int k= offset; k< offset+length_topic_name; ++k){
 8001a80:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a82:	3301      	adds	r3, #1
 8001a84:	627b      	str	r3, [r7, #36]	; 0x24
 8001a86:	e7ec      	b.n	8001a62 <_ZN14rosserial_msgs9TopicInfo11deserializeEPh+0x5c>
      }
      inbuffer[offset+length_topic_name-1]=0;
 8001a88:	69ba      	ldr	r2, [r7, #24]
 8001a8a:	697b      	ldr	r3, [r7, #20]
 8001a8c:	4413      	add	r3, r2
 8001a8e:	3b01      	subs	r3, #1
 8001a90:	683a      	ldr	r2, [r7, #0]
 8001a92:	4413      	add	r3, r2
 8001a94:	2200      	movs	r2, #0
 8001a96:	701a      	strb	r2, [r3, #0]
      this->topic_name = (char *)(inbuffer + offset-1);
 8001a98:	69bb      	ldr	r3, [r7, #24]
 8001a9a:	3b01      	subs	r3, #1
 8001a9c:	683a      	ldr	r2, [r7, #0]
 8001a9e:	441a      	add	r2, r3
 8001aa0:	687b      	ldr	r3, [r7, #4]
 8001aa2:	609a      	str	r2, [r3, #8]
      offset += length_topic_name;
 8001aa4:	69ba      	ldr	r2, [r7, #24]
 8001aa6:	697b      	ldr	r3, [r7, #20]
 8001aa8:	4413      	add	r3, r2
 8001aaa:	61bb      	str	r3, [r7, #24]
      uint32_t length_message_type;
      arrToVar(length_message_type, (inbuffer + offset));
 8001aac:	69bb      	ldr	r3, [r7, #24]
 8001aae:	683a      	ldr	r2, [r7, #0]
 8001ab0:	441a      	add	r2, r3
 8001ab2:	f107 0310 	add.w	r3, r7, #16
 8001ab6:	4611      	mov	r1, r2
 8001ab8:	4618      	mov	r0, r3
 8001aba:	f001 fb93 	bl	80031e4 <_ZN3ros3Msg8arrToVarImPhEEvRT_T0_>
      offset += 4;
 8001abe:	69bb      	ldr	r3, [r7, #24]
 8001ac0:	3304      	adds	r3, #4
 8001ac2:	61bb      	str	r3, [r7, #24]
      for(unsigned int k= offset; k< offset+length_message_type; ++k){
 8001ac4:	69bb      	ldr	r3, [r7, #24]
 8001ac6:	623b      	str	r3, [r7, #32]
 8001ac8:	69ba      	ldr	r2, [r7, #24]
 8001aca:	693b      	ldr	r3, [r7, #16]
 8001acc:	4413      	add	r3, r2
 8001ace:	6a3a      	ldr	r2, [r7, #32]
 8001ad0:	429a      	cmp	r2, r3
 8001ad2:	d20c      	bcs.n	8001aee <_ZN14rosserial_msgs9TopicInfo11deserializeEPh+0xe8>
          inbuffer[k-1]=inbuffer[k];
 8001ad4:	683a      	ldr	r2, [r7, #0]
 8001ad6:	6a3b      	ldr	r3, [r7, #32]
 8001ad8:	441a      	add	r2, r3
 8001ada:	6a3b      	ldr	r3, [r7, #32]
 8001adc:	3b01      	subs	r3, #1
 8001ade:	6839      	ldr	r1, [r7, #0]
 8001ae0:	440b      	add	r3, r1
 8001ae2:	7812      	ldrb	r2, [r2, #0]
 8001ae4:	701a      	strb	r2, [r3, #0]
      for(unsigned int k= offset; k< offset+length_message_type; ++k){
 8001ae6:	6a3b      	ldr	r3, [r7, #32]
 8001ae8:	3301      	adds	r3, #1
 8001aea:	623b      	str	r3, [r7, #32]
 8001aec:	e7ec      	b.n	8001ac8 <_ZN14rosserial_msgs9TopicInfo11deserializeEPh+0xc2>
      }
      inbuffer[offset+length_message_type-1]=0;
 8001aee:	69ba      	ldr	r2, [r7, #24]
 8001af0:	693b      	ldr	r3, [r7, #16]
 8001af2:	4413      	add	r3, r2
 8001af4:	3b01      	subs	r3, #1
 8001af6:	683a      	ldr	r2, [r7, #0]
 8001af8:	4413      	add	r3, r2
 8001afa:	2200      	movs	r2, #0
 8001afc:	701a      	strb	r2, [r3, #0]
      this->message_type = (char *)(inbuffer + offset-1);
 8001afe:	69bb      	ldr	r3, [r7, #24]
 8001b00:	3b01      	subs	r3, #1
 8001b02:	683a      	ldr	r2, [r7, #0]
 8001b04:	441a      	add	r2, r3
 8001b06:	687b      	ldr	r3, [r7, #4]
 8001b08:	60da      	str	r2, [r3, #12]
      offset += length_message_type;
 8001b0a:	69ba      	ldr	r2, [r7, #24]
 8001b0c:	693b      	ldr	r3, [r7, #16]
 8001b0e:	4413      	add	r3, r2
 8001b10:	61bb      	str	r3, [r7, #24]
      uint32_t length_md5sum;
      arrToVar(length_md5sum, (inbuffer + offset));
 8001b12:	69bb      	ldr	r3, [r7, #24]
 8001b14:	683a      	ldr	r2, [r7, #0]
 8001b16:	441a      	add	r2, r3
 8001b18:	f107 030c 	add.w	r3, r7, #12
 8001b1c:	4611      	mov	r1, r2
 8001b1e:	4618      	mov	r0, r3
 8001b20:	f001 fb60 	bl	80031e4 <_ZN3ros3Msg8arrToVarImPhEEvRT_T0_>
      offset += 4;
 8001b24:	69bb      	ldr	r3, [r7, #24]
 8001b26:	3304      	adds	r3, #4
 8001b28:	61bb      	str	r3, [r7, #24]
      for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 8001b2a:	69bb      	ldr	r3, [r7, #24]
 8001b2c:	61fb      	str	r3, [r7, #28]
 8001b2e:	69ba      	ldr	r2, [r7, #24]
 8001b30:	68fb      	ldr	r3, [r7, #12]
 8001b32:	4413      	add	r3, r2
 8001b34:	69fa      	ldr	r2, [r7, #28]
 8001b36:	429a      	cmp	r2, r3
 8001b38:	d20c      	bcs.n	8001b54 <_ZN14rosserial_msgs9TopicInfo11deserializeEPh+0x14e>
          inbuffer[k-1]=inbuffer[k];
 8001b3a:	683a      	ldr	r2, [r7, #0]
 8001b3c:	69fb      	ldr	r3, [r7, #28]
 8001b3e:	441a      	add	r2, r3
 8001b40:	69fb      	ldr	r3, [r7, #28]
 8001b42:	3b01      	subs	r3, #1
 8001b44:	6839      	ldr	r1, [r7, #0]
 8001b46:	440b      	add	r3, r1
 8001b48:	7812      	ldrb	r2, [r2, #0]
 8001b4a:	701a      	strb	r2, [r3, #0]
      for(unsigned int k= offset; k< offset+length_md5sum; ++k){
 8001b4c:	69fb      	ldr	r3, [r7, #28]
 8001b4e:	3301      	adds	r3, #1
 8001b50:	61fb      	str	r3, [r7, #28]
 8001b52:	e7ec      	b.n	8001b2e <_ZN14rosserial_msgs9TopicInfo11deserializeEPh+0x128>
      }
      inbuffer[offset+length_md5sum-1]=0;
 8001b54:	69ba      	ldr	r2, [r7, #24]
 8001b56:	68fb      	ldr	r3, [r7, #12]
 8001b58:	4413      	add	r3, r2
 8001b5a:	3b01      	subs	r3, #1
 8001b5c:	683a      	ldr	r2, [r7, #0]
 8001b5e:	4413      	add	r3, r2
 8001b60:	2200      	movs	r2, #0
 8001b62:	701a      	strb	r2, [r3, #0]
      this->md5sum = (char *)(inbuffer + offset-1);
 8001b64:	69bb      	ldr	r3, [r7, #24]
 8001b66:	3b01      	subs	r3, #1
 8001b68:	683a      	ldr	r2, [r7, #0]
 8001b6a:	441a      	add	r2, r3
 8001b6c:	687b      	ldr	r3, [r7, #4]
 8001b6e:	611a      	str	r2, [r3, #16]
      offset += length_md5sum;
 8001b70:	69ba      	ldr	r2, [r7, #24]
 8001b72:	68fb      	ldr	r3, [r7, #12]
 8001b74:	4413      	add	r3, r2
 8001b76:	61bb      	str	r3, [r7, #24]
      union {
        int32_t real;
        uint32_t base;
      } u_buffer_size;
      u_buffer_size.base = 0;
 8001b78:	2300      	movs	r3, #0
 8001b7a:	60bb      	str	r3, [r7, #8]
      u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 8001b7c:	68bb      	ldr	r3, [r7, #8]
 8001b7e:	69ba      	ldr	r2, [r7, #24]
 8001b80:	6839      	ldr	r1, [r7, #0]
 8001b82:	440a      	add	r2, r1
 8001b84:	7812      	ldrb	r2, [r2, #0]
 8001b86:	4313      	orrs	r3, r2
 8001b88:	60bb      	str	r3, [r7, #8]
      u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 8001b8a:	68ba      	ldr	r2, [r7, #8]
 8001b8c:	69bb      	ldr	r3, [r7, #24]
 8001b8e:	3301      	adds	r3, #1
 8001b90:	6839      	ldr	r1, [r7, #0]
 8001b92:	440b      	add	r3, r1
 8001b94:	781b      	ldrb	r3, [r3, #0]
 8001b96:	021b      	lsls	r3, r3, #8
 8001b98:	4313      	orrs	r3, r2
 8001b9a:	60bb      	str	r3, [r7, #8]
      u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 8001b9c:	68ba      	ldr	r2, [r7, #8]
 8001b9e:	69bb      	ldr	r3, [r7, #24]
 8001ba0:	3302      	adds	r3, #2
 8001ba2:	6839      	ldr	r1, [r7, #0]
 8001ba4:	440b      	add	r3, r1
 8001ba6:	781b      	ldrb	r3, [r3, #0]
 8001ba8:	041b      	lsls	r3, r3, #16
 8001baa:	4313      	orrs	r3, r2
 8001bac:	60bb      	str	r3, [r7, #8]
      u_buffer_size.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 8001bae:	68ba      	ldr	r2, [r7, #8]
 8001bb0:	69bb      	ldr	r3, [r7, #24]
 8001bb2:	3303      	adds	r3, #3
 8001bb4:	6839      	ldr	r1, [r7, #0]
 8001bb6:	440b      	add	r3, r1
 8001bb8:	781b      	ldrb	r3, [r3, #0]
 8001bba:	061b      	lsls	r3, r3, #24
 8001bbc:	4313      	orrs	r3, r2
 8001bbe:	60bb      	str	r3, [r7, #8]
      this->buffer_size = u_buffer_size.real;
 8001bc0:	68ba      	ldr	r2, [r7, #8]
 8001bc2:	687b      	ldr	r3, [r7, #4]
 8001bc4:	615a      	str	r2, [r3, #20]
      offset += sizeof(this->buffer_size);
 8001bc6:	69bb      	ldr	r3, [r7, #24]
 8001bc8:	3304      	adds	r3, #4
 8001bca:	61bb      	str	r3, [r7, #24]
     return offset;
 8001bcc:	69bb      	ldr	r3, [r7, #24]
    }
 8001bce:	4618      	mov	r0, r3
 8001bd0:	3728      	adds	r7, #40	; 0x28
 8001bd2:	46bd      	mov	sp, r7
 8001bd4:	bd80      	pop	{r7, pc}
	...

08001bd8 <_ZN14rosserial_msgs9TopicInfo7getTypeEv>:

    const char * getType(){ return "rosserial_msgs/TopicInfo"; };
 8001bd8:	b480      	push	{r7}
 8001bda:	b083      	sub	sp, #12
 8001bdc:	af00      	add	r7, sp, #0
 8001bde:	6078      	str	r0, [r7, #4]
 8001be0:	4b03      	ldr	r3, [pc, #12]	; (8001bf0 <_ZN14rosserial_msgs9TopicInfo7getTypeEv+0x18>)
 8001be2:	4618      	mov	r0, r3
 8001be4:	370c      	adds	r7, #12
 8001be6:	46bd      	mov	sp, r7
 8001be8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bec:	4770      	bx	lr
 8001bee:	bf00      	nop
 8001bf0:	0800ddb8 	.word	0x0800ddb8

08001bf4 <_ZN14rosserial_msgs9TopicInfo6getMD5Ev>:
    const char * getMD5(){ return "0ad51f88fc44892f8c10684077646005"; };
 8001bf4:	b480      	push	{r7}
 8001bf6:	b083      	sub	sp, #12
 8001bf8:	af00      	add	r7, sp, #0
 8001bfa:	6078      	str	r0, [r7, #4]
 8001bfc:	4b03      	ldr	r3, [pc, #12]	; (8001c0c <_ZN14rosserial_msgs9TopicInfo6getMD5Ev+0x18>)
 8001bfe:	4618      	mov	r0, r3
 8001c00:	370c      	adds	r7, #12
 8001c02:	46bd      	mov	sp, r7
 8001c04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c08:	4770      	bx	lr
 8001c0a:	bf00      	nop
 8001c0c:	0800ddd4 	.word	0x0800ddd4

08001c10 <_ZN14rosserial_msgs3LogC1Ev>:
      enum { INFO = 1 };
      enum { WARN = 2 };
      enum { ERROR = 3 };
      enum { FATAL = 4 };

    Log():
 8001c10:	b580      	push	{r7, lr}
 8001c12:	b082      	sub	sp, #8
 8001c14:	af00      	add	r7, sp, #0
 8001c16:	6078      	str	r0, [r7, #4]
      level(0),
      msg("")
 8001c18:	687b      	ldr	r3, [r7, #4]
 8001c1a:	4618      	mov	r0, r3
 8001c1c:	f7ff fd34 	bl	8001688 <_ZN3ros3MsgC1Ev>
 8001c20:	4a06      	ldr	r2, [pc, #24]	; (8001c3c <_ZN14rosserial_msgs3LogC1Ev+0x2c>)
 8001c22:	687b      	ldr	r3, [r7, #4]
 8001c24:	601a      	str	r2, [r3, #0]
 8001c26:	687b      	ldr	r3, [r7, #4]
 8001c28:	2200      	movs	r2, #0
 8001c2a:	711a      	strb	r2, [r3, #4]
 8001c2c:	687b      	ldr	r3, [r7, #4]
 8001c2e:	4a04      	ldr	r2, [pc, #16]	; (8001c40 <_ZN14rosserial_msgs3LogC1Ev+0x30>)
 8001c30:	609a      	str	r2, [r3, #8]
    {
    }
 8001c32:	687b      	ldr	r3, [r7, #4]
 8001c34:	4618      	mov	r0, r3
 8001c36:	3708      	adds	r7, #8
 8001c38:	46bd      	mov	sp, r7
 8001c3a:	bd80      	pop	{r7, pc}
 8001c3c:	0800df94 	.word	0x0800df94
 8001c40:	0800ddb4 	.word	0x0800ddb4

08001c44 <_ZNK14rosserial_msgs3Log9serializeEPh>:

    virtual int serialize(unsigned char *outbuffer) const
 8001c44:	b580      	push	{r7, lr}
 8001c46:	b084      	sub	sp, #16
 8001c48:	af00      	add	r7, sp, #0
 8001c4a:	6078      	str	r0, [r7, #4]
 8001c4c:	6039      	str	r1, [r7, #0]
    {
      int offset = 0;
 8001c4e:	2300      	movs	r3, #0
 8001c50:	60fb      	str	r3, [r7, #12]
      *(outbuffer + offset + 0) = (this->level >> (8 * 0)) & 0xFF;
 8001c52:	68fb      	ldr	r3, [r7, #12]
 8001c54:	683a      	ldr	r2, [r7, #0]
 8001c56:	4413      	add	r3, r2
 8001c58:	687a      	ldr	r2, [r7, #4]
 8001c5a:	7912      	ldrb	r2, [r2, #4]
 8001c5c:	701a      	strb	r2, [r3, #0]
      offset += sizeof(this->level);
 8001c5e:	68fb      	ldr	r3, [r7, #12]
 8001c60:	3301      	adds	r3, #1
 8001c62:	60fb      	str	r3, [r7, #12]
      uint32_t length_msg = strlen(this->msg);
 8001c64:	687b      	ldr	r3, [r7, #4]
 8001c66:	689b      	ldr	r3, [r3, #8]
 8001c68:	4618      	mov	r0, r3
 8001c6a:	f7fe fb51 	bl	8000310 <strlen>
 8001c6e:	60b8      	str	r0, [r7, #8]
      varToArr(outbuffer + offset, length_msg);
 8001c70:	68fb      	ldr	r3, [r7, #12]
 8001c72:	683a      	ldr	r2, [r7, #0]
 8001c74:	4413      	add	r3, r2
 8001c76:	68b9      	ldr	r1, [r7, #8]
 8001c78:	4618      	mov	r0, r3
 8001c7a:	f001 fa95 	bl	80031a8 <_ZN3ros3Msg8varToArrIPhmEEvT_T0_>
      offset += 4;
 8001c7e:	68fb      	ldr	r3, [r7, #12]
 8001c80:	3304      	adds	r3, #4
 8001c82:	60fb      	str	r3, [r7, #12]
      memcpy(outbuffer + offset, this->msg, length_msg);
 8001c84:	68fb      	ldr	r3, [r7, #12]
 8001c86:	683a      	ldr	r2, [r7, #0]
 8001c88:	18d0      	adds	r0, r2, r3
 8001c8a:	687b      	ldr	r3, [r7, #4]
 8001c8c:	689b      	ldr	r3, [r3, #8]
 8001c8e:	68ba      	ldr	r2, [r7, #8]
 8001c90:	4619      	mov	r1, r3
 8001c92:	f00b fed1 	bl	800da38 <memcpy>
      offset += length_msg;
 8001c96:	68fa      	ldr	r2, [r7, #12]
 8001c98:	68bb      	ldr	r3, [r7, #8]
 8001c9a:	4413      	add	r3, r2
 8001c9c:	60fb      	str	r3, [r7, #12]
      return offset;
 8001c9e:	68fb      	ldr	r3, [r7, #12]
    }
 8001ca0:	4618      	mov	r0, r3
 8001ca2:	3710      	adds	r7, #16
 8001ca4:	46bd      	mov	sp, r7
 8001ca6:	bd80      	pop	{r7, pc}

08001ca8 <_ZN14rosserial_msgs3Log11deserializeEPh>:

    virtual int deserialize(unsigned char *inbuffer)
 8001ca8:	b580      	push	{r7, lr}
 8001caa:	b086      	sub	sp, #24
 8001cac:	af00      	add	r7, sp, #0
 8001cae:	6078      	str	r0, [r7, #4]
 8001cb0:	6039      	str	r1, [r7, #0]
    {
      int offset = 0;
 8001cb2:	2300      	movs	r3, #0
 8001cb4:	613b      	str	r3, [r7, #16]
      this->level =  ((uint8_t) (*(inbuffer + offset)));
 8001cb6:	693b      	ldr	r3, [r7, #16]
 8001cb8:	683a      	ldr	r2, [r7, #0]
 8001cba:	4413      	add	r3, r2
 8001cbc:	781a      	ldrb	r2, [r3, #0]
 8001cbe:	687b      	ldr	r3, [r7, #4]
 8001cc0:	711a      	strb	r2, [r3, #4]
      offset += sizeof(this->level);
 8001cc2:	693b      	ldr	r3, [r7, #16]
 8001cc4:	3301      	adds	r3, #1
 8001cc6:	613b      	str	r3, [r7, #16]
      uint32_t length_msg;
      arrToVar(length_msg, (inbuffer + offset));
 8001cc8:	693b      	ldr	r3, [r7, #16]
 8001cca:	683a      	ldr	r2, [r7, #0]
 8001ccc:	441a      	add	r2, r3
 8001cce:	f107 030c 	add.w	r3, r7, #12
 8001cd2:	4611      	mov	r1, r2
 8001cd4:	4618      	mov	r0, r3
 8001cd6:	f001 fa85 	bl	80031e4 <_ZN3ros3Msg8arrToVarImPhEEvRT_T0_>
      offset += 4;
 8001cda:	693b      	ldr	r3, [r7, #16]
 8001cdc:	3304      	adds	r3, #4
 8001cde:	613b      	str	r3, [r7, #16]
      for(unsigned int k= offset; k< offset+length_msg; ++k){
 8001ce0:	693b      	ldr	r3, [r7, #16]
 8001ce2:	617b      	str	r3, [r7, #20]
 8001ce4:	693a      	ldr	r2, [r7, #16]
 8001ce6:	68fb      	ldr	r3, [r7, #12]
 8001ce8:	4413      	add	r3, r2
 8001cea:	697a      	ldr	r2, [r7, #20]
 8001cec:	429a      	cmp	r2, r3
 8001cee:	d20c      	bcs.n	8001d0a <_ZN14rosserial_msgs3Log11deserializeEPh+0x62>
          inbuffer[k-1]=inbuffer[k];
 8001cf0:	683a      	ldr	r2, [r7, #0]
 8001cf2:	697b      	ldr	r3, [r7, #20]
 8001cf4:	441a      	add	r2, r3
 8001cf6:	697b      	ldr	r3, [r7, #20]
 8001cf8:	3b01      	subs	r3, #1
 8001cfa:	6839      	ldr	r1, [r7, #0]
 8001cfc:	440b      	add	r3, r1
 8001cfe:	7812      	ldrb	r2, [r2, #0]
 8001d00:	701a      	strb	r2, [r3, #0]
      for(unsigned int k= offset; k< offset+length_msg; ++k){
 8001d02:	697b      	ldr	r3, [r7, #20]
 8001d04:	3301      	adds	r3, #1
 8001d06:	617b      	str	r3, [r7, #20]
 8001d08:	e7ec      	b.n	8001ce4 <_ZN14rosserial_msgs3Log11deserializeEPh+0x3c>
      }
      inbuffer[offset+length_msg-1]=0;
 8001d0a:	693a      	ldr	r2, [r7, #16]
 8001d0c:	68fb      	ldr	r3, [r7, #12]
 8001d0e:	4413      	add	r3, r2
 8001d10:	3b01      	subs	r3, #1
 8001d12:	683a      	ldr	r2, [r7, #0]
 8001d14:	4413      	add	r3, r2
 8001d16:	2200      	movs	r2, #0
 8001d18:	701a      	strb	r2, [r3, #0]
      this->msg = (char *)(inbuffer + offset-1);
 8001d1a:	693b      	ldr	r3, [r7, #16]
 8001d1c:	3b01      	subs	r3, #1
 8001d1e:	683a      	ldr	r2, [r7, #0]
 8001d20:	441a      	add	r2, r3
 8001d22:	687b      	ldr	r3, [r7, #4]
 8001d24:	609a      	str	r2, [r3, #8]
      offset += length_msg;
 8001d26:	693a      	ldr	r2, [r7, #16]
 8001d28:	68fb      	ldr	r3, [r7, #12]
 8001d2a:	4413      	add	r3, r2
 8001d2c:	613b      	str	r3, [r7, #16]
     return offset;
 8001d2e:	693b      	ldr	r3, [r7, #16]
    }
 8001d30:	4618      	mov	r0, r3
 8001d32:	3718      	adds	r7, #24
 8001d34:	46bd      	mov	sp, r7
 8001d36:	bd80      	pop	{r7, pc}

08001d38 <_ZN14rosserial_msgs3Log7getTypeEv>:

    const char * getType(){ return "rosserial_msgs/Log"; };
 8001d38:	b480      	push	{r7}
 8001d3a:	b083      	sub	sp, #12
 8001d3c:	af00      	add	r7, sp, #0
 8001d3e:	6078      	str	r0, [r7, #4]
 8001d40:	4b03      	ldr	r3, [pc, #12]	; (8001d50 <_ZN14rosserial_msgs3Log7getTypeEv+0x18>)
 8001d42:	4618      	mov	r0, r3
 8001d44:	370c      	adds	r7, #12
 8001d46:	46bd      	mov	sp, r7
 8001d48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d4c:	4770      	bx	lr
 8001d4e:	bf00      	nop
 8001d50:	0800ddf8 	.word	0x0800ddf8

08001d54 <_ZN14rosserial_msgs3Log6getMD5Ev>:
    const char * getMD5(){ return "11abd731c25933261cd6183bd12d6295"; };
 8001d54:	b480      	push	{r7}
 8001d56:	b083      	sub	sp, #12
 8001d58:	af00      	add	r7, sp, #0
 8001d5a:	6078      	str	r0, [r7, #4]
 8001d5c:	4b03      	ldr	r3, [pc, #12]	; (8001d6c <_ZN14rosserial_msgs3Log6getMD5Ev+0x18>)
 8001d5e:	4618      	mov	r0, r3
 8001d60:	370c      	adds	r7, #12
 8001d62:	46bd      	mov	sp, r7
 8001d64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d68:	4770      	bx	lr
 8001d6a:	bf00      	nop
 8001d6c:	0800de0c 	.word	0x0800de0c

08001d70 <_ZN14rosserial_msgs20RequestParamResponseC1Ev>:
      uint32_t strings_length;
      typedef char* _strings_type;
      _strings_type st_strings;
      _strings_type * strings;

    RequestParamResponse():
 8001d70:	b580      	push	{r7, lr}
 8001d72:	b082      	sub	sp, #8
 8001d74:	af00      	add	r7, sp, #0
 8001d76:	6078      	str	r0, [r7, #4]
      ints_length(0), ints(NULL),
      floats_length(0), floats(NULL),
      strings_length(0), strings(NULL)
 8001d78:	687b      	ldr	r3, [r7, #4]
 8001d7a:	4618      	mov	r0, r3
 8001d7c:	f7ff fc84 	bl	8001688 <_ZN3ros3MsgC1Ev>
 8001d80:	4a0c      	ldr	r2, [pc, #48]	; (8001db4 <_ZN14rosserial_msgs20RequestParamResponseC1Ev+0x44>)
 8001d82:	687b      	ldr	r3, [r7, #4]
 8001d84:	601a      	str	r2, [r3, #0]
 8001d86:	687b      	ldr	r3, [r7, #4]
 8001d88:	2200      	movs	r2, #0
 8001d8a:	605a      	str	r2, [r3, #4]
 8001d8c:	687b      	ldr	r3, [r7, #4]
 8001d8e:	2200      	movs	r2, #0
 8001d90:	60da      	str	r2, [r3, #12]
 8001d92:	687b      	ldr	r3, [r7, #4]
 8001d94:	2200      	movs	r2, #0
 8001d96:	611a      	str	r2, [r3, #16]
 8001d98:	687b      	ldr	r3, [r7, #4]
 8001d9a:	2200      	movs	r2, #0
 8001d9c:	619a      	str	r2, [r3, #24]
 8001d9e:	687b      	ldr	r3, [r7, #4]
 8001da0:	2200      	movs	r2, #0
 8001da2:	61da      	str	r2, [r3, #28]
 8001da4:	687b      	ldr	r3, [r7, #4]
 8001da6:	2200      	movs	r2, #0
 8001da8:	625a      	str	r2, [r3, #36]	; 0x24
    {
    }
 8001daa:	687b      	ldr	r3, [r7, #4]
 8001dac:	4618      	mov	r0, r3
 8001dae:	3708      	adds	r7, #8
 8001db0:	46bd      	mov	sp, r7
 8001db2:	bd80      	pop	{r7, pc}
 8001db4:	0800df7c 	.word	0x0800df7c

08001db8 <_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh>:

    virtual int serialize(unsigned char *outbuffer) const
 8001db8:	b580      	push	{r7, lr}
 8001dba:	b08a      	sub	sp, #40	; 0x28
 8001dbc:	af00      	add	r7, sp, #0
 8001dbe:	6078      	str	r0, [r7, #4]
 8001dc0:	6039      	str	r1, [r7, #0]
    {
      int offset = 0;
 8001dc2:	2300      	movs	r3, #0
 8001dc4:	627b      	str	r3, [r7, #36]	; 0x24
      *(outbuffer + offset + 0) = (this->ints_length >> (8 * 0)) & 0xFF;
 8001dc6:	687b      	ldr	r3, [r7, #4]
 8001dc8:	6859      	ldr	r1, [r3, #4]
 8001dca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001dcc:	683a      	ldr	r2, [r7, #0]
 8001dce:	4413      	add	r3, r2
 8001dd0:	b2ca      	uxtb	r2, r1
 8001dd2:	701a      	strb	r2, [r3, #0]
      *(outbuffer + offset + 1) = (this->ints_length >> (8 * 1)) & 0xFF;
 8001dd4:	687b      	ldr	r3, [r7, #4]
 8001dd6:	685b      	ldr	r3, [r3, #4]
 8001dd8:	0a19      	lsrs	r1, r3, #8
 8001dda:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001ddc:	3301      	adds	r3, #1
 8001dde:	683a      	ldr	r2, [r7, #0]
 8001de0:	4413      	add	r3, r2
 8001de2:	b2ca      	uxtb	r2, r1
 8001de4:	701a      	strb	r2, [r3, #0]
      *(outbuffer + offset + 2) = (this->ints_length >> (8 * 2)) & 0xFF;
 8001de6:	687b      	ldr	r3, [r7, #4]
 8001de8:	685b      	ldr	r3, [r3, #4]
 8001dea:	0c19      	lsrs	r1, r3, #16
 8001dec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001dee:	3302      	adds	r3, #2
 8001df0:	683a      	ldr	r2, [r7, #0]
 8001df2:	4413      	add	r3, r2
 8001df4:	b2ca      	uxtb	r2, r1
 8001df6:	701a      	strb	r2, [r3, #0]
      *(outbuffer + offset + 3) = (this->ints_length >> (8 * 3)) & 0xFF;
 8001df8:	687b      	ldr	r3, [r7, #4]
 8001dfa:	685b      	ldr	r3, [r3, #4]
 8001dfc:	0e19      	lsrs	r1, r3, #24
 8001dfe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001e00:	3303      	adds	r3, #3
 8001e02:	683a      	ldr	r2, [r7, #0]
 8001e04:	4413      	add	r3, r2
 8001e06:	b2ca      	uxtb	r2, r1
 8001e08:	701a      	strb	r2, [r3, #0]
      offset += sizeof(this->ints_length);
 8001e0a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001e0c:	3304      	adds	r3, #4
 8001e0e:	627b      	str	r3, [r7, #36]	; 0x24
      for( uint32_t i = 0; i < ints_length; i++){
 8001e10:	2300      	movs	r3, #0
 8001e12:	623b      	str	r3, [r7, #32]
 8001e14:	687b      	ldr	r3, [r7, #4]
 8001e16:	685b      	ldr	r3, [r3, #4]
 8001e18:	6a3a      	ldr	r2, [r7, #32]
 8001e1a:	429a      	cmp	r2, r3
 8001e1c:	d22b      	bcs.n	8001e76 <_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh+0xbe>
      union {
        int32_t real;
        uint32_t base;
      } u_intsi;
      u_intsi.real = this->ints[i];
 8001e1e:	687b      	ldr	r3, [r7, #4]
 8001e20:	68da      	ldr	r2, [r3, #12]
 8001e22:	6a3b      	ldr	r3, [r7, #32]
 8001e24:	009b      	lsls	r3, r3, #2
 8001e26:	4413      	add	r3, r2
 8001e28:	681b      	ldr	r3, [r3, #0]
 8001e2a:	613b      	str	r3, [r7, #16]
      *(outbuffer + offset + 0) = (u_intsi.base >> (8 * 0)) & 0xFF;
 8001e2c:	6939      	ldr	r1, [r7, #16]
 8001e2e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001e30:	683a      	ldr	r2, [r7, #0]
 8001e32:	4413      	add	r3, r2
 8001e34:	b2ca      	uxtb	r2, r1
 8001e36:	701a      	strb	r2, [r3, #0]
      *(outbuffer + offset + 1) = (u_intsi.base >> (8 * 1)) & 0xFF;
 8001e38:	693b      	ldr	r3, [r7, #16]
 8001e3a:	0a19      	lsrs	r1, r3, #8
 8001e3c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001e3e:	3301      	adds	r3, #1
 8001e40:	683a      	ldr	r2, [r7, #0]
 8001e42:	4413      	add	r3, r2
 8001e44:	b2ca      	uxtb	r2, r1
 8001e46:	701a      	strb	r2, [r3, #0]
      *(outbuffer + offset + 2) = (u_intsi.base >> (8 * 2)) & 0xFF;
 8001e48:	693b      	ldr	r3, [r7, #16]
 8001e4a:	0c19      	lsrs	r1, r3, #16
 8001e4c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001e4e:	3302      	adds	r3, #2
 8001e50:	683a      	ldr	r2, [r7, #0]
 8001e52:	4413      	add	r3, r2
 8001e54:	b2ca      	uxtb	r2, r1
 8001e56:	701a      	strb	r2, [r3, #0]
      *(outbuffer + offset + 3) = (u_intsi.base >> (8 * 3)) & 0xFF;
 8001e58:	693b      	ldr	r3, [r7, #16]
 8001e5a:	0e19      	lsrs	r1, r3, #24
 8001e5c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001e5e:	3303      	adds	r3, #3
 8001e60:	683a      	ldr	r2, [r7, #0]
 8001e62:	4413      	add	r3, r2
 8001e64:	b2ca      	uxtb	r2, r1
 8001e66:	701a      	strb	r2, [r3, #0]
      offset += sizeof(this->ints[i]);
 8001e68:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001e6a:	3304      	adds	r3, #4
 8001e6c:	627b      	str	r3, [r7, #36]	; 0x24
      for( uint32_t i = 0; i < ints_length; i++){
 8001e6e:	6a3b      	ldr	r3, [r7, #32]
 8001e70:	3301      	adds	r3, #1
 8001e72:	623b      	str	r3, [r7, #32]
 8001e74:	e7ce      	b.n	8001e14 <_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh+0x5c>
      }
      *(outbuffer + offset + 0) = (this->floats_length >> (8 * 0)) & 0xFF;
 8001e76:	687b      	ldr	r3, [r7, #4]
 8001e78:	6919      	ldr	r1, [r3, #16]
 8001e7a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001e7c:	683a      	ldr	r2, [r7, #0]
 8001e7e:	4413      	add	r3, r2
 8001e80:	b2ca      	uxtb	r2, r1
 8001e82:	701a      	strb	r2, [r3, #0]
      *(outbuffer + offset + 1) = (this->floats_length >> (8 * 1)) & 0xFF;
 8001e84:	687b      	ldr	r3, [r7, #4]
 8001e86:	691b      	ldr	r3, [r3, #16]
 8001e88:	0a19      	lsrs	r1, r3, #8
 8001e8a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001e8c:	3301      	adds	r3, #1
 8001e8e:	683a      	ldr	r2, [r7, #0]
 8001e90:	4413      	add	r3, r2
 8001e92:	b2ca      	uxtb	r2, r1
 8001e94:	701a      	strb	r2, [r3, #0]
      *(outbuffer + offset + 2) = (this->floats_length >> (8 * 2)) & 0xFF;
 8001e96:	687b      	ldr	r3, [r7, #4]
 8001e98:	691b      	ldr	r3, [r3, #16]
 8001e9a:	0c19      	lsrs	r1, r3, #16
 8001e9c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001e9e:	3302      	adds	r3, #2
 8001ea0:	683a      	ldr	r2, [r7, #0]
 8001ea2:	4413      	add	r3, r2
 8001ea4:	b2ca      	uxtb	r2, r1
 8001ea6:	701a      	strb	r2, [r3, #0]
      *(outbuffer + offset + 3) = (this->floats_length >> (8 * 3)) & 0xFF;
 8001ea8:	687b      	ldr	r3, [r7, #4]
 8001eaa:	691b      	ldr	r3, [r3, #16]
 8001eac:	0e19      	lsrs	r1, r3, #24
 8001eae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001eb0:	3303      	adds	r3, #3
 8001eb2:	683a      	ldr	r2, [r7, #0]
 8001eb4:	4413      	add	r3, r2
 8001eb6:	b2ca      	uxtb	r2, r1
 8001eb8:	701a      	strb	r2, [r3, #0]
      offset += sizeof(this->floats_length);
 8001eba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001ebc:	3304      	adds	r3, #4
 8001ebe:	627b      	str	r3, [r7, #36]	; 0x24
      for( uint32_t i = 0; i < floats_length; i++){
 8001ec0:	2300      	movs	r3, #0
 8001ec2:	61fb      	str	r3, [r7, #28]
 8001ec4:	687b      	ldr	r3, [r7, #4]
 8001ec6:	691b      	ldr	r3, [r3, #16]
 8001ec8:	69fa      	ldr	r2, [r7, #28]
 8001eca:	429a      	cmp	r2, r3
 8001ecc:	d22b      	bcs.n	8001f26 <_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh+0x16e>
      union {
        float real;
        uint32_t base;
      } u_floatsi;
      u_floatsi.real = this->floats[i];
 8001ece:	687b      	ldr	r3, [r7, #4]
 8001ed0:	699a      	ldr	r2, [r3, #24]
 8001ed2:	69fb      	ldr	r3, [r7, #28]
 8001ed4:	009b      	lsls	r3, r3, #2
 8001ed6:	4413      	add	r3, r2
 8001ed8:	681b      	ldr	r3, [r3, #0]
 8001eda:	60fb      	str	r3, [r7, #12]
      *(outbuffer + offset + 0) = (u_floatsi.base >> (8 * 0)) & 0xFF;
 8001edc:	68f9      	ldr	r1, [r7, #12]
 8001ede:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001ee0:	683a      	ldr	r2, [r7, #0]
 8001ee2:	4413      	add	r3, r2
 8001ee4:	b2ca      	uxtb	r2, r1
 8001ee6:	701a      	strb	r2, [r3, #0]
      *(outbuffer + offset + 1) = (u_floatsi.base >> (8 * 1)) & 0xFF;
 8001ee8:	68fb      	ldr	r3, [r7, #12]
 8001eea:	0a19      	lsrs	r1, r3, #8
 8001eec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001eee:	3301      	adds	r3, #1
 8001ef0:	683a      	ldr	r2, [r7, #0]
 8001ef2:	4413      	add	r3, r2
 8001ef4:	b2ca      	uxtb	r2, r1
 8001ef6:	701a      	strb	r2, [r3, #0]
      *(outbuffer + offset + 2) = (u_floatsi.base >> (8 * 2)) & 0xFF;
 8001ef8:	68fb      	ldr	r3, [r7, #12]
 8001efa:	0c19      	lsrs	r1, r3, #16
 8001efc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001efe:	3302      	adds	r3, #2
 8001f00:	683a      	ldr	r2, [r7, #0]
 8001f02:	4413      	add	r3, r2
 8001f04:	b2ca      	uxtb	r2, r1
 8001f06:	701a      	strb	r2, [r3, #0]
      *(outbuffer + offset + 3) = (u_floatsi.base >> (8 * 3)) & 0xFF;
 8001f08:	68fb      	ldr	r3, [r7, #12]
 8001f0a:	0e19      	lsrs	r1, r3, #24
 8001f0c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001f0e:	3303      	adds	r3, #3
 8001f10:	683a      	ldr	r2, [r7, #0]
 8001f12:	4413      	add	r3, r2
 8001f14:	b2ca      	uxtb	r2, r1
 8001f16:	701a      	strb	r2, [r3, #0]
      offset += sizeof(this->floats[i]);
 8001f18:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001f1a:	3304      	adds	r3, #4
 8001f1c:	627b      	str	r3, [r7, #36]	; 0x24
      for( uint32_t i = 0; i < floats_length; i++){
 8001f1e:	69fb      	ldr	r3, [r7, #28]
 8001f20:	3301      	adds	r3, #1
 8001f22:	61fb      	str	r3, [r7, #28]
 8001f24:	e7ce      	b.n	8001ec4 <_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh+0x10c>
      }
      *(outbuffer + offset + 0) = (this->strings_length >> (8 * 0)) & 0xFF;
 8001f26:	687b      	ldr	r3, [r7, #4]
 8001f28:	69d9      	ldr	r1, [r3, #28]
 8001f2a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001f2c:	683a      	ldr	r2, [r7, #0]
 8001f2e:	4413      	add	r3, r2
 8001f30:	b2ca      	uxtb	r2, r1
 8001f32:	701a      	strb	r2, [r3, #0]
      *(outbuffer + offset + 1) = (this->strings_length >> (8 * 1)) & 0xFF;
 8001f34:	687b      	ldr	r3, [r7, #4]
 8001f36:	69db      	ldr	r3, [r3, #28]
 8001f38:	0a19      	lsrs	r1, r3, #8
 8001f3a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001f3c:	3301      	adds	r3, #1
 8001f3e:	683a      	ldr	r2, [r7, #0]
 8001f40:	4413      	add	r3, r2
 8001f42:	b2ca      	uxtb	r2, r1
 8001f44:	701a      	strb	r2, [r3, #0]
      *(outbuffer + offset + 2) = (this->strings_length >> (8 * 2)) & 0xFF;
 8001f46:	687b      	ldr	r3, [r7, #4]
 8001f48:	69db      	ldr	r3, [r3, #28]
 8001f4a:	0c19      	lsrs	r1, r3, #16
 8001f4c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001f4e:	3302      	adds	r3, #2
 8001f50:	683a      	ldr	r2, [r7, #0]
 8001f52:	4413      	add	r3, r2
 8001f54:	b2ca      	uxtb	r2, r1
 8001f56:	701a      	strb	r2, [r3, #0]
      *(outbuffer + offset + 3) = (this->strings_length >> (8 * 3)) & 0xFF;
 8001f58:	687b      	ldr	r3, [r7, #4]
 8001f5a:	69db      	ldr	r3, [r3, #28]
 8001f5c:	0e19      	lsrs	r1, r3, #24
 8001f5e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001f60:	3303      	adds	r3, #3
 8001f62:	683a      	ldr	r2, [r7, #0]
 8001f64:	4413      	add	r3, r2
 8001f66:	b2ca      	uxtb	r2, r1
 8001f68:	701a      	strb	r2, [r3, #0]
      offset += sizeof(this->strings_length);
 8001f6a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001f6c:	3304      	adds	r3, #4
 8001f6e:	627b      	str	r3, [r7, #36]	; 0x24
      for( uint32_t i = 0; i < strings_length; i++){
 8001f70:	2300      	movs	r3, #0
 8001f72:	61bb      	str	r3, [r7, #24]
 8001f74:	687b      	ldr	r3, [r7, #4]
 8001f76:	69db      	ldr	r3, [r3, #28]
 8001f78:	69ba      	ldr	r2, [r7, #24]
 8001f7a:	429a      	cmp	r2, r3
 8001f7c:	d228      	bcs.n	8001fd0 <_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh+0x218>
      uint32_t length_stringsi = strlen(this->strings[i]);
 8001f7e:	687b      	ldr	r3, [r7, #4]
 8001f80:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8001f82:	69bb      	ldr	r3, [r7, #24]
 8001f84:	009b      	lsls	r3, r3, #2
 8001f86:	4413      	add	r3, r2
 8001f88:	681b      	ldr	r3, [r3, #0]
 8001f8a:	4618      	mov	r0, r3
 8001f8c:	f7fe f9c0 	bl	8000310 <strlen>
 8001f90:	6178      	str	r0, [r7, #20]
      varToArr(outbuffer + offset, length_stringsi);
 8001f92:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001f94:	683a      	ldr	r2, [r7, #0]
 8001f96:	4413      	add	r3, r2
 8001f98:	6979      	ldr	r1, [r7, #20]
 8001f9a:	4618      	mov	r0, r3
 8001f9c:	f001 f904 	bl	80031a8 <_ZN3ros3Msg8varToArrIPhmEEvT_T0_>
      offset += 4;
 8001fa0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001fa2:	3304      	adds	r3, #4
 8001fa4:	627b      	str	r3, [r7, #36]	; 0x24
      memcpy(outbuffer + offset, this->strings[i], length_stringsi);
 8001fa6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001fa8:	683a      	ldr	r2, [r7, #0]
 8001faa:	18d0      	adds	r0, r2, r3
 8001fac:	687b      	ldr	r3, [r7, #4]
 8001fae:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8001fb0:	69bb      	ldr	r3, [r7, #24]
 8001fb2:	009b      	lsls	r3, r3, #2
 8001fb4:	4413      	add	r3, r2
 8001fb6:	681b      	ldr	r3, [r3, #0]
 8001fb8:	697a      	ldr	r2, [r7, #20]
 8001fba:	4619      	mov	r1, r3
 8001fbc:	f00b fd3c 	bl	800da38 <memcpy>
      offset += length_stringsi;
 8001fc0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8001fc2:	697b      	ldr	r3, [r7, #20]
 8001fc4:	4413      	add	r3, r2
 8001fc6:	627b      	str	r3, [r7, #36]	; 0x24
      for( uint32_t i = 0; i < strings_length; i++){
 8001fc8:	69bb      	ldr	r3, [r7, #24]
 8001fca:	3301      	adds	r3, #1
 8001fcc:	61bb      	str	r3, [r7, #24]
 8001fce:	e7d1      	b.n	8001f74 <_ZNK14rosserial_msgs20RequestParamResponse9serializeEPh+0x1bc>
      }
      return offset;
 8001fd0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    }
 8001fd2:	4618      	mov	r0, r3
 8001fd4:	3728      	adds	r7, #40	; 0x28
 8001fd6:	46bd      	mov	sp, r7
 8001fd8:	bd80      	pop	{r7, pc}

08001fda <_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh>:

    virtual int deserialize(unsigned char *inbuffer)
 8001fda:	b580      	push	{r7, lr}
 8001fdc:	b08e      	sub	sp, #56	; 0x38
 8001fde:	af00      	add	r7, sp, #0
 8001fe0:	6078      	str	r0, [r7, #4]
 8001fe2:	6039      	str	r1, [r7, #0]
    {
      int offset = 0;
 8001fe4:	2300      	movs	r3, #0
 8001fe6:	637b      	str	r3, [r7, #52]	; 0x34
      uint32_t ints_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 8001fe8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001fea:	683a      	ldr	r2, [r7, #0]
 8001fec:	4413      	add	r3, r2
 8001fee:	781b      	ldrb	r3, [r3, #0]
 8001ff0:	623b      	str	r3, [r7, #32]
      ints_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 8001ff2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8001ff4:	3301      	adds	r3, #1
 8001ff6:	683a      	ldr	r2, [r7, #0]
 8001ff8:	4413      	add	r3, r2
 8001ffa:	781b      	ldrb	r3, [r3, #0]
 8001ffc:	021b      	lsls	r3, r3, #8
 8001ffe:	6a3a      	ldr	r2, [r7, #32]
 8002000:	4313      	orrs	r3, r2
 8002002:	623b      	str	r3, [r7, #32]
      ints_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 8002004:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002006:	3302      	adds	r3, #2
 8002008:	683a      	ldr	r2, [r7, #0]
 800200a:	4413      	add	r3, r2
 800200c:	781b      	ldrb	r3, [r3, #0]
 800200e:	041b      	lsls	r3, r3, #16
 8002010:	6a3a      	ldr	r2, [r7, #32]
 8002012:	4313      	orrs	r3, r2
 8002014:	623b      	str	r3, [r7, #32]
      ints_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 8002016:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002018:	3303      	adds	r3, #3
 800201a:	683a      	ldr	r2, [r7, #0]
 800201c:	4413      	add	r3, r2
 800201e:	781b      	ldrb	r3, [r3, #0]
 8002020:	061b      	lsls	r3, r3, #24
 8002022:	6a3a      	ldr	r2, [r7, #32]
 8002024:	4313      	orrs	r3, r2
 8002026:	623b      	str	r3, [r7, #32]
      offset += sizeof(this->ints_length);
 8002028:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800202a:	3304      	adds	r3, #4
 800202c:	637b      	str	r3, [r7, #52]	; 0x34
      if(ints_lengthT > ints_length)
 800202e:	687b      	ldr	r3, [r7, #4]
 8002030:	685b      	ldr	r3, [r3, #4]
 8002032:	6a3a      	ldr	r2, [r7, #32]
 8002034:	429a      	cmp	r2, r3
 8002036:	d90a      	bls.n	800204e <_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh+0x74>
        this->ints = (int32_t*)realloc(this->ints, ints_lengthT * sizeof(int32_t));
 8002038:	687b      	ldr	r3, [r7, #4]
 800203a:	68da      	ldr	r2, [r3, #12]
 800203c:	6a3b      	ldr	r3, [r7, #32]
 800203e:	009b      	lsls	r3, r3, #2
 8002040:	4619      	mov	r1, r3
 8002042:	4610      	mov	r0, r2
 8002044:	f00b fd0e 	bl	800da64 <realloc>
 8002048:	4602      	mov	r2, r0
 800204a:	687b      	ldr	r3, [r7, #4]
 800204c:	60da      	str	r2, [r3, #12]
      ints_length = ints_lengthT;
 800204e:	687b      	ldr	r3, [r7, #4]
 8002050:	6a3a      	ldr	r2, [r7, #32]
 8002052:	605a      	str	r2, [r3, #4]
      for( uint32_t i = 0; i < ints_length; i++){
 8002054:	2300      	movs	r3, #0
 8002056:	633b      	str	r3, [r7, #48]	; 0x30
 8002058:	687b      	ldr	r3, [r7, #4]
 800205a:	685b      	ldr	r3, [r3, #4]
 800205c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800205e:	429a      	cmp	r2, r3
 8002060:	d236      	bcs.n	80020d0 <_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh+0xf6>
      union {
        int32_t real;
        uint32_t base;
      } u_st_ints;
      u_st_ints.base = 0;
 8002062:	2300      	movs	r3, #0
 8002064:	617b      	str	r3, [r7, #20]
      u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 8002066:	697b      	ldr	r3, [r7, #20]
 8002068:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800206a:	6839      	ldr	r1, [r7, #0]
 800206c:	440a      	add	r2, r1
 800206e:	7812      	ldrb	r2, [r2, #0]
 8002070:	4313      	orrs	r3, r2
 8002072:	617b      	str	r3, [r7, #20]
      u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 8002074:	697a      	ldr	r2, [r7, #20]
 8002076:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002078:	3301      	adds	r3, #1
 800207a:	6839      	ldr	r1, [r7, #0]
 800207c:	440b      	add	r3, r1
 800207e:	781b      	ldrb	r3, [r3, #0]
 8002080:	021b      	lsls	r3, r3, #8
 8002082:	4313      	orrs	r3, r2
 8002084:	617b      	str	r3, [r7, #20]
      u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 8002086:	697a      	ldr	r2, [r7, #20]
 8002088:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800208a:	3302      	adds	r3, #2
 800208c:	6839      	ldr	r1, [r7, #0]
 800208e:	440b      	add	r3, r1
 8002090:	781b      	ldrb	r3, [r3, #0]
 8002092:	041b      	lsls	r3, r3, #16
 8002094:	4313      	orrs	r3, r2
 8002096:	617b      	str	r3, [r7, #20]
      u_st_ints.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 8002098:	697a      	ldr	r2, [r7, #20]
 800209a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800209c:	3303      	adds	r3, #3
 800209e:	6839      	ldr	r1, [r7, #0]
 80020a0:	440b      	add	r3, r1
 80020a2:	781b      	ldrb	r3, [r3, #0]
 80020a4:	061b      	lsls	r3, r3, #24
 80020a6:	4313      	orrs	r3, r2
 80020a8:	617b      	str	r3, [r7, #20]
      this->st_ints = u_st_ints.real;
 80020aa:	697a      	ldr	r2, [r7, #20]
 80020ac:	687b      	ldr	r3, [r7, #4]
 80020ae:	609a      	str	r2, [r3, #8]
      offset += sizeof(this->st_ints);
 80020b0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80020b2:	3304      	adds	r3, #4
 80020b4:	637b      	str	r3, [r7, #52]	; 0x34
        memcpy( &(this->ints[i]), &(this->st_ints), sizeof(int32_t));
 80020b6:	687b      	ldr	r3, [r7, #4]
 80020b8:	68da      	ldr	r2, [r3, #12]
 80020ba:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80020bc:	009b      	lsls	r3, r3, #2
 80020be:	4413      	add	r3, r2
 80020c0:	687a      	ldr	r2, [r7, #4]
 80020c2:	3208      	adds	r2, #8
 80020c4:	6812      	ldr	r2, [r2, #0]
 80020c6:	601a      	str	r2, [r3, #0]
      for( uint32_t i = 0; i < ints_length; i++){
 80020c8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80020ca:	3301      	adds	r3, #1
 80020cc:	633b      	str	r3, [r7, #48]	; 0x30
 80020ce:	e7c3      	b.n	8002058 <_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh+0x7e>
      }
      uint32_t floats_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 80020d0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80020d2:	683a      	ldr	r2, [r7, #0]
 80020d4:	4413      	add	r3, r2
 80020d6:	781b      	ldrb	r3, [r3, #0]
 80020d8:	61fb      	str	r3, [r7, #28]
      floats_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 80020da:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80020dc:	3301      	adds	r3, #1
 80020de:	683a      	ldr	r2, [r7, #0]
 80020e0:	4413      	add	r3, r2
 80020e2:	781b      	ldrb	r3, [r3, #0]
 80020e4:	021b      	lsls	r3, r3, #8
 80020e6:	69fa      	ldr	r2, [r7, #28]
 80020e8:	4313      	orrs	r3, r2
 80020ea:	61fb      	str	r3, [r7, #28]
      floats_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 80020ec:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80020ee:	3302      	adds	r3, #2
 80020f0:	683a      	ldr	r2, [r7, #0]
 80020f2:	4413      	add	r3, r2
 80020f4:	781b      	ldrb	r3, [r3, #0]
 80020f6:	041b      	lsls	r3, r3, #16
 80020f8:	69fa      	ldr	r2, [r7, #28]
 80020fa:	4313      	orrs	r3, r2
 80020fc:	61fb      	str	r3, [r7, #28]
      floats_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 80020fe:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002100:	3303      	adds	r3, #3
 8002102:	683a      	ldr	r2, [r7, #0]
 8002104:	4413      	add	r3, r2
 8002106:	781b      	ldrb	r3, [r3, #0]
 8002108:	061b      	lsls	r3, r3, #24
 800210a:	69fa      	ldr	r2, [r7, #28]
 800210c:	4313      	orrs	r3, r2
 800210e:	61fb      	str	r3, [r7, #28]
      offset += sizeof(this->floats_length);
 8002110:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002112:	3304      	adds	r3, #4
 8002114:	637b      	str	r3, [r7, #52]	; 0x34
      if(floats_lengthT > floats_length)
 8002116:	687b      	ldr	r3, [r7, #4]
 8002118:	691b      	ldr	r3, [r3, #16]
 800211a:	69fa      	ldr	r2, [r7, #28]
 800211c:	429a      	cmp	r2, r3
 800211e:	d90a      	bls.n	8002136 <_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh+0x15c>
        this->floats = (float*)realloc(this->floats, floats_lengthT * sizeof(float));
 8002120:	687b      	ldr	r3, [r7, #4]
 8002122:	699a      	ldr	r2, [r3, #24]
 8002124:	69fb      	ldr	r3, [r7, #28]
 8002126:	009b      	lsls	r3, r3, #2
 8002128:	4619      	mov	r1, r3
 800212a:	4610      	mov	r0, r2
 800212c:	f00b fc9a 	bl	800da64 <realloc>
 8002130:	4602      	mov	r2, r0
 8002132:	687b      	ldr	r3, [r7, #4]
 8002134:	619a      	str	r2, [r3, #24]
      floats_length = floats_lengthT;
 8002136:	687b      	ldr	r3, [r7, #4]
 8002138:	69fa      	ldr	r2, [r7, #28]
 800213a:	611a      	str	r2, [r3, #16]
      for( uint32_t i = 0; i < floats_length; i++){
 800213c:	2300      	movs	r3, #0
 800213e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002140:	687b      	ldr	r3, [r7, #4]
 8002142:	691b      	ldr	r3, [r3, #16]
 8002144:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8002146:	429a      	cmp	r2, r3
 8002148:	d236      	bcs.n	80021b8 <_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh+0x1de>
      union {
        float real;
        uint32_t base;
      } u_st_floats;
      u_st_floats.base = 0;
 800214a:	2300      	movs	r3, #0
 800214c:	613b      	str	r3, [r7, #16]
      u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 0))) << (8 * 0);
 800214e:	693b      	ldr	r3, [r7, #16]
 8002150:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8002152:	6839      	ldr	r1, [r7, #0]
 8002154:	440a      	add	r2, r1
 8002156:	7812      	ldrb	r2, [r2, #0]
 8002158:	4313      	orrs	r3, r2
 800215a:	613b      	str	r3, [r7, #16]
      u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1);
 800215c:	693a      	ldr	r2, [r7, #16]
 800215e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002160:	3301      	adds	r3, #1
 8002162:	6839      	ldr	r1, [r7, #0]
 8002164:	440b      	add	r3, r1
 8002166:	781b      	ldrb	r3, [r3, #0]
 8002168:	021b      	lsls	r3, r3, #8
 800216a:	4313      	orrs	r3, r2
 800216c:	613b      	str	r3, [r7, #16]
      u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2);
 800216e:	693a      	ldr	r2, [r7, #16]
 8002170:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002172:	3302      	adds	r3, #2
 8002174:	6839      	ldr	r1, [r7, #0]
 8002176:	440b      	add	r3, r1
 8002178:	781b      	ldrb	r3, [r3, #0]
 800217a:	041b      	lsls	r3, r3, #16
 800217c:	4313      	orrs	r3, r2
 800217e:	613b      	str	r3, [r7, #16]
      u_st_floats.base |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3);
 8002180:	693a      	ldr	r2, [r7, #16]
 8002182:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002184:	3303      	adds	r3, #3
 8002186:	6839      	ldr	r1, [r7, #0]
 8002188:	440b      	add	r3, r1
 800218a:	781b      	ldrb	r3, [r3, #0]
 800218c:	061b      	lsls	r3, r3, #24
 800218e:	4313      	orrs	r3, r2
 8002190:	613b      	str	r3, [r7, #16]
      this->st_floats = u_st_floats.real;
 8002192:	693a      	ldr	r2, [r7, #16]
 8002194:	687b      	ldr	r3, [r7, #4]
 8002196:	615a      	str	r2, [r3, #20]
      offset += sizeof(this->st_floats);
 8002198:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800219a:	3304      	adds	r3, #4
 800219c:	637b      	str	r3, [r7, #52]	; 0x34
        memcpy( &(this->floats[i]), &(this->st_floats), sizeof(float));
 800219e:	687b      	ldr	r3, [r7, #4]
 80021a0:	699a      	ldr	r2, [r3, #24]
 80021a2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80021a4:	009b      	lsls	r3, r3, #2
 80021a6:	4413      	add	r3, r2
 80021a8:	687a      	ldr	r2, [r7, #4]
 80021aa:	3214      	adds	r2, #20
 80021ac:	6812      	ldr	r2, [r2, #0]
 80021ae:	601a      	str	r2, [r3, #0]
      for( uint32_t i = 0; i < floats_length; i++){
 80021b0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80021b2:	3301      	adds	r3, #1
 80021b4:	62fb      	str	r3, [r7, #44]	; 0x2c
 80021b6:	e7c3      	b.n	8002140 <_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh+0x166>
      }
      uint32_t strings_lengthT = ((uint32_t) (*(inbuffer + offset))); 
 80021b8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80021ba:	683a      	ldr	r2, [r7, #0]
 80021bc:	4413      	add	r3, r2
 80021be:	781b      	ldrb	r3, [r3, #0]
 80021c0:	61bb      	str	r3, [r7, #24]
      strings_lengthT |= ((uint32_t) (*(inbuffer + offset + 1))) << (8 * 1); 
 80021c2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80021c4:	3301      	adds	r3, #1
 80021c6:	683a      	ldr	r2, [r7, #0]
 80021c8:	4413      	add	r3, r2
 80021ca:	781b      	ldrb	r3, [r3, #0]
 80021cc:	021b      	lsls	r3, r3, #8
 80021ce:	69ba      	ldr	r2, [r7, #24]
 80021d0:	4313      	orrs	r3, r2
 80021d2:	61bb      	str	r3, [r7, #24]
      strings_lengthT |= ((uint32_t) (*(inbuffer + offset + 2))) << (8 * 2); 
 80021d4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80021d6:	3302      	adds	r3, #2
 80021d8:	683a      	ldr	r2, [r7, #0]
 80021da:	4413      	add	r3, r2
 80021dc:	781b      	ldrb	r3, [r3, #0]
 80021de:	041b      	lsls	r3, r3, #16
 80021e0:	69ba      	ldr	r2, [r7, #24]
 80021e2:	4313      	orrs	r3, r2
 80021e4:	61bb      	str	r3, [r7, #24]
      strings_lengthT |= ((uint32_t) (*(inbuffer + offset + 3))) << (8 * 3); 
 80021e6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80021e8:	3303      	adds	r3, #3
 80021ea:	683a      	ldr	r2, [r7, #0]
 80021ec:	4413      	add	r3, r2
 80021ee:	781b      	ldrb	r3, [r3, #0]
 80021f0:	061b      	lsls	r3, r3, #24
 80021f2:	69ba      	ldr	r2, [r7, #24]
 80021f4:	4313      	orrs	r3, r2
 80021f6:	61bb      	str	r3, [r7, #24]
      offset += sizeof(this->strings_length);
 80021f8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80021fa:	3304      	adds	r3, #4
 80021fc:	637b      	str	r3, [r7, #52]	; 0x34
      if(strings_lengthT > strings_length)
 80021fe:	687b      	ldr	r3, [r7, #4]
 8002200:	69db      	ldr	r3, [r3, #28]
 8002202:	69ba      	ldr	r2, [r7, #24]
 8002204:	429a      	cmp	r2, r3
 8002206:	d90a      	bls.n	800221e <_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh+0x244>
        this->strings = (char**)realloc(this->strings, strings_lengthT * sizeof(char*));
 8002208:	687b      	ldr	r3, [r7, #4]
 800220a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800220c:	69bb      	ldr	r3, [r7, #24]
 800220e:	009b      	lsls	r3, r3, #2
 8002210:	4619      	mov	r1, r3
 8002212:	4610      	mov	r0, r2
 8002214:	f00b fc26 	bl	800da64 <realloc>
 8002218:	4602      	mov	r2, r0
 800221a:	687b      	ldr	r3, [r7, #4]
 800221c:	625a      	str	r2, [r3, #36]	; 0x24
      strings_length = strings_lengthT;
 800221e:	687b      	ldr	r3, [r7, #4]
 8002220:	69ba      	ldr	r2, [r7, #24]
 8002222:	61da      	str	r2, [r3, #28]
      for( uint32_t i = 0; i < strings_length; i++){
 8002224:	2300      	movs	r3, #0
 8002226:	62bb      	str	r3, [r7, #40]	; 0x28
 8002228:	687b      	ldr	r3, [r7, #4]
 800222a:	69db      	ldr	r3, [r3, #28]
 800222c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800222e:	429a      	cmp	r2, r3
 8002230:	d23f      	bcs.n	80022b2 <_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh+0x2d8>
      uint32_t length_st_strings;
      arrToVar(length_st_strings, (inbuffer + offset));
 8002232:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002234:	683a      	ldr	r2, [r7, #0]
 8002236:	441a      	add	r2, r3
 8002238:	f107 030c 	add.w	r3, r7, #12
 800223c:	4611      	mov	r1, r2
 800223e:	4618      	mov	r0, r3
 8002240:	f000 ffd0 	bl	80031e4 <_ZN3ros3Msg8arrToVarImPhEEvRT_T0_>
      offset += 4;
 8002244:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002246:	3304      	adds	r3, #4
 8002248:	637b      	str	r3, [r7, #52]	; 0x34
      for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 800224a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800224c:	627b      	str	r3, [r7, #36]	; 0x24
 800224e:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8002250:	68fb      	ldr	r3, [r7, #12]
 8002252:	4413      	add	r3, r2
 8002254:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002256:	429a      	cmp	r2, r3
 8002258:	d20c      	bcs.n	8002274 <_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh+0x29a>
          inbuffer[k-1]=inbuffer[k];
 800225a:	683a      	ldr	r2, [r7, #0]
 800225c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800225e:	441a      	add	r2, r3
 8002260:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002262:	3b01      	subs	r3, #1
 8002264:	6839      	ldr	r1, [r7, #0]
 8002266:	440b      	add	r3, r1
 8002268:	7812      	ldrb	r2, [r2, #0]
 800226a:	701a      	strb	r2, [r3, #0]
      for(unsigned int k= offset; k< offset+length_st_strings; ++k){
 800226c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800226e:	3301      	adds	r3, #1
 8002270:	627b      	str	r3, [r7, #36]	; 0x24
 8002272:	e7ec      	b.n	800224e <_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh+0x274>
      }
      inbuffer[offset+length_st_strings-1]=0;
 8002274:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8002276:	68fb      	ldr	r3, [r7, #12]
 8002278:	4413      	add	r3, r2
 800227a:	3b01      	subs	r3, #1
 800227c:	683a      	ldr	r2, [r7, #0]
 800227e:	4413      	add	r3, r2
 8002280:	2200      	movs	r2, #0
 8002282:	701a      	strb	r2, [r3, #0]
      this->st_strings = (char *)(inbuffer + offset-1);
 8002284:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002286:	3b01      	subs	r3, #1
 8002288:	683a      	ldr	r2, [r7, #0]
 800228a:	441a      	add	r2, r3
 800228c:	687b      	ldr	r3, [r7, #4]
 800228e:	621a      	str	r2, [r3, #32]
      offset += length_st_strings;
 8002290:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8002292:	68fb      	ldr	r3, [r7, #12]
 8002294:	4413      	add	r3, r2
 8002296:	637b      	str	r3, [r7, #52]	; 0x34
        memcpy( &(this->strings[i]), &(this->st_strings), sizeof(char*));
 8002298:	687b      	ldr	r3, [r7, #4]
 800229a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800229c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800229e:	009b      	lsls	r3, r3, #2
 80022a0:	4413      	add	r3, r2
 80022a2:	687a      	ldr	r2, [r7, #4]
 80022a4:	3220      	adds	r2, #32
 80022a6:	6812      	ldr	r2, [r2, #0]
 80022a8:	601a      	str	r2, [r3, #0]
      for( uint32_t i = 0; i < strings_length; i++){
 80022aa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80022ac:	3301      	adds	r3, #1
 80022ae:	62bb      	str	r3, [r7, #40]	; 0x28
 80022b0:	e7ba      	b.n	8002228 <_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh+0x24e>
      }
     return offset;
 80022b2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
    }
 80022b4:	4618      	mov	r0, r3
 80022b6:	3738      	adds	r7, #56	; 0x38
 80022b8:	46bd      	mov	sp, r7
 80022ba:	bd80      	pop	{r7, pc}

080022bc <_ZN14rosserial_msgs20RequestParamResponse7getTypeEv>:

    const char * getType(){ return REQUESTPARAM; };
 80022bc:	b480      	push	{r7}
 80022be:	b083      	sub	sp, #12
 80022c0:	af00      	add	r7, sp, #0
 80022c2:	6078      	str	r0, [r7, #4]
 80022c4:	4b03      	ldr	r3, [pc, #12]	; (80022d4 <_ZN14rosserial_msgs20RequestParamResponse7getTypeEv+0x18>)
 80022c6:	4618      	mov	r0, r3
 80022c8:	370c      	adds	r7, #12
 80022ca:	46bd      	mov	sp, r7
 80022cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022d0:	4770      	bx	lr
 80022d2:	bf00      	nop
 80022d4:	0800dee8 	.word	0x0800dee8

080022d8 <_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev>:
    const char * getMD5(){ return "9f0e98bda65981986ddf53afa7a40e49"; };
 80022d8:	b480      	push	{r7}
 80022da:	b083      	sub	sp, #12
 80022dc:	af00      	add	r7, sp, #0
 80022de:	6078      	str	r0, [r7, #4]
 80022e0:	4b03      	ldr	r3, [pc, #12]	; (80022f0 <_ZN14rosserial_msgs20RequestParamResponse6getMD5Ev+0x18>)
 80022e2:	4618      	mov	r0, r3
 80022e4:	370c      	adds	r7, #12
 80022e6:	46bd      	mov	sp, r7
 80022e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022ec:	4770      	bx	lr
 80022ee:	bf00      	nop
 80022f0:	0800de30 	.word	0x0800de30

080022f4 <_ZN3ros9PublisherC1EPKcPNS_3MsgEi>:

/* Generic Publisher */
class Publisher
{
public:
  Publisher(const char * topic_name, Msg * msg, int endpoint = rosserial_msgs::TopicInfo::ID_PUBLISHER) :
 80022f4:	b480      	push	{r7}
 80022f6:	b085      	sub	sp, #20
 80022f8:	af00      	add	r7, sp, #0
 80022fa:	60f8      	str	r0, [r7, #12]
 80022fc:	60b9      	str	r1, [r7, #8]
 80022fe:	607a      	str	r2, [r7, #4]
 8002300:	603b      	str	r3, [r7, #0]
    topic_(topic_name),
    msg_(msg),
    endpoint_(endpoint) {};
 8002302:	68fb      	ldr	r3, [r7, #12]
 8002304:	68ba      	ldr	r2, [r7, #8]
 8002306:	601a      	str	r2, [r3, #0]
 8002308:	68fb      	ldr	r3, [r7, #12]
 800230a:	687a      	ldr	r2, [r7, #4]
 800230c:	605a      	str	r2, [r3, #4]
 800230e:	68fb      	ldr	r3, [r7, #12]
 8002310:	683a      	ldr	r2, [r7, #0]
 8002312:	611a      	str	r2, [r3, #16]
 8002314:	68fb      	ldr	r3, [r7, #12]
 8002316:	4618      	mov	r0, r3
 8002318:	3714      	adds	r7, #20
 800231a:	46bd      	mov	sp, r7
 800231c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002320:	4770      	bx	lr

08002322 <_ZN3ros9Publisher15getEndpointTypeEv>:

  int publish(const Msg * msg)
  {
    return nh_->publish(id_, msg);
  };
  int getEndpointType()
 8002322:	b480      	push	{r7}
 8002324:	b083      	sub	sp, #12
 8002326:	af00      	add	r7, sp, #0
 8002328:	6078      	str	r0, [r7, #4]
  {
    return endpoint_;
 800232a:	687b      	ldr	r3, [r7, #4]
 800232c:	691b      	ldr	r3, [r3, #16]
  }
 800232e:	4618      	mov	r0, r3
 8002330:	370c      	adds	r7, #12
 8002332:	46bd      	mov	sp, r7
 8002334:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002338:	4770      	bx	lr
	...

0800233c <_ZN13STM32Hardware10getRdmaIndEv>:
    UART_HandleTypeDef *huart;

    const static uint16_t rbuflen = 512;
    uint8_t rbuf[rbuflen];
    uint32_t rind;
    inline uint32_t getRdmaInd(void){ return (rbuflen - __HAL_DMA_GET_COUNTER(huart->hdmarx)) & (rbuflen - 1); }
 800233c:	b480      	push	{r7}
 800233e:	b083      	sub	sp, #12
 8002340:	af00      	add	r7, sp, #0
 8002342:	6078      	str	r0, [r7, #4]
 8002344:	687b      	ldr	r3, [r7, #4]
 8002346:	681b      	ldr	r3, [r3, #0]
 8002348:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800234a:	681b      	ldr	r3, [r3, #0]
 800234c:	4a42      	ldr	r2, [pc, #264]	; (8002458 <_ZN13STM32Hardware10getRdmaIndEv+0x11c>)
 800234e:	4293      	cmp	r3, r2
 8002350:	d068      	beq.n	8002424 <_ZN13STM32Hardware10getRdmaIndEv+0xe8>
 8002352:	687b      	ldr	r3, [r7, #4]
 8002354:	681b      	ldr	r3, [r3, #0]
 8002356:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8002358:	681b      	ldr	r3, [r3, #0]
 800235a:	4a40      	ldr	r2, [pc, #256]	; (800245c <_ZN13STM32Hardware10getRdmaIndEv+0x120>)
 800235c:	4293      	cmp	r3, r2
 800235e:	d061      	beq.n	8002424 <_ZN13STM32Hardware10getRdmaIndEv+0xe8>
 8002360:	687b      	ldr	r3, [r7, #4]
 8002362:	681b      	ldr	r3, [r3, #0]
 8002364:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8002366:	681b      	ldr	r3, [r3, #0]
 8002368:	4a3d      	ldr	r2, [pc, #244]	; (8002460 <_ZN13STM32Hardware10getRdmaIndEv+0x124>)
 800236a:	4293      	cmp	r3, r2
 800236c:	d05a      	beq.n	8002424 <_ZN13STM32Hardware10getRdmaIndEv+0xe8>
 800236e:	687b      	ldr	r3, [r7, #4]
 8002370:	681b      	ldr	r3, [r3, #0]
 8002372:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8002374:	681b      	ldr	r3, [r3, #0]
 8002376:	4a3b      	ldr	r2, [pc, #236]	; (8002464 <_ZN13STM32Hardware10getRdmaIndEv+0x128>)
 8002378:	4293      	cmp	r3, r2
 800237a:	d053      	beq.n	8002424 <_ZN13STM32Hardware10getRdmaIndEv+0xe8>
 800237c:	687b      	ldr	r3, [r7, #4]
 800237e:	681b      	ldr	r3, [r3, #0]
 8002380:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8002382:	681b      	ldr	r3, [r3, #0]
 8002384:	4a38      	ldr	r2, [pc, #224]	; (8002468 <_ZN13STM32Hardware10getRdmaIndEv+0x12c>)
 8002386:	4293      	cmp	r3, r2
 8002388:	d04c      	beq.n	8002424 <_ZN13STM32Hardware10getRdmaIndEv+0xe8>
 800238a:	687b      	ldr	r3, [r7, #4]
 800238c:	681b      	ldr	r3, [r3, #0]
 800238e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8002390:	681b      	ldr	r3, [r3, #0]
 8002392:	4a36      	ldr	r2, [pc, #216]	; (800246c <_ZN13STM32Hardware10getRdmaIndEv+0x130>)
 8002394:	4293      	cmp	r3, r2
 8002396:	d045      	beq.n	8002424 <_ZN13STM32Hardware10getRdmaIndEv+0xe8>
 8002398:	687b      	ldr	r3, [r7, #4]
 800239a:	681b      	ldr	r3, [r3, #0]
 800239c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800239e:	681b      	ldr	r3, [r3, #0]
 80023a0:	4a33      	ldr	r2, [pc, #204]	; (8002470 <_ZN13STM32Hardware10getRdmaIndEv+0x134>)
 80023a2:	4293      	cmp	r3, r2
 80023a4:	d03e      	beq.n	8002424 <_ZN13STM32Hardware10getRdmaIndEv+0xe8>
 80023a6:	687b      	ldr	r3, [r7, #4]
 80023a8:	681b      	ldr	r3, [r3, #0]
 80023aa:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80023ac:	681b      	ldr	r3, [r3, #0]
 80023ae:	4a31      	ldr	r2, [pc, #196]	; (8002474 <_ZN13STM32Hardware10getRdmaIndEv+0x138>)
 80023b0:	4293      	cmp	r3, r2
 80023b2:	d037      	beq.n	8002424 <_ZN13STM32Hardware10getRdmaIndEv+0xe8>
 80023b4:	687b      	ldr	r3, [r7, #4]
 80023b6:	681b      	ldr	r3, [r3, #0]
 80023b8:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80023ba:	681b      	ldr	r3, [r3, #0]
 80023bc:	4a2e      	ldr	r2, [pc, #184]	; (8002478 <_ZN13STM32Hardware10getRdmaIndEv+0x13c>)
 80023be:	4293      	cmp	r3, r2
 80023c0:	d030      	beq.n	8002424 <_ZN13STM32Hardware10getRdmaIndEv+0xe8>
 80023c2:	687b      	ldr	r3, [r7, #4]
 80023c4:	681b      	ldr	r3, [r3, #0]
 80023c6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80023c8:	681b      	ldr	r3, [r3, #0]
 80023ca:	4a2c      	ldr	r2, [pc, #176]	; (800247c <_ZN13STM32Hardware10getRdmaIndEv+0x140>)
 80023cc:	4293      	cmp	r3, r2
 80023ce:	d029      	beq.n	8002424 <_ZN13STM32Hardware10getRdmaIndEv+0xe8>
 80023d0:	687b      	ldr	r3, [r7, #4]
 80023d2:	681b      	ldr	r3, [r3, #0]
 80023d4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80023d6:	681b      	ldr	r3, [r3, #0]
 80023d8:	4a29      	ldr	r2, [pc, #164]	; (8002480 <_ZN13STM32Hardware10getRdmaIndEv+0x144>)
 80023da:	4293      	cmp	r3, r2
 80023dc:	d022      	beq.n	8002424 <_ZN13STM32Hardware10getRdmaIndEv+0xe8>
 80023de:	687b      	ldr	r3, [r7, #4]
 80023e0:	681b      	ldr	r3, [r3, #0]
 80023e2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80023e4:	681b      	ldr	r3, [r3, #0]
 80023e6:	4a27      	ldr	r2, [pc, #156]	; (8002484 <_ZN13STM32Hardware10getRdmaIndEv+0x148>)
 80023e8:	4293      	cmp	r3, r2
 80023ea:	d01b      	beq.n	8002424 <_ZN13STM32Hardware10getRdmaIndEv+0xe8>
 80023ec:	687b      	ldr	r3, [r7, #4]
 80023ee:	681b      	ldr	r3, [r3, #0]
 80023f0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80023f2:	681b      	ldr	r3, [r3, #0]
 80023f4:	4a24      	ldr	r2, [pc, #144]	; (8002488 <_ZN13STM32Hardware10getRdmaIndEv+0x14c>)
 80023f6:	4293      	cmp	r3, r2
 80023f8:	d014      	beq.n	8002424 <_ZN13STM32Hardware10getRdmaIndEv+0xe8>
 80023fa:	687b      	ldr	r3, [r7, #4]
 80023fc:	681b      	ldr	r3, [r3, #0]
 80023fe:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8002400:	681b      	ldr	r3, [r3, #0]
 8002402:	4a22      	ldr	r2, [pc, #136]	; (800248c <_ZN13STM32Hardware10getRdmaIndEv+0x150>)
 8002404:	4293      	cmp	r3, r2
 8002406:	d00d      	beq.n	8002424 <_ZN13STM32Hardware10getRdmaIndEv+0xe8>
 8002408:	687b      	ldr	r3, [r7, #4]
 800240a:	681b      	ldr	r3, [r3, #0]
 800240c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800240e:	681b      	ldr	r3, [r3, #0]
 8002410:	4a1f      	ldr	r2, [pc, #124]	; (8002490 <_ZN13STM32Hardware10getRdmaIndEv+0x154>)
 8002412:	4293      	cmp	r3, r2
 8002414:	d006      	beq.n	8002424 <_ZN13STM32Hardware10getRdmaIndEv+0xe8>
 8002416:	687b      	ldr	r3, [r7, #4]
 8002418:	681b      	ldr	r3, [r3, #0]
 800241a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800241c:	681b      	ldr	r3, [r3, #0]
 800241e:	4a1d      	ldr	r2, [pc, #116]	; (8002494 <_ZN13STM32Hardware10getRdmaIndEv+0x158>)
 8002420:	4293      	cmp	r3, r2
 8002422:	d109      	bne.n	8002438 <_ZN13STM32Hardware10getRdmaIndEv+0xfc>
 8002424:	687b      	ldr	r3, [r7, #4]
 8002426:	681b      	ldr	r3, [r3, #0]
 8002428:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800242a:	681b      	ldr	r3, [r3, #0]
 800242c:	685b      	ldr	r3, [r3, #4]
 800242e:	f5c3 7300 	rsb	r3, r3, #512	; 0x200
 8002432:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002436:	e008      	b.n	800244a <_ZN13STM32Hardware10getRdmaIndEv+0x10e>
 8002438:	687b      	ldr	r3, [r7, #4]
 800243a:	681b      	ldr	r3, [r3, #0]
 800243c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800243e:	681b      	ldr	r3, [r3, #0]
 8002440:	685b      	ldr	r3, [r3, #4]
 8002442:	f5c3 7300 	rsb	r3, r3, #512	; 0x200
 8002446:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800244a:	4618      	mov	r0, r3
 800244c:	370c      	adds	r7, #12
 800244e:	46bd      	mov	sp, r7
 8002450:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002454:	4770      	bx	lr
 8002456:	bf00      	nop
 8002458:	40020010 	.word	0x40020010
 800245c:	40020028 	.word	0x40020028
 8002460:	40020040 	.word	0x40020040
 8002464:	40020058 	.word	0x40020058
 8002468:	40020070 	.word	0x40020070
 800246c:	40020088 	.word	0x40020088
 8002470:	400200a0 	.word	0x400200a0
 8002474:	400200b8 	.word	0x400200b8
 8002478:	40020410 	.word	0x40020410
 800247c:	40020428 	.word	0x40020428
 8002480:	40020440 	.word	0x40020440
 8002484:	40020458 	.word	0x40020458
 8002488:	40020470 	.word	0x40020470
 800248c:	40020488 	.word	0x40020488
 8002490:	400204a0 	.word	0x400204a0
 8002494:	400204b8 	.word	0x400204b8

08002498 <_ZN13STM32HardwareC1Ev>:
    const static uint16_t tbuflen = 512;
    uint8_t tbuf[tbuflen];
    uint32_t twind, tfind;

  public:
    STM32Hardware():
 8002498:	b480      	push	{r7}
 800249a:	b083      	sub	sp, #12
 800249c:	af00      	add	r7, sp, #0
 800249e:	6078      	str	r0, [r7, #4]
      huart(&huart1), rind(0), twind(0), tfind(0){
 80024a0:	687b      	ldr	r3, [r7, #4]
 80024a2:	4a0a      	ldr	r2, [pc, #40]	; (80024cc <_ZN13STM32HardwareC1Ev+0x34>)
 80024a4:	601a      	str	r2, [r3, #0]
 80024a6:	687b      	ldr	r3, [r7, #4]
 80024a8:	2200      	movs	r2, #0
 80024aa:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
 80024ae:	687b      	ldr	r3, [r7, #4]
 80024b0:	2200      	movs	r2, #0
 80024b2:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408
 80024b6:	687b      	ldr	r3, [r7, #4]
 80024b8:	2200      	movs	r2, #0
 80024ba:	f8c3 240c 	str.w	r2, [r3, #1036]	; 0x40c
    }
 80024be:	687b      	ldr	r3, [r7, #4]
 80024c0:	4618      	mov	r0, r3
 80024c2:	370c      	adds	r7, #12
 80024c4:	46bd      	mov	sp, r7
 80024c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024ca:	4770      	bx	lr
 80024cc:	240004f4 	.word	0x240004f4

080024d0 <_ZN13STM32Hardware4initEv>:

    STM32Hardware(UART_HandleTypeDef *huart_):
      huart(huart_), rind(0), twind(0), tfind(0){
    }
  
    void init(){
 80024d0:	b580      	push	{r7, lr}
 80024d2:	b082      	sub	sp, #8
 80024d4:	af00      	add	r7, sp, #0
 80024d6:	6078      	str	r0, [r7, #4]
      reset_rbuf();
 80024d8:	6878      	ldr	r0, [r7, #4]
 80024da:	f000 f804 	bl	80024e6 <_ZN13STM32Hardware10reset_rbufEv>
    }
 80024de:	bf00      	nop
 80024e0:	3708      	adds	r7, #8
 80024e2:	46bd      	mov	sp, r7
 80024e4:	bd80      	pop	{r7, pc}

080024e6 <_ZN13STM32Hardware10reset_rbufEv>:

    void reset_rbuf(void){
 80024e6:	b580      	push	{r7, lr}
 80024e8:	b082      	sub	sp, #8
 80024ea:	af00      	add	r7, sp, #0
 80024ec:	6078      	str	r0, [r7, #4]
      HAL_UART_Receive_DMA(huart, rbuf, rbuflen);
 80024ee:	687b      	ldr	r3, [r7, #4]
 80024f0:	6818      	ldr	r0, [r3, #0]
 80024f2:	687b      	ldr	r3, [r7, #4]
 80024f4:	3304      	adds	r3, #4
 80024f6:	f44f 7200 	mov.w	r2, #512	; 0x200
 80024fa:	4619      	mov	r1, r3
 80024fc:	f009 fa1e 	bl	800b93c <HAL_UART_Receive_DMA>
    }
 8002500:	bf00      	nop
 8002502:	3708      	adds	r7, #8
 8002504:	46bd      	mov	sp, r7
 8002506:	bd80      	pop	{r7, pc}

08002508 <_ZN13STM32Hardware4readEv>:

    int read(){
 8002508:	b590      	push	{r4, r7, lr}
 800250a:	b085      	sub	sp, #20
 800250c:	af00      	add	r7, sp, #0
 800250e:	6078      	str	r0, [r7, #4]
      int c = -1;
 8002510:	f04f 33ff 	mov.w	r3, #4294967295
 8002514:	60fb      	str	r3, [r7, #12]
      if(rind != getRdmaInd()){
 8002516:	687b      	ldr	r3, [r7, #4]
 8002518:	f8d3 4204 	ldr.w	r4, [r3, #516]	; 0x204
 800251c:	6878      	ldr	r0, [r7, #4]
 800251e:	f7ff ff0d 	bl	800233c <_ZN13STM32Hardware10getRdmaIndEv>
 8002522:	4603      	mov	r3, r0
 8002524:	429c      	cmp	r4, r3
 8002526:	bf14      	ite	ne
 8002528:	2301      	movne	r3, #1
 800252a:	2300      	moveq	r3, #0
 800252c:	b2db      	uxtb	r3, r3
 800252e:	2b00      	cmp	r3, #0
 8002530:	d012      	beq.n	8002558 <_ZN13STM32Hardware4readEv+0x50>
        c = rbuf[rind++];
 8002532:	687b      	ldr	r3, [r7, #4]
 8002534:	f8d3 3204 	ldr.w	r3, [r3, #516]	; 0x204
 8002538:	1c59      	adds	r1, r3, #1
 800253a:	687a      	ldr	r2, [r7, #4]
 800253c:	f8c2 1204 	str.w	r1, [r2, #516]	; 0x204
 8002540:	687a      	ldr	r2, [r7, #4]
 8002542:	4413      	add	r3, r2
 8002544:	791b      	ldrb	r3, [r3, #4]
 8002546:	60fb      	str	r3, [r7, #12]
        rind &= rbuflen - 1;
 8002548:	687b      	ldr	r3, [r7, #4]
 800254a:	f8d3 3204 	ldr.w	r3, [r3, #516]	; 0x204
 800254e:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8002552:	687b      	ldr	r3, [r7, #4]
 8002554:	f8c3 2204 	str.w	r2, [r3, #516]	; 0x204
      }
      return c;
 8002558:	68fb      	ldr	r3, [r7, #12]
    }
 800255a:	4618      	mov	r0, r3
 800255c:	3714      	adds	r7, #20
 800255e:	46bd      	mov	sp, r7
 8002560:	bd90      	pop	{r4, r7, pc}
	...

08002564 <_ZN13STM32Hardware5flushEv>:

    void flush(void){
 8002564:	b580      	push	{r7, lr}
 8002566:	b084      	sub	sp, #16
 8002568:	af00      	add	r7, sp, #0
 800256a:	6078      	str	r0, [r7, #4]
      static bool mutex = false;

      if((huart->gState == HAL_UART_STATE_READY) && !mutex){
 800256c:	687b      	ldr	r3, [r7, #4]
 800256e:	681b      	ldr	r3, [r3, #0]
 8002570:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8002574:	2b20      	cmp	r3, #32
 8002576:	d108      	bne.n	800258a <_ZN13STM32Hardware5flushEv+0x26>
 8002578:	4b27      	ldr	r3, [pc, #156]	; (8002618 <_ZN13STM32Hardware5flushEv+0xb4>)
 800257a:	781b      	ldrb	r3, [r3, #0]
 800257c:	f083 0301 	eor.w	r3, r3, #1
 8002580:	b2db      	uxtb	r3, r3
 8002582:	2b00      	cmp	r3, #0
 8002584:	d001      	beq.n	800258a <_ZN13STM32Hardware5flushEv+0x26>
 8002586:	2301      	movs	r3, #1
 8002588:	e000      	b.n	800258c <_ZN13STM32Hardware5flushEv+0x28>
 800258a:	2300      	movs	r3, #0
 800258c:	2b00      	cmp	r3, #0
 800258e:	d03f      	beq.n	8002610 <_ZN13STM32Hardware5flushEv+0xac>
        mutex = true;
 8002590:	4b21      	ldr	r3, [pc, #132]	; (8002618 <_ZN13STM32Hardware5flushEv+0xb4>)
 8002592:	2201      	movs	r2, #1
 8002594:	701a      	strb	r2, [r3, #0]

        if(twind != tfind){
 8002596:	687b      	ldr	r3, [r7, #4]
 8002598:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800259c:	687b      	ldr	r3, [r7, #4]
 800259e:	f8d3 340c 	ldr.w	r3, [r3, #1036]	; 0x40c
 80025a2:	429a      	cmp	r2, r3
 80025a4:	d031      	beq.n	800260a <_ZN13STM32Hardware5flushEv+0xa6>
          uint16_t len = tfind < twind ? twind - tfind : tbuflen - tfind;
 80025a6:	687b      	ldr	r3, [r7, #4]
 80025a8:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 80025ac:	687b      	ldr	r3, [r7, #4]
 80025ae:	f8d3 3408 	ldr.w	r3, [r3, #1032]	; 0x408
 80025b2:	429a      	cmp	r2, r3
 80025b4:	d20a      	bcs.n	80025cc <_ZN13STM32Hardware5flushEv+0x68>
 80025b6:	687b      	ldr	r3, [r7, #4]
 80025b8:	f8d3 3408 	ldr.w	r3, [r3, #1032]	; 0x408
 80025bc:	b29a      	uxth	r2, r3
 80025be:	687b      	ldr	r3, [r7, #4]
 80025c0:	f8d3 340c 	ldr.w	r3, [r3, #1036]	; 0x40c
 80025c4:	b29b      	uxth	r3, r3
 80025c6:	1ad3      	subs	r3, r2, r3
 80025c8:	b29b      	uxth	r3, r3
 80025ca:	e006      	b.n	80025da <_ZN13STM32Hardware5flushEv+0x76>
 80025cc:	687b      	ldr	r3, [r7, #4]
 80025ce:	f8d3 340c 	ldr.w	r3, [r3, #1036]	; 0x40c
 80025d2:	b29b      	uxth	r3, r3
 80025d4:	f5c3 7300 	rsb	r3, r3, #512	; 0x200
 80025d8:	b29b      	uxth	r3, r3
 80025da:	81fb      	strh	r3, [r7, #14]
          HAL_UART_Transmit_DMA(huart, &(tbuf[tfind]), len);
 80025dc:	687b      	ldr	r3, [r7, #4]
 80025de:	6818      	ldr	r0, [r3, #0]
 80025e0:	687b      	ldr	r3, [r7, #4]
 80025e2:	f8d3 340c 	ldr.w	r3, [r3, #1036]	; 0x40c
 80025e6:	f503 7302 	add.w	r3, r3, #520	; 0x208
 80025ea:	687a      	ldr	r2, [r7, #4]
 80025ec:	4413      	add	r3, r2
 80025ee:	89fa      	ldrh	r2, [r7, #14]
 80025f0:	4619      	mov	r1, r3
 80025f2:	f009 f911 	bl	800b818 <HAL_UART_Transmit_DMA>
          tfind = (tfind + len) & (tbuflen - 1);
 80025f6:	687b      	ldr	r3, [r7, #4]
 80025f8:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 80025fc:	89fb      	ldrh	r3, [r7, #14]
 80025fe:	4413      	add	r3, r2
 8002600:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8002604:	687b      	ldr	r3, [r7, #4]
 8002606:	f8c3 240c 	str.w	r2, [r3, #1036]	; 0x40c
        }
        mutex = false;
 800260a:	4b03      	ldr	r3, [pc, #12]	; (8002618 <_ZN13STM32Hardware5flushEv+0xb4>)
 800260c:	2200      	movs	r2, #0
 800260e:	701a      	strb	r2, [r3, #0]
      }
    }
 8002610:	bf00      	nop
 8002612:	3710      	adds	r7, #16
 8002614:	46bd      	mov	sp, r7
 8002616:	bd80      	pop	{r7, pc}
 8002618:	240006c0 	.word	0x240006c0

0800261c <_ZN13STM32Hardware5writeEPhi>:

    void write(uint8_t* data, int length){
 800261c:	b580      	push	{r7, lr}
 800261e:	b086      	sub	sp, #24
 8002620:	af00      	add	r7, sp, #0
 8002622:	60f8      	str	r0, [r7, #12]
 8002624:	60b9      	str	r1, [r7, #8]
 8002626:	607a      	str	r2, [r7, #4]
      int n = length;
 8002628:	687b      	ldr	r3, [r7, #4]
 800262a:	617b      	str	r3, [r7, #20]
      n = n <= tbuflen ? n : tbuflen;
 800262c:	697b      	ldr	r3, [r7, #20]
 800262e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8002632:	bfa8      	it	ge
 8002634:	f44f 7300 	movge.w	r3, #512	; 0x200
 8002638:	617b      	str	r3, [r7, #20]

      int n_tail = n <= tbuflen - twind ? n : tbuflen - twind;
 800263a:	68fb      	ldr	r3, [r7, #12]
 800263c:	f8d3 3408 	ldr.w	r3, [r3, #1032]	; 0x408
 8002640:	f5c3 7200 	rsb	r2, r3, #512	; 0x200
 8002644:	697b      	ldr	r3, [r7, #20]
 8002646:	4293      	cmp	r3, r2
 8002648:	bf28      	it	cs
 800264a:	4613      	movcs	r3, r2
 800264c:	613b      	str	r3, [r7, #16]
      memcpy(&(tbuf[twind]), data, n_tail);
 800264e:	68fb      	ldr	r3, [r7, #12]
 8002650:	f8d3 3408 	ldr.w	r3, [r3, #1032]	; 0x408
 8002654:	f503 7302 	add.w	r3, r3, #520	; 0x208
 8002658:	68fa      	ldr	r2, [r7, #12]
 800265a:	4413      	add	r3, r2
 800265c:	693a      	ldr	r2, [r7, #16]
 800265e:	68b9      	ldr	r1, [r7, #8]
 8002660:	4618      	mov	r0, r3
 8002662:	f00b f9e9 	bl	800da38 <memcpy>
      twind = (twind + n) & (tbuflen - 1);
 8002666:	68fb      	ldr	r3, [r7, #12]
 8002668:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 800266c:	697b      	ldr	r3, [r7, #20]
 800266e:	4413      	add	r3, r2
 8002670:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8002674:	68fb      	ldr	r3, [r7, #12]
 8002676:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

      if(n != n_tail){
 800267a:	697a      	ldr	r2, [r7, #20]
 800267c:	693b      	ldr	r3, [r7, #16]
 800267e:	429a      	cmp	r2, r3
 8002680:	d00b      	beq.n	800269a <_ZN13STM32Hardware5writeEPhi+0x7e>
        memcpy(tbuf, &(data[n_tail]), n - n_tail);
 8002682:	68fb      	ldr	r3, [r7, #12]
 8002684:	f503 7002 	add.w	r0, r3, #520	; 0x208
 8002688:	693b      	ldr	r3, [r7, #16]
 800268a:	68ba      	ldr	r2, [r7, #8]
 800268c:	18d1      	adds	r1, r2, r3
 800268e:	697a      	ldr	r2, [r7, #20]
 8002690:	693b      	ldr	r3, [r7, #16]
 8002692:	1ad3      	subs	r3, r2, r3
 8002694:	461a      	mov	r2, r3
 8002696:	f00b f9cf 	bl	800da38 <memcpy>
      }

      flush();
 800269a:	68f8      	ldr	r0, [r7, #12]
 800269c:	f7ff ff62 	bl	8002564 <_ZN13STM32Hardware5flushEv>
    }
 80026a0:	bf00      	nop
 80026a2:	3718      	adds	r7, #24
 80026a4:	46bd      	mov	sp, r7
 80026a6:	bd80      	pop	{r7, pc}

080026a8 <_ZN13STM32Hardware4timeEv>:

    unsigned long time(){ return HAL_GetTick();; }
 80026a8:	b580      	push	{r7, lr}
 80026aa:	b082      	sub	sp, #8
 80026ac:	af00      	add	r7, sp, #0
 80026ae:	6078      	str	r0, [r7, #4]
 80026b0:	f002 f990 	bl	80049d4 <HAL_GetTick>
 80026b4:	4603      	mov	r3, r0
 80026b6:	4618      	mov	r0, r3
 80026b8:	3708      	adds	r7, #8
 80026ba:	46bd      	mov	sp, r7
 80026bc:	bd80      	pop	{r7, pc}
	...

080026c0 <_ZN13geometry_msgs5PointC1Ev>:
      typedef double _y_type;
      _y_type y;
      typedef double _z_type;
      _z_type z;

    Point():
 80026c0:	b580      	push	{r7, lr}
 80026c2:	b082      	sub	sp, #8
 80026c4:	af00      	add	r7, sp, #0
 80026c6:	6078      	str	r0, [r7, #4]
      x(0),
      y(0),
      z(0)
 80026c8:	687b      	ldr	r3, [r7, #4]
 80026ca:	4618      	mov	r0, r3
 80026cc:	f7fe ffdc 	bl	8001688 <_ZN3ros3MsgC1Ev>
 80026d0:	4a0e      	ldr	r2, [pc, #56]	; (800270c <_ZN13geometry_msgs5PointC1Ev+0x4c>)
 80026d2:	687b      	ldr	r3, [r7, #4]
 80026d4:	601a      	str	r2, [r3, #0]
 80026d6:	6879      	ldr	r1, [r7, #4]
 80026d8:	f04f 0200 	mov.w	r2, #0
 80026dc:	f04f 0300 	mov.w	r3, #0
 80026e0:	e9c1 2302 	strd	r2, r3, [r1, #8]
 80026e4:	6879      	ldr	r1, [r7, #4]
 80026e6:	f04f 0200 	mov.w	r2, #0
 80026ea:	f04f 0300 	mov.w	r3, #0
 80026ee:	e9c1 2304 	strd	r2, r3, [r1, #16]
 80026f2:	6879      	ldr	r1, [r7, #4]
 80026f4:	f04f 0200 	mov.w	r2, #0
 80026f8:	f04f 0300 	mov.w	r3, #0
 80026fc:	e9c1 2306 	strd	r2, r3, [r1, #24]
    {
    }
 8002700:	687b      	ldr	r3, [r7, #4]
 8002702:	4618      	mov	r0, r3
 8002704:	3708      	adds	r7, #8
 8002706:	46bd      	mov	sp, r7
 8002708:	bd80      	pop	{r7, pc}
 800270a:	bf00      	nop
 800270c:	0800df38 	.word	0x0800df38

08002710 <_ZNK13geometry_msgs5Point9serializeEPh>:

    virtual int serialize(unsigned char *outbuffer) const
 8002710:	b480      	push	{r7}
 8002712:	b08b      	sub	sp, #44	; 0x2c
 8002714:	af00      	add	r7, sp, #0
 8002716:	6078      	str	r0, [r7, #4]
 8002718:	6039      	str	r1, [r7, #0]
    {
      int offset = 0;
 800271a:	2300      	movs	r3, #0
 800271c:	627b      	str	r3, [r7, #36]	; 0x24
      union {
        double real;
        uint64_t base;
      } u_x;
      u_x.real = this->x;
 800271e:	687b      	ldr	r3, [r7, #4]
 8002720:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8002724:	e9c7 2306 	strd	r2, r3, [r7, #24]
      *(outbuffer + offset + 0) = (u_x.base >> (8 * 0)) & 0xFF;
 8002728:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800272c:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800272e:	6838      	ldr	r0, [r7, #0]
 8002730:	4401      	add	r1, r0
 8002732:	b2d3      	uxtb	r3, r2
 8002734:	700b      	strb	r3, [r1, #0]
      *(outbuffer + offset + 1) = (u_x.base >> (8 * 1)) & 0xFF;
 8002736:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800273a:	f04f 0200 	mov.w	r2, #0
 800273e:	f04f 0300 	mov.w	r3, #0
 8002742:	0a02      	lsrs	r2, r0, #8
 8002744:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8002748:	0a0b      	lsrs	r3, r1, #8
 800274a:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800274c:	3101      	adds	r1, #1
 800274e:	6838      	ldr	r0, [r7, #0]
 8002750:	4401      	add	r1, r0
 8002752:	b2d3      	uxtb	r3, r2
 8002754:	700b      	strb	r3, [r1, #0]
      *(outbuffer + offset + 2) = (u_x.base >> (8 * 2)) & 0xFF;
 8002756:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800275a:	f04f 0200 	mov.w	r2, #0
 800275e:	f04f 0300 	mov.w	r3, #0
 8002762:	0c02      	lsrs	r2, r0, #16
 8002764:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8002768:	0c0b      	lsrs	r3, r1, #16
 800276a:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800276c:	3102      	adds	r1, #2
 800276e:	6838      	ldr	r0, [r7, #0]
 8002770:	4401      	add	r1, r0
 8002772:	b2d3      	uxtb	r3, r2
 8002774:	700b      	strb	r3, [r1, #0]
      *(outbuffer + offset + 3) = (u_x.base >> (8 * 3)) & 0xFF;
 8002776:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800277a:	f04f 0200 	mov.w	r2, #0
 800277e:	f04f 0300 	mov.w	r3, #0
 8002782:	0e02      	lsrs	r2, r0, #24
 8002784:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8002788:	0e0b      	lsrs	r3, r1, #24
 800278a:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800278c:	3103      	adds	r1, #3
 800278e:	6838      	ldr	r0, [r7, #0]
 8002790:	4401      	add	r1, r0
 8002792:	b2d3      	uxtb	r3, r2
 8002794:	700b      	strb	r3, [r1, #0]
      *(outbuffer + offset + 4) = (u_x.base >> (8 * 4)) & 0xFF;
 8002796:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 800279a:	f04f 0200 	mov.w	r2, #0
 800279e:	f04f 0300 	mov.w	r3, #0
 80027a2:	000a      	movs	r2, r1
 80027a4:	2300      	movs	r3, #0
 80027a6:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80027a8:	3104      	adds	r1, #4
 80027aa:	6838      	ldr	r0, [r7, #0]
 80027ac:	4401      	add	r1, r0
 80027ae:	b2d3      	uxtb	r3, r2
 80027b0:	700b      	strb	r3, [r1, #0]
      *(outbuffer + offset + 5) = (u_x.base >> (8 * 5)) & 0xFF;
 80027b2:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 80027b6:	f04f 0200 	mov.w	r2, #0
 80027ba:	f04f 0300 	mov.w	r3, #0
 80027be:	0a0a      	lsrs	r2, r1, #8
 80027c0:	2300      	movs	r3, #0
 80027c2:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80027c4:	3105      	adds	r1, #5
 80027c6:	6838      	ldr	r0, [r7, #0]
 80027c8:	4401      	add	r1, r0
 80027ca:	b2d3      	uxtb	r3, r2
 80027cc:	700b      	strb	r3, [r1, #0]
      *(outbuffer + offset + 6) = (u_x.base >> (8 * 6)) & 0xFF;
 80027ce:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 80027d2:	f04f 0200 	mov.w	r2, #0
 80027d6:	f04f 0300 	mov.w	r3, #0
 80027da:	0c0a      	lsrs	r2, r1, #16
 80027dc:	2300      	movs	r3, #0
 80027de:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80027e0:	3106      	adds	r1, #6
 80027e2:	6838      	ldr	r0, [r7, #0]
 80027e4:	4401      	add	r1, r0
 80027e6:	b2d3      	uxtb	r3, r2
 80027e8:	700b      	strb	r3, [r1, #0]
      *(outbuffer + offset + 7) = (u_x.base >> (8 * 7)) & 0xFF;
 80027ea:	e9d7 0106 	ldrd	r0, r1, [r7, #24]
 80027ee:	f04f 0200 	mov.w	r2, #0
 80027f2:	f04f 0300 	mov.w	r3, #0
 80027f6:	0e0a      	lsrs	r2, r1, #24
 80027f8:	2300      	movs	r3, #0
 80027fa:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80027fc:	3107      	adds	r1, #7
 80027fe:	6838      	ldr	r0, [r7, #0]
 8002800:	4401      	add	r1, r0
 8002802:	b2d3      	uxtb	r3, r2
 8002804:	700b      	strb	r3, [r1, #0]
      offset += sizeof(this->x);
 8002806:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002808:	3308      	adds	r3, #8
 800280a:	627b      	str	r3, [r7, #36]	; 0x24
      union {
        double real;
        uint64_t base;
      } u_y;
      u_y.real = this->y;
 800280c:	687b      	ldr	r3, [r7, #4]
 800280e:	e9d3 2304 	ldrd	r2, r3, [r3, #16]
 8002812:	e9c7 2304 	strd	r2, r3, [r7, #16]
      *(outbuffer + offset + 0) = (u_y.base >> (8 * 0)) & 0xFF;
 8002816:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 800281a:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800281c:	6838      	ldr	r0, [r7, #0]
 800281e:	4401      	add	r1, r0
 8002820:	b2d3      	uxtb	r3, r2
 8002822:	700b      	strb	r3, [r1, #0]
      *(outbuffer + offset + 1) = (u_y.base >> (8 * 1)) & 0xFF;
 8002824:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8002828:	f04f 0200 	mov.w	r2, #0
 800282c:	f04f 0300 	mov.w	r3, #0
 8002830:	0a02      	lsrs	r2, r0, #8
 8002832:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8002836:	0a0b      	lsrs	r3, r1, #8
 8002838:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800283a:	3101      	adds	r1, #1
 800283c:	6838      	ldr	r0, [r7, #0]
 800283e:	4401      	add	r1, r0
 8002840:	b2d3      	uxtb	r3, r2
 8002842:	700b      	strb	r3, [r1, #0]
      *(outbuffer + offset + 2) = (u_y.base >> (8 * 2)) & 0xFF;
 8002844:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8002848:	f04f 0200 	mov.w	r2, #0
 800284c:	f04f 0300 	mov.w	r3, #0
 8002850:	0c02      	lsrs	r2, r0, #16
 8002852:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8002856:	0c0b      	lsrs	r3, r1, #16
 8002858:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800285a:	3102      	adds	r1, #2
 800285c:	6838      	ldr	r0, [r7, #0]
 800285e:	4401      	add	r1, r0
 8002860:	b2d3      	uxtb	r3, r2
 8002862:	700b      	strb	r3, [r1, #0]
      *(outbuffer + offset + 3) = (u_y.base >> (8 * 3)) & 0xFF;
 8002864:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8002868:	f04f 0200 	mov.w	r2, #0
 800286c:	f04f 0300 	mov.w	r3, #0
 8002870:	0e02      	lsrs	r2, r0, #24
 8002872:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8002876:	0e0b      	lsrs	r3, r1, #24
 8002878:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800287a:	3103      	adds	r1, #3
 800287c:	6838      	ldr	r0, [r7, #0]
 800287e:	4401      	add	r1, r0
 8002880:	b2d3      	uxtb	r3, r2
 8002882:	700b      	strb	r3, [r1, #0]
      *(outbuffer + offset + 4) = (u_y.base >> (8 * 4)) & 0xFF;
 8002884:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8002888:	f04f 0200 	mov.w	r2, #0
 800288c:	f04f 0300 	mov.w	r3, #0
 8002890:	000a      	movs	r2, r1
 8002892:	2300      	movs	r3, #0
 8002894:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8002896:	3104      	adds	r1, #4
 8002898:	6838      	ldr	r0, [r7, #0]
 800289a:	4401      	add	r1, r0
 800289c:	b2d3      	uxtb	r3, r2
 800289e:	700b      	strb	r3, [r1, #0]
      *(outbuffer + offset + 5) = (u_y.base >> (8 * 5)) & 0xFF;
 80028a0:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 80028a4:	f04f 0200 	mov.w	r2, #0
 80028a8:	f04f 0300 	mov.w	r3, #0
 80028ac:	0a0a      	lsrs	r2, r1, #8
 80028ae:	2300      	movs	r3, #0
 80028b0:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80028b2:	3105      	adds	r1, #5
 80028b4:	6838      	ldr	r0, [r7, #0]
 80028b6:	4401      	add	r1, r0
 80028b8:	b2d3      	uxtb	r3, r2
 80028ba:	700b      	strb	r3, [r1, #0]
      *(outbuffer + offset + 6) = (u_y.base >> (8 * 6)) & 0xFF;
 80028bc:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 80028c0:	f04f 0200 	mov.w	r2, #0
 80028c4:	f04f 0300 	mov.w	r3, #0
 80028c8:	0c0a      	lsrs	r2, r1, #16
 80028ca:	2300      	movs	r3, #0
 80028cc:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80028ce:	3106      	adds	r1, #6
 80028d0:	6838      	ldr	r0, [r7, #0]
 80028d2:	4401      	add	r1, r0
 80028d4:	b2d3      	uxtb	r3, r2
 80028d6:	700b      	strb	r3, [r1, #0]
      *(outbuffer + offset + 7) = (u_y.base >> (8 * 7)) & 0xFF;
 80028d8:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 80028dc:	f04f 0200 	mov.w	r2, #0
 80028e0:	f04f 0300 	mov.w	r3, #0
 80028e4:	0e0a      	lsrs	r2, r1, #24
 80028e6:	2300      	movs	r3, #0
 80028e8:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80028ea:	3107      	adds	r1, #7
 80028ec:	6838      	ldr	r0, [r7, #0]
 80028ee:	4401      	add	r1, r0
 80028f0:	b2d3      	uxtb	r3, r2
 80028f2:	700b      	strb	r3, [r1, #0]
      offset += sizeof(this->y);
 80028f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80028f6:	3308      	adds	r3, #8
 80028f8:	627b      	str	r3, [r7, #36]	; 0x24
      union {
        double real;
        uint64_t base;
      } u_z;
      u_z.real = this->z;
 80028fa:	687b      	ldr	r3, [r7, #4]
 80028fc:	e9d3 2306 	ldrd	r2, r3, [r3, #24]
 8002900:	e9c7 2302 	strd	r2, r3, [r7, #8]
      *(outbuffer + offset + 0) = (u_z.base >> (8 * 0)) & 0xFF;
 8002904:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8002908:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800290a:	6838      	ldr	r0, [r7, #0]
 800290c:	4401      	add	r1, r0
 800290e:	b2d3      	uxtb	r3, r2
 8002910:	700b      	strb	r3, [r1, #0]
      *(outbuffer + offset + 1) = (u_z.base >> (8 * 1)) & 0xFF;
 8002912:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8002916:	f04f 0200 	mov.w	r2, #0
 800291a:	f04f 0300 	mov.w	r3, #0
 800291e:	0a02      	lsrs	r2, r0, #8
 8002920:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8002924:	0a0b      	lsrs	r3, r1, #8
 8002926:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8002928:	3101      	adds	r1, #1
 800292a:	6838      	ldr	r0, [r7, #0]
 800292c:	4401      	add	r1, r0
 800292e:	b2d3      	uxtb	r3, r2
 8002930:	700b      	strb	r3, [r1, #0]
      *(outbuffer + offset + 2) = (u_z.base >> (8 * 2)) & 0xFF;
 8002932:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8002936:	f04f 0200 	mov.w	r2, #0
 800293a:	f04f 0300 	mov.w	r3, #0
 800293e:	0c02      	lsrs	r2, r0, #16
 8002940:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8002944:	0c0b      	lsrs	r3, r1, #16
 8002946:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8002948:	3102      	adds	r1, #2
 800294a:	6838      	ldr	r0, [r7, #0]
 800294c:	4401      	add	r1, r0
 800294e:	b2d3      	uxtb	r3, r2
 8002950:	700b      	strb	r3, [r1, #0]
      *(outbuffer + offset + 3) = (u_z.base >> (8 * 3)) & 0xFF;
 8002952:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8002956:	f04f 0200 	mov.w	r2, #0
 800295a:	f04f 0300 	mov.w	r3, #0
 800295e:	0e02      	lsrs	r2, r0, #24
 8002960:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8002964:	0e0b      	lsrs	r3, r1, #24
 8002966:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8002968:	3103      	adds	r1, #3
 800296a:	6838      	ldr	r0, [r7, #0]
 800296c:	4401      	add	r1, r0
 800296e:	b2d3      	uxtb	r3, r2
 8002970:	700b      	strb	r3, [r1, #0]
      *(outbuffer + offset + 4) = (u_z.base >> (8 * 4)) & 0xFF;
 8002972:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8002976:	f04f 0200 	mov.w	r2, #0
 800297a:	f04f 0300 	mov.w	r3, #0
 800297e:	000a      	movs	r2, r1
 8002980:	2300      	movs	r3, #0
 8002982:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8002984:	3104      	adds	r1, #4
 8002986:	6838      	ldr	r0, [r7, #0]
 8002988:	4401      	add	r1, r0
 800298a:	b2d3      	uxtb	r3, r2
 800298c:	700b      	strb	r3, [r1, #0]
      *(outbuffer + offset + 5) = (u_z.base >> (8 * 5)) & 0xFF;
 800298e:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8002992:	f04f 0200 	mov.w	r2, #0
 8002996:	f04f 0300 	mov.w	r3, #0
 800299a:	0a0a      	lsrs	r2, r1, #8
 800299c:	2300      	movs	r3, #0
 800299e:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80029a0:	3105      	adds	r1, #5
 80029a2:	6838      	ldr	r0, [r7, #0]
 80029a4:	4401      	add	r1, r0
 80029a6:	b2d3      	uxtb	r3, r2
 80029a8:	700b      	strb	r3, [r1, #0]
      *(outbuffer + offset + 6) = (u_z.base >> (8 * 6)) & 0xFF;
 80029aa:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80029ae:	f04f 0200 	mov.w	r2, #0
 80029b2:	f04f 0300 	mov.w	r3, #0
 80029b6:	0c0a      	lsrs	r2, r1, #16
 80029b8:	2300      	movs	r3, #0
 80029ba:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80029bc:	3106      	adds	r1, #6
 80029be:	6838      	ldr	r0, [r7, #0]
 80029c0:	4401      	add	r1, r0
 80029c2:	b2d3      	uxtb	r3, r2
 80029c4:	700b      	strb	r3, [r1, #0]
      *(outbuffer + offset + 7) = (u_z.base >> (8 * 7)) & 0xFF;
 80029c6:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 80029ca:	f04f 0200 	mov.w	r2, #0
 80029ce:	f04f 0300 	mov.w	r3, #0
 80029d2:	0e0a      	lsrs	r2, r1, #24
 80029d4:	2300      	movs	r3, #0
 80029d6:	6a79      	ldr	r1, [r7, #36]	; 0x24
 80029d8:	3107      	adds	r1, #7
 80029da:	6838      	ldr	r0, [r7, #0]
 80029dc:	4401      	add	r1, r0
 80029de:	b2d3      	uxtb	r3, r2
 80029e0:	700b      	strb	r3, [r1, #0]
      offset += sizeof(this->z);
 80029e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80029e4:	3308      	adds	r3, #8
 80029e6:	627b      	str	r3, [r7, #36]	; 0x24
      return offset;
 80029e8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    }
 80029ea:	4618      	mov	r0, r3
 80029ec:	372c      	adds	r7, #44	; 0x2c
 80029ee:	46bd      	mov	sp, r7
 80029f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80029f4:	4770      	bx	lr

080029f6 <_ZN13geometry_msgs5Point11deserializeEPh>:

    virtual int deserialize(unsigned char *inbuffer)
 80029f6:	e92d 0fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp}
 80029fa:	b0eb      	sub	sp, #428	; 0x1ac
 80029fc:	af00      	add	r7, sp, #0
 80029fe:	f8c7 0184 	str.w	r0, [r7, #388]	; 0x184
 8002a02:	f8c7 1180 	str.w	r1, [r7, #384]	; 0x180
    {
      int offset = 0;
 8002a06:	2300      	movs	r3, #0
 8002a08:	f8c7 31a4 	str.w	r3, [r7, #420]	; 0x1a4
      union {
        double real;
        uint64_t base;
      } u_x;
      u_x.base = 0;
 8002a0c:	f04f 0200 	mov.w	r2, #0
 8002a10:	f04f 0300 	mov.w	r3, #0
 8002a14:	e9c7 2366 	strd	r2, r3, [r7, #408]	; 0x198
      u_x.base |= ((uint64_t) (*(inbuffer + offset + 0))) << (8 * 0);
 8002a18:	e9d7 0166 	ldrd	r0, r1, [r7, #408]	; 0x198
 8002a1c:	f8d7 21a4 	ldr.w	r2, [r7, #420]	; 0x1a4
 8002a20:	f8d7 3180 	ldr.w	r3, [r7, #384]	; 0x180
 8002a24:	4413      	add	r3, r2
 8002a26:	781b      	ldrb	r3, [r3, #0]
 8002a28:	b2db      	uxtb	r3, r3
 8002a2a:	2200      	movs	r2, #0
 8002a2c:	461c      	mov	r4, r3
 8002a2e:	4615      	mov	r5, r2
 8002a30:	ea40 0804 	orr.w	r8, r0, r4
 8002a34:	ea41 0905 	orr.w	r9, r1, r5
 8002a38:	e9c7 8966 	strd	r8, r9, [r7, #408]	; 0x198
      u_x.base |= ((uint64_t) (*(inbuffer + offset + 1))) << (8 * 1);
 8002a3c:	e9d7 0166 	ldrd	r0, r1, [r7, #408]	; 0x198
 8002a40:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 8002a44:	1c5a      	adds	r2, r3, #1
 8002a46:	f8d7 3180 	ldr.w	r3, [r7, #384]	; 0x180
 8002a4a:	4413      	add	r3, r2
 8002a4c:	781b      	ldrb	r3, [r3, #0]
 8002a4e:	b2db      	uxtb	r3, r3
 8002a50:	2200      	movs	r2, #0
 8002a52:	469a      	mov	sl, r3
 8002a54:	4693      	mov	fp, r2
 8002a56:	f04f 0200 	mov.w	r2, #0
 8002a5a:	f04f 0300 	mov.w	r3, #0
 8002a5e:	ea4f 230b 	mov.w	r3, fp, lsl #8
 8002a62:	ea43 631a 	orr.w	r3, r3, sl, lsr #24
 8002a66:	ea4f 220a 	mov.w	r2, sl, lsl #8
 8002a6a:	ea40 0402 	orr.w	r4, r0, r2
 8002a6e:	f8c7 4178 	str.w	r4, [r7, #376]	; 0x178
 8002a72:	430b      	orrs	r3, r1
 8002a74:	f8c7 317c 	str.w	r3, [r7, #380]	; 0x17c
 8002a78:	e9d7 345e 	ldrd	r3, r4, [r7, #376]	; 0x178
 8002a7c:	e9c7 3466 	strd	r3, r4, [r7, #408]	; 0x198
      u_x.base |= ((uint64_t) (*(inbuffer + offset + 2))) << (8 * 2);
 8002a80:	e9d7 0166 	ldrd	r0, r1, [r7, #408]	; 0x198
 8002a84:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 8002a88:	1c9a      	adds	r2, r3, #2
 8002a8a:	f8d7 3180 	ldr.w	r3, [r7, #384]	; 0x180
 8002a8e:	4413      	add	r3, r2
 8002a90:	781b      	ldrb	r3, [r3, #0]
 8002a92:	b2db      	uxtb	r3, r3
 8002a94:	2200      	movs	r2, #0
 8002a96:	f8c7 3170 	str.w	r3, [r7, #368]	; 0x170
 8002a9a:	f8c7 2174 	str.w	r2, [r7, #372]	; 0x174
 8002a9e:	f04f 0200 	mov.w	r2, #0
 8002aa2:	f04f 0300 	mov.w	r3, #0
 8002aa6:	e9d7 895c 	ldrd	r8, r9, [r7, #368]	; 0x170
 8002aaa:	464c      	mov	r4, r9
 8002aac:	0423      	lsls	r3, r4, #16
 8002aae:	4644      	mov	r4, r8
 8002ab0:	ea43 4314 	orr.w	r3, r3, r4, lsr #16
 8002ab4:	4644      	mov	r4, r8
 8002ab6:	0422      	lsls	r2, r4, #16
 8002ab8:	ea40 0402 	orr.w	r4, r0, r2
 8002abc:	f8c7 4168 	str.w	r4, [r7, #360]	; 0x168
 8002ac0:	430b      	orrs	r3, r1
 8002ac2:	f8c7 316c 	str.w	r3, [r7, #364]	; 0x16c
 8002ac6:	e9d7 345a 	ldrd	r3, r4, [r7, #360]	; 0x168
 8002aca:	e9c7 3466 	strd	r3, r4, [r7, #408]	; 0x198
      u_x.base |= ((uint64_t) (*(inbuffer + offset + 3))) << (8 * 3);
 8002ace:	e9d7 0166 	ldrd	r0, r1, [r7, #408]	; 0x198
 8002ad2:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 8002ad6:	1cda      	adds	r2, r3, #3
 8002ad8:	f8d7 3180 	ldr.w	r3, [r7, #384]	; 0x180
 8002adc:	4413      	add	r3, r2
 8002ade:	781b      	ldrb	r3, [r3, #0]
 8002ae0:	b2db      	uxtb	r3, r3
 8002ae2:	2200      	movs	r2, #0
 8002ae4:	f8c7 3160 	str.w	r3, [r7, #352]	; 0x160
 8002ae8:	f8c7 2164 	str.w	r2, [r7, #356]	; 0x164
 8002aec:	e9d7 4558 	ldrd	r4, r5, [r7, #352]	; 0x160
 8002af0:	4623      	mov	r3, r4
 8002af2:	0a1b      	lsrs	r3, r3, #8
 8002af4:	f8c7 315c 	str.w	r3, [r7, #348]	; 0x15c
 8002af8:	4623      	mov	r3, r4
 8002afa:	061b      	lsls	r3, r3, #24
 8002afc:	f8c7 3158 	str.w	r3, [r7, #344]	; 0x158
 8002b00:	e9d7 4556 	ldrd	r4, r5, [r7, #344]	; 0x158
 8002b04:	4623      	mov	r3, r4
 8002b06:	4303      	orrs	r3, r0
 8002b08:	f8c7 3150 	str.w	r3, [r7, #336]	; 0x150
 8002b0c:	462b      	mov	r3, r5
 8002b0e:	430b      	orrs	r3, r1
 8002b10:	f8c7 3154 	str.w	r3, [r7, #340]	; 0x154
 8002b14:	e9d7 3454 	ldrd	r3, r4, [r7, #336]	; 0x150
 8002b18:	e9c7 3466 	strd	r3, r4, [r7, #408]	; 0x198
      u_x.base |= ((uint64_t) (*(inbuffer + offset + 4))) << (8 * 4);
 8002b1c:	e9d7 0166 	ldrd	r0, r1, [r7, #408]	; 0x198
 8002b20:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 8002b24:	1d1a      	adds	r2, r3, #4
 8002b26:	f8d7 3180 	ldr.w	r3, [r7, #384]	; 0x180
 8002b2a:	4413      	add	r3, r2
 8002b2c:	781b      	ldrb	r3, [r3, #0]
 8002b2e:	b2db      	uxtb	r3, r3
 8002b30:	2200      	movs	r2, #0
 8002b32:	f8c7 3148 	str.w	r3, [r7, #328]	; 0x148
 8002b36:	f8c7 214c 	str.w	r2, [r7, #332]	; 0x14c
 8002b3a:	f04f 0200 	mov.w	r2, #0
 8002b3e:	f04f 0300 	mov.w	r3, #0
 8002b42:	f8d7 4148 	ldr.w	r4, [r7, #328]	; 0x148
 8002b46:	0023      	movs	r3, r4
 8002b48:	2200      	movs	r2, #0
 8002b4a:	ea40 0402 	orr.w	r4, r0, r2
 8002b4e:	f8c7 4140 	str.w	r4, [r7, #320]	; 0x140
 8002b52:	430b      	orrs	r3, r1
 8002b54:	f8c7 3144 	str.w	r3, [r7, #324]	; 0x144
 8002b58:	e9d7 3450 	ldrd	r3, r4, [r7, #320]	; 0x140
 8002b5c:	e9c7 3466 	strd	r3, r4, [r7, #408]	; 0x198
      u_x.base |= ((uint64_t) (*(inbuffer + offset + 5))) << (8 * 5);
 8002b60:	e9d7 0166 	ldrd	r0, r1, [r7, #408]	; 0x198
 8002b64:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 8002b68:	1d5a      	adds	r2, r3, #5
 8002b6a:	f8d7 3180 	ldr.w	r3, [r7, #384]	; 0x180
 8002b6e:	4413      	add	r3, r2
 8002b70:	781b      	ldrb	r3, [r3, #0]
 8002b72:	b2db      	uxtb	r3, r3
 8002b74:	2200      	movs	r2, #0
 8002b76:	f8c7 3138 	str.w	r3, [r7, #312]	; 0x138
 8002b7a:	f8c7 213c 	str.w	r2, [r7, #316]	; 0x13c
 8002b7e:	f04f 0200 	mov.w	r2, #0
 8002b82:	f04f 0300 	mov.w	r3, #0
 8002b86:	f8d7 4138 	ldr.w	r4, [r7, #312]	; 0x138
 8002b8a:	0223      	lsls	r3, r4, #8
 8002b8c:	2200      	movs	r2, #0
 8002b8e:	ea40 0402 	orr.w	r4, r0, r2
 8002b92:	f8c7 4130 	str.w	r4, [r7, #304]	; 0x130
 8002b96:	430b      	orrs	r3, r1
 8002b98:	f8c7 3134 	str.w	r3, [r7, #308]	; 0x134
 8002b9c:	e9d7 344c 	ldrd	r3, r4, [r7, #304]	; 0x130
 8002ba0:	e9c7 3466 	strd	r3, r4, [r7, #408]	; 0x198
      u_x.base |= ((uint64_t) (*(inbuffer + offset + 6))) << (8 * 6);
 8002ba4:	e9d7 0166 	ldrd	r0, r1, [r7, #408]	; 0x198
 8002ba8:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 8002bac:	1d9a      	adds	r2, r3, #6
 8002bae:	f8d7 3180 	ldr.w	r3, [r7, #384]	; 0x180
 8002bb2:	4413      	add	r3, r2
 8002bb4:	781b      	ldrb	r3, [r3, #0]
 8002bb6:	b2db      	uxtb	r3, r3
 8002bb8:	2200      	movs	r2, #0
 8002bba:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
 8002bbe:	f8c7 212c 	str.w	r2, [r7, #300]	; 0x12c
 8002bc2:	f04f 0200 	mov.w	r2, #0
 8002bc6:	f04f 0300 	mov.w	r3, #0
 8002bca:	f8d7 4128 	ldr.w	r4, [r7, #296]	; 0x128
 8002bce:	0423      	lsls	r3, r4, #16
 8002bd0:	2200      	movs	r2, #0
 8002bd2:	ea40 0402 	orr.w	r4, r0, r2
 8002bd6:	f8c7 4120 	str.w	r4, [r7, #288]	; 0x120
 8002bda:	430b      	orrs	r3, r1
 8002bdc:	f8c7 3124 	str.w	r3, [r7, #292]	; 0x124
 8002be0:	e9d7 3448 	ldrd	r3, r4, [r7, #288]	; 0x120
 8002be4:	e9c7 3466 	strd	r3, r4, [r7, #408]	; 0x198
      u_x.base |= ((uint64_t) (*(inbuffer + offset + 7))) << (8 * 7);
 8002be8:	e9d7 0166 	ldrd	r0, r1, [r7, #408]	; 0x198
 8002bec:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 8002bf0:	1dda      	adds	r2, r3, #7
 8002bf2:	f8d7 3180 	ldr.w	r3, [r7, #384]	; 0x180
 8002bf6:	4413      	add	r3, r2
 8002bf8:	781b      	ldrb	r3, [r3, #0]
 8002bfa:	b2db      	uxtb	r3, r3
 8002bfc:	2200      	movs	r2, #0
 8002bfe:	f8c7 3118 	str.w	r3, [r7, #280]	; 0x118
 8002c02:	f8c7 211c 	str.w	r2, [r7, #284]	; 0x11c
 8002c06:	f04f 0200 	mov.w	r2, #0
 8002c0a:	f04f 0300 	mov.w	r3, #0
 8002c0e:	f8d7 4118 	ldr.w	r4, [r7, #280]	; 0x118
 8002c12:	0623      	lsls	r3, r4, #24
 8002c14:	2200      	movs	r2, #0
 8002c16:	ea40 0402 	orr.w	r4, r0, r2
 8002c1a:	f8c7 4110 	str.w	r4, [r7, #272]	; 0x110
 8002c1e:	430b      	orrs	r3, r1
 8002c20:	f8c7 3114 	str.w	r3, [r7, #276]	; 0x114
 8002c24:	e9d7 3444 	ldrd	r3, r4, [r7, #272]	; 0x110
 8002c28:	e9c7 3466 	strd	r3, r4, [r7, #408]	; 0x198
      this->x = u_x.real;
 8002c2c:	e9d7 0166 	ldrd	r0, r1, [r7, #408]	; 0x198
 8002c30:	f8d7 3184 	ldr.w	r3, [r7, #388]	; 0x184
 8002c34:	e9c3 0102 	strd	r0, r1, [r3, #8]
      offset += sizeof(this->x);
 8002c38:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 8002c3c:	3308      	adds	r3, #8
 8002c3e:	f8c7 31a4 	str.w	r3, [r7, #420]	; 0x1a4
      union {
        double real;
        uint64_t base;
      } u_y;
      u_y.base = 0;
 8002c42:	f04f 0200 	mov.w	r2, #0
 8002c46:	f04f 0300 	mov.w	r3, #0
 8002c4a:	e9c7 2364 	strd	r2, r3, [r7, #400]	; 0x190
      u_y.base |= ((uint64_t) (*(inbuffer + offset + 0))) << (8 * 0);
 8002c4e:	e9d7 0164 	ldrd	r0, r1, [r7, #400]	; 0x190
 8002c52:	f8d7 21a4 	ldr.w	r2, [r7, #420]	; 0x1a4
 8002c56:	f8d7 3180 	ldr.w	r3, [r7, #384]	; 0x180
 8002c5a:	4413      	add	r3, r2
 8002c5c:	781b      	ldrb	r3, [r3, #0]
 8002c5e:	b2db      	uxtb	r3, r3
 8002c60:	2200      	movs	r2, #0
 8002c62:	f8c7 3108 	str.w	r3, [r7, #264]	; 0x108
 8002c66:	f8c7 210c 	str.w	r2, [r7, #268]	; 0x10c
 8002c6a:	e9d7 4542 	ldrd	r4, r5, [r7, #264]	; 0x108
 8002c6e:	4623      	mov	r3, r4
 8002c70:	4303      	orrs	r3, r0
 8002c72:	f8c7 3100 	str.w	r3, [r7, #256]	; 0x100
 8002c76:	462b      	mov	r3, r5
 8002c78:	430b      	orrs	r3, r1
 8002c7a:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 8002c7e:	e9d7 3440 	ldrd	r3, r4, [r7, #256]	; 0x100
 8002c82:	e9c7 3464 	strd	r3, r4, [r7, #400]	; 0x190
      u_y.base |= ((uint64_t) (*(inbuffer + offset + 1))) << (8 * 1);
 8002c86:	e9d7 0164 	ldrd	r0, r1, [r7, #400]	; 0x190
 8002c8a:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 8002c8e:	1c5a      	adds	r2, r3, #1
 8002c90:	f8d7 3180 	ldr.w	r3, [r7, #384]	; 0x180
 8002c94:	4413      	add	r3, r2
 8002c96:	781b      	ldrb	r3, [r3, #0]
 8002c98:	b2db      	uxtb	r3, r3
 8002c9a:	2200      	movs	r2, #0
 8002c9c:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 8002ca0:	f8c7 20fc 	str.w	r2, [r7, #252]	; 0xfc
 8002ca4:	f04f 0200 	mov.w	r2, #0
 8002ca8:	f04f 0300 	mov.w	r3, #0
 8002cac:	e9d7 893e 	ldrd	r8, r9, [r7, #248]	; 0xf8
 8002cb0:	464c      	mov	r4, r9
 8002cb2:	0223      	lsls	r3, r4, #8
 8002cb4:	4644      	mov	r4, r8
 8002cb6:	ea43 6314 	orr.w	r3, r3, r4, lsr #24
 8002cba:	4644      	mov	r4, r8
 8002cbc:	0222      	lsls	r2, r4, #8
 8002cbe:	ea40 0402 	orr.w	r4, r0, r2
 8002cc2:	f8c7 40f0 	str.w	r4, [r7, #240]	; 0xf0
 8002cc6:	430b      	orrs	r3, r1
 8002cc8:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
 8002ccc:	e9d7 343c 	ldrd	r3, r4, [r7, #240]	; 0xf0
 8002cd0:	e9c7 3464 	strd	r3, r4, [r7, #400]	; 0x190
      u_y.base |= ((uint64_t) (*(inbuffer + offset + 2))) << (8 * 2);
 8002cd4:	e9d7 0164 	ldrd	r0, r1, [r7, #400]	; 0x190
 8002cd8:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 8002cdc:	1c9a      	adds	r2, r3, #2
 8002cde:	f8d7 3180 	ldr.w	r3, [r7, #384]	; 0x180
 8002ce2:	4413      	add	r3, r2
 8002ce4:	781b      	ldrb	r3, [r3, #0]
 8002ce6:	b2db      	uxtb	r3, r3
 8002ce8:	2200      	movs	r2, #0
 8002cea:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 8002cee:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 8002cf2:	f04f 0200 	mov.w	r2, #0
 8002cf6:	f04f 0300 	mov.w	r3, #0
 8002cfa:	e9d7 893a 	ldrd	r8, r9, [r7, #232]	; 0xe8
 8002cfe:	464c      	mov	r4, r9
 8002d00:	0423      	lsls	r3, r4, #16
 8002d02:	4644      	mov	r4, r8
 8002d04:	ea43 4314 	orr.w	r3, r3, r4, lsr #16
 8002d08:	4644      	mov	r4, r8
 8002d0a:	0422      	lsls	r2, r4, #16
 8002d0c:	ea40 0402 	orr.w	r4, r0, r2
 8002d10:	f8c7 40e0 	str.w	r4, [r7, #224]	; 0xe0
 8002d14:	430b      	orrs	r3, r1
 8002d16:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8002d1a:	e9d7 3438 	ldrd	r3, r4, [r7, #224]	; 0xe0
 8002d1e:	e9c7 3464 	strd	r3, r4, [r7, #400]	; 0x190
      u_y.base |= ((uint64_t) (*(inbuffer + offset + 3))) << (8 * 3);
 8002d22:	e9d7 0164 	ldrd	r0, r1, [r7, #400]	; 0x190
 8002d26:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 8002d2a:	1cda      	adds	r2, r3, #3
 8002d2c:	f8d7 3180 	ldr.w	r3, [r7, #384]	; 0x180
 8002d30:	4413      	add	r3, r2
 8002d32:	781b      	ldrb	r3, [r3, #0]
 8002d34:	b2db      	uxtb	r3, r3
 8002d36:	2200      	movs	r2, #0
 8002d38:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 8002d3c:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 8002d40:	e9d7 4536 	ldrd	r4, r5, [r7, #216]	; 0xd8
 8002d44:	4623      	mov	r3, r4
 8002d46:	0a1b      	lsrs	r3, r3, #8
 8002d48:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 8002d4c:	4623      	mov	r3, r4
 8002d4e:	061b      	lsls	r3, r3, #24
 8002d50:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8002d54:	e9d7 4534 	ldrd	r4, r5, [r7, #208]	; 0xd0
 8002d58:	4623      	mov	r3, r4
 8002d5a:	4303      	orrs	r3, r0
 8002d5c:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 8002d60:	462b      	mov	r3, r5
 8002d62:	430b      	orrs	r3, r1
 8002d64:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 8002d68:	e9d7 3432 	ldrd	r3, r4, [r7, #200]	; 0xc8
 8002d6c:	e9c7 3464 	strd	r3, r4, [r7, #400]	; 0x190
      u_y.base |= ((uint64_t) (*(inbuffer + offset + 4))) << (8 * 4);
 8002d70:	e9d7 0164 	ldrd	r0, r1, [r7, #400]	; 0x190
 8002d74:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 8002d78:	1d1a      	adds	r2, r3, #4
 8002d7a:	f8d7 3180 	ldr.w	r3, [r7, #384]	; 0x180
 8002d7e:	4413      	add	r3, r2
 8002d80:	781b      	ldrb	r3, [r3, #0]
 8002d82:	b2db      	uxtb	r3, r3
 8002d84:	2200      	movs	r2, #0
 8002d86:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8002d8a:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 8002d8e:	f04f 0200 	mov.w	r2, #0
 8002d92:	f04f 0300 	mov.w	r3, #0
 8002d96:	f8d7 40c0 	ldr.w	r4, [r7, #192]	; 0xc0
 8002d9a:	0023      	movs	r3, r4
 8002d9c:	2200      	movs	r2, #0
 8002d9e:	ea40 0402 	orr.w	r4, r0, r2
 8002da2:	f8c7 40b8 	str.w	r4, [r7, #184]	; 0xb8
 8002da6:	430b      	orrs	r3, r1
 8002da8:	f8c7 30bc 	str.w	r3, [r7, #188]	; 0xbc
 8002dac:	e9d7 342e 	ldrd	r3, r4, [r7, #184]	; 0xb8
 8002db0:	e9c7 3464 	strd	r3, r4, [r7, #400]	; 0x190
      u_y.base |= ((uint64_t) (*(inbuffer + offset + 5))) << (8 * 5);
 8002db4:	e9d7 0164 	ldrd	r0, r1, [r7, #400]	; 0x190
 8002db8:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 8002dbc:	1d5a      	adds	r2, r3, #5
 8002dbe:	f8d7 3180 	ldr.w	r3, [r7, #384]	; 0x180
 8002dc2:	4413      	add	r3, r2
 8002dc4:	781b      	ldrb	r3, [r3, #0]
 8002dc6:	b2db      	uxtb	r3, r3
 8002dc8:	2200      	movs	r2, #0
 8002dca:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 8002dce:	f8c7 20b4 	str.w	r2, [r7, #180]	; 0xb4
 8002dd2:	f04f 0200 	mov.w	r2, #0
 8002dd6:	f04f 0300 	mov.w	r3, #0
 8002dda:	f8d7 40b0 	ldr.w	r4, [r7, #176]	; 0xb0
 8002dde:	0223      	lsls	r3, r4, #8
 8002de0:	2200      	movs	r2, #0
 8002de2:	ea40 0402 	orr.w	r4, r0, r2
 8002de6:	f8c7 40a8 	str.w	r4, [r7, #168]	; 0xa8
 8002dea:	430b      	orrs	r3, r1
 8002dec:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 8002df0:	e9d7 342a 	ldrd	r3, r4, [r7, #168]	; 0xa8
 8002df4:	e9c7 3464 	strd	r3, r4, [r7, #400]	; 0x190
      u_y.base |= ((uint64_t) (*(inbuffer + offset + 6))) << (8 * 6);
 8002df8:	e9d7 0164 	ldrd	r0, r1, [r7, #400]	; 0x190
 8002dfc:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 8002e00:	1d9a      	adds	r2, r3, #6
 8002e02:	f8d7 3180 	ldr.w	r3, [r7, #384]	; 0x180
 8002e06:	4413      	add	r3, r2
 8002e08:	781b      	ldrb	r3, [r3, #0]
 8002e0a:	b2db      	uxtb	r3, r3
 8002e0c:	2200      	movs	r2, #0
 8002e0e:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8002e12:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 8002e16:	f04f 0200 	mov.w	r2, #0
 8002e1a:	f04f 0300 	mov.w	r3, #0
 8002e1e:	f8d7 40a0 	ldr.w	r4, [r7, #160]	; 0xa0
 8002e22:	0423      	lsls	r3, r4, #16
 8002e24:	2200      	movs	r2, #0
 8002e26:	ea40 0402 	orr.w	r4, r0, r2
 8002e2a:	f8c7 4098 	str.w	r4, [r7, #152]	; 0x98
 8002e2e:	430b      	orrs	r3, r1
 8002e30:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8002e34:	e9d7 3426 	ldrd	r3, r4, [r7, #152]	; 0x98
 8002e38:	e9c7 3464 	strd	r3, r4, [r7, #400]	; 0x190
      u_y.base |= ((uint64_t) (*(inbuffer + offset + 7))) << (8 * 7);
 8002e3c:	e9d7 0164 	ldrd	r0, r1, [r7, #400]	; 0x190
 8002e40:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 8002e44:	1dda      	adds	r2, r3, #7
 8002e46:	f8d7 3180 	ldr.w	r3, [r7, #384]	; 0x180
 8002e4a:	4413      	add	r3, r2
 8002e4c:	781b      	ldrb	r3, [r3, #0]
 8002e4e:	b2db      	uxtb	r3, r3
 8002e50:	2200      	movs	r2, #0
 8002e52:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8002e56:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 8002e5a:	f04f 0200 	mov.w	r2, #0
 8002e5e:	f04f 0300 	mov.w	r3, #0
 8002e62:	f8d7 4090 	ldr.w	r4, [r7, #144]	; 0x90
 8002e66:	0623      	lsls	r3, r4, #24
 8002e68:	2200      	movs	r2, #0
 8002e6a:	ea40 0402 	orr.w	r4, r0, r2
 8002e6e:	f8c7 4088 	str.w	r4, [r7, #136]	; 0x88
 8002e72:	430b      	orrs	r3, r1
 8002e74:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8002e78:	e9d7 3422 	ldrd	r3, r4, [r7, #136]	; 0x88
 8002e7c:	e9c7 3464 	strd	r3, r4, [r7, #400]	; 0x190
      this->y = u_y.real;
 8002e80:	e9d7 0164 	ldrd	r0, r1, [r7, #400]	; 0x190
 8002e84:	f8d7 3184 	ldr.w	r3, [r7, #388]	; 0x184
 8002e88:	e9c3 0104 	strd	r0, r1, [r3, #16]
      offset += sizeof(this->y);
 8002e8c:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 8002e90:	3308      	adds	r3, #8
 8002e92:	f8c7 31a4 	str.w	r3, [r7, #420]	; 0x1a4
      union {
        double real;
        uint64_t base;
      } u_z;
      u_z.base = 0;
 8002e96:	f04f 0200 	mov.w	r2, #0
 8002e9a:	f04f 0300 	mov.w	r3, #0
 8002e9e:	e9c7 2362 	strd	r2, r3, [r7, #392]	; 0x188
      u_z.base |= ((uint64_t) (*(inbuffer + offset + 0))) << (8 * 0);
 8002ea2:	e9d7 0162 	ldrd	r0, r1, [r7, #392]	; 0x188
 8002ea6:	f8d7 21a4 	ldr.w	r2, [r7, #420]	; 0x1a4
 8002eaa:	f8d7 3180 	ldr.w	r3, [r7, #384]	; 0x180
 8002eae:	4413      	add	r3, r2
 8002eb0:	781b      	ldrb	r3, [r3, #0]
 8002eb2:	b2db      	uxtb	r3, r3
 8002eb4:	2200      	movs	r2, #0
 8002eb6:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8002eba:	f8c7 2084 	str.w	r2, [r7, #132]	; 0x84
 8002ebe:	e9d7 4520 	ldrd	r4, r5, [r7, #128]	; 0x80
 8002ec2:	4623      	mov	r3, r4
 8002ec4:	4303      	orrs	r3, r0
 8002ec6:	67bb      	str	r3, [r7, #120]	; 0x78
 8002ec8:	462b      	mov	r3, r5
 8002eca:	430b      	orrs	r3, r1
 8002ecc:	67fb      	str	r3, [r7, #124]	; 0x7c
 8002ece:	e9d7 341e 	ldrd	r3, r4, [r7, #120]	; 0x78
 8002ed2:	e9c7 3462 	strd	r3, r4, [r7, #392]	; 0x188
      u_z.base |= ((uint64_t) (*(inbuffer + offset + 1))) << (8 * 1);
 8002ed6:	e9d7 0162 	ldrd	r0, r1, [r7, #392]	; 0x188
 8002eda:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 8002ede:	1c5a      	adds	r2, r3, #1
 8002ee0:	f8d7 3180 	ldr.w	r3, [r7, #384]	; 0x180
 8002ee4:	4413      	add	r3, r2
 8002ee6:	781b      	ldrb	r3, [r3, #0]
 8002ee8:	b2db      	uxtb	r3, r3
 8002eea:	2200      	movs	r2, #0
 8002eec:	673b      	str	r3, [r7, #112]	; 0x70
 8002eee:	677a      	str	r2, [r7, #116]	; 0x74
 8002ef0:	f04f 0200 	mov.w	r2, #0
 8002ef4:	f04f 0300 	mov.w	r3, #0
 8002ef8:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 8002efc:	464c      	mov	r4, r9
 8002efe:	0223      	lsls	r3, r4, #8
 8002f00:	4644      	mov	r4, r8
 8002f02:	ea43 6314 	orr.w	r3, r3, r4, lsr #24
 8002f06:	4644      	mov	r4, r8
 8002f08:	0222      	lsls	r2, r4, #8
 8002f0a:	ea40 0402 	orr.w	r4, r0, r2
 8002f0e:	66bc      	str	r4, [r7, #104]	; 0x68
 8002f10:	430b      	orrs	r3, r1
 8002f12:	66fb      	str	r3, [r7, #108]	; 0x6c
 8002f14:	e9d7 341a 	ldrd	r3, r4, [r7, #104]	; 0x68
 8002f18:	e9c7 3462 	strd	r3, r4, [r7, #392]	; 0x188
      u_z.base |= ((uint64_t) (*(inbuffer + offset + 2))) << (8 * 2);
 8002f1c:	e9d7 0162 	ldrd	r0, r1, [r7, #392]	; 0x188
 8002f20:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 8002f24:	1c9a      	adds	r2, r3, #2
 8002f26:	f8d7 3180 	ldr.w	r3, [r7, #384]	; 0x180
 8002f2a:	4413      	add	r3, r2
 8002f2c:	781b      	ldrb	r3, [r3, #0]
 8002f2e:	b2db      	uxtb	r3, r3
 8002f30:	2200      	movs	r2, #0
 8002f32:	663b      	str	r3, [r7, #96]	; 0x60
 8002f34:	667a      	str	r2, [r7, #100]	; 0x64
 8002f36:	f04f 0200 	mov.w	r2, #0
 8002f3a:	f04f 0300 	mov.w	r3, #0
 8002f3e:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 8002f42:	464c      	mov	r4, r9
 8002f44:	0423      	lsls	r3, r4, #16
 8002f46:	4644      	mov	r4, r8
 8002f48:	ea43 4314 	orr.w	r3, r3, r4, lsr #16
 8002f4c:	4644      	mov	r4, r8
 8002f4e:	0422      	lsls	r2, r4, #16
 8002f50:	ea40 0402 	orr.w	r4, r0, r2
 8002f54:	65bc      	str	r4, [r7, #88]	; 0x58
 8002f56:	430b      	orrs	r3, r1
 8002f58:	65fb      	str	r3, [r7, #92]	; 0x5c
 8002f5a:	e9d7 3416 	ldrd	r3, r4, [r7, #88]	; 0x58
 8002f5e:	e9c7 3462 	strd	r3, r4, [r7, #392]	; 0x188
      u_z.base |= ((uint64_t) (*(inbuffer + offset + 3))) << (8 * 3);
 8002f62:	e9d7 0162 	ldrd	r0, r1, [r7, #392]	; 0x188
 8002f66:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 8002f6a:	1cda      	adds	r2, r3, #3
 8002f6c:	f8d7 3180 	ldr.w	r3, [r7, #384]	; 0x180
 8002f70:	4413      	add	r3, r2
 8002f72:	781b      	ldrb	r3, [r3, #0]
 8002f74:	b2db      	uxtb	r3, r3
 8002f76:	2200      	movs	r2, #0
 8002f78:	653b      	str	r3, [r7, #80]	; 0x50
 8002f7a:	657a      	str	r2, [r7, #84]	; 0x54
 8002f7c:	e9d7 4514 	ldrd	r4, r5, [r7, #80]	; 0x50
 8002f80:	4623      	mov	r3, r4
 8002f82:	0a1b      	lsrs	r3, r3, #8
 8002f84:	64fb      	str	r3, [r7, #76]	; 0x4c
 8002f86:	4623      	mov	r3, r4
 8002f88:	061b      	lsls	r3, r3, #24
 8002f8a:	64bb      	str	r3, [r7, #72]	; 0x48
 8002f8c:	e9d7 4512 	ldrd	r4, r5, [r7, #72]	; 0x48
 8002f90:	4623      	mov	r3, r4
 8002f92:	4303      	orrs	r3, r0
 8002f94:	643b      	str	r3, [r7, #64]	; 0x40
 8002f96:	462b      	mov	r3, r5
 8002f98:	430b      	orrs	r3, r1
 8002f9a:	647b      	str	r3, [r7, #68]	; 0x44
 8002f9c:	e9d7 3410 	ldrd	r3, r4, [r7, #64]	; 0x40
 8002fa0:	e9c7 3462 	strd	r3, r4, [r7, #392]	; 0x188
      u_z.base |= ((uint64_t) (*(inbuffer + offset + 4))) << (8 * 4);
 8002fa4:	e9d7 0162 	ldrd	r0, r1, [r7, #392]	; 0x188
 8002fa8:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 8002fac:	1d1a      	adds	r2, r3, #4
 8002fae:	f8d7 3180 	ldr.w	r3, [r7, #384]	; 0x180
 8002fb2:	4413      	add	r3, r2
 8002fb4:	781b      	ldrb	r3, [r3, #0]
 8002fb6:	b2db      	uxtb	r3, r3
 8002fb8:	2200      	movs	r2, #0
 8002fba:	63bb      	str	r3, [r7, #56]	; 0x38
 8002fbc:	63fa      	str	r2, [r7, #60]	; 0x3c
 8002fbe:	f04f 0200 	mov.w	r2, #0
 8002fc2:	f04f 0300 	mov.w	r3, #0
 8002fc6:	6bbc      	ldr	r4, [r7, #56]	; 0x38
 8002fc8:	0023      	movs	r3, r4
 8002fca:	2200      	movs	r2, #0
 8002fcc:	ea40 0402 	orr.w	r4, r0, r2
 8002fd0:	633c      	str	r4, [r7, #48]	; 0x30
 8002fd2:	430b      	orrs	r3, r1
 8002fd4:	637b      	str	r3, [r7, #52]	; 0x34
 8002fd6:	e9d7 340c 	ldrd	r3, r4, [r7, #48]	; 0x30
 8002fda:	e9c7 3462 	strd	r3, r4, [r7, #392]	; 0x188
      u_z.base |= ((uint64_t) (*(inbuffer + offset + 5))) << (8 * 5);
 8002fde:	e9d7 0162 	ldrd	r0, r1, [r7, #392]	; 0x188
 8002fe2:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 8002fe6:	1d5a      	adds	r2, r3, #5
 8002fe8:	f8d7 3180 	ldr.w	r3, [r7, #384]	; 0x180
 8002fec:	4413      	add	r3, r2
 8002fee:	781b      	ldrb	r3, [r3, #0]
 8002ff0:	b2db      	uxtb	r3, r3
 8002ff2:	2200      	movs	r2, #0
 8002ff4:	62bb      	str	r3, [r7, #40]	; 0x28
 8002ff6:	62fa      	str	r2, [r7, #44]	; 0x2c
 8002ff8:	f04f 0200 	mov.w	r2, #0
 8002ffc:	f04f 0300 	mov.w	r3, #0
 8003000:	6abc      	ldr	r4, [r7, #40]	; 0x28
 8003002:	0223      	lsls	r3, r4, #8
 8003004:	2200      	movs	r2, #0
 8003006:	ea40 0402 	orr.w	r4, r0, r2
 800300a:	623c      	str	r4, [r7, #32]
 800300c:	430b      	orrs	r3, r1
 800300e:	627b      	str	r3, [r7, #36]	; 0x24
 8003010:	e9d7 3408 	ldrd	r3, r4, [r7, #32]
 8003014:	e9c7 3462 	strd	r3, r4, [r7, #392]	; 0x188
      u_z.base |= ((uint64_t) (*(inbuffer + offset + 6))) << (8 * 6);
 8003018:	e9d7 0162 	ldrd	r0, r1, [r7, #392]	; 0x188
 800301c:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 8003020:	3306      	adds	r3, #6
 8003022:	f8d7 2180 	ldr.w	r2, [r7, #384]	; 0x180
 8003026:	4413      	add	r3, r2
 8003028:	781b      	ldrb	r3, [r3, #0]
 800302a:	b2db      	uxtb	r3, r3
 800302c:	2200      	movs	r2, #0
 800302e:	61bb      	str	r3, [r7, #24]
 8003030:	61fa      	str	r2, [r7, #28]
 8003032:	f04f 0200 	mov.w	r2, #0
 8003036:	f04f 0300 	mov.w	r3, #0
 800303a:	69bc      	ldr	r4, [r7, #24]
 800303c:	0423      	lsls	r3, r4, #16
 800303e:	2200      	movs	r2, #0
 8003040:	ea40 0402 	orr.w	r4, r0, r2
 8003044:	613c      	str	r4, [r7, #16]
 8003046:	430b      	orrs	r3, r1
 8003048:	617b      	str	r3, [r7, #20]
 800304a:	e9d7 3404 	ldrd	r3, r4, [r7, #16]
 800304e:	e9c7 3462 	strd	r3, r4, [r7, #392]	; 0x188
      u_z.base |= ((uint64_t) (*(inbuffer + offset + 7))) << (8 * 7);
 8003052:	e9d7 0162 	ldrd	r0, r1, [r7, #392]	; 0x188
 8003056:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 800305a:	3307      	adds	r3, #7
 800305c:	f8d7 2180 	ldr.w	r2, [r7, #384]	; 0x180
 8003060:	4413      	add	r3, r2
 8003062:	781b      	ldrb	r3, [r3, #0]
 8003064:	b2db      	uxtb	r3, r3
 8003066:	2200      	movs	r2, #0
 8003068:	60bb      	str	r3, [r7, #8]
 800306a:	60fa      	str	r2, [r7, #12]
 800306c:	f04f 0200 	mov.w	r2, #0
 8003070:	f04f 0300 	mov.w	r3, #0
 8003074:	68bc      	ldr	r4, [r7, #8]
 8003076:	0623      	lsls	r3, r4, #24
 8003078:	2200      	movs	r2, #0
 800307a:	ea40 0402 	orr.w	r4, r0, r2
 800307e:	603c      	str	r4, [r7, #0]
 8003080:	430b      	orrs	r3, r1
 8003082:	607b      	str	r3, [r7, #4]
 8003084:	e9d7 3400 	ldrd	r3, r4, [r7]
 8003088:	e9c7 3462 	strd	r3, r4, [r7, #392]	; 0x188
      this->z = u_z.real;
 800308c:	e9d7 2362 	ldrd	r2, r3, [r7, #392]	; 0x188
 8003090:	f8d7 1184 	ldr.w	r1, [r7, #388]	; 0x184
 8003094:	e9c1 2306 	strd	r2, r3, [r1, #24]
      offset += sizeof(this->z);
 8003098:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
 800309c:	3308      	adds	r3, #8
 800309e:	f8c7 31a4 	str.w	r3, [r7, #420]	; 0x1a4
     return offset;
 80030a2:	f8d7 31a4 	ldr.w	r3, [r7, #420]	; 0x1a4
    }
 80030a6:	4618      	mov	r0, r3
 80030a8:	f507 77d6 	add.w	r7, r7, #428	; 0x1ac
 80030ac:	46bd      	mov	sp, r7
 80030ae:	e8bd 0fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp}
 80030b2:	4770      	bx	lr

080030b4 <_ZN13geometry_msgs5Point7getTypeEv>:

    const char * getType(){ return "geometry_msgs/Point"; };
 80030b4:	b480      	push	{r7}
 80030b6:	b083      	sub	sp, #12
 80030b8:	af00      	add	r7, sp, #0
 80030ba:	6078      	str	r0, [r7, #4]
 80030bc:	4b03      	ldr	r3, [pc, #12]	; (80030cc <_ZN13geometry_msgs5Point7getTypeEv+0x18>)
 80030be:	4618      	mov	r0, r3
 80030c0:	370c      	adds	r7, #12
 80030c2:	46bd      	mov	sp, r7
 80030c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030c8:	4770      	bx	lr
 80030ca:	bf00      	nop
 80030cc:	0800de54 	.word	0x0800de54

080030d0 <_ZN13geometry_msgs5Point6getMD5Ev>:
    const char * getMD5(){ return "4a842b65f413084dc2b10fb484ea7f17"; };
 80030d0:	b480      	push	{r7}
 80030d2:	b083      	sub	sp, #12
 80030d4:	af00      	add	r7, sp, #0
 80030d6:	6078      	str	r0, [r7, #4]
 80030d8:	4b03      	ldr	r3, [pc, #12]	; (80030e8 <_ZN13geometry_msgs5Point6getMD5Ev+0x18>)
 80030da:	4618      	mov	r0, r3
 80030dc:	370c      	adds	r7, #12
 80030de:	46bd      	mov	sp, r7
 80030e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030e4:	4770      	bx	lr
 80030e6:	bf00      	nop
 80030e8:	0800de68 	.word	0x0800de68

080030ec <_ZN3ROS16mecanum_callbackERKN13geometry_msgs5PointE>:

geometry_msgs::Point car_speed;
ros::Subscriber<geometry_msgs::Point> mecanum_sub("mecanum_toSTM", ROS::mecanum_callback);
ros::Publisher mecanum_pub("mecanum_fromSTM", &car_speed);

void ROS::mecanum_callback(const geometry_msgs::Point &msgs){
 80030ec:	b580      	push	{r7, lr}
 80030ee:	b082      	sub	sp, #8
 80030f0:	af00      	add	r7, sp, #0
 80030f2:	6078      	str	r0, [r7, #4]
	mecanum.CAR_Goal.Vx = msgs.x;
 80030f4:	687b      	ldr	r3, [r7, #4]
 80030f6:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80030fa:	490b      	ldr	r1, [pc, #44]	; (8003128 <_ZN3ROS16mecanum_callbackERKN13geometry_msgs5PointE+0x3c>)
 80030fc:	e9c1 2300 	strd	r2, r3, [r1]
	mecanum.CAR_Goal.Vy = msgs.y;
 8003100:	687b      	ldr	r3, [r7, #4]
 8003102:	e9d3 2304 	ldrd	r2, r3, [r3, #16]
 8003106:	4908      	ldr	r1, [pc, #32]	; (8003128 <_ZN3ROS16mecanum_callbackERKN13geometry_msgs5PointE+0x3c>)
 8003108:	e9c1 2302 	strd	r2, r3, [r1, #8]
	mecanum.CAR_Goal.Omega = msgs.z;
 800310c:	687b      	ldr	r3, [r7, #4]
 800310e:	e9d3 2306 	ldrd	r2, r3, [r3, #24]
 8003112:	4905      	ldr	r1, [pc, #20]	; (8003128 <_ZN3ROS16mecanum_callbackERKN13geometry_msgs5PointE+0x3c>)
 8003114:	e9c1 2304 	strd	r2, r3, [r1, #16]
	mecanum.run();
 8003118:	4803      	ldr	r0, [pc, #12]	; (8003128 <_ZN3ROS16mecanum_callbackERKN13geometry_msgs5PointE+0x3c>)
 800311a:	f7fe f967 	bl	80013ec <_ZN7Mecanum3runEv>
}
 800311e:	bf00      	nop
 8003120:	3708      	adds	r7, #8
 8003122:	46bd      	mov	sp, r7
 8003124:	bd80      	pop	{r7, pc}
 8003126:	bf00      	nop
 8003128:	24000678 	.word	0x24000678

0800312c <_ZN3ROS5setupEv>:
// 	car_speed.z = mecanum.CAR_Now.Omega;
// 	mecanum_pub.publish(&car_speed);
// }


void ROS::setup(void){
 800312c:	b580      	push	{r7, lr}
 800312e:	af00      	add	r7, sp, #0
	nh.initNode();
 8003130:	4804      	ldr	r0, [pc, #16]	; (8003144 <_ZN3ROS5setupEv+0x18>)
 8003132:	f000 f941 	bl	80033b8 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8initNodeEv>

    nh.subscribe(mecanum_sub);
 8003136:	4904      	ldr	r1, [pc, #16]	; (8003148 <_ZN3ROS5setupEv+0x1c>)
 8003138:	4802      	ldr	r0, [pc, #8]	; (8003144 <_ZN3ROS5setupEv+0x18>)
 800313a:	f000 f95a 	bl	80033f2 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE9subscribeINS_10SubscriberIN13geometry_msgs5PointEvEEEEbRT_>

//    nh.advertise(mecanum_pub);
}
 800313e:	bf00      	nop
 8003140:	bd80      	pop	{r7, pc}
 8003142:	bf00      	nop
 8003144:	240006c4 	.word	0x240006c4
 8003148:	24001020 	.word	0x24001020

0800314c <_ZN3ROS4loopEv>:

void ROS::loop(void){
 800314c:	b580      	push	{r7, lr}
 800314e:	af00      	add	r7, sp, #0
	nh.spinOnce();
 8003150:	4802      	ldr	r0, [pc, #8]	; (800315c <_ZN3ROS4loopEv+0x10>)
 8003152:	f000 f979 	bl	8003448 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv>
}
 8003156:	bf00      	nop
 8003158:	bd80      	pop	{r7, pc}
 800315a:	bf00      	nop
 800315c:	240006c4 	.word	0x240006c4

08003160 <HAL_UART_TxCpltCallback>:


void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
{
 8003160:	b580      	push	{r7, lr}
 8003162:	b082      	sub	sp, #8
 8003164:	af00      	add	r7, sp, #0
 8003166:	6078      	str	r0, [r7, #4]
    nh.getHardware()->flush();
 8003168:	4805      	ldr	r0, [pc, #20]	; (8003180 <HAL_UART_TxCpltCallback+0x20>)
 800316a:	f000 fb46 	bl	80037fa <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE11getHardwareEv>
 800316e:	4603      	mov	r3, r0
 8003170:	4618      	mov	r0, r3
 8003172:	f7ff f9f7 	bl	8002564 <_ZN13STM32Hardware5flushEv>
}
 8003176:	bf00      	nop
 8003178:	3708      	adds	r7, #8
 800317a:	46bd      	mov	sp, r7
 800317c:	bd80      	pop	{r7, pc}
 800317e:	bf00      	nop
 8003180:	240006c4 	.word	0x240006c4

08003184 <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
{
 8003184:	b580      	push	{r7, lr}
 8003186:	b082      	sub	sp, #8
 8003188:	af00      	add	r7, sp, #0
 800318a:	6078      	str	r0, [r7, #4]
    nh.getHardware()->reset_rbuf();
 800318c:	4805      	ldr	r0, [pc, #20]	; (80031a4 <HAL_UART_RxCpltCallback+0x20>)
 800318e:	f000 fb34 	bl	80037fa <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE11getHardwareEv>
 8003192:	4603      	mov	r3, r0
 8003194:	4618      	mov	r0, r3
 8003196:	f7ff f9a6 	bl	80024e6 <_ZN13STM32Hardware10reset_rbufEv>
}
 800319a:	bf00      	nop
 800319c:	3708      	adds	r7, #8
 800319e:	46bd      	mov	sp, r7
 80031a0:	bd80      	pop	{r7, pc}
 80031a2:	bf00      	nop
 80031a4:	240006c4 	.word	0x240006c4

080031a8 <_ZN3ros3Msg8varToArrIPhmEEvT_T0_>:
    return 8;
  }

  // Copy data from variable into a byte array
  template<typename A, typename V>
  static void varToArr(A arr, const V var)
 80031a8:	b480      	push	{r7}
 80031aa:	b085      	sub	sp, #20
 80031ac:	af00      	add	r7, sp, #0
 80031ae:	6078      	str	r0, [r7, #4]
 80031b0:	6039      	str	r1, [r7, #0]
  {
    for (size_t i = 0; i < sizeof(V); i++)
 80031b2:	2300      	movs	r3, #0
 80031b4:	60fb      	str	r3, [r7, #12]
 80031b6:	68fb      	ldr	r3, [r7, #12]
 80031b8:	2b03      	cmp	r3, #3
 80031ba:	d80d      	bhi.n	80031d8 <_ZN3ros3Msg8varToArrIPhmEEvT_T0_+0x30>
      arr[i] = (var >> (8 * i));
 80031bc:	68fb      	ldr	r3, [r7, #12]
 80031be:	00db      	lsls	r3, r3, #3
 80031c0:	683a      	ldr	r2, [r7, #0]
 80031c2:	fa22 f103 	lsr.w	r1, r2, r3
 80031c6:	687a      	ldr	r2, [r7, #4]
 80031c8:	68fb      	ldr	r3, [r7, #12]
 80031ca:	4413      	add	r3, r2
 80031cc:	b2ca      	uxtb	r2, r1
 80031ce:	701a      	strb	r2, [r3, #0]
    for (size_t i = 0; i < sizeof(V); i++)
 80031d0:	68fb      	ldr	r3, [r7, #12]
 80031d2:	3301      	adds	r3, #1
 80031d4:	60fb      	str	r3, [r7, #12]
 80031d6:	e7ee      	b.n	80031b6 <_ZN3ros3Msg8varToArrIPhmEEvT_T0_+0xe>
  }
 80031d8:	bf00      	nop
 80031da:	3714      	adds	r7, #20
 80031dc:	46bd      	mov	sp, r7
 80031de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80031e2:	4770      	bx	lr

080031e4 <_ZN3ros3Msg8arrToVarImPhEEvRT_T0_>:

  // Copy data from a byte array into variable
  template<typename V, typename A>
  static void arrToVar(V& var, const A arr)
 80031e4:	b480      	push	{r7}
 80031e6:	b085      	sub	sp, #20
 80031e8:	af00      	add	r7, sp, #0
 80031ea:	6078      	str	r0, [r7, #4]
 80031ec:	6039      	str	r1, [r7, #0]
  {
    var = 0;
 80031ee:	687b      	ldr	r3, [r7, #4]
 80031f0:	2200      	movs	r2, #0
 80031f2:	601a      	str	r2, [r3, #0]
    for (size_t i = 0; i < sizeof(V); i++)
 80031f4:	2300      	movs	r3, #0
 80031f6:	60fb      	str	r3, [r7, #12]
 80031f8:	68fb      	ldr	r3, [r7, #12]
 80031fa:	2b03      	cmp	r3, #3
 80031fc:	d811      	bhi.n	8003222 <_ZN3ros3Msg8arrToVarImPhEEvRT_T0_+0x3e>
      var |= (arr[i] << (8 * i));
 80031fe:	687b      	ldr	r3, [r7, #4]
 8003200:	681b      	ldr	r3, [r3, #0]
 8003202:	6839      	ldr	r1, [r7, #0]
 8003204:	68fa      	ldr	r2, [r7, #12]
 8003206:	440a      	add	r2, r1
 8003208:	7812      	ldrb	r2, [r2, #0]
 800320a:	4611      	mov	r1, r2
 800320c:	68fa      	ldr	r2, [r7, #12]
 800320e:	00d2      	lsls	r2, r2, #3
 8003210:	fa01 f202 	lsl.w	r2, r1, r2
 8003214:	431a      	orrs	r2, r3
 8003216:	687b      	ldr	r3, [r7, #4]
 8003218:	601a      	str	r2, [r3, #0]
    for (size_t i = 0; i < sizeof(V); i++)
 800321a:	68fb      	ldr	r3, [r7, #12]
 800321c:	3301      	adds	r3, #1
 800321e:	60fb      	str	r3, [r7, #12]
 8003220:	e7ea      	b.n	80031f8 <_ZN3ros3Msg8arrToVarImPhEEvRT_T0_+0x14>
  }
 8003222:	bf00      	nop
 8003224:	3714      	adds	r7, #20
 8003226:	46bd      	mov	sp, r7
 8003228:	f85d 7b04 	ldr.w	r7, [sp], #4
 800322c:	4770      	bx	lr
	...

08003230 <_ZN3ros15NodeHandleBase_C1Ev>:
#include "ros/msg.h"

namespace ros
{

class NodeHandleBase_
 8003230:	b480      	push	{r7}
 8003232:	b083      	sub	sp, #12
 8003234:	af00      	add	r7, sp, #0
 8003236:	6078      	str	r0, [r7, #4]
 8003238:	4a04      	ldr	r2, [pc, #16]	; (800324c <_ZN3ros15NodeHandleBase_C1Ev+0x1c>)
 800323a:	687b      	ldr	r3, [r7, #4]
 800323c:	601a      	str	r2, [r3, #0]
 800323e:	687b      	ldr	r3, [r7, #4]
 8003240:	4618      	mov	r0, r3
 8003242:	370c      	adds	r7, #12
 8003244:	46bd      	mov	sp, r7
 8003246:	f85d 7b04 	ldr.w	r7, [sp], #4
 800324a:	4770      	bx	lr
 800324c:	0800df68 	.word	0x0800df68

08003250 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EEC1Ev>:

  /*
   * Setup Functions
   */
public:
  NodeHandle_() : configured_(false)
 8003250:	b580      	push	{r7, lr}
 8003252:	b086      	sub	sp, #24
 8003254:	af00      	add	r7, sp, #0
 8003256:	6078      	str	r0, [r7, #4]
 8003258:	687b      	ldr	r3, [r7, #4]
 800325a:	4618      	mov	r0, r3
 800325c:	f7ff ffe8 	bl	8003230 <_ZN3ros15NodeHandleBase_C1Ev>
 8003260:	4a3a      	ldr	r2, [pc, #232]	; (800334c <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EEC1Ev+0xfc>)
 8003262:	687b      	ldr	r3, [r7, #4]
 8003264:	601a      	str	r2, [r3, #0]
 8003266:	687b      	ldr	r3, [r7, #4]
 8003268:	3304      	adds	r3, #4
 800326a:	4618      	mov	r0, r3
 800326c:	f7ff f914 	bl	8002498 <_ZN13STM32HardwareC1Ev>
 8003270:	687b      	ldr	r3, [r7, #4]
 8003272:	2200      	movs	r2, #0
 8003274:	f883 2900 	strb.w	r2, [r3, #2304]	; 0x900
 8003278:	687b      	ldr	r3, [r7, #4]
 800327a:	f603 1314 	addw	r3, r3, #2324	; 0x914
 800327e:	4618      	mov	r0, r3
 8003280:	f7fe fd76 	bl	8001d70 <_ZN14rosserial_msgs20RequestParamResponseC1Ev>
  {

    for (unsigned int i = 0; i < MAX_PUBLISHERS; i++)
 8003284:	2300      	movs	r3, #0
 8003286:	617b      	str	r3, [r7, #20]
 8003288:	697b      	ldr	r3, [r7, #20]
 800328a:	2b18      	cmp	r3, #24
 800328c:	d80b      	bhi.n	80032a6 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EEC1Ev+0x56>
      publishers[i] = 0;
 800328e:	687a      	ldr	r2, [r7, #4]
 8003290:	697b      	ldr	r3, [r7, #20]
 8003292:	f503 7302 	add.w	r3, r3, #520	; 0x208
 8003296:	009b      	lsls	r3, r3, #2
 8003298:	4413      	add	r3, r2
 800329a:	2200      	movs	r2, #0
 800329c:	605a      	str	r2, [r3, #4]
    for (unsigned int i = 0; i < MAX_PUBLISHERS; i++)
 800329e:	697b      	ldr	r3, [r7, #20]
 80032a0:	3301      	adds	r3, #1
 80032a2:	617b      	str	r3, [r7, #20]
 80032a4:	e7f0      	b.n	8003288 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EEC1Ev+0x38>

    for (unsigned int i = 0; i < MAX_SUBSCRIBERS; i++)
 80032a6:	2300      	movs	r3, #0
 80032a8:	613b      	str	r3, [r7, #16]
 80032aa:	693b      	ldr	r3, [r7, #16]
 80032ac:	2b18      	cmp	r3, #24
 80032ae:	d80a      	bhi.n	80032c6 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EEC1Ev+0x76>
      subscribers[i] = 0;
 80032b0:	687b      	ldr	r3, [r7, #4]
 80032b2:	693a      	ldr	r2, [r7, #16]
 80032b4:	f202 2222 	addw	r2, r2, #546	; 0x222
 80032b8:	2100      	movs	r1, #0
 80032ba:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    for (unsigned int i = 0; i < MAX_SUBSCRIBERS; i++)
 80032be:	693b      	ldr	r3, [r7, #16]
 80032c0:	3301      	adds	r3, #1
 80032c2:	613b      	str	r3, [r7, #16]
 80032c4:	e7f1      	b.n	80032aa <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EEC1Ev+0x5a>

    for (unsigned int i = 0; i < INPUT_SIZE; i++)
 80032c6:	2300      	movs	r3, #0
 80032c8:	60fb      	str	r3, [r7, #12]
 80032ca:	68fb      	ldr	r3, [r7, #12]
 80032cc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80032d0:	d20a      	bcs.n	80032e8 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EEC1Ev+0x98>
      message_in[i] = 0;
 80032d2:	687a      	ldr	r2, [r7, #4]
 80032d4:	68fb      	ldr	r3, [r7, #12]
 80032d6:	4413      	add	r3, r2
 80032d8:	f203 4324 	addw	r3, r3, #1060	; 0x424
 80032dc:	2200      	movs	r2, #0
 80032de:	701a      	strb	r2, [r3, #0]
    for (unsigned int i = 0; i < INPUT_SIZE; i++)
 80032e0:	68fb      	ldr	r3, [r7, #12]
 80032e2:	3301      	adds	r3, #1
 80032e4:	60fb      	str	r3, [r7, #12]
 80032e6:	e7f0      	b.n	80032ca <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EEC1Ev+0x7a>

    for (unsigned int i = 0; i < OUTPUT_SIZE; i++)
 80032e8:	2300      	movs	r3, #0
 80032ea:	60bb      	str	r3, [r7, #8]
 80032ec:	68bb      	ldr	r3, [r7, #8]
 80032ee:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80032f2:	d20a      	bcs.n	800330a <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EEC1Ev+0xba>
      message_out[i] = 0;
 80032f4:	687a      	ldr	r2, [r7, #4]
 80032f6:	68bb      	ldr	r3, [r7, #8]
 80032f8:	4413      	add	r3, r2
 80032fa:	f203 6324 	addw	r3, r3, #1572	; 0x624
 80032fe:	2200      	movs	r2, #0
 8003300:	701a      	strb	r2, [r3, #0]
    for (unsigned int i = 0; i < OUTPUT_SIZE; i++)
 8003302:	68bb      	ldr	r3, [r7, #8]
 8003304:	3301      	adds	r3, #1
 8003306:	60bb      	str	r3, [r7, #8]
 8003308:	e7f0      	b.n	80032ec <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EEC1Ev+0x9c>

    req_param_resp.ints_length = 0;
 800330a:	687b      	ldr	r3, [r7, #4]
 800330c:	2200      	movs	r2, #0
 800330e:	f8c3 2918 	str.w	r2, [r3, #2328]	; 0x918
    req_param_resp.ints = NULL;
 8003312:	687b      	ldr	r3, [r7, #4]
 8003314:	2200      	movs	r2, #0
 8003316:	f8c3 2920 	str.w	r2, [r3, #2336]	; 0x920
    req_param_resp.floats_length = 0;
 800331a:	687b      	ldr	r3, [r7, #4]
 800331c:	2200      	movs	r2, #0
 800331e:	f8c3 2924 	str.w	r2, [r3, #2340]	; 0x924
    req_param_resp.floats = NULL;
 8003322:	687b      	ldr	r3, [r7, #4]
 8003324:	2200      	movs	r2, #0
 8003326:	f8c3 292c 	str.w	r2, [r3, #2348]	; 0x92c
    req_param_resp.ints_length = 0;
 800332a:	687b      	ldr	r3, [r7, #4]
 800332c:	2200      	movs	r2, #0
 800332e:	f8c3 2918 	str.w	r2, [r3, #2328]	; 0x918
    req_param_resp.ints = NULL;
 8003332:	687b      	ldr	r3, [r7, #4]
 8003334:	2200      	movs	r2, #0
 8003336:	f8c3 2920 	str.w	r2, [r3, #2336]	; 0x920

    spin_timeout_ = 0;
 800333a:	687b      	ldr	r3, [r7, #4]
 800333c:	2200      	movs	r2, #0
 800333e:	f8c3 2420 	str.w	r2, [r3, #1056]	; 0x420
  }
 8003342:	687b      	ldr	r3, [r7, #4]
 8003344:	4618      	mov	r0, r3
 8003346:	3718      	adds	r7, #24
 8003348:	46bd      	mov	sp, r7
 800334a:	bd80      	pop	{r7, pc}
 800334c:	0800df24 	.word	0x0800df24

08003350 <_ZN3ros11Subscriber_C1Ev>:

namespace ros
{

/* Base class for objects subscribers. */
class Subscriber_
 8003350:	b480      	push	{r7}
 8003352:	b083      	sub	sp, #12
 8003354:	af00      	add	r7, sp, #0
 8003356:	6078      	str	r0, [r7, #4]
 8003358:	4a04      	ldr	r2, [pc, #16]	; (800336c <_ZN3ros11Subscriber_C1Ev+0x1c>)
 800335a:	687b      	ldr	r3, [r7, #4]
 800335c:	601a      	str	r2, [r3, #0]
 800335e:	687b      	ldr	r3, [r7, #4]
 8003360:	4618      	mov	r0, r3
 8003362:	370c      	adds	r7, #12
 8003364:	46bd      	mov	sp, r7
 8003366:	f85d 7b04 	ldr.w	r7, [sp], #4
 800336a:	4770      	bx	lr
 800336c:	0800df50 	.word	0x0800df50

08003370 <_ZN3ros10SubscriberIN13geometry_msgs5PointEvEC1EPKcPFvRKS2_Ei>:
{
public:
  typedef void(*CallbackT)(const MsgT&);
  MsgT msg;

  Subscriber(const char * topic_name, CallbackT cb, int endpoint = rosserial_msgs::TopicInfo::ID_SUBSCRIBER) :
 8003370:	b580      	push	{r7, lr}
 8003372:	b084      	sub	sp, #16
 8003374:	af00      	add	r7, sp, #0
 8003376:	60f8      	str	r0, [r7, #12]
 8003378:	60b9      	str	r1, [r7, #8]
 800337a:	607a      	str	r2, [r7, #4]
 800337c:	603b      	str	r3, [r7, #0]
    cb_(cb),
    endpoint_(endpoint)
 800337e:	68fb      	ldr	r3, [r7, #12]
 8003380:	4618      	mov	r0, r3
 8003382:	f7ff ffe5 	bl	8003350 <_ZN3ros11Subscriber_C1Ev>
 8003386:	4a0b      	ldr	r2, [pc, #44]	; (80033b4 <_ZN3ros10SubscriberIN13geometry_msgs5PointEvEC1EPKcPFvRKS2_Ei+0x44>)
 8003388:	68fb      	ldr	r3, [r7, #12]
 800338a:	601a      	str	r2, [r3, #0]
 800338c:	68fb      	ldr	r3, [r7, #12]
 800338e:	3310      	adds	r3, #16
 8003390:	4618      	mov	r0, r3
 8003392:	f7ff f995 	bl	80026c0 <_ZN13geometry_msgs5PointC1Ev>
 8003396:	68fb      	ldr	r3, [r7, #12]
 8003398:	687a      	ldr	r2, [r7, #4]
 800339a:	631a      	str	r2, [r3, #48]	; 0x30
 800339c:	68fb      	ldr	r3, [r7, #12]
 800339e:	683a      	ldr	r2, [r7, #0]
 80033a0:	635a      	str	r2, [r3, #52]	; 0x34
  {
    topic_ = topic_name;
 80033a2:	68fb      	ldr	r3, [r7, #12]
 80033a4:	68ba      	ldr	r2, [r7, #8]
 80033a6:	609a      	str	r2, [r3, #8]
  };
 80033a8:	68fb      	ldr	r3, [r7, #12]
 80033aa:	4618      	mov	r0, r3
 80033ac:	3710      	adds	r7, #16
 80033ae:	46bd      	mov	sp, r7
 80033b0:	bd80      	pop	{r7, pc}
 80033b2:	bf00      	nop
 80033b4:	0800df0c 	.word	0x0800df0c

080033b8 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8initNodeEv>:
  {
    return &hardware_;
  }

  /* Start serial, initialize buffers */
  void initNode()
 80033b8:	b580      	push	{r7, lr}
 80033ba:	b082      	sub	sp, #8
 80033bc:	af00      	add	r7, sp, #0
 80033be:	6078      	str	r0, [r7, #4]
  {
    hardware_.init();
 80033c0:	687b      	ldr	r3, [r7, #4]
 80033c2:	3304      	adds	r3, #4
 80033c4:	4618      	mov	r0, r3
 80033c6:	f7ff f883 	bl	80024d0 <_ZN13STM32Hardware4initEv>
    mode_ = 0;
 80033ca:	687b      	ldr	r3, [r7, #4]
 80033cc:	2200      	movs	r2, #0
 80033ce:	f8c3 28ec 	str.w	r2, [r3, #2284]	; 0x8ec
    bytes_ = 0;
 80033d2:	687b      	ldr	r3, [r7, #4]
 80033d4:	2200      	movs	r2, #0
 80033d6:	f8c3 28f0 	str.w	r2, [r3, #2288]	; 0x8f0
    index_ = 0;
 80033da:	687b      	ldr	r3, [r7, #4]
 80033dc:	2200      	movs	r2, #0
 80033de:	f8c3 28f8 	str.w	r2, [r3, #2296]	; 0x8f8
    topic_ = 0;
 80033e2:	687b      	ldr	r3, [r7, #4]
 80033e4:	2200      	movs	r2, #0
 80033e6:	f8c3 28f4 	str.w	r2, [r3, #2292]	; 0x8f4
  };
 80033ea:	bf00      	nop
 80033ec:	3708      	adds	r7, #8
 80033ee:	46bd      	mov	sp, r7
 80033f0:	bd80      	pop	{r7, pc}

080033f2 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE9subscribeINS_10SubscriberIN13geometry_msgs5PointEvEEEEbRT_>:
    return false;
  }

  /* Register a new subscriber */
  template<typename SubscriberT>
  bool subscribe(SubscriberT& s)
 80033f2:	b480      	push	{r7}
 80033f4:	b085      	sub	sp, #20
 80033f6:	af00      	add	r7, sp, #0
 80033f8:	6078      	str	r0, [r7, #4]
 80033fa:	6039      	str	r1, [r7, #0]
  {
    for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 80033fc:	2300      	movs	r3, #0
 80033fe:	60fb      	str	r3, [r7, #12]
 8003400:	68fb      	ldr	r3, [r7, #12]
 8003402:	2b18      	cmp	r3, #24
 8003404:	dc19      	bgt.n	800343a <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE9subscribeINS_10SubscriberIN13geometry_msgs5PointEvEEEEbRT_+0x48>
    {
      if (subscribers[i] == 0) // empty slot
 8003406:	687b      	ldr	r3, [r7, #4]
 8003408:	68fa      	ldr	r2, [r7, #12]
 800340a:	f202 2222 	addw	r2, r2, #546	; 0x222
 800340e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003412:	2b00      	cmp	r3, #0
 8003414:	d10d      	bne.n	8003432 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE9subscribeINS_10SubscriberIN13geometry_msgs5PointEvEEEEbRT_+0x40>
      {
        subscribers[i] = static_cast<Subscriber_*>(&s);
 8003416:	6839      	ldr	r1, [r7, #0]
 8003418:	687b      	ldr	r3, [r7, #4]
 800341a:	68fa      	ldr	r2, [r7, #12]
 800341c:	f202 2222 	addw	r2, r2, #546	; 0x222
 8003420:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
        s.id_ = i + 100;
 8003424:	68fb      	ldr	r3, [r7, #12]
 8003426:	f103 0264 	add.w	r2, r3, #100	; 0x64
 800342a:	683b      	ldr	r3, [r7, #0]
 800342c:	605a      	str	r2, [r3, #4]
        return true;
 800342e:	2301      	movs	r3, #1
 8003430:	e004      	b.n	800343c <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE9subscribeINS_10SubscriberIN13geometry_msgs5PointEvEEEEbRT_+0x4a>
    for (int i = 0; i < MAX_SUBSCRIBERS; i++)
 8003432:	68fb      	ldr	r3, [r7, #12]
 8003434:	3301      	adds	r3, #1
 8003436:	60fb      	str	r3, [r7, #12]
 8003438:	e7e2      	b.n	8003400 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE9subscribeINS_10SubscriberIN13geometry_msgs5PointEvEEEEbRT_+0xe>
      }
    }
    return false;
 800343a:	2300      	movs	r3, #0
  }
 800343c:	4618      	mov	r0, r3
 800343e:	3714      	adds	r7, #20
 8003440:	46bd      	mov	sp, r7
 8003442:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003446:	4770      	bx	lr

08003448 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv>:
  virtual int spinOnce()
 8003448:	b580      	push	{r7, lr}
 800344a:	b084      	sub	sp, #16
 800344c:	af00      	add	r7, sp, #0
 800344e:	6078      	str	r0, [r7, #4]
    uint32_t c_time = hardware_.time();
 8003450:	687b      	ldr	r3, [r7, #4]
 8003452:	3304      	adds	r3, #4
 8003454:	4618      	mov	r0, r3
 8003456:	f7ff f927 	bl	80026a8 <_ZN13STM32Hardware4timeEv>
 800345a:	60f8      	str	r0, [r7, #12]
    if ((c_time - last_sync_receive_time) > (SYNC_SECONDS * 2200))
 800345c:	687b      	ldr	r3, [r7, #4]
 800345e:	f8d3 3908 	ldr.w	r3, [r3, #2312]	; 0x908
 8003462:	68fa      	ldr	r2, [r7, #12]
 8003464:	1ad3      	subs	r3, r2, r3
 8003466:	f642 22f8 	movw	r2, #11000	; 0x2af8
 800346a:	4293      	cmp	r3, r2
 800346c:	d903      	bls.n	8003476 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x2e>
      configured_ = false;
 800346e:	687b      	ldr	r3, [r7, #4]
 8003470:	2200      	movs	r2, #0
 8003472:	f883 2900 	strb.w	r2, [r3, #2304]	; 0x900
    if (mode_ != MODE_FIRST_FF)
 8003476:	687b      	ldr	r3, [r7, #4]
 8003478:	f8d3 38ec 	ldr.w	r3, [r3, #2284]	; 0x8ec
 800347c:	2b00      	cmp	r3, #0
 800347e:	d009      	beq.n	8003494 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x4c>
      if (c_time > last_msg_timeout_time)
 8003480:	687b      	ldr	r3, [r7, #4]
 8003482:	f8d3 390c 	ldr.w	r3, [r3, #2316]	; 0x90c
 8003486:	68fa      	ldr	r2, [r7, #12]
 8003488:	429a      	cmp	r2, r3
 800348a:	d903      	bls.n	8003494 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x4c>
        mode_ = MODE_FIRST_FF;
 800348c:	687b      	ldr	r3, [r7, #4]
 800348e:	2200      	movs	r2, #0
 8003490:	f8c3 28ec 	str.w	r2, [r3, #2284]	; 0x8ec
      if (spin_timeout_ > 0)
 8003494:	687b      	ldr	r3, [r7, #4]
 8003496:	f8d3 3420 	ldr.w	r3, [r3, #1056]	; 0x420
 800349a:	2b00      	cmp	r3, #0
 800349c:	d014      	beq.n	80034c8 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x80>
        if ((hardware_.time() - c_time) > spin_timeout_)
 800349e:	687b      	ldr	r3, [r7, #4]
 80034a0:	3304      	adds	r3, #4
 80034a2:	4618      	mov	r0, r3
 80034a4:	f7ff f900 	bl	80026a8 <_ZN13STM32Hardware4timeEv>
 80034a8:	4602      	mov	r2, r0
 80034aa:	68fb      	ldr	r3, [r7, #12]
 80034ac:	1ad2      	subs	r2, r2, r3
 80034ae:	687b      	ldr	r3, [r7, #4]
 80034b0:	f8d3 3420 	ldr.w	r3, [r3, #1056]	; 0x420
 80034b4:	429a      	cmp	r2, r3
 80034b6:	bf8c      	ite	hi
 80034b8:	2301      	movhi	r3, #1
 80034ba:	2300      	movls	r3, #0
 80034bc:	b2db      	uxtb	r3, r3
 80034be:	2b00      	cmp	r3, #0
 80034c0:	d002      	beq.n	80034c8 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x80>
          return SPIN_TIMEOUT;
 80034c2:	f06f 0301 	mvn.w	r3, #1
 80034c6:	e194      	b.n	80037f2 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x3aa>
      int data = hardware_.read();
 80034c8:	687b      	ldr	r3, [r7, #4]
 80034ca:	3304      	adds	r3, #4
 80034cc:	4618      	mov	r0, r3
 80034ce:	f7ff f81b 	bl	8002508 <_ZN13STM32Hardware4readEv>
 80034d2:	60b8      	str	r0, [r7, #8]
      if (data < 0)
 80034d4:	68bb      	ldr	r3, [r7, #8]
 80034d6:	2b00      	cmp	r3, #0
 80034d8:	f2c0 8174 	blt.w	80037c4 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x37c>
      checksum_ += data;
 80034dc:	687b      	ldr	r3, [r7, #4]
 80034de:	f8d3 28fc 	ldr.w	r2, [r3, #2300]	; 0x8fc
 80034e2:	68bb      	ldr	r3, [r7, #8]
 80034e4:	441a      	add	r2, r3
 80034e6:	687b      	ldr	r3, [r7, #4]
 80034e8:	f8c3 28fc 	str.w	r2, [r3, #2300]	; 0x8fc
      if (mode_ == MODE_MESSAGE)          /* message data being recieved */
 80034ec:	687b      	ldr	r3, [r7, #4]
 80034ee:	f8d3 38ec 	ldr.w	r3, [r3, #2284]	; 0x8ec
 80034f2:	2b07      	cmp	r3, #7
 80034f4:	d11e      	bne.n	8003534 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0xec>
        message_in[index_++] = data;
 80034f6:	687b      	ldr	r3, [r7, #4]
 80034f8:	f8d3 38f8 	ldr.w	r3, [r3, #2296]	; 0x8f8
 80034fc:	1c59      	adds	r1, r3, #1
 80034fe:	687a      	ldr	r2, [r7, #4]
 8003500:	f8c2 18f8 	str.w	r1, [r2, #2296]	; 0x8f8
 8003504:	68ba      	ldr	r2, [r7, #8]
 8003506:	b2d1      	uxtb	r1, r2
 8003508:	687a      	ldr	r2, [r7, #4]
 800350a:	4413      	add	r3, r2
 800350c:	460a      	mov	r2, r1
 800350e:	f883 2424 	strb.w	r2, [r3, #1060]	; 0x424
        bytes_--;
 8003512:	687b      	ldr	r3, [r7, #4]
 8003514:	f8d3 38f0 	ldr.w	r3, [r3, #2288]	; 0x8f0
 8003518:	1e5a      	subs	r2, r3, #1
 800351a:	687b      	ldr	r3, [r7, #4]
 800351c:	f8c3 28f0 	str.w	r2, [r3, #2288]	; 0x8f0
        if (bytes_ == 0)                 /* is message complete? if so, checksum */
 8003520:	687b      	ldr	r3, [r7, #4]
 8003522:	f8d3 38f0 	ldr.w	r3, [r3, #2288]	; 0x8f0
 8003526:	2b00      	cmp	r3, #0
 8003528:	d1b4      	bne.n	8003494 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x4c>
          mode_ = MODE_MSG_CHECKSUM;
 800352a:	687b      	ldr	r3, [r7, #4]
 800352c:	2208      	movs	r2, #8
 800352e:	f8c3 28ec 	str.w	r2, [r3, #2284]	; 0x8ec
 8003532:	e7af      	b.n	8003494 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x4c>
      else if (mode_ == MODE_FIRST_FF)
 8003534:	687b      	ldr	r3, [r7, #4]
 8003536:	f8d3 38ec 	ldr.w	r3, [r3, #2284]	; 0x8ec
 800353a:	2b00      	cmp	r3, #0
 800353c:	d128      	bne.n	8003590 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x148>
        if (data == 0xff)
 800353e:	68bb      	ldr	r3, [r7, #8]
 8003540:	2bff      	cmp	r3, #255	; 0xff
 8003542:	d10d      	bne.n	8003560 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x118>
          mode_++;
 8003544:	687b      	ldr	r3, [r7, #4]
 8003546:	f8d3 38ec 	ldr.w	r3, [r3, #2284]	; 0x8ec
 800354a:	1c5a      	adds	r2, r3, #1
 800354c:	687b      	ldr	r3, [r7, #4]
 800354e:	f8c3 28ec 	str.w	r2, [r3, #2284]	; 0x8ec
          last_msg_timeout_time = c_time + SERIAL_MSG_TIMEOUT;
 8003552:	68fb      	ldr	r3, [r7, #12]
 8003554:	f103 0214 	add.w	r2, r3, #20
 8003558:	687b      	ldr	r3, [r7, #4]
 800355a:	f8c3 290c 	str.w	r2, [r3, #2316]	; 0x90c
 800355e:	e799      	b.n	8003494 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x4c>
        else if (hardware_.time() - c_time > (SYNC_SECONDS * 1000))
 8003560:	687b      	ldr	r3, [r7, #4]
 8003562:	3304      	adds	r3, #4
 8003564:	4618      	mov	r0, r3
 8003566:	f7ff f89f 	bl	80026a8 <_ZN13STM32Hardware4timeEv>
 800356a:	4602      	mov	r2, r0
 800356c:	68fb      	ldr	r3, [r7, #12]
 800356e:	1ad3      	subs	r3, r2, r3
 8003570:	f241 3288 	movw	r2, #5000	; 0x1388
 8003574:	4293      	cmp	r3, r2
 8003576:	bf8c      	ite	hi
 8003578:	2301      	movhi	r3, #1
 800357a:	2300      	movls	r3, #0
 800357c:	b2db      	uxtb	r3, r3
 800357e:	2b00      	cmp	r3, #0
 8003580:	d088      	beq.n	8003494 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x4c>
          configured_ = false;
 8003582:	687b      	ldr	r3, [r7, #4]
 8003584:	2200      	movs	r2, #0
 8003586:	f883 2900 	strb.w	r2, [r3, #2304]	; 0x900
          return SPIN_TIMEOUT;
 800358a:	f06f 0301 	mvn.w	r3, #1
 800358e:	e130      	b.n	80037f2 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x3aa>
      else if (mode_ == MODE_PROTOCOL_VER)
 8003590:	687b      	ldr	r3, [r7, #4]
 8003592:	f8d3 38ec 	ldr.w	r3, [r3, #2284]	; 0x8ec
 8003596:	2b01      	cmp	r3, #1
 8003598:	d118      	bne.n	80035cc <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x184>
        if (data == PROTOCOL_VER)
 800359a:	68bb      	ldr	r3, [r7, #8]
 800359c:	2bfe      	cmp	r3, #254	; 0xfe
 800359e:	d107      	bne.n	80035b0 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x168>
          mode_++;
 80035a0:	687b      	ldr	r3, [r7, #4]
 80035a2:	f8d3 38ec 	ldr.w	r3, [r3, #2284]	; 0x8ec
 80035a6:	1c5a      	adds	r2, r3, #1
 80035a8:	687b      	ldr	r3, [r7, #4]
 80035aa:	f8c3 28ec 	str.w	r2, [r3, #2284]	; 0x8ec
 80035ae:	e771      	b.n	8003494 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x4c>
          mode_ = MODE_FIRST_FF;
 80035b0:	687b      	ldr	r3, [r7, #4]
 80035b2:	2200      	movs	r2, #0
 80035b4:	f8c3 28ec 	str.w	r2, [r3, #2284]	; 0x8ec
          if (configured_ == false)
 80035b8:	687b      	ldr	r3, [r7, #4]
 80035ba:	f893 3900 	ldrb.w	r3, [r3, #2304]	; 0x900
 80035be:	2b00      	cmp	r3, #0
 80035c0:	f47f af68 	bne.w	8003494 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x4c>
            requestSyncTime();  /* send a msg back showing our protocol version */
 80035c4:	6878      	ldr	r0, [r7, #4]
 80035c6:	f000 f924 	bl	8003812 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv>
 80035ca:	e763      	b.n	8003494 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x4c>
      else if (mode_ == MODE_SIZE_L)      /* bottom half of message size */
 80035cc:	687b      	ldr	r3, [r7, #4]
 80035ce:	f8d3 38ec 	ldr.w	r3, [r3, #2284]	; 0x8ec
 80035d2:	2b02      	cmp	r3, #2
 80035d4:	d113      	bne.n	80035fe <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x1b6>
        bytes_ = data;
 80035d6:	687b      	ldr	r3, [r7, #4]
 80035d8:	68ba      	ldr	r2, [r7, #8]
 80035da:	f8c3 28f0 	str.w	r2, [r3, #2288]	; 0x8f0
        index_ = 0;
 80035de:	687b      	ldr	r3, [r7, #4]
 80035e0:	2200      	movs	r2, #0
 80035e2:	f8c3 28f8 	str.w	r2, [r3, #2296]	; 0x8f8
        mode_++;
 80035e6:	687b      	ldr	r3, [r7, #4]
 80035e8:	f8d3 38ec 	ldr.w	r3, [r3, #2284]	; 0x8ec
 80035ec:	1c5a      	adds	r2, r3, #1
 80035ee:	687b      	ldr	r3, [r7, #4]
 80035f0:	f8c3 28ec 	str.w	r2, [r3, #2284]	; 0x8ec
        checksum_ = data;               /* first byte for calculating size checksum */
 80035f4:	687b      	ldr	r3, [r7, #4]
 80035f6:	68ba      	ldr	r2, [r7, #8]
 80035f8:	f8c3 28fc 	str.w	r2, [r3, #2300]	; 0x8fc
 80035fc:	e74a      	b.n	8003494 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x4c>
      else if (mode_ == MODE_SIZE_H)      /* top half of message size */
 80035fe:	687b      	ldr	r3, [r7, #4]
 8003600:	f8d3 38ec 	ldr.w	r3, [r3, #2284]	; 0x8ec
 8003604:	2b03      	cmp	r3, #3
 8003606:	d110      	bne.n	800362a <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x1e2>
        bytes_ += data << 8;
 8003608:	687b      	ldr	r3, [r7, #4]
 800360a:	f8d3 28f0 	ldr.w	r2, [r3, #2288]	; 0x8f0
 800360e:	68bb      	ldr	r3, [r7, #8]
 8003610:	021b      	lsls	r3, r3, #8
 8003612:	441a      	add	r2, r3
 8003614:	687b      	ldr	r3, [r7, #4]
 8003616:	f8c3 28f0 	str.w	r2, [r3, #2288]	; 0x8f0
        mode_++;
 800361a:	687b      	ldr	r3, [r7, #4]
 800361c:	f8d3 38ec 	ldr.w	r3, [r3, #2284]	; 0x8ec
 8003620:	1c5a      	adds	r2, r3, #1
 8003622:	687b      	ldr	r3, [r7, #4]
 8003624:	f8c3 28ec 	str.w	r2, [r3, #2284]	; 0x8ec
 8003628:	e734      	b.n	8003494 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x4c>
      else if (mode_ == MODE_SIZE_CHECKSUM)
 800362a:	687b      	ldr	r3, [r7, #4]
 800362c:	f8d3 38ec 	ldr.w	r3, [r3, #2284]	; 0x8ec
 8003630:	2b04      	cmp	r3, #4
 8003632:	d116      	bne.n	8003662 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x21a>
        if ((checksum_ % 256) == 255)
 8003634:	687b      	ldr	r3, [r7, #4]
 8003636:	f8d3 38fc 	ldr.w	r3, [r3, #2300]	; 0x8fc
 800363a:	425a      	negs	r2, r3
 800363c:	b2db      	uxtb	r3, r3
 800363e:	b2d2      	uxtb	r2, r2
 8003640:	bf58      	it	pl
 8003642:	4253      	negpl	r3, r2
 8003644:	2bff      	cmp	r3, #255	; 0xff
 8003646:	d107      	bne.n	8003658 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x210>
          mode_++;
 8003648:	687b      	ldr	r3, [r7, #4]
 800364a:	f8d3 38ec 	ldr.w	r3, [r3, #2284]	; 0x8ec
 800364e:	1c5a      	adds	r2, r3, #1
 8003650:	687b      	ldr	r3, [r7, #4]
 8003652:	f8c3 28ec 	str.w	r2, [r3, #2284]	; 0x8ec
 8003656:	e71d      	b.n	8003494 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x4c>
          mode_ = MODE_FIRST_FF;          /* Abandon the frame if the msg len is wrong */
 8003658:	687b      	ldr	r3, [r7, #4]
 800365a:	2200      	movs	r2, #0
 800365c:	f8c3 28ec 	str.w	r2, [r3, #2284]	; 0x8ec
 8003660:	e718      	b.n	8003494 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x4c>
      else if (mode_ == MODE_TOPIC_L)     /* bottom half of topic id */
 8003662:	687b      	ldr	r3, [r7, #4]
 8003664:	f8d3 38ec 	ldr.w	r3, [r3, #2284]	; 0x8ec
 8003668:	2b05      	cmp	r3, #5
 800366a:	d10f      	bne.n	800368c <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x244>
        topic_ = data;
 800366c:	687b      	ldr	r3, [r7, #4]
 800366e:	68ba      	ldr	r2, [r7, #8]
 8003670:	f8c3 28f4 	str.w	r2, [r3, #2292]	; 0x8f4
        mode_++;
 8003674:	687b      	ldr	r3, [r7, #4]
 8003676:	f8d3 38ec 	ldr.w	r3, [r3, #2284]	; 0x8ec
 800367a:	1c5a      	adds	r2, r3, #1
 800367c:	687b      	ldr	r3, [r7, #4]
 800367e:	f8c3 28ec 	str.w	r2, [r3, #2284]	; 0x8ec
        checksum_ = data;               /* first byte included in checksum */
 8003682:	687b      	ldr	r3, [r7, #4]
 8003684:	68ba      	ldr	r2, [r7, #8]
 8003686:	f8c3 28fc 	str.w	r2, [r3, #2300]	; 0x8fc
 800368a:	e703      	b.n	8003494 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x4c>
      else if (mode_ == MODE_TOPIC_H)     /* top half of topic id */
 800368c:	687b      	ldr	r3, [r7, #4]
 800368e:	f8d3 38ec 	ldr.w	r3, [r3, #2284]	; 0x8ec
 8003692:	2b06      	cmp	r3, #6
 8003694:	d117      	bne.n	80036c6 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x27e>
        topic_ += data << 8;
 8003696:	687b      	ldr	r3, [r7, #4]
 8003698:	f8d3 28f4 	ldr.w	r2, [r3, #2292]	; 0x8f4
 800369c:	68bb      	ldr	r3, [r7, #8]
 800369e:	021b      	lsls	r3, r3, #8
 80036a0:	441a      	add	r2, r3
 80036a2:	687b      	ldr	r3, [r7, #4]
 80036a4:	f8c3 28f4 	str.w	r2, [r3, #2292]	; 0x8f4
        mode_ = MODE_MESSAGE;
 80036a8:	687b      	ldr	r3, [r7, #4]
 80036aa:	2207      	movs	r2, #7
 80036ac:	f8c3 28ec 	str.w	r2, [r3, #2284]	; 0x8ec
        if (bytes_ == 0)
 80036b0:	687b      	ldr	r3, [r7, #4]
 80036b2:	f8d3 38f0 	ldr.w	r3, [r3, #2288]	; 0x8f0
 80036b6:	2b00      	cmp	r3, #0
 80036b8:	f47f aeec 	bne.w	8003494 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x4c>
          mode_ = MODE_MSG_CHECKSUM;
 80036bc:	687b      	ldr	r3, [r7, #4]
 80036be:	2208      	movs	r2, #8
 80036c0:	f8c3 28ec 	str.w	r2, [r3, #2284]	; 0x8ec
 80036c4:	e6e6      	b.n	8003494 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x4c>
      else if (mode_ == MODE_MSG_CHECKSUM)    /* do checksum */
 80036c6:	687b      	ldr	r3, [r7, #4]
 80036c8:	f8d3 38ec 	ldr.w	r3, [r3, #2284]	; 0x8ec
 80036cc:	2b08      	cmp	r3, #8
 80036ce:	f47f aee1 	bne.w	8003494 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x4c>
        mode_ = MODE_FIRST_FF;
 80036d2:	687b      	ldr	r3, [r7, #4]
 80036d4:	2200      	movs	r2, #0
 80036d6:	f8c3 28ec 	str.w	r2, [r3, #2284]	; 0x8ec
        if ((checksum_ % 256) == 255)
 80036da:	687b      	ldr	r3, [r7, #4]
 80036dc:	f8d3 38fc 	ldr.w	r3, [r3, #2300]	; 0x8fc
 80036e0:	425a      	negs	r2, r3
 80036e2:	b2db      	uxtb	r3, r3
 80036e4:	b2d2      	uxtb	r2, r2
 80036e6:	bf58      	it	pl
 80036e8:	4253      	negpl	r3, r2
 80036ea:	2bff      	cmp	r3, #255	; 0xff
 80036ec:	f47f aed2 	bne.w	8003494 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x4c>
          if (topic_ == TopicInfo::ID_PUBLISHER)
 80036f0:	687b      	ldr	r3, [r7, #4]
 80036f2:	f8d3 38f4 	ldr.w	r3, [r3, #2292]	; 0x8f4
 80036f6:	2b00      	cmp	r3, #0
 80036f8:	d110      	bne.n	800371c <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x2d4>
            requestSyncTime();
 80036fa:	6878      	ldr	r0, [r7, #4]
 80036fc:	f000 f889 	bl	8003812 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv>
            negotiateTopics();
 8003700:	6878      	ldr	r0, [r7, #4]
 8003702:	f000 f8a4 	bl	800384e <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv>
            last_sync_time = c_time;
 8003706:	687b      	ldr	r3, [r7, #4]
 8003708:	68fa      	ldr	r2, [r7, #12]
 800370a:	f8c3 2904 	str.w	r2, [r3, #2308]	; 0x904
            last_sync_receive_time = c_time;
 800370e:	687b      	ldr	r3, [r7, #4]
 8003710:	68fa      	ldr	r2, [r7, #12]
 8003712:	f8c3 2908 	str.w	r2, [r3, #2312]	; 0x908
            return SPIN_ERR;
 8003716:	f04f 33ff 	mov.w	r3, #4294967295
 800371a:	e06a      	b.n	80037f2 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x3aa>
          else if (topic_ == TopicInfo::ID_TIME)
 800371c:	687b      	ldr	r3, [r7, #4]
 800371e:	f8d3 38f4 	ldr.w	r3, [r3, #2292]	; 0x8f4
 8003722:	2b0a      	cmp	r3, #10
 8003724:	d107      	bne.n	8003736 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x2ee>
            syncTime(message_in);
 8003726:	687b      	ldr	r3, [r7, #4]
 8003728:	f203 4324 	addw	r3, r3, #1060	; 0x424
 800372c:	4619      	mov	r1, r3
 800372e:	6878      	ldr	r0, [r7, #4]
 8003730:	f000 f96c 	bl	8003a0c <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8syncTimeEPh>
 8003734:	e6ae      	b.n	8003494 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x4c>
          else if (topic_ == TopicInfo::ID_PARAMETER_REQUEST)
 8003736:	687b      	ldr	r3, [r7, #4]
 8003738:	f8d3 38f4 	ldr.w	r3, [r3, #2292]	; 0x8f4
 800373c:	2b06      	cmp	r3, #6
 800373e:	d10e      	bne.n	800375e <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x316>
            req_param_resp.deserialize(message_in);
 8003740:	687b      	ldr	r3, [r7, #4]
 8003742:	f603 1214 	addw	r2, r3, #2324	; 0x914
 8003746:	687b      	ldr	r3, [r7, #4]
 8003748:	f203 4324 	addw	r3, r3, #1060	; 0x424
 800374c:	4619      	mov	r1, r3
 800374e:	4610      	mov	r0, r2
 8003750:	f7fe fc43 	bl	8001fda <_ZN14rosserial_msgs20RequestParamResponse11deserializeEPh>
            param_recieved = true;
 8003754:	687b      	ldr	r3, [r7, #4]
 8003756:	2201      	movs	r2, #1
 8003758:	f883 2910 	strb.w	r2, [r3, #2320]	; 0x910
 800375c:	e69a      	b.n	8003494 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x4c>
          else if (topic_ == TopicInfo::ID_TX_STOP)
 800375e:	687b      	ldr	r3, [r7, #4]
 8003760:	f8d3 38f4 	ldr.w	r3, [r3, #2292]	; 0x8f4
 8003764:	2b0b      	cmp	r3, #11
 8003766:	d104      	bne.n	8003772 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x32a>
            configured_ = false;
 8003768:	687b      	ldr	r3, [r7, #4]
 800376a:	2200      	movs	r2, #0
 800376c:	f883 2900 	strb.w	r2, [r3, #2304]	; 0x900
 8003770:	e690      	b.n	8003494 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x4c>
            if (subscribers[topic_ - 100])
 8003772:	687b      	ldr	r3, [r7, #4]
 8003774:	f8d3 38f4 	ldr.w	r3, [r3, #2292]	; 0x8f4
 8003778:	f1a3 0264 	sub.w	r2, r3, #100	; 0x64
 800377c:	687b      	ldr	r3, [r7, #4]
 800377e:	f202 2222 	addw	r2, r2, #546	; 0x222
 8003782:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003786:	2b00      	cmp	r3, #0
 8003788:	f43f ae84 	beq.w	8003494 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x4c>
              subscribers[topic_ - 100]->callback(message_in);
 800378c:	687b      	ldr	r3, [r7, #4]
 800378e:	f8d3 38f4 	ldr.w	r3, [r3, #2292]	; 0x8f4
 8003792:	f1a3 0264 	sub.w	r2, r3, #100	; 0x64
 8003796:	687b      	ldr	r3, [r7, #4]
 8003798:	f202 2222 	addw	r2, r2, #546	; 0x222
 800379c:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80037a0:	687b      	ldr	r3, [r7, #4]
 80037a2:	f8d3 38f4 	ldr.w	r3, [r3, #2292]	; 0x8f4
 80037a6:	f1a3 0264 	sub.w	r2, r3, #100	; 0x64
 80037aa:	687b      	ldr	r3, [r7, #4]
 80037ac:	f202 2222 	addw	r2, r2, #546	; 0x222
 80037b0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80037b4:	681b      	ldr	r3, [r3, #0]
 80037b6:	681b      	ldr	r3, [r3, #0]
 80037b8:	687a      	ldr	r2, [r7, #4]
 80037ba:	f202 4224 	addw	r2, r2, #1060	; 0x424
 80037be:	4611      	mov	r1, r2
 80037c0:	4798      	blx	r3
    while (true)
 80037c2:	e667      	b.n	8003494 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x4c>
        break;
 80037c4:	bf00      	nop
    if (configured_ && ((c_time - last_sync_time) > (SYNC_SECONDS * 500)))
 80037c6:	687b      	ldr	r3, [r7, #4]
 80037c8:	f893 3900 	ldrb.w	r3, [r3, #2304]	; 0x900
 80037cc:	2b00      	cmp	r3, #0
 80037ce:	d00f      	beq.n	80037f0 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x3a8>
 80037d0:	687b      	ldr	r3, [r7, #4]
 80037d2:	f8d3 3904 	ldr.w	r3, [r3, #2308]	; 0x904
 80037d6:	68fa      	ldr	r2, [r7, #12]
 80037d8:	1ad3      	subs	r3, r2, r3
 80037da:	f640 12c4 	movw	r2, #2500	; 0x9c4
 80037de:	4293      	cmp	r3, r2
 80037e0:	d906      	bls.n	80037f0 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8spinOnceEv+0x3a8>
      requestSyncTime();
 80037e2:	6878      	ldr	r0, [r7, #4]
 80037e4:	f000 f815 	bl	8003812 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv>
      last_sync_time = c_time;
 80037e8:	687b      	ldr	r3, [r7, #4]
 80037ea:	68fa      	ldr	r2, [r7, #12]
 80037ec:	f8c3 2904 	str.w	r2, [r3, #2308]	; 0x904
    return SPIN_OK;
 80037f0:	2300      	movs	r3, #0
  }
 80037f2:	4618      	mov	r0, r3
 80037f4:	3710      	adds	r7, #16
 80037f6:	46bd      	mov	sp, r7
 80037f8:	bd80      	pop	{r7, pc}

080037fa <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE11getHardwareEv>:
  Hardware* getHardware()
 80037fa:	b480      	push	{r7}
 80037fc:	b083      	sub	sp, #12
 80037fe:	af00      	add	r7, sp, #0
 8003800:	6078      	str	r0, [r7, #4]
    return &hardware_;
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	3304      	adds	r3, #4
  }
 8003806:	4618      	mov	r0, r3
 8003808:	370c      	adds	r7, #12
 800380a:	46bd      	mov	sp, r7
 800380c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003810:	4770      	bx	lr

08003812 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE15requestSyncTimeEv>:
  void requestSyncTime()
 8003812:	b580      	push	{r7, lr}
 8003814:	b086      	sub	sp, #24
 8003816:	af00      	add	r7, sp, #0
 8003818:	6078      	str	r0, [r7, #4]
    std_msgs::Time t;
 800381a:	f107 030c 	add.w	r3, r7, #12
 800381e:	4618      	mov	r0, r3
 8003820:	f7fd ff42 	bl	80016a8 <_ZN8std_msgs4TimeC1Ev>
    publish(TopicInfo::ID_TIME, &t);
 8003824:	687b      	ldr	r3, [r7, #4]
 8003826:	681b      	ldr	r3, [r3, #0]
 8003828:	681b      	ldr	r3, [r3, #0]
 800382a:	f107 020c 	add.w	r2, r7, #12
 800382e:	210a      	movs	r1, #10
 8003830:	6878      	ldr	r0, [r7, #4]
 8003832:	4798      	blx	r3
    rt_time = hardware_.time();
 8003834:	687b      	ldr	r3, [r7, #4]
 8003836:	3304      	adds	r3, #4
 8003838:	4618      	mov	r0, r3
 800383a:	f7fe ff35 	bl	80026a8 <_ZN13STM32Hardware4timeEv>
 800383e:	4602      	mov	r2, r0
 8003840:	687b      	ldr	r3, [r7, #4]
 8003842:	f8c3 2414 	str.w	r2, [r3, #1044]	; 0x414
  }
 8003846:	bf00      	nop
 8003848:	3718      	adds	r7, #24
 800384a:	46bd      	mov	sp, r7
 800384c:	bd80      	pop	{r7, pc}

0800384e <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv>:
      }
    }
    return false;
  }

  void negotiateTopics()
 800384e:	b590      	push	{r4, r7, lr}
 8003850:	b08b      	sub	sp, #44	; 0x2c
 8003852:	af00      	add	r7, sp, #0
 8003854:	6078      	str	r0, [r7, #4]
  {
    rosserial_msgs::TopicInfo ti;
 8003856:	f107 030c 	add.w	r3, r7, #12
 800385a:	4618      	mov	r0, r3
 800385c:	f7fe f814 	bl	8001888 <_ZN14rosserial_msgs9TopicInfoC1Ev>
    int i;
    for (i = 0; i < MAX_PUBLISHERS; i++)
 8003860:	2300      	movs	r3, #0
 8003862:	627b      	str	r3, [r7, #36]	; 0x24
 8003864:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003866:	2b18      	cmp	r3, #24
 8003868:	dc63      	bgt.n	8003932 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv+0xe4>
    {
      if (publishers[i] != 0) // non-empty slot
 800386a:	687a      	ldr	r2, [r7, #4]
 800386c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800386e:	f503 7302 	add.w	r3, r3, #520	; 0x208
 8003872:	009b      	lsls	r3, r3, #2
 8003874:	4413      	add	r3, r2
 8003876:	685b      	ldr	r3, [r3, #4]
 8003878:	2b00      	cmp	r3, #0
 800387a:	d056      	beq.n	800392a <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv+0xdc>
      {
        ti.topic_id = publishers[i]->id_;
 800387c:	687a      	ldr	r2, [r7, #4]
 800387e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003880:	f503 7302 	add.w	r3, r3, #520	; 0x208
 8003884:	009b      	lsls	r3, r3, #2
 8003886:	4413      	add	r3, r2
 8003888:	685b      	ldr	r3, [r3, #4]
 800388a:	689b      	ldr	r3, [r3, #8]
 800388c:	b29b      	uxth	r3, r3
 800388e:	823b      	strh	r3, [r7, #16]
        ti.topic_name = (char *) publishers[i]->topic_;
 8003890:	687a      	ldr	r2, [r7, #4]
 8003892:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003894:	f503 7302 	add.w	r3, r3, #520	; 0x208
 8003898:	009b      	lsls	r3, r3, #2
 800389a:	4413      	add	r3, r2
 800389c:	685b      	ldr	r3, [r3, #4]
 800389e:	681b      	ldr	r3, [r3, #0]
 80038a0:	617b      	str	r3, [r7, #20]
        ti.message_type = (char *) publishers[i]->msg_->getType();
 80038a2:	687a      	ldr	r2, [r7, #4]
 80038a4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80038a6:	f503 7302 	add.w	r3, r3, #520	; 0x208
 80038aa:	009b      	lsls	r3, r3, #2
 80038ac:	4413      	add	r3, r2
 80038ae:	685b      	ldr	r3, [r3, #4]
 80038b0:	6859      	ldr	r1, [r3, #4]
 80038b2:	687a      	ldr	r2, [r7, #4]
 80038b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80038b6:	f503 7302 	add.w	r3, r3, #520	; 0x208
 80038ba:	009b      	lsls	r3, r3, #2
 80038bc:	4413      	add	r3, r2
 80038be:	685b      	ldr	r3, [r3, #4]
 80038c0:	685b      	ldr	r3, [r3, #4]
 80038c2:	681b      	ldr	r3, [r3, #0]
 80038c4:	3308      	adds	r3, #8
 80038c6:	681b      	ldr	r3, [r3, #0]
 80038c8:	4608      	mov	r0, r1
 80038ca:	4798      	blx	r3
 80038cc:	4603      	mov	r3, r0
 80038ce:	61bb      	str	r3, [r7, #24]
        ti.md5sum = (char *) publishers[i]->msg_->getMD5();
 80038d0:	687a      	ldr	r2, [r7, #4]
 80038d2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80038d4:	f503 7302 	add.w	r3, r3, #520	; 0x208
 80038d8:	009b      	lsls	r3, r3, #2
 80038da:	4413      	add	r3, r2
 80038dc:	685b      	ldr	r3, [r3, #4]
 80038de:	6859      	ldr	r1, [r3, #4]
 80038e0:	687a      	ldr	r2, [r7, #4]
 80038e2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80038e4:	f503 7302 	add.w	r3, r3, #520	; 0x208
 80038e8:	009b      	lsls	r3, r3, #2
 80038ea:	4413      	add	r3, r2
 80038ec:	685b      	ldr	r3, [r3, #4]
 80038ee:	685b      	ldr	r3, [r3, #4]
 80038f0:	681b      	ldr	r3, [r3, #0]
 80038f2:	330c      	adds	r3, #12
 80038f4:	681b      	ldr	r3, [r3, #0]
 80038f6:	4608      	mov	r0, r1
 80038f8:	4798      	blx	r3
 80038fa:	4603      	mov	r3, r0
 80038fc:	61fb      	str	r3, [r7, #28]
        ti.buffer_size = OUTPUT_SIZE;
 80038fe:	f44f 7300 	mov.w	r3, #512	; 0x200
 8003902:	623b      	str	r3, [r7, #32]
        publish(publishers[i]->getEndpointType(), &ti);
 8003904:	687b      	ldr	r3, [r7, #4]
 8003906:	681b      	ldr	r3, [r3, #0]
 8003908:	681c      	ldr	r4, [r3, #0]
 800390a:	687a      	ldr	r2, [r7, #4]
 800390c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800390e:	f503 7302 	add.w	r3, r3, #520	; 0x208
 8003912:	009b      	lsls	r3, r3, #2
 8003914:	4413      	add	r3, r2
 8003916:	685b      	ldr	r3, [r3, #4]
 8003918:	4618      	mov	r0, r3
 800391a:	f7fe fd02 	bl	8002322 <_ZN3ros9Publisher15getEndpointTypeEv>
 800391e:	4601      	mov	r1, r0
 8003920:	f107 030c 	add.w	r3, r7, #12
 8003924:	461a      	mov	r2, r3
 8003926:	6878      	ldr	r0, [r7, #4]
 8003928:	47a0      	blx	r4
    for (i = 0; i < MAX_PUBLISHERS; i++)
 800392a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800392c:	3301      	adds	r3, #1
 800392e:	627b      	str	r3, [r7, #36]	; 0x24
 8003930:	e798      	b.n	8003864 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv+0x16>
      }
    }
    for (i = 0; i < MAX_SUBSCRIBERS; i++)
 8003932:	2300      	movs	r3, #0
 8003934:	627b      	str	r3, [r7, #36]	; 0x24
 8003936:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003938:	2b18      	cmp	r3, #24
 800393a:	dc5f      	bgt.n	80039fc <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv+0x1ae>
    {
      if (subscribers[i] != 0) // non-empty slot
 800393c:	687b      	ldr	r3, [r7, #4]
 800393e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003940:	f202 2222 	addw	r2, r2, #546	; 0x222
 8003944:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003948:	2b00      	cmp	r3, #0
 800394a:	d053      	beq.n	80039f4 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv+0x1a6>
      {
        ti.topic_id = subscribers[i]->id_;
 800394c:	687b      	ldr	r3, [r7, #4]
 800394e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003950:	f202 2222 	addw	r2, r2, #546	; 0x222
 8003954:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003958:	685b      	ldr	r3, [r3, #4]
 800395a:	b29b      	uxth	r3, r3
 800395c:	823b      	strh	r3, [r7, #16]
        ti.topic_name = (char *) subscribers[i]->topic_;
 800395e:	687b      	ldr	r3, [r7, #4]
 8003960:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003962:	f202 2222 	addw	r2, r2, #546	; 0x222
 8003966:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800396a:	689b      	ldr	r3, [r3, #8]
 800396c:	617b      	str	r3, [r7, #20]
        ti.message_type = (char *) subscribers[i]->getMsgType();
 800396e:	687b      	ldr	r3, [r7, #4]
 8003970:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003972:	f202 2222 	addw	r2, r2, #546	; 0x222
 8003976:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800397a:	687b      	ldr	r3, [r7, #4]
 800397c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800397e:	f202 2222 	addw	r2, r2, #546	; 0x222
 8003982:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8003986:	681b      	ldr	r3, [r3, #0]
 8003988:	3308      	adds	r3, #8
 800398a:	681b      	ldr	r3, [r3, #0]
 800398c:	4608      	mov	r0, r1
 800398e:	4798      	blx	r3
 8003990:	4603      	mov	r3, r0
 8003992:	61bb      	str	r3, [r7, #24]
        ti.md5sum = (char *) subscribers[i]->getMsgMD5();
 8003994:	687b      	ldr	r3, [r7, #4]
 8003996:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003998:	f202 2222 	addw	r2, r2, #546	; 0x222
 800399c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80039a0:	687b      	ldr	r3, [r7, #4]
 80039a2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80039a4:	f202 2222 	addw	r2, r2, #546	; 0x222
 80039a8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80039ac:	681b      	ldr	r3, [r3, #0]
 80039ae:	330c      	adds	r3, #12
 80039b0:	681b      	ldr	r3, [r3, #0]
 80039b2:	4608      	mov	r0, r1
 80039b4:	4798      	blx	r3
 80039b6:	4603      	mov	r3, r0
 80039b8:	61fb      	str	r3, [r7, #28]
        ti.buffer_size = INPUT_SIZE;
 80039ba:	f44f 7300 	mov.w	r3, #512	; 0x200
 80039be:	623b      	str	r3, [r7, #32]
        publish(subscribers[i]->getEndpointType(), &ti);
 80039c0:	687b      	ldr	r3, [r7, #4]
 80039c2:	681b      	ldr	r3, [r3, #0]
 80039c4:	681c      	ldr	r4, [r3, #0]
 80039c6:	687b      	ldr	r3, [r7, #4]
 80039c8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80039ca:	f202 2222 	addw	r2, r2, #546	; 0x222
 80039ce:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80039d2:	687b      	ldr	r3, [r7, #4]
 80039d4:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80039d6:	f202 2222 	addw	r2, r2, #546	; 0x222
 80039da:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80039de:	681b      	ldr	r3, [r3, #0]
 80039e0:	3304      	adds	r3, #4
 80039e2:	681b      	ldr	r3, [r3, #0]
 80039e4:	4608      	mov	r0, r1
 80039e6:	4798      	blx	r3
 80039e8:	4601      	mov	r1, r0
 80039ea:	f107 030c 	add.w	r3, r7, #12
 80039ee:	461a      	mov	r2, r3
 80039f0:	6878      	ldr	r0, [r7, #4]
 80039f2:	47a0      	blx	r4
    for (i = 0; i < MAX_SUBSCRIBERS; i++)
 80039f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80039f6:	3301      	adds	r3, #1
 80039f8:	627b      	str	r3, [r7, #36]	; 0x24
 80039fa:	e79c      	b.n	8003936 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE15negotiateTopicsEv+0xe8>
      }
    }
    configured_ = true;
 80039fc:	687b      	ldr	r3, [r7, #4]
 80039fe:	2201      	movs	r2, #1
 8003a00:	f883 2900 	strb.w	r2, [r3, #2304]	; 0x900
  }
 8003a04:	bf00      	nop
 8003a06:	372c      	adds	r7, #44	; 0x2c
 8003a08:	46bd      	mov	sp, r7
 8003a0a:	bd90      	pop	{r4, r7, pc}

08003a0c <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8syncTimeEPh>:
  void syncTime(uint8_t * data)
 8003a0c:	b580      	push	{r7, lr}
 8003a0e:	b086      	sub	sp, #24
 8003a10:	af00      	add	r7, sp, #0
 8003a12:	6078      	str	r0, [r7, #4]
 8003a14:	6039      	str	r1, [r7, #0]
    std_msgs::Time t;
 8003a16:	f107 0308 	add.w	r3, r7, #8
 8003a1a:	4618      	mov	r0, r3
 8003a1c:	f7fd fe44 	bl	80016a8 <_ZN8std_msgs4TimeC1Ev>
    uint32_t offset = hardware_.time() - rt_time;
 8003a20:	687b      	ldr	r3, [r7, #4]
 8003a22:	3304      	adds	r3, #4
 8003a24:	4618      	mov	r0, r3
 8003a26:	f7fe fe3f 	bl	80026a8 <_ZN13STM32Hardware4timeEv>
 8003a2a:	4602      	mov	r2, r0
 8003a2c:	687b      	ldr	r3, [r7, #4]
 8003a2e:	f8d3 3414 	ldr.w	r3, [r3, #1044]	; 0x414
 8003a32:	1ad3      	subs	r3, r2, r3
 8003a34:	617b      	str	r3, [r7, #20]
    t.deserialize(data);
 8003a36:	f107 0308 	add.w	r3, r7, #8
 8003a3a:	6839      	ldr	r1, [r7, #0]
 8003a3c:	4618      	mov	r0, r3
 8003a3e:	f7fd fea3 	bl	8001788 <_ZN8std_msgs4Time11deserializeEPh>
    t.data.sec += offset / 1000;
 8003a42:	68fa      	ldr	r2, [r7, #12]
 8003a44:	697b      	ldr	r3, [r7, #20]
 8003a46:	4915      	ldr	r1, [pc, #84]	; (8003a9c <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8syncTimeEPh+0x90>)
 8003a48:	fba1 1303 	umull	r1, r3, r1, r3
 8003a4c:	099b      	lsrs	r3, r3, #6
 8003a4e:	4413      	add	r3, r2
 8003a50:	60fb      	str	r3, [r7, #12]
    t.data.nsec += (offset % 1000) * 1000000UL;
 8003a52:	6939      	ldr	r1, [r7, #16]
 8003a54:	697a      	ldr	r2, [r7, #20]
 8003a56:	4b11      	ldr	r3, [pc, #68]	; (8003a9c <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8syncTimeEPh+0x90>)
 8003a58:	fba3 0302 	umull	r0, r3, r3, r2
 8003a5c:	099b      	lsrs	r3, r3, #6
 8003a5e:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8003a62:	fb00 f303 	mul.w	r3, r0, r3
 8003a66:	1ad3      	subs	r3, r2, r3
 8003a68:	4a0d      	ldr	r2, [pc, #52]	; (8003aa0 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8syncTimeEPh+0x94>)
 8003a6a:	fb02 f303 	mul.w	r3, r2, r3
 8003a6e:	440b      	add	r3, r1
 8003a70:	613b      	str	r3, [r7, #16]
    this->setNow(t.data);
 8003a72:	f107 0308 	add.w	r3, r7, #8
 8003a76:	3304      	adds	r3, #4
 8003a78:	4619      	mov	r1, r3
 8003a7a:	6878      	ldr	r0, [r7, #4]
 8003a7c:	f000 f8a6 	bl	8003bcc <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE6setNowERNS_4TimeE>
    last_sync_receive_time = hardware_.time();
 8003a80:	687b      	ldr	r3, [r7, #4]
 8003a82:	3304      	adds	r3, #4
 8003a84:	4618      	mov	r0, r3
 8003a86:	f7fe fe0f 	bl	80026a8 <_ZN13STM32Hardware4timeEv>
 8003a8a:	4602      	mov	r2, r0
 8003a8c:	687b      	ldr	r3, [r7, #4]
 8003a8e:	f8c3 2908 	str.w	r2, [r3, #2312]	; 0x908
  }
 8003a92:	bf00      	nop
 8003a94:	3718      	adds	r7, #24
 8003a96:	46bd      	mov	sp, r7
 8003a98:	bd80      	pop	{r7, pc}
 8003a9a:	bf00      	nop
 8003a9c:	10624dd3 	.word	0x10624dd3
 8003aa0:	000f4240 	.word	0x000f4240

08003aa4 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE>:

  virtual int publish(int id, const Msg * msg)
 8003aa4:	b580      	push	{r7, lr}
 8003aa6:	b088      	sub	sp, #32
 8003aa8:	af00      	add	r7, sp, #0
 8003aaa:	60f8      	str	r0, [r7, #12]
 8003aac:	60b9      	str	r1, [r7, #8]
 8003aae:	607a      	str	r2, [r7, #4]
  {
    if (id >= 100 && !configured_)
 8003ab0:	68bb      	ldr	r3, [r7, #8]
 8003ab2:	2b63      	cmp	r3, #99	; 0x63
 8003ab4:	dd09      	ble.n	8003aca <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE+0x26>
 8003ab6:	68fb      	ldr	r3, [r7, #12]
 8003ab8:	f893 3900 	ldrb.w	r3, [r3, #2304]	; 0x900
 8003abc:	f083 0301 	eor.w	r3, r3, #1
 8003ac0:	b2db      	uxtb	r3, r3
 8003ac2:	2b00      	cmp	r3, #0
 8003ac4:	d001      	beq.n	8003aca <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE+0x26>
      return 0;
 8003ac6:	2300      	movs	r3, #0
 8003ac8:	e079      	b.n	8003bbe <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE+0x11a>

    /* serialize message */
    int l = msg->serialize(message_out + 7);
 8003aca:	687b      	ldr	r3, [r7, #4]
 8003acc:	681b      	ldr	r3, [r3, #0]
 8003ace:	681b      	ldr	r3, [r3, #0]
 8003ad0:	68fa      	ldr	r2, [r7, #12]
 8003ad2:	f202 6224 	addw	r2, r2, #1572	; 0x624
 8003ad6:	3207      	adds	r2, #7
 8003ad8:	4611      	mov	r1, r2
 8003ada:	6878      	ldr	r0, [r7, #4]
 8003adc:	4798      	blx	r3
 8003ade:	6178      	str	r0, [r7, #20]

    /* setup the header */
    message_out[0] = 0xff;
 8003ae0:	68fb      	ldr	r3, [r7, #12]
 8003ae2:	22ff      	movs	r2, #255	; 0xff
 8003ae4:	f883 2624 	strb.w	r2, [r3, #1572]	; 0x624
    message_out[1] = PROTOCOL_VER;
 8003ae8:	68fb      	ldr	r3, [r7, #12]
 8003aea:	22fe      	movs	r2, #254	; 0xfe
 8003aec:	f883 2625 	strb.w	r2, [r3, #1573]	; 0x625
    message_out[2] = (uint8_t)((uint16_t)l & 255);
 8003af0:	697b      	ldr	r3, [r7, #20]
 8003af2:	b2da      	uxtb	r2, r3
 8003af4:	68fb      	ldr	r3, [r7, #12]
 8003af6:	f883 2626 	strb.w	r2, [r3, #1574]	; 0x626
    message_out[3] = (uint8_t)((uint16_t)l >> 8);
 8003afa:	697b      	ldr	r3, [r7, #20]
 8003afc:	b29b      	uxth	r3, r3
 8003afe:	0a1b      	lsrs	r3, r3, #8
 8003b00:	b29b      	uxth	r3, r3
 8003b02:	b2da      	uxtb	r2, r3
 8003b04:	68fb      	ldr	r3, [r7, #12]
 8003b06:	f883 2627 	strb.w	r2, [r3, #1575]	; 0x627
    message_out[4] = 255 - ((message_out[2] + message_out[3]) % 256);
 8003b0a:	68fb      	ldr	r3, [r7, #12]
 8003b0c:	f893 2626 	ldrb.w	r2, [r3, #1574]	; 0x626
 8003b10:	68fb      	ldr	r3, [r7, #12]
 8003b12:	f893 3627 	ldrb.w	r3, [r3, #1575]	; 0x627
 8003b16:	4413      	add	r3, r2
 8003b18:	b2db      	uxtb	r3, r3
 8003b1a:	43db      	mvns	r3, r3
 8003b1c:	b2da      	uxtb	r2, r3
 8003b1e:	68fb      	ldr	r3, [r7, #12]
 8003b20:	f883 2628 	strb.w	r2, [r3, #1576]	; 0x628
    message_out[5] = (uint8_t)((int16_t)id & 255);
 8003b24:	68bb      	ldr	r3, [r7, #8]
 8003b26:	b2da      	uxtb	r2, r3
 8003b28:	68fb      	ldr	r3, [r7, #12]
 8003b2a:	f883 2629 	strb.w	r2, [r3, #1577]	; 0x629
    message_out[6] = (uint8_t)((int16_t)id >> 8);
 8003b2e:	68bb      	ldr	r3, [r7, #8]
 8003b30:	b21b      	sxth	r3, r3
 8003b32:	121b      	asrs	r3, r3, #8
 8003b34:	b21b      	sxth	r3, r3
 8003b36:	b2da      	uxtb	r2, r3
 8003b38:	68fb      	ldr	r3, [r7, #12]
 8003b3a:	f883 262a 	strb.w	r2, [r3, #1578]	; 0x62a

    /* calculate checksum */
    int chk = 0;
 8003b3e:	2300      	movs	r3, #0
 8003b40:	61fb      	str	r3, [r7, #28]
    for (int i = 5; i < l + 7; i++)
 8003b42:	2305      	movs	r3, #5
 8003b44:	61bb      	str	r3, [r7, #24]
 8003b46:	697b      	ldr	r3, [r7, #20]
 8003b48:	3306      	adds	r3, #6
 8003b4a:	69ba      	ldr	r2, [r7, #24]
 8003b4c:	429a      	cmp	r2, r3
 8003b4e:	dc0d      	bgt.n	8003b6c <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE+0xc8>
      chk += message_out[i];
 8003b50:	68fa      	ldr	r2, [r7, #12]
 8003b52:	69bb      	ldr	r3, [r7, #24]
 8003b54:	4413      	add	r3, r2
 8003b56:	f203 6324 	addw	r3, r3, #1572	; 0x624
 8003b5a:	781b      	ldrb	r3, [r3, #0]
 8003b5c:	461a      	mov	r2, r3
 8003b5e:	69fb      	ldr	r3, [r7, #28]
 8003b60:	4413      	add	r3, r2
 8003b62:	61fb      	str	r3, [r7, #28]
    for (int i = 5; i < l + 7; i++)
 8003b64:	69bb      	ldr	r3, [r7, #24]
 8003b66:	3301      	adds	r3, #1
 8003b68:	61bb      	str	r3, [r7, #24]
 8003b6a:	e7ec      	b.n	8003b46 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE+0xa2>
    l += 7;
 8003b6c:	697b      	ldr	r3, [r7, #20]
 8003b6e:	3307      	adds	r3, #7
 8003b70:	617b      	str	r3, [r7, #20]
    message_out[l++] = 255 - (chk % 256);
 8003b72:	69fb      	ldr	r3, [r7, #28]
 8003b74:	425a      	negs	r2, r3
 8003b76:	b2db      	uxtb	r3, r3
 8003b78:	b2d2      	uxtb	r2, r2
 8003b7a:	bf58      	it	pl
 8003b7c:	4253      	negpl	r3, r2
 8003b7e:	b2da      	uxtb	r2, r3
 8003b80:	697b      	ldr	r3, [r7, #20]
 8003b82:	1c59      	adds	r1, r3, #1
 8003b84:	6179      	str	r1, [r7, #20]
 8003b86:	43d2      	mvns	r2, r2
 8003b88:	b2d1      	uxtb	r1, r2
 8003b8a:	68fa      	ldr	r2, [r7, #12]
 8003b8c:	4413      	add	r3, r2
 8003b8e:	460a      	mov	r2, r1
 8003b90:	f883 2624 	strb.w	r2, [r3, #1572]	; 0x624

    if (l <= OUTPUT_SIZE)
 8003b94:	697b      	ldr	r3, [r7, #20]
 8003b96:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8003b9a:	dc0a      	bgt.n	8003bb2 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE+0x10e>
    {
      hardware_.write(message_out, l);
 8003b9c:	68fb      	ldr	r3, [r7, #12]
 8003b9e:	1d18      	adds	r0, r3, #4
 8003ba0:	68fb      	ldr	r3, [r7, #12]
 8003ba2:	f203 6324 	addw	r3, r3, #1572	; 0x624
 8003ba6:	697a      	ldr	r2, [r7, #20]
 8003ba8:	4619      	mov	r1, r3
 8003baa:	f7fe fd37 	bl	800261c <_ZN13STM32Hardware5writeEPhi>
      return l;
 8003bae:	697b      	ldr	r3, [r7, #20]
 8003bb0:	e005      	b.n	8003bbe <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE+0x11a>
    }
    else
    {
      logerror("Message from device dropped: message larger than buffer.");
 8003bb2:	4905      	ldr	r1, [pc, #20]	; (8003bc8 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE7publishEiPKNS_3MsgE+0x124>)
 8003bb4:	68f8      	ldr	r0, [r7, #12]
 8003bb6:	f000 f849 	bl	8003c4c <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8logerrorEPKc>
      return -1;
 8003bba:	f04f 33ff 	mov.w	r3, #4294967295
    }
  }
 8003bbe:	4618      	mov	r0, r3
 8003bc0:	3720      	adds	r7, #32
 8003bc2:	46bd      	mov	sp, r7
 8003bc4:	bd80      	pop	{r7, pc}
 8003bc6:	bf00      	nop
 8003bc8:	0800de8c 	.word	0x0800de8c

08003bcc <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE6setNowERNS_4TimeE>:
  void setNow(Time & new_now)
 8003bcc:	b580      	push	{r7, lr}
 8003bce:	b084      	sub	sp, #16
 8003bd0:	af00      	add	r7, sp, #0
 8003bd2:	6078      	str	r0, [r7, #4]
 8003bd4:	6039      	str	r1, [r7, #0]
    uint32_t ms = hardware_.time();
 8003bd6:	687b      	ldr	r3, [r7, #4]
 8003bd8:	3304      	adds	r3, #4
 8003bda:	4618      	mov	r0, r3
 8003bdc:	f7fe fd64 	bl	80026a8 <_ZN13STM32Hardware4timeEv>
 8003be0:	60f8      	str	r0, [r7, #12]
    sec_offset = new_now.sec - ms / 1000 - 1;
 8003be2:	683b      	ldr	r3, [r7, #0]
 8003be4:	681a      	ldr	r2, [r3, #0]
 8003be6:	68fb      	ldr	r3, [r7, #12]
 8003be8:	4915      	ldr	r1, [pc, #84]	; (8003c40 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE6setNowERNS_4TimeE+0x74>)
 8003bea:	fba1 1303 	umull	r1, r3, r1, r3
 8003bee:	099b      	lsrs	r3, r3, #6
 8003bf0:	1ad3      	subs	r3, r2, r3
 8003bf2:	1e5a      	subs	r2, r3, #1
 8003bf4:	687b      	ldr	r3, [r7, #4]
 8003bf6:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
    nsec_offset = new_now.nsec - (ms % 1000) * 1000000UL + 1000000000UL;
 8003bfa:	683b      	ldr	r3, [r7, #0]
 8003bfc:	6859      	ldr	r1, [r3, #4]
 8003bfe:	68fa      	ldr	r2, [r7, #12]
 8003c00:	4b0f      	ldr	r3, [pc, #60]	; (8003c40 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE6setNowERNS_4TimeE+0x74>)
 8003c02:	fba3 0302 	umull	r0, r3, r3, r2
 8003c06:	099b      	lsrs	r3, r3, #6
 8003c08:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8003c0c:	fb00 f303 	mul.w	r3, r0, r3
 8003c10:	1ad3      	subs	r3, r2, r3
 8003c12:	4a0c      	ldr	r2, [pc, #48]	; (8003c44 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE6setNowERNS_4TimeE+0x78>)
 8003c14:	fb02 f303 	mul.w	r3, r2, r3
 8003c18:	1aca      	subs	r2, r1, r3
 8003c1a:	4b0b      	ldr	r3, [pc, #44]	; (8003c48 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE6setNowERNS_4TimeE+0x7c>)
 8003c1c:	4413      	add	r3, r2
 8003c1e:	687a      	ldr	r2, [r7, #4]
 8003c20:	f8c2 341c 	str.w	r3, [r2, #1052]	; 0x41c
    normalizeSecNSec(sec_offset, nsec_offset);
 8003c24:	687b      	ldr	r3, [r7, #4]
 8003c26:	f503 6283 	add.w	r2, r3, #1048	; 0x418
 8003c2a:	687b      	ldr	r3, [r7, #4]
 8003c2c:	f203 431c 	addw	r3, r3, #1052	; 0x41c
 8003c30:	4619      	mov	r1, r3
 8003c32:	4610      	mov	r0, r2
 8003c34:	f7fc fcf6 	bl	8000624 <_ZN3ros16normalizeSecNSecERmS0_>
  }
 8003c38:	bf00      	nop
 8003c3a:	3710      	adds	r7, #16
 8003c3c:	46bd      	mov	sp, r7
 8003c3e:	bd80      	pop	{r7, pc}
 8003c40:	10624dd3 	.word	0x10624dd3
 8003c44:	000f4240 	.word	0x000f4240
 8003c48:	3b9aca00 	.word	0x3b9aca00

08003c4c <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE8logerrorEPKc>:
  }
  void logwarn(const char *msg)
  {
    log(rosserial_msgs::Log::WARN, msg);
  }
  void logerror(const char*msg)
 8003c4c:	b580      	push	{r7, lr}
 8003c4e:	b082      	sub	sp, #8
 8003c50:	af00      	add	r7, sp, #0
 8003c52:	6078      	str	r0, [r7, #4]
 8003c54:	6039      	str	r1, [r7, #0]
  {
    log(rosserial_msgs::Log::ERROR, msg);
 8003c56:	683a      	ldr	r2, [r7, #0]
 8003c58:	2103      	movs	r1, #3
 8003c5a:	6878      	ldr	r0, [r7, #4]
 8003c5c:	f000 f804 	bl	8003c68 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE3logEcPKc>
  }
 8003c60:	bf00      	nop
 8003c62:	3708      	adds	r7, #8
 8003c64:	46bd      	mov	sp, r7
 8003c66:	bd80      	pop	{r7, pc}

08003c68 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE3logEcPKc>:
  void log(char byte, const char * msg)
 8003c68:	b580      	push	{r7, lr}
 8003c6a:	b088      	sub	sp, #32
 8003c6c:	af00      	add	r7, sp, #0
 8003c6e:	60f8      	str	r0, [r7, #12]
 8003c70:	460b      	mov	r3, r1
 8003c72:	607a      	str	r2, [r7, #4]
 8003c74:	72fb      	strb	r3, [r7, #11]
    rosserial_msgs::Log l;
 8003c76:	f107 0314 	add.w	r3, r7, #20
 8003c7a:	4618      	mov	r0, r3
 8003c7c:	f7fd ffc8 	bl	8001c10 <_ZN14rosserial_msgs3LogC1Ev>
    l.level = byte;
 8003c80:	7afb      	ldrb	r3, [r7, #11]
 8003c82:	763b      	strb	r3, [r7, #24]
    l.msg = (char*)msg;
 8003c84:	687b      	ldr	r3, [r7, #4]
 8003c86:	61fb      	str	r3, [r7, #28]
    publish(rosserial_msgs::TopicInfo::ID_LOG, &l);
 8003c88:	68fb      	ldr	r3, [r7, #12]
 8003c8a:	681b      	ldr	r3, [r3, #0]
 8003c8c:	681b      	ldr	r3, [r3, #0]
 8003c8e:	f107 0214 	add.w	r2, r7, #20
 8003c92:	2107      	movs	r1, #7
 8003c94:	68f8      	ldr	r0, [r7, #12]
 8003c96:	4798      	blx	r3
  }
 8003c98:	bf00      	nop
 8003c9a:	3720      	adds	r7, #32
 8003c9c:	46bd      	mov	sp, r7
 8003c9e:	bd80      	pop	{r7, pc}

08003ca0 <_Z41__static_initialization_and_destruction_0ii>:
 8003ca0:	b580      	push	{r7, lr}
 8003ca2:	b082      	sub	sp, #8
 8003ca4:	af00      	add	r7, sp, #0
 8003ca6:	6078      	str	r0, [r7, #4]
 8003ca8:	6039      	str	r1, [r7, #0]
 8003caa:	687b      	ldr	r3, [r7, #4]
 8003cac:	2b01      	cmp	r3, #1
 8003cae:	d116      	bne.n	8003cde <_Z41__static_initialization_and_destruction_0ii+0x3e>
 8003cb0:	683b      	ldr	r3, [r7, #0]
 8003cb2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003cb6:	4293      	cmp	r3, r2
 8003cb8:	d111      	bne.n	8003cde <_Z41__static_initialization_and_destruction_0ii+0x3e>
ros::NodeHandle nh;
 8003cba:	480b      	ldr	r0, [pc, #44]	; (8003ce8 <_Z41__static_initialization_and_destruction_0ii+0x48>)
 8003cbc:	f7ff fac8 	bl	8003250 <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EEC1Ev>
geometry_msgs::Point car_speed;
 8003cc0:	480a      	ldr	r0, [pc, #40]	; (8003cec <_Z41__static_initialization_and_destruction_0ii+0x4c>)
 8003cc2:	f7fe fcfd 	bl	80026c0 <_ZN13geometry_msgs5PointC1Ev>
ros::Subscriber<geometry_msgs::Point> mecanum_sub("mecanum_toSTM", ROS::mecanum_callback);
 8003cc6:	2301      	movs	r3, #1
 8003cc8:	4a09      	ldr	r2, [pc, #36]	; (8003cf0 <_Z41__static_initialization_and_destruction_0ii+0x50>)
 8003cca:	490a      	ldr	r1, [pc, #40]	; (8003cf4 <_Z41__static_initialization_and_destruction_0ii+0x54>)
 8003ccc:	480a      	ldr	r0, [pc, #40]	; (8003cf8 <_Z41__static_initialization_and_destruction_0ii+0x58>)
 8003cce:	f7ff fb4f 	bl	8003370 <_ZN3ros10SubscriberIN13geometry_msgs5PointEvEC1EPKcPFvRKS2_Ei>
ros::Publisher mecanum_pub("mecanum_fromSTM", &car_speed);
 8003cd2:	2300      	movs	r3, #0
 8003cd4:	4a05      	ldr	r2, [pc, #20]	; (8003cec <_Z41__static_initialization_and_destruction_0ii+0x4c>)
 8003cd6:	4909      	ldr	r1, [pc, #36]	; (8003cfc <_Z41__static_initialization_and_destruction_0ii+0x5c>)
 8003cd8:	4809      	ldr	r0, [pc, #36]	; (8003d00 <_Z41__static_initialization_and_destruction_0ii+0x60>)
 8003cda:	f7fe fb0b 	bl	80022f4 <_ZN3ros9PublisherC1EPKcPNS_3MsgEi>
}
 8003cde:	bf00      	nop
 8003ce0:	3708      	adds	r7, #8
 8003ce2:	46bd      	mov	sp, r7
 8003ce4:	bd80      	pop	{r7, pc}
 8003ce6:	bf00      	nop
 8003ce8:	240006c4 	.word	0x240006c4
 8003cec:	24001000 	.word	0x24001000
 8003cf0:	080030ed 	.word	0x080030ed
 8003cf4:	0800dec8 	.word	0x0800dec8
 8003cf8:	24001020 	.word	0x24001020
 8003cfc:	0800ded8 	.word	0x0800ded8
 8003d00:	24001058 	.word	0x24001058

08003d04 <_ZN3ros10SubscriberIN13geometry_msgs5PointEvE8callbackEPh>:

  virtual void callback(unsigned char* data)
 8003d04:	b580      	push	{r7, lr}
 8003d06:	b082      	sub	sp, #8
 8003d08:	af00      	add	r7, sp, #0
 8003d0a:	6078      	str	r0, [r7, #4]
 8003d0c:	6039      	str	r1, [r7, #0]
  {
    msg.deserialize(data);
 8003d0e:	687b      	ldr	r3, [r7, #4]
 8003d10:	3310      	adds	r3, #16
 8003d12:	6839      	ldr	r1, [r7, #0]
 8003d14:	4618      	mov	r0, r3
 8003d16:	f7fe fe6e 	bl	80029f6 <_ZN13geometry_msgs5Point11deserializeEPh>
    this->cb_(msg);
 8003d1a:	687b      	ldr	r3, [r7, #4]
 8003d1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003d1e:	687a      	ldr	r2, [r7, #4]
 8003d20:	3210      	adds	r2, #16
 8003d22:	4610      	mov	r0, r2
 8003d24:	4798      	blx	r3
  }
 8003d26:	bf00      	nop
 8003d28:	3708      	adds	r7, #8
 8003d2a:	46bd      	mov	sp, r7
 8003d2c:	bd80      	pop	{r7, pc}

08003d2e <_ZN3ros10SubscriberIN13geometry_msgs5PointEvE15getEndpointTypeEv>:
  }
  virtual const char * getMsgMD5()
  {
    return this->msg.getMD5();
  }
  virtual int getEndpointType()
 8003d2e:	b480      	push	{r7}
 8003d30:	b083      	sub	sp, #12
 8003d32:	af00      	add	r7, sp, #0
 8003d34:	6078      	str	r0, [r7, #4]
  {
    return endpoint_;
 8003d36:	687b      	ldr	r3, [r7, #4]
 8003d38:	6b5b      	ldr	r3, [r3, #52]	; 0x34
  }
 8003d3a:	4618      	mov	r0, r3
 8003d3c:	370c      	adds	r7, #12
 8003d3e:	46bd      	mov	sp, r7
 8003d40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d44:	4770      	bx	lr

08003d46 <_ZN3ros10SubscriberIN13geometry_msgs5PointEvE10getMsgTypeEv>:
  virtual const char * getMsgType()
 8003d46:	b580      	push	{r7, lr}
 8003d48:	b082      	sub	sp, #8
 8003d4a:	af00      	add	r7, sp, #0
 8003d4c:	6078      	str	r0, [r7, #4]
    return this->msg.getType();
 8003d4e:	687b      	ldr	r3, [r7, #4]
 8003d50:	3310      	adds	r3, #16
 8003d52:	4618      	mov	r0, r3
 8003d54:	f7ff f9ae 	bl	80030b4 <_ZN13geometry_msgs5Point7getTypeEv>
 8003d58:	4603      	mov	r3, r0
  }
 8003d5a:	4618      	mov	r0, r3
 8003d5c:	3708      	adds	r7, #8
 8003d5e:	46bd      	mov	sp, r7
 8003d60:	bd80      	pop	{r7, pc}

08003d62 <_ZN3ros10SubscriberIN13geometry_msgs5PointEvE9getMsgMD5Ev>:
  virtual const char * getMsgMD5()
 8003d62:	b580      	push	{r7, lr}
 8003d64:	b082      	sub	sp, #8
 8003d66:	af00      	add	r7, sp, #0
 8003d68:	6078      	str	r0, [r7, #4]
    return this->msg.getMD5();
 8003d6a:	687b      	ldr	r3, [r7, #4]
 8003d6c:	3310      	adds	r3, #16
 8003d6e:	4618      	mov	r0, r3
 8003d70:	f7ff f9ae 	bl	80030d0 <_ZN13geometry_msgs5Point6getMD5Ev>
 8003d74:	4603      	mov	r3, r0
  }
 8003d76:	4618      	mov	r0, r3
 8003d78:	3708      	adds	r7, #8
 8003d7a:	46bd      	mov	sp, r7
 8003d7c:	bd80      	pop	{r7, pc}

08003d7e <_ZN3ros11NodeHandle_I13STM32HardwareLi25ELi25ELi512ELi512EE9connectedEv>:
  virtual bool connected()
 8003d7e:	b480      	push	{r7}
 8003d80:	b083      	sub	sp, #12
 8003d82:	af00      	add	r7, sp, #0
 8003d84:	6078      	str	r0, [r7, #4]
    return configured_;
 8003d86:	687b      	ldr	r3, [r7, #4]
 8003d88:	f893 3900 	ldrb.w	r3, [r3, #2304]	; 0x900
  };
 8003d8c:	4618      	mov	r0, r3
 8003d8e:	370c      	adds	r7, #12
 8003d90:	46bd      	mov	sp, r7
 8003d92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003d96:	4770      	bx	lr

08003d98 <_GLOBAL__sub_I_nh>:
 8003d98:	b580      	push	{r7, lr}
 8003d9a:	af00      	add	r7, sp, #0
 8003d9c:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8003da0:	2001      	movs	r0, #1
 8003da2:	f7ff ff7d 	bl	8003ca0 <_Z41__static_initialization_and_destruction_0ii>
 8003da6:	bd80      	pop	{r7, pc}

08003da8 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8003da8:	b580      	push	{r7, lr}
 8003daa:	b082      	sub	sp, #8
 8003dac:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003dae:	4b0d      	ldr	r3, [pc, #52]	; (8003de4 <HAL_MspInit+0x3c>)
 8003db0:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8003db4:	4a0b      	ldr	r2, [pc, #44]	; (8003de4 <HAL_MspInit+0x3c>)
 8003db6:	f043 0302 	orr.w	r3, r3, #2
 8003dba:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
 8003dbe:	4b09      	ldr	r3, [pc, #36]	; (8003de4 <HAL_MspInit+0x3c>)
 8003dc0:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8003dc4:	f003 0302 	and.w	r3, r3, #2
 8003dc8:	607b      	str	r3, [r7, #4]
 8003dca:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /* Peripheral interrupt init */
  /* RCC_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(RCC_IRQn, 0, 0);
 8003dcc:	2200      	movs	r2, #0
 8003dce:	2100      	movs	r1, #0
 8003dd0:	2005      	movs	r0, #5
 8003dd2:	f000 fee6 	bl	8004ba2 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(RCC_IRQn);
 8003dd6:	2005      	movs	r0, #5
 8003dd8:	f000 fefd 	bl	8004bd6 <HAL_NVIC_EnableIRQ>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8003ddc:	bf00      	nop
 8003dde:	3708      	adds	r7, #8
 8003de0:	46bd      	mov	sp, r7
 8003de2:	bd80      	pop	{r7, pc}
 8003de4:	58024400 	.word	0x58024400

08003de8 <HAL_TIM_Encoder_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_encoder: TIM_Encoder handle pointer
* @retval None
*/
void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef* htim_encoder)
{
 8003de8:	b580      	push	{r7, lr}
 8003dea:	b090      	sub	sp, #64	; 0x40
 8003dec:	af00      	add	r7, sp, #0
 8003dee:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8003df0:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8003df4:	2200      	movs	r2, #0
 8003df6:	601a      	str	r2, [r3, #0]
 8003df8:	605a      	str	r2, [r3, #4]
 8003dfa:	609a      	str	r2, [r3, #8]
 8003dfc:	60da      	str	r2, [r3, #12]
 8003dfe:	611a      	str	r2, [r3, #16]
  if(htim_encoder->Instance==TIM2)
 8003e00:	687b      	ldr	r3, [r7, #4]
 8003e02:	681b      	ldr	r3, [r3, #0]
 8003e04:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003e08:	d14e      	bne.n	8003ea8 <HAL_TIM_Encoder_MspInit+0xc0>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8003e0a:	4b77      	ldr	r3, [pc, #476]	; (8003fe8 <HAL_TIM_Encoder_MspInit+0x200>)
 8003e0c:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8003e10:	4a75      	ldr	r2, [pc, #468]	; (8003fe8 <HAL_TIM_Encoder_MspInit+0x200>)
 8003e12:	f043 0301 	orr.w	r3, r3, #1
 8003e16:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 8003e1a:	4b73      	ldr	r3, [pc, #460]	; (8003fe8 <HAL_TIM_Encoder_MspInit+0x200>)
 8003e1c:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8003e20:	f003 0301 	and.w	r3, r3, #1
 8003e24:	62bb      	str	r3, [r7, #40]	; 0x28
 8003e26:	6abb      	ldr	r3, [r7, #40]	; 0x28

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8003e28:	4b6f      	ldr	r3, [pc, #444]	; (8003fe8 <HAL_TIM_Encoder_MspInit+0x200>)
 8003e2a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003e2e:	4a6e      	ldr	r2, [pc, #440]	; (8003fe8 <HAL_TIM_Encoder_MspInit+0x200>)
 8003e30:	f043 0301 	orr.w	r3, r3, #1
 8003e34:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8003e38:	4b6b      	ldr	r3, [pc, #428]	; (8003fe8 <HAL_TIM_Encoder_MspInit+0x200>)
 8003e3a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003e3e:	f003 0301 	and.w	r3, r3, #1
 8003e42:	627b      	str	r3, [r7, #36]	; 0x24
 8003e44:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003e46:	4b68      	ldr	r3, [pc, #416]	; (8003fe8 <HAL_TIM_Encoder_MspInit+0x200>)
 8003e48:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003e4c:	4a66      	ldr	r2, [pc, #408]	; (8003fe8 <HAL_TIM_Encoder_MspInit+0x200>)
 8003e4e:	f043 0302 	orr.w	r3, r3, #2
 8003e52:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8003e56:	4b64      	ldr	r3, [pc, #400]	; (8003fe8 <HAL_TIM_Encoder_MspInit+0x200>)
 8003e58:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003e5c:	f003 0302 	and.w	r3, r3, #2
 8003e60:	623b      	str	r3, [r7, #32]
 8003e62:	6a3b      	ldr	r3, [r7, #32]
    /**TIM2 GPIO Configuration
    PA15(JTDI)     ------> TIM2_CH1
    PB3(JTDO/TRACESWO)     ------> TIM2_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_15;
 8003e64:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8003e68:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003e6a:	2302      	movs	r3, #2
 8003e6c:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003e6e:	2300      	movs	r3, #0
 8003e70:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003e72:	2300      	movs	r3, #0
 8003e74:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8003e76:	2301      	movs	r3, #1
 8003e78:	63fb      	str	r3, [r7, #60]	; 0x3c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003e7a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8003e7e:	4619      	mov	r1, r3
 8003e80:	485a      	ldr	r0, [pc, #360]	; (8003fec <HAL_TIM_Encoder_MspInit+0x204>)
 8003e82:	f003 fcfd 	bl	8007880 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8003e86:	2308      	movs	r3, #8
 8003e88:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003e8a:	2302      	movs	r3, #2
 8003e8c:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003e8e:	2300      	movs	r3, #0
 8003e90:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003e92:	2300      	movs	r3, #0
 8003e94:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8003e96:	2301      	movs	r3, #1
 8003e98:	63fb      	str	r3, [r7, #60]	; 0x3c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003e9a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8003e9e:	4619      	mov	r1, r3
 8003ea0:	4853      	ldr	r0, [pc, #332]	; (8003ff0 <HAL_TIM_Encoder_MspInit+0x208>)
 8003ea2:	f003 fced 	bl	8007880 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM5_MspInit 1 */

  /* USER CODE END TIM5_MspInit 1 */
  }

}
 8003ea6:	e09b      	b.n	8003fe0 <HAL_TIM_Encoder_MspInit+0x1f8>
  else if(htim_encoder->Instance==TIM3)
 8003ea8:	687b      	ldr	r3, [r7, #4]
 8003eaa:	681b      	ldr	r3, [r3, #0]
 8003eac:	4a51      	ldr	r2, [pc, #324]	; (8003ff4 <HAL_TIM_Encoder_MspInit+0x20c>)
 8003eae:	4293      	cmp	r3, r2
 8003eb0:	d12e      	bne.n	8003f10 <HAL_TIM_Encoder_MspInit+0x128>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8003eb2:	4b4d      	ldr	r3, [pc, #308]	; (8003fe8 <HAL_TIM_Encoder_MspInit+0x200>)
 8003eb4:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8003eb8:	4a4b      	ldr	r2, [pc, #300]	; (8003fe8 <HAL_TIM_Encoder_MspInit+0x200>)
 8003eba:	f043 0302 	orr.w	r3, r3, #2
 8003ebe:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 8003ec2:	4b49      	ldr	r3, [pc, #292]	; (8003fe8 <HAL_TIM_Encoder_MspInit+0x200>)
 8003ec4:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8003ec8:	f003 0302 	and.w	r3, r3, #2
 8003ecc:	61fb      	str	r3, [r7, #28]
 8003ece:	69fb      	ldr	r3, [r7, #28]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8003ed0:	4b45      	ldr	r3, [pc, #276]	; (8003fe8 <HAL_TIM_Encoder_MspInit+0x200>)
 8003ed2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003ed6:	4a44      	ldr	r2, [pc, #272]	; (8003fe8 <HAL_TIM_Encoder_MspInit+0x200>)
 8003ed8:	f043 0302 	orr.w	r3, r3, #2
 8003edc:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8003ee0:	4b41      	ldr	r3, [pc, #260]	; (8003fe8 <HAL_TIM_Encoder_MspInit+0x200>)
 8003ee2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003ee6:	f003 0302 	and.w	r3, r3, #2
 8003eea:	61bb      	str	r3, [r7, #24]
 8003eec:	69bb      	ldr	r3, [r7, #24]
    GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5;
 8003eee:	2330      	movs	r3, #48	; 0x30
 8003ef0:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003ef2:	2302      	movs	r3, #2
 8003ef4:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003ef6:	2300      	movs	r3, #0
 8003ef8:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003efa:	2300      	movs	r3, #0
 8003efc:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 8003efe:	2302      	movs	r3, #2
 8003f00:	63fb      	str	r3, [r7, #60]	; 0x3c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003f02:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8003f06:	4619      	mov	r1, r3
 8003f08:	4839      	ldr	r0, [pc, #228]	; (8003ff0 <HAL_TIM_Encoder_MspInit+0x208>)
 8003f0a:	f003 fcb9 	bl	8007880 <HAL_GPIO_Init>
}
 8003f0e:	e067      	b.n	8003fe0 <HAL_TIM_Encoder_MspInit+0x1f8>
  else if(htim_encoder->Instance==TIM4)
 8003f10:	687b      	ldr	r3, [r7, #4]
 8003f12:	681b      	ldr	r3, [r3, #0]
 8003f14:	4a38      	ldr	r2, [pc, #224]	; (8003ff8 <HAL_TIM_Encoder_MspInit+0x210>)
 8003f16:	4293      	cmp	r3, r2
 8003f18:	d12f      	bne.n	8003f7a <HAL_TIM_Encoder_MspInit+0x192>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8003f1a:	4b33      	ldr	r3, [pc, #204]	; (8003fe8 <HAL_TIM_Encoder_MspInit+0x200>)
 8003f1c:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8003f20:	4a31      	ldr	r2, [pc, #196]	; (8003fe8 <HAL_TIM_Encoder_MspInit+0x200>)
 8003f22:	f043 0304 	orr.w	r3, r3, #4
 8003f26:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 8003f2a:	4b2f      	ldr	r3, [pc, #188]	; (8003fe8 <HAL_TIM_Encoder_MspInit+0x200>)
 8003f2c:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8003f30:	f003 0304 	and.w	r3, r3, #4
 8003f34:	617b      	str	r3, [r7, #20]
 8003f36:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8003f38:	4b2b      	ldr	r3, [pc, #172]	; (8003fe8 <HAL_TIM_Encoder_MspInit+0x200>)
 8003f3a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003f3e:	4a2a      	ldr	r2, [pc, #168]	; (8003fe8 <HAL_TIM_Encoder_MspInit+0x200>)
 8003f40:	f043 0308 	orr.w	r3, r3, #8
 8003f44:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8003f48:	4b27      	ldr	r3, [pc, #156]	; (8003fe8 <HAL_TIM_Encoder_MspInit+0x200>)
 8003f4a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003f4e:	f003 0308 	and.w	r3, r3, #8
 8003f52:	613b      	str	r3, [r7, #16]
 8003f54:	693b      	ldr	r3, [r7, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 8003f56:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8003f5a:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003f5c:	2302      	movs	r3, #2
 8003f5e:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003f60:	2300      	movs	r3, #0
 8003f62:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003f64:	2300      	movs	r3, #0
 8003f66:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8003f68:	2302      	movs	r3, #2
 8003f6a:	63fb      	str	r3, [r7, #60]	; 0x3c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8003f6c:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8003f70:	4619      	mov	r1, r3
 8003f72:	4822      	ldr	r0, [pc, #136]	; (8003ffc <HAL_TIM_Encoder_MspInit+0x214>)
 8003f74:	f003 fc84 	bl	8007880 <HAL_GPIO_Init>
}
 8003f78:	e032      	b.n	8003fe0 <HAL_TIM_Encoder_MspInit+0x1f8>
  else if(htim_encoder->Instance==TIM5)
 8003f7a:	687b      	ldr	r3, [r7, #4]
 8003f7c:	681b      	ldr	r3, [r3, #0]
 8003f7e:	4a20      	ldr	r2, [pc, #128]	; (8004000 <HAL_TIM_Encoder_MspInit+0x218>)
 8003f80:	4293      	cmp	r3, r2
 8003f82:	d12d      	bne.n	8003fe0 <HAL_TIM_Encoder_MspInit+0x1f8>
    __HAL_RCC_TIM5_CLK_ENABLE();
 8003f84:	4b18      	ldr	r3, [pc, #96]	; (8003fe8 <HAL_TIM_Encoder_MspInit+0x200>)
 8003f86:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8003f8a:	4a17      	ldr	r2, [pc, #92]	; (8003fe8 <HAL_TIM_Encoder_MspInit+0x200>)
 8003f8c:	f043 0308 	orr.w	r3, r3, #8
 8003f90:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 8003f94:	4b14      	ldr	r3, [pc, #80]	; (8003fe8 <HAL_TIM_Encoder_MspInit+0x200>)
 8003f96:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 8003f9a:	f003 0308 	and.w	r3, r3, #8
 8003f9e:	60fb      	str	r3, [r7, #12]
 8003fa0:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8003fa2:	4b11      	ldr	r3, [pc, #68]	; (8003fe8 <HAL_TIM_Encoder_MspInit+0x200>)
 8003fa4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003fa8:	4a0f      	ldr	r2, [pc, #60]	; (8003fe8 <HAL_TIM_Encoder_MspInit+0x200>)
 8003faa:	f043 0301 	orr.w	r3, r3, #1
 8003fae:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8003fb2:	4b0d      	ldr	r3, [pc, #52]	; (8003fe8 <HAL_TIM_Encoder_MspInit+0x200>)
 8003fb4:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003fb8:	f003 0301 	and.w	r3, r3, #1
 8003fbc:	60bb      	str	r3, [r7, #8]
 8003fbe:	68bb      	ldr	r3, [r7, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8003fc0:	2303      	movs	r3, #3
 8003fc2:	62fb      	str	r3, [r7, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003fc4:	2302      	movs	r3, #2
 8003fc6:	633b      	str	r3, [r7, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8003fc8:	2300      	movs	r3, #0
 8003fca:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8003fcc:	2300      	movs	r3, #0
 8003fce:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM5;
 8003fd0:	2302      	movs	r3, #2
 8003fd2:	63fb      	str	r3, [r7, #60]	; 0x3c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8003fd4:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 8003fd8:	4619      	mov	r1, r3
 8003fda:	4804      	ldr	r0, [pc, #16]	; (8003fec <HAL_TIM_Encoder_MspInit+0x204>)
 8003fdc:	f003 fc50 	bl	8007880 <HAL_GPIO_Init>
}
 8003fe0:	bf00      	nop
 8003fe2:	3740      	adds	r7, #64	; 0x40
 8003fe4:	46bd      	mov	sp, r7
 8003fe6:	bd80      	pop	{r7, pc}
 8003fe8:	58024400 	.word	0x58024400
 8003fec:	58020000 	.word	0x58020000
 8003ff0:	58020400 	.word	0x58020400
 8003ff4:	40000400 	.word	0x40000400
 8003ff8:	40000800 	.word	0x40000800
 8003ffc:	58020c00 	.word	0x58020c00
 8004000:	40000c00 	.word	0x40000c00

08004004 <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 8004004:	b580      	push	{r7, lr}
 8004006:	b084      	sub	sp, #16
 8004008:	af00      	add	r7, sp, #0
 800400a:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM12)
 800400c:	687b      	ldr	r3, [r7, #4]
 800400e:	681b      	ldr	r3, [r3, #0]
 8004010:	4a1d      	ldr	r2, [pc, #116]	; (8004088 <HAL_TIM_PWM_MspInit+0x84>)
 8004012:	4293      	cmp	r3, r2
 8004014:	d117      	bne.n	8004046 <HAL_TIM_PWM_MspInit+0x42>
  {
  /* USER CODE BEGIN TIM12_MspInit 0 */

  /* USER CODE END TIM12_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM12_CLK_ENABLE();
 8004016:	4b1d      	ldr	r3, [pc, #116]	; (800408c <HAL_TIM_PWM_MspInit+0x88>)
 8004018:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 800401c:	4a1b      	ldr	r2, [pc, #108]	; (800408c <HAL_TIM_PWM_MspInit+0x88>)
 800401e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004022:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 8004026:	4b19      	ldr	r3, [pc, #100]	; (800408c <HAL_TIM_PWM_MspInit+0x88>)
 8004028:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 800402c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8004030:	60fb      	str	r3, [r7, #12]
 8004032:	68fb      	ldr	r3, [r7, #12]
    /* TIM12 interrupt Init */
    HAL_NVIC_SetPriority(TIM8_BRK_TIM12_IRQn, 0, 0);
 8004034:	2200      	movs	r2, #0
 8004036:	2100      	movs	r1, #0
 8004038:	202b      	movs	r0, #43	; 0x2b
 800403a:	f000 fdb2 	bl	8004ba2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM8_BRK_TIM12_IRQn);
 800403e:	202b      	movs	r0, #43	; 0x2b
 8004040:	f000 fdc9 	bl	8004bd6 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM15_MspInit 1 */

  /* USER CODE END TIM15_MspInit 1 */
  }

}
 8004044:	e01b      	b.n	800407e <HAL_TIM_PWM_MspInit+0x7a>
  else if(htim_pwm->Instance==TIM15)
 8004046:	687b      	ldr	r3, [r7, #4]
 8004048:	681b      	ldr	r3, [r3, #0]
 800404a:	4a11      	ldr	r2, [pc, #68]	; (8004090 <HAL_TIM_PWM_MspInit+0x8c>)
 800404c:	4293      	cmp	r3, r2
 800404e:	d116      	bne.n	800407e <HAL_TIM_PWM_MspInit+0x7a>
    __HAL_RCC_TIM15_CLK_ENABLE();
 8004050:	4b0e      	ldr	r3, [pc, #56]	; (800408c <HAL_TIM_PWM_MspInit+0x88>)
 8004052:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 8004056:	4a0d      	ldr	r2, [pc, #52]	; (800408c <HAL_TIM_PWM_MspInit+0x88>)
 8004058:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800405c:	f8c2 30f0 	str.w	r3, [r2, #240]	; 0xf0
 8004060:	4b0a      	ldr	r3, [pc, #40]	; (800408c <HAL_TIM_PWM_MspInit+0x88>)
 8004062:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 8004066:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800406a:	60bb      	str	r3, [r7, #8]
 800406c:	68bb      	ldr	r3, [r7, #8]
    HAL_NVIC_SetPriority(TIM15_IRQn, 0, 0);
 800406e:	2200      	movs	r2, #0
 8004070:	2100      	movs	r1, #0
 8004072:	2074      	movs	r0, #116	; 0x74
 8004074:	f000 fd95 	bl	8004ba2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM15_IRQn);
 8004078:	2074      	movs	r0, #116	; 0x74
 800407a:	f000 fdac 	bl	8004bd6 <HAL_NVIC_EnableIRQ>
}
 800407e:	bf00      	nop
 8004080:	3710      	adds	r7, #16
 8004082:	46bd      	mov	sp, r7
 8004084:	bd80      	pop	{r7, pc}
 8004086:	bf00      	nop
 8004088:	40001800 	.word	0x40001800
 800408c:	58024400 	.word	0x58024400
 8004090:	40014000 	.word	0x40014000

08004094 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8004094:	b580      	push	{r7, lr}
 8004096:	b084      	sub	sp, #16
 8004098:	af00      	add	r7, sp, #0
 800409a:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM13)
 800409c:	687b      	ldr	r3, [r7, #4]
 800409e:	681b      	ldr	r3, [r3, #0]
 80040a0:	4a0e      	ldr	r2, [pc, #56]	; (80040dc <HAL_TIM_Base_MspInit+0x48>)
 80040a2:	4293      	cmp	r3, r2
 80040a4:	d116      	bne.n	80040d4 <HAL_TIM_Base_MspInit+0x40>
  {
  /* USER CODE BEGIN TIM13_MspInit 0 */

  /* USER CODE END TIM13_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM13_CLK_ENABLE();
 80040a6:	4b0e      	ldr	r3, [pc, #56]	; (80040e0 <HAL_TIM_Base_MspInit+0x4c>)
 80040a8:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 80040ac:	4a0c      	ldr	r2, [pc, #48]	; (80040e0 <HAL_TIM_Base_MspInit+0x4c>)
 80040ae:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80040b2:	f8c2 30e8 	str.w	r3, [r2, #232]	; 0xe8
 80040b6:	4b0a      	ldr	r3, [pc, #40]	; (80040e0 <HAL_TIM_Base_MspInit+0x4c>)
 80040b8:	f8d3 30e8 	ldr.w	r3, [r3, #232]	; 0xe8
 80040bc:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80040c0:	60fb      	str	r3, [r7, #12]
 80040c2:	68fb      	ldr	r3, [r7, #12]
    /* TIM13 interrupt Init */
    HAL_NVIC_SetPriority(TIM8_UP_TIM13_IRQn, 0, 0);
 80040c4:	2200      	movs	r2, #0
 80040c6:	2100      	movs	r1, #0
 80040c8:	202c      	movs	r0, #44	; 0x2c
 80040ca:	f000 fd6a 	bl	8004ba2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 80040ce:	202c      	movs	r0, #44	; 0x2c
 80040d0:	f000 fd81 	bl	8004bd6 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM13_MspInit 1 */

  /* USER CODE END TIM13_MspInit 1 */
  }

}
 80040d4:	bf00      	nop
 80040d6:	3710      	adds	r7, #16
 80040d8:	46bd      	mov	sp, r7
 80040da:	bd80      	pop	{r7, pc}
 80040dc:	40001c00 	.word	0x40001c00
 80040e0:	58024400 	.word	0x58024400

080040e4 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 80040e4:	b580      	push	{r7, lr}
 80040e6:	b08a      	sub	sp, #40	; 0x28
 80040e8:	af00      	add	r7, sp, #0
 80040ea:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80040ec:	f107 0314 	add.w	r3, r7, #20
 80040f0:	2200      	movs	r2, #0
 80040f2:	601a      	str	r2, [r3, #0]
 80040f4:	605a      	str	r2, [r3, #4]
 80040f6:	609a      	str	r2, [r3, #8]
 80040f8:	60da      	str	r2, [r3, #12]
 80040fa:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM12)
 80040fc:	687b      	ldr	r3, [r7, #4]
 80040fe:	681b      	ldr	r3, [r3, #0]
 8004100:	4a25      	ldr	r2, [pc, #148]	; (8004198 <HAL_TIM_MspPostInit+0xb4>)
 8004102:	4293      	cmp	r3, r2
 8004104:	d120      	bne.n	8004148 <HAL_TIM_MspPostInit+0x64>
  {
  /* USER CODE BEGIN TIM12_MspPostInit 0 */

  /* USER CODE END TIM12_MspPostInit 0 */
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8004106:	4b25      	ldr	r3, [pc, #148]	; (800419c <HAL_TIM_MspPostInit+0xb8>)
 8004108:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800410c:	4a23      	ldr	r2, [pc, #140]	; (800419c <HAL_TIM_MspPostInit+0xb8>)
 800410e:	f043 0302 	orr.w	r3, r3, #2
 8004112:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8004116:	4b21      	ldr	r3, [pc, #132]	; (800419c <HAL_TIM_MspPostInit+0xb8>)
 8004118:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800411c:	f003 0302 	and.w	r3, r3, #2
 8004120:	613b      	str	r3, [r7, #16]
 8004122:	693b      	ldr	r3, [r7, #16]
    /**TIM12 GPIO Configuration
    PB14     ------> TIM12_CH1
    PB15     ------> TIM12_CH2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 8004124:	f44f 4340 	mov.w	r3, #49152	; 0xc000
 8004128:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800412a:	2302      	movs	r3, #2
 800412c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800412e:	2300      	movs	r3, #0
 8004130:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004132:	2300      	movs	r3, #0
 8004134:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM12;
 8004136:	2302      	movs	r3, #2
 8004138:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800413a:	f107 0314 	add.w	r3, r7, #20
 800413e:	4619      	mov	r1, r3
 8004140:	4817      	ldr	r0, [pc, #92]	; (80041a0 <HAL_TIM_MspPostInit+0xbc>)
 8004142:	f003 fb9d 	bl	8007880 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM15_MspPostInit 1 */

  /* USER CODE END TIM15_MspPostInit 1 */
  }

}
 8004146:	e023      	b.n	8004190 <HAL_TIM_MspPostInit+0xac>
  else if(htim->Instance==TIM15)
 8004148:	687b      	ldr	r3, [r7, #4]
 800414a:	681b      	ldr	r3, [r3, #0]
 800414c:	4a15      	ldr	r2, [pc, #84]	; (80041a4 <HAL_TIM_MspPostInit+0xc0>)
 800414e:	4293      	cmp	r3, r2
 8004150:	d11e      	bne.n	8004190 <HAL_TIM_MspPostInit+0xac>
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8004152:	4b12      	ldr	r3, [pc, #72]	; (800419c <HAL_TIM_MspPostInit+0xb8>)
 8004154:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8004158:	4a10      	ldr	r2, [pc, #64]	; (800419c <HAL_TIM_MspPostInit+0xb8>)
 800415a:	f043 0310 	orr.w	r3, r3, #16
 800415e:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 8004162:	4b0e      	ldr	r3, [pc, #56]	; (800419c <HAL_TIM_MspPostInit+0xb8>)
 8004164:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8004168:	f003 0310 	and.w	r3, r3, #16
 800416c:	60fb      	str	r3, [r7, #12]
 800416e:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8004170:	2360      	movs	r3, #96	; 0x60
 8004172:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004174:	2302      	movs	r3, #2
 8004176:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004178:	2300      	movs	r3, #0
 800417a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800417c:	2300      	movs	r3, #0
 800417e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_TIM15;
 8004180:	2304      	movs	r3, #4
 8004182:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8004184:	f107 0314 	add.w	r3, r7, #20
 8004188:	4619      	mov	r1, r3
 800418a:	4807      	ldr	r0, [pc, #28]	; (80041a8 <HAL_TIM_MspPostInit+0xc4>)
 800418c:	f003 fb78 	bl	8007880 <HAL_GPIO_Init>
}
 8004190:	bf00      	nop
 8004192:	3728      	adds	r7, #40	; 0x28
 8004194:	46bd      	mov	sp, r7
 8004196:	bd80      	pop	{r7, pc}
 8004198:	40001800 	.word	0x40001800
 800419c:	58024400 	.word	0x58024400
 80041a0:	58020400 	.word	0x58020400
 80041a4:	40014000 	.word	0x40014000
 80041a8:	58021000 	.word	0x58021000

080041ac <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80041ac:	b580      	push	{r7, lr}
 80041ae:	b0b6      	sub	sp, #216	; 0xd8
 80041b0:	af00      	add	r7, sp, #0
 80041b2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80041b4:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 80041b8:	2200      	movs	r2, #0
 80041ba:	601a      	str	r2, [r3, #0]
 80041bc:	605a      	str	r2, [r3, #4]
 80041be:	609a      	str	r2, [r3, #8]
 80041c0:	60da      	str	r2, [r3, #12]
 80041c2:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80041c4:	f107 0310 	add.w	r3, r7, #16
 80041c8:	22b4      	movs	r2, #180	; 0xb4
 80041ca:	2100      	movs	r1, #0
 80041cc:	4618      	mov	r0, r3
 80041ce:	f009 fc41 	bl	800da54 <memset>
  if(huart->Instance==USART1)
 80041d2:	687b      	ldr	r3, [r7, #4]
 80041d4:	681b      	ldr	r3, [r3, #0]
 80041d6:	4a57      	ldr	r2, [pc, #348]	; (8004334 <HAL_UART_MspInit+0x188>)
 80041d8:	4293      	cmp	r3, r2
 80041da:	f040 80a7 	bne.w	800432c <HAL_UART_MspInit+0x180>

  /* USER CODE END USART1_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 80041de:	2301      	movs	r3, #1
 80041e0:	613b      	str	r3, [r7, #16]
    PeriphClkInitStruct.Usart16ClockSelection = RCC_USART16910CLKSOURCE_D2PCLK2;
 80041e2:	2300      	movs	r3, #0
 80041e4:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80041e8:	f107 0310 	add.w	r3, r7, #16
 80041ec:	4618      	mov	r0, r3
 80041ee:	f004 fc7d 	bl	8008aec <HAL_RCCEx_PeriphCLKConfig>
 80041f2:	4603      	mov	r3, r0
 80041f4:	2b00      	cmp	r3, #0
 80041f6:	d001      	beq.n	80041fc <HAL_UART_MspInit+0x50>
    {
      Error_Handler();
 80041f8:	f7fd f88e 	bl	8001318 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 80041fc:	4b4e      	ldr	r3, [pc, #312]	; (8004338 <HAL_UART_MspInit+0x18c>)
 80041fe:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 8004202:	4a4d      	ldr	r2, [pc, #308]	; (8004338 <HAL_UART_MspInit+0x18c>)
 8004204:	f043 0310 	orr.w	r3, r3, #16
 8004208:	f8c2 30f0 	str.w	r3, [r2, #240]	; 0xf0
 800420c:	4b4a      	ldr	r3, [pc, #296]	; (8004338 <HAL_UART_MspInit+0x18c>)
 800420e:	f8d3 30f0 	ldr.w	r3, [r3, #240]	; 0xf0
 8004212:	f003 0310 	and.w	r3, r3, #16
 8004216:	60fb      	str	r3, [r7, #12]
 8004218:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800421a:	4b47      	ldr	r3, [pc, #284]	; (8004338 <HAL_UART_MspInit+0x18c>)
 800421c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8004220:	4a45      	ldr	r2, [pc, #276]	; (8004338 <HAL_UART_MspInit+0x18c>)
 8004222:	f043 0301 	orr.w	r3, r3, #1
 8004226:	f8c2 30e0 	str.w	r3, [r2, #224]	; 0xe0
 800422a:	4b43      	ldr	r3, [pc, #268]	; (8004338 <HAL_UART_MspInit+0x18c>)
 800422c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8004230:	f003 0301 	and.w	r3, r3, #1
 8004234:	60bb      	str	r3, [r7, #8]
 8004236:	68bb      	ldr	r3, [r7, #8]
    /**USART1 GPIO Configuration
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 8004238:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 800423c:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8004240:	2302      	movs	r3, #2
 8004242:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004246:	2300      	movs	r3, #0
 8004248:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800424c:	2300      	movs	r3, #0
 800424e:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8004252:	2307      	movs	r3, #7
 8004254:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8004258:	f107 03c4 	add.w	r3, r7, #196	; 0xc4
 800425c:	4619      	mov	r1, r3
 800425e:	4837      	ldr	r0, [pc, #220]	; (800433c <HAL_UART_MspInit+0x190>)
 8004260:	f003 fb0e 	bl	8007880 <HAL_GPIO_Init>

    /* USART1 DMA Init */
    /* USART1_RX Init */
    hdma_usart1_rx.Instance = DMA1_Stream0;
 8004264:	4b36      	ldr	r3, [pc, #216]	; (8004340 <HAL_UART_MspInit+0x194>)
 8004266:	4a37      	ldr	r2, [pc, #220]	; (8004344 <HAL_UART_MspInit+0x198>)
 8004268:	601a      	str	r2, [r3, #0]
    hdma_usart1_rx.Init.Request = DMA_REQUEST_USART1_RX;
 800426a:	4b35      	ldr	r3, [pc, #212]	; (8004340 <HAL_UART_MspInit+0x194>)
 800426c:	2229      	movs	r2, #41	; 0x29
 800426e:	605a      	str	r2, [r3, #4]
    hdma_usart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8004270:	4b33      	ldr	r3, [pc, #204]	; (8004340 <HAL_UART_MspInit+0x194>)
 8004272:	2200      	movs	r2, #0
 8004274:	609a      	str	r2, [r3, #8]
    hdma_usart1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 8004276:	4b32      	ldr	r3, [pc, #200]	; (8004340 <HAL_UART_MspInit+0x194>)
 8004278:	2200      	movs	r2, #0
 800427a:	60da      	str	r2, [r3, #12]
    hdma_usart1_rx.Init.MemInc = DMA_MINC_ENABLE;
 800427c:	4b30      	ldr	r3, [pc, #192]	; (8004340 <HAL_UART_MspInit+0x194>)
 800427e:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8004282:	611a      	str	r2, [r3, #16]
    hdma_usart1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8004284:	4b2e      	ldr	r3, [pc, #184]	; (8004340 <HAL_UART_MspInit+0x194>)
 8004286:	2200      	movs	r2, #0
 8004288:	615a      	str	r2, [r3, #20]
    hdma_usart1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 800428a:	4b2d      	ldr	r3, [pc, #180]	; (8004340 <HAL_UART_MspInit+0x194>)
 800428c:	2200      	movs	r2, #0
 800428e:	619a      	str	r2, [r3, #24]
    hdma_usart1_rx.Init.Mode = DMA_NORMAL;
 8004290:	4b2b      	ldr	r3, [pc, #172]	; (8004340 <HAL_UART_MspInit+0x194>)
 8004292:	2200      	movs	r2, #0
 8004294:	61da      	str	r2, [r3, #28]
    hdma_usart1_rx.Init.Priority = DMA_PRIORITY_HIGH;
 8004296:	4b2a      	ldr	r3, [pc, #168]	; (8004340 <HAL_UART_MspInit+0x194>)
 8004298:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 800429c:	621a      	str	r2, [r3, #32]
    hdma_usart1_rx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 800429e:	4b28      	ldr	r3, [pc, #160]	; (8004340 <HAL_UART_MspInit+0x194>)
 80042a0:	2200      	movs	r2, #0
 80042a2:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_usart1_rx) != HAL_OK)
 80042a4:	4826      	ldr	r0, [pc, #152]	; (8004340 <HAL_UART_MspInit+0x194>)
 80042a6:	f000 fcb1 	bl	8004c0c <HAL_DMA_Init>
 80042aa:	4603      	mov	r3, r0
 80042ac:	2b00      	cmp	r3, #0
 80042ae:	d001      	beq.n	80042b4 <HAL_UART_MspInit+0x108>
    {
      Error_Handler();
 80042b0:	f7fd f832 	bl	8001318 <Error_Handler>
    }

    __HAL_LINKDMA(huart,hdmarx,hdma_usart1_rx);
 80042b4:	687b      	ldr	r3, [r7, #4]
 80042b6:	4a22      	ldr	r2, [pc, #136]	; (8004340 <HAL_UART_MspInit+0x194>)
 80042b8:	67da      	str	r2, [r3, #124]	; 0x7c
 80042ba:	4a21      	ldr	r2, [pc, #132]	; (8004340 <HAL_UART_MspInit+0x194>)
 80042bc:	687b      	ldr	r3, [r7, #4]
 80042be:	6393      	str	r3, [r2, #56]	; 0x38

    /* USART1_TX Init */
    hdma_usart1_tx.Instance = DMA1_Stream1;
 80042c0:	4b21      	ldr	r3, [pc, #132]	; (8004348 <HAL_UART_MspInit+0x19c>)
 80042c2:	4a22      	ldr	r2, [pc, #136]	; (800434c <HAL_UART_MspInit+0x1a0>)
 80042c4:	601a      	str	r2, [r3, #0]
    hdma_usart1_tx.Init.Request = DMA_REQUEST_USART1_TX;
 80042c6:	4b20      	ldr	r3, [pc, #128]	; (8004348 <HAL_UART_MspInit+0x19c>)
 80042c8:	222a      	movs	r2, #42	; 0x2a
 80042ca:	605a      	str	r2, [r3, #4]
    hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 80042cc:	4b1e      	ldr	r3, [pc, #120]	; (8004348 <HAL_UART_MspInit+0x19c>)
 80042ce:	2240      	movs	r2, #64	; 0x40
 80042d0:	609a      	str	r2, [r3, #8]
    hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 80042d2:	4b1d      	ldr	r3, [pc, #116]	; (8004348 <HAL_UART_MspInit+0x19c>)
 80042d4:	2200      	movs	r2, #0
 80042d6:	60da      	str	r2, [r3, #12]
    hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 80042d8:	4b1b      	ldr	r3, [pc, #108]	; (8004348 <HAL_UART_MspInit+0x19c>)
 80042da:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80042de:	611a      	str	r2, [r3, #16]
    hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 80042e0:	4b19      	ldr	r3, [pc, #100]	; (8004348 <HAL_UART_MspInit+0x19c>)
 80042e2:	2200      	movs	r2, #0
 80042e4:	615a      	str	r2, [r3, #20]
    hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 80042e6:	4b18      	ldr	r3, [pc, #96]	; (8004348 <HAL_UART_MspInit+0x19c>)
 80042e8:	2200      	movs	r2, #0
 80042ea:	619a      	str	r2, [r3, #24]
    hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 80042ec:	4b16      	ldr	r3, [pc, #88]	; (8004348 <HAL_UART_MspInit+0x19c>)
 80042ee:	2200      	movs	r2, #0
 80042f0:	61da      	str	r2, [r3, #28]
    hdma_usart1_tx.Init.Priority = DMA_PRIORITY_HIGH;
 80042f2:	4b15      	ldr	r3, [pc, #84]	; (8004348 <HAL_UART_MspInit+0x19c>)
 80042f4:	f44f 3200 	mov.w	r2, #131072	; 0x20000
 80042f8:	621a      	str	r2, [r3, #32]
    hdma_usart1_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 80042fa:	4b13      	ldr	r3, [pc, #76]	; (8004348 <HAL_UART_MspInit+0x19c>)
 80042fc:	2200      	movs	r2, #0
 80042fe:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 8004300:	4811      	ldr	r0, [pc, #68]	; (8004348 <HAL_UART_MspInit+0x19c>)
 8004302:	f000 fc83 	bl	8004c0c <HAL_DMA_Init>
 8004306:	4603      	mov	r3, r0
 8004308:	2b00      	cmp	r3, #0
 800430a:	d001      	beq.n	8004310 <HAL_UART_MspInit+0x164>
    {
      Error_Handler();
 800430c:	f7fd f804 	bl	8001318 <Error_Handler>
    }

    __HAL_LINKDMA(huart,hdmatx,hdma_usart1_tx);
 8004310:	687b      	ldr	r3, [r7, #4]
 8004312:	4a0d      	ldr	r2, [pc, #52]	; (8004348 <HAL_UART_MspInit+0x19c>)
 8004314:	679a      	str	r2, [r3, #120]	; 0x78
 8004316:	4a0c      	ldr	r2, [pc, #48]	; (8004348 <HAL_UART_MspInit+0x19c>)
 8004318:	687b      	ldr	r3, [r7, #4]
 800431a:	6393      	str	r3, [r2, #56]	; 0x38

    /* USART1 interrupt Init */
    HAL_NVIC_SetPriority(USART1_IRQn, 0, 0);
 800431c:	2200      	movs	r2, #0
 800431e:	2100      	movs	r1, #0
 8004320:	2025      	movs	r0, #37	; 0x25
 8004322:	f000 fc3e 	bl	8004ba2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(USART1_IRQn);
 8004326:	2025      	movs	r0, #37	; 0x25
 8004328:	f000 fc55 	bl	8004bd6 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 800432c:	bf00      	nop
 800432e:	37d8      	adds	r7, #216	; 0xd8
 8004330:	46bd      	mov	sp, r7
 8004332:	bd80      	pop	{r7, pc}
 8004334:	40011000 	.word	0x40011000
 8004338:	58024400 	.word	0x58024400
 800433c:	58020000 	.word	0x58020000
 8004340:	24000584 	.word	0x24000584
 8004344:	40020010 	.word	0x40020010
 8004348:	240005fc 	.word	0x240005fc
 800434c:	40020028 	.word	0x40020028

08004350 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8004350:	b480      	push	{r7}
 8004352:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8004354:	e7fe      	b.n	8004354 <NMI_Handler+0x4>

08004356 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8004356:	b480      	push	{r7}
 8004358:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800435a:	e7fe      	b.n	800435a <HardFault_Handler+0x4>

0800435c <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 800435c:	b480      	push	{r7}
 800435e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8004360:	e7fe      	b.n	8004360 <MemManage_Handler+0x4>

08004362 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8004362:	b480      	push	{r7}
 8004364:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8004366:	e7fe      	b.n	8004366 <BusFault_Handler+0x4>

08004368 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8004368:	b480      	push	{r7}
 800436a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 800436c:	e7fe      	b.n	800436c <UsageFault_Handler+0x4>

0800436e <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800436e:	b480      	push	{r7}
 8004370:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8004372:	bf00      	nop
 8004374:	46bd      	mov	sp, r7
 8004376:	f85d 7b04 	ldr.w	r7, [sp], #4
 800437a:	4770      	bx	lr

0800437c <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800437c:	b480      	push	{r7}
 800437e:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8004380:	bf00      	nop
 8004382:	46bd      	mov	sp, r7
 8004384:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004388:	4770      	bx	lr

0800438a <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800438a:	b480      	push	{r7}
 800438c:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800438e:	bf00      	nop
 8004390:	46bd      	mov	sp, r7
 8004392:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004396:	4770      	bx	lr

08004398 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8004398:	b580      	push	{r7, lr}
 800439a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 800439c:	f000 fb06 	bl	80049ac <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80043a0:	bf00      	nop
 80043a2:	bd80      	pop	{r7, pc}

080043a4 <RCC_IRQHandler>:

/**
  * @brief This function handles RCC global interrupt.
  */
void RCC_IRQHandler(void)
{
 80043a4:	b480      	push	{r7}
 80043a6:	af00      	add	r7, sp, #0

  /* USER CODE END RCC_IRQn 0 */
  /* USER CODE BEGIN RCC_IRQn 1 */

  /* USER CODE END RCC_IRQn 1 */
}
 80043a8:	bf00      	nop
 80043aa:	46bd      	mov	sp, r7
 80043ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043b0:	4770      	bx	lr
	...

080043b4 <DMA1_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA1 stream0 global interrupt.
  */
void DMA1_Stream0_IRQHandler(void)
{
 80043b4:	b580      	push	{r7, lr}
 80043b6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream0_IRQn 0 */

  /* USER CODE END DMA1_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart1_rx);
 80043b8:	4802      	ldr	r0, [pc, #8]	; (80043c4 <DMA1_Stream0_IRQHandler+0x10>)
 80043ba:	f001 ff4f 	bl	800625c <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream0_IRQn 1 */

  /* USER CODE END DMA1_Stream0_IRQn 1 */
}
 80043be:	bf00      	nop
 80043c0:	bd80      	pop	{r7, pc}
 80043c2:	bf00      	nop
 80043c4:	24000584 	.word	0x24000584

080043c8 <DMA1_Stream1_IRQHandler>:

/**
  * @brief This function handles DMA1 stream1 global interrupt.
  */
void DMA1_Stream1_IRQHandler(void)
{
 80043c8:	b580      	push	{r7, lr}
 80043ca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream1_IRQn 0 */

  /* USER CODE END DMA1_Stream1_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_usart1_tx);
 80043cc:	4802      	ldr	r0, [pc, #8]	; (80043d8 <DMA1_Stream1_IRQHandler+0x10>)
 80043ce:	f001 ff45 	bl	800625c <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream1_IRQn 1 */

  /* USER CODE END DMA1_Stream1_IRQn 1 */
}
 80043d2:	bf00      	nop
 80043d4:	bd80      	pop	{r7, pc}
 80043d6:	bf00      	nop
 80043d8:	240005fc 	.word	0x240005fc

080043dc <USART1_IRQHandler>:

/**
  * @brief This function handles USART1 global interrupt.
  */
void USART1_IRQHandler(void)
{
 80043dc:	b580      	push	{r7, lr}
 80043de:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN USART1_IRQn 0 */

  /* USER CODE END USART1_IRQn 0 */
  HAL_UART_IRQHandler(&huart1);
 80043e0:	4802      	ldr	r0, [pc, #8]	; (80043ec <USART1_IRQHandler+0x10>)
 80043e2:	f007 fb01 	bl	800b9e8 <HAL_UART_IRQHandler>
  /* USER CODE BEGIN USART1_IRQn 1 */

  /* USER CODE END USART1_IRQn 1 */
}
 80043e6:	bf00      	nop
 80043e8:	bd80      	pop	{r7, pc}
 80043ea:	bf00      	nop
 80043ec:	240004f4 	.word	0x240004f4

080043f0 <TIM8_BRK_TIM12_IRQHandler>:

/**
  * @brief This function handles TIM8 break interrupt and TIM12 global interrupt.
  */
void TIM8_BRK_TIM12_IRQHandler(void)
{
 80043f0:	b580      	push	{r7, lr}
 80043f2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM8_BRK_TIM12_IRQn 0 */

  /* USER CODE END TIM8_BRK_TIM12_IRQn 0 */
  HAL_TIM_IRQHandler(&htim12);
 80043f4:	4802      	ldr	r0, [pc, #8]	; (8004400 <TIM8_BRK_TIM12_IRQHandler+0x10>)
 80043f6:	f006 fa67 	bl	800a8c8 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM8_BRK_TIM12_IRQn 1 */

  /* USER CODE END TIM8_BRK_TIM12_IRQn 1 */
}
 80043fa:	bf00      	nop
 80043fc:	bd80      	pop	{r7, pc}
 80043fe:	bf00      	nop
 8004400:	24000410 	.word	0x24000410

08004404 <TIM8_UP_TIM13_IRQHandler>:

/**
  * @brief This function handles TIM8 update interrupt and TIM13 global interrupt.
  */
void TIM8_UP_TIM13_IRQHandler(void)
{
 8004404:	b580      	push	{r7, lr}
 8004406:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 0 */

  /* USER CODE END TIM8_UP_TIM13_IRQn 0 */
  HAL_TIM_IRQHandler(&htim13);
 8004408:	4802      	ldr	r0, [pc, #8]	; (8004414 <TIM8_UP_TIM13_IRQHandler+0x10>)
 800440a:	f006 fa5d 	bl	800a8c8 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 1 */

  /* USER CODE END TIM8_UP_TIM13_IRQn 1 */
}
 800440e:	bf00      	nop
 8004410:	bd80      	pop	{r7, pc}
 8004412:	bf00      	nop
 8004414:	2400045c 	.word	0x2400045c

08004418 <TIM15_IRQHandler>:

/**
  * @brief This function handles TIM15 global interrupt.
  */
void TIM15_IRQHandler(void)
{
 8004418:	b580      	push	{r7, lr}
 800441a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM15_IRQn 0 */

  /* USER CODE END TIM15_IRQn 0 */
  HAL_TIM_IRQHandler(&htim15);
 800441c:	4802      	ldr	r0, [pc, #8]	; (8004428 <TIM15_IRQHandler+0x10>)
 800441e:	f006 fa53 	bl	800a8c8 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM15_IRQn 1 */

  /* USER CODE END TIM15_IRQn 1 */
}
 8004422:	bf00      	nop
 8004424:	bd80      	pop	{r7, pc}
 8004426:	bf00      	nop
 8004428:	240004a8 	.word	0x240004a8

0800442c <_ZN3STM5setupEv>:
#include "stm_main.h"
#include "dc_motor.h"
#include "mecanum.h"

void STM::setup(void){
 800442c:	b580      	push	{r7, lr}
 800442e:	af00      	add	r7, sp, #0
	DC_motor_init();
 8004430:	f7fc f924 	bl	800067c <_Z13DC_motor_initv>
}
 8004434:	bf00      	nop
 8004436:	bd80      	pop	{r7, pc}

08004438 <_ZN3STM11run_mecanumEv>:

void STM::run_mecanum(void){
 8004438:	b580      	push	{r7, lr}
 800443a:	af00      	add	r7, sp, #0
	mecanum.run();
 800443c:	4802      	ldr	r0, [pc, #8]	; (8004448 <_ZN3STM11run_mecanumEv+0x10>)
 800443e:	f7fc ffd5 	bl	80013ec <_ZN7Mecanum3runEv>
}
 8004442:	bf00      	nop
 8004444:	bd80      	pop	{r7, pc}
 8004446:	bf00      	nop
 8004448:	24000678 	.word	0x24000678

0800444c <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 800444c:	b480      	push	{r7}
 800444e:	af00      	add	r7, sp, #0
	return 1;
 8004450:	2301      	movs	r3, #1
}
 8004452:	4618      	mov	r0, r3
 8004454:	46bd      	mov	sp, r7
 8004456:	f85d 7b04 	ldr.w	r7, [sp], #4
 800445a:	4770      	bx	lr

0800445c <_kill>:

int _kill(int pid, int sig)
{
 800445c:	b580      	push	{r7, lr}
 800445e:	b082      	sub	sp, #8
 8004460:	af00      	add	r7, sp, #0
 8004462:	6078      	str	r0, [r7, #4]
 8004464:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8004466:	f009 fabd 	bl	800d9e4 <__errno>
 800446a:	4603      	mov	r3, r0
 800446c:	2216      	movs	r2, #22
 800446e:	601a      	str	r2, [r3, #0]
	return -1;
 8004470:	f04f 33ff 	mov.w	r3, #4294967295
}
 8004474:	4618      	mov	r0, r3
 8004476:	3708      	adds	r7, #8
 8004478:	46bd      	mov	sp, r7
 800447a:	bd80      	pop	{r7, pc}

0800447c <_exit>:

void _exit (int status)
{
 800447c:	b580      	push	{r7, lr}
 800447e:	b082      	sub	sp, #8
 8004480:	af00      	add	r7, sp, #0
 8004482:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8004484:	f04f 31ff 	mov.w	r1, #4294967295
 8004488:	6878      	ldr	r0, [r7, #4]
 800448a:	f7ff ffe7 	bl	800445c <_kill>
	while (1) {}		/* Make sure we hang here */
 800448e:	e7fe      	b.n	800448e <_exit+0x12>

08004490 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8004490:	b580      	push	{r7, lr}
 8004492:	b086      	sub	sp, #24
 8004494:	af00      	add	r7, sp, #0
 8004496:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8004498:	4a14      	ldr	r2, [pc, #80]	; (80044ec <_sbrk+0x5c>)
 800449a:	4b15      	ldr	r3, [pc, #84]	; (80044f0 <_sbrk+0x60>)
 800449c:	1ad3      	subs	r3, r2, r3
 800449e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80044a0:	697b      	ldr	r3, [r7, #20]
 80044a2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80044a4:	4b13      	ldr	r3, [pc, #76]	; (80044f4 <_sbrk+0x64>)
 80044a6:	681b      	ldr	r3, [r3, #0]
 80044a8:	2b00      	cmp	r3, #0
 80044aa:	d102      	bne.n	80044b2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80044ac:	4b11      	ldr	r3, [pc, #68]	; (80044f4 <_sbrk+0x64>)
 80044ae:	4a12      	ldr	r2, [pc, #72]	; (80044f8 <_sbrk+0x68>)
 80044b0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80044b2:	4b10      	ldr	r3, [pc, #64]	; (80044f4 <_sbrk+0x64>)
 80044b4:	681a      	ldr	r2, [r3, #0]
 80044b6:	687b      	ldr	r3, [r7, #4]
 80044b8:	4413      	add	r3, r2
 80044ba:	693a      	ldr	r2, [r7, #16]
 80044bc:	429a      	cmp	r2, r3
 80044be:	d207      	bcs.n	80044d0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80044c0:	f009 fa90 	bl	800d9e4 <__errno>
 80044c4:	4603      	mov	r3, r0
 80044c6:	220c      	movs	r2, #12
 80044c8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80044ca:	f04f 33ff 	mov.w	r3, #4294967295
 80044ce:	e009      	b.n	80044e4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80044d0:	4b08      	ldr	r3, [pc, #32]	; (80044f4 <_sbrk+0x64>)
 80044d2:	681b      	ldr	r3, [r3, #0]
 80044d4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80044d6:	4b07      	ldr	r3, [pc, #28]	; (80044f4 <_sbrk+0x64>)
 80044d8:	681a      	ldr	r2, [r3, #0]
 80044da:	687b      	ldr	r3, [r7, #4]
 80044dc:	4413      	add	r3, r2
 80044de:	4a05      	ldr	r2, [pc, #20]	; (80044f4 <_sbrk+0x64>)
 80044e0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80044e2:	68fb      	ldr	r3, [r7, #12]
}
 80044e4:	4618      	mov	r0, r3
 80044e6:	3718      	adds	r7, #24
 80044e8:	46bd      	mov	sp, r7
 80044ea:	bd80      	pop	{r7, pc}
 80044ec:	24050000 	.word	0x24050000
 80044f0:	00000400 	.word	0x00000400
 80044f4:	2400106c 	.word	0x2400106c
 80044f8:	24001088 	.word	0x24001088

080044fc <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 80044fc:	b480      	push	{r7}
 80044fe:	af00      	add	r7, sp, #0
 __IO uint32_t tmpreg;
#endif /* DATA_IN_D2_SRAM */

  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 8004500:	4b32      	ldr	r3, [pc, #200]	; (80045cc <SystemInit+0xd0>)
 8004502:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8004506:	4a31      	ldr	r2, [pc, #196]	; (80045cc <SystemInit+0xd0>)
 8004508:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800450c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
  #endif
  /* Reset the RCC clock configuration to the default reset state ------------*/

   /* Increasing the CPU frequency */
  if(FLASH_LATENCY_DEFAULT  > (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 8004510:	4b2f      	ldr	r3, [pc, #188]	; (80045d0 <SystemInit+0xd4>)
 8004512:	681b      	ldr	r3, [r3, #0]
 8004514:	f003 030f 	and.w	r3, r3, #15
 8004518:	2b06      	cmp	r3, #6
 800451a:	d807      	bhi.n	800452c <SystemInit+0x30>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 800451c:	4b2c      	ldr	r3, [pc, #176]	; (80045d0 <SystemInit+0xd4>)
 800451e:	681b      	ldr	r3, [r3, #0]
 8004520:	f023 030f 	bic.w	r3, r3, #15
 8004524:	4a2a      	ldr	r2, [pc, #168]	; (80045d0 <SystemInit+0xd4>)
 8004526:	f043 0307 	orr.w	r3, r3, #7
 800452a:	6013      	str	r3, [r2, #0]
  }

  /* Set HSION bit */
  RCC->CR |= RCC_CR_HSION;
 800452c:	4b29      	ldr	r3, [pc, #164]	; (80045d4 <SystemInit+0xd8>)
 800452e:	681b      	ldr	r3, [r3, #0]
 8004530:	4a28      	ldr	r2, [pc, #160]	; (80045d4 <SystemInit+0xd8>)
 8004532:	f043 0301 	orr.w	r3, r3, #1
 8004536:	6013      	str	r3, [r2, #0]

  /* Reset CFGR register */
  RCC->CFGR = 0x00000000;
 8004538:	4b26      	ldr	r3, [pc, #152]	; (80045d4 <SystemInit+0xd8>)
 800453a:	2200      	movs	r2, #0
 800453c:	611a      	str	r2, [r3, #16]

  /* Reset HSEON, HSECSSON, CSION, HSI48ON, CSIKERON, PLL1ON, PLL2ON and PLL3ON bits */
  RCC->CR &= 0xEAF6ED7FU;
 800453e:	4b25      	ldr	r3, [pc, #148]	; (80045d4 <SystemInit+0xd8>)
 8004540:	681a      	ldr	r2, [r3, #0]
 8004542:	4924      	ldr	r1, [pc, #144]	; (80045d4 <SystemInit+0xd8>)
 8004544:	4b24      	ldr	r3, [pc, #144]	; (80045d8 <SystemInit+0xdc>)
 8004546:	4013      	ands	r3, r2
 8004548:	600b      	str	r3, [r1, #0]

   /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLASH_LATENCY_DEFAULT  < (READ_BIT((FLASH->ACR), FLASH_ACR_LATENCY)))
 800454a:	4b21      	ldr	r3, [pc, #132]	; (80045d0 <SystemInit+0xd4>)
 800454c:	681b      	ldr	r3, [r3, #0]
 800454e:	f003 0308 	and.w	r3, r3, #8
 8004552:	2b00      	cmp	r3, #0
 8004554:	d007      	beq.n	8004566 <SystemInit+0x6a>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    MODIFY_REG(FLASH->ACR, FLASH_ACR_LATENCY, (uint32_t)(FLASH_LATENCY_DEFAULT));
 8004556:	4b1e      	ldr	r3, [pc, #120]	; (80045d0 <SystemInit+0xd4>)
 8004558:	681b      	ldr	r3, [r3, #0]
 800455a:	f023 030f 	bic.w	r3, r3, #15
 800455e:	4a1c      	ldr	r2, [pc, #112]	; (80045d0 <SystemInit+0xd4>)
 8004560:	f043 0307 	orr.w	r3, r3, #7
 8004564:	6013      	str	r3, [r2, #0]
  }

#if defined(D3_SRAM_BASE)
  /* Reset D1CFGR register */
  RCC->D1CFGR = 0x00000000;
 8004566:	4b1b      	ldr	r3, [pc, #108]	; (80045d4 <SystemInit+0xd8>)
 8004568:	2200      	movs	r2, #0
 800456a:	619a      	str	r2, [r3, #24]

  /* Reset D2CFGR register */
  RCC->D2CFGR = 0x00000000;
 800456c:	4b19      	ldr	r3, [pc, #100]	; (80045d4 <SystemInit+0xd8>)
 800456e:	2200      	movs	r2, #0
 8004570:	61da      	str	r2, [r3, #28]

  /* Reset D3CFGR register */
  RCC->D3CFGR = 0x00000000;
 8004572:	4b18      	ldr	r3, [pc, #96]	; (80045d4 <SystemInit+0xd8>)
 8004574:	2200      	movs	r2, #0
 8004576:	621a      	str	r2, [r3, #32]

  /* Reset SRDCFGR register */
  RCC->SRDCFGR = 0x00000000;
#endif
  /* Reset PLLCKSELR register */
  RCC->PLLCKSELR = 0x02020200;
 8004578:	4b16      	ldr	r3, [pc, #88]	; (80045d4 <SystemInit+0xd8>)
 800457a:	4a18      	ldr	r2, [pc, #96]	; (80045dc <SystemInit+0xe0>)
 800457c:	629a      	str	r2, [r3, #40]	; 0x28

  /* Reset PLLCFGR register */
  RCC->PLLCFGR = 0x01FF0000;
 800457e:	4b15      	ldr	r3, [pc, #84]	; (80045d4 <SystemInit+0xd8>)
 8004580:	4a17      	ldr	r2, [pc, #92]	; (80045e0 <SystemInit+0xe4>)
 8004582:	62da      	str	r2, [r3, #44]	; 0x2c
  /* Reset PLL1DIVR register */
  RCC->PLL1DIVR = 0x01010280;
 8004584:	4b13      	ldr	r3, [pc, #76]	; (80045d4 <SystemInit+0xd8>)
 8004586:	4a17      	ldr	r2, [pc, #92]	; (80045e4 <SystemInit+0xe8>)
 8004588:	631a      	str	r2, [r3, #48]	; 0x30
  /* Reset PLL1FRACR register */
  RCC->PLL1FRACR = 0x00000000;
 800458a:	4b12      	ldr	r3, [pc, #72]	; (80045d4 <SystemInit+0xd8>)
 800458c:	2200      	movs	r2, #0
 800458e:	635a      	str	r2, [r3, #52]	; 0x34

  /* Reset PLL2DIVR register */
  RCC->PLL2DIVR = 0x01010280;
 8004590:	4b10      	ldr	r3, [pc, #64]	; (80045d4 <SystemInit+0xd8>)
 8004592:	4a14      	ldr	r2, [pc, #80]	; (80045e4 <SystemInit+0xe8>)
 8004594:	639a      	str	r2, [r3, #56]	; 0x38

  /* Reset PLL2FRACR register */

  RCC->PLL2FRACR = 0x00000000;
 8004596:	4b0f      	ldr	r3, [pc, #60]	; (80045d4 <SystemInit+0xd8>)
 8004598:	2200      	movs	r2, #0
 800459a:	63da      	str	r2, [r3, #60]	; 0x3c
  /* Reset PLL3DIVR register */
  RCC->PLL3DIVR = 0x01010280;
 800459c:	4b0d      	ldr	r3, [pc, #52]	; (80045d4 <SystemInit+0xd8>)
 800459e:	4a11      	ldr	r2, [pc, #68]	; (80045e4 <SystemInit+0xe8>)
 80045a0:	641a      	str	r2, [r3, #64]	; 0x40

  /* Reset PLL3FRACR register */
  RCC->PLL3FRACR = 0x00000000;
 80045a2:	4b0c      	ldr	r3, [pc, #48]	; (80045d4 <SystemInit+0xd8>)
 80045a4:	2200      	movs	r2, #0
 80045a6:	645a      	str	r2, [r3, #68]	; 0x44

  /* Reset HSEBYP bit */
  RCC->CR &= 0xFFFBFFFFU;
 80045a8:	4b0a      	ldr	r3, [pc, #40]	; (80045d4 <SystemInit+0xd8>)
 80045aa:	681b      	ldr	r3, [r3, #0]
 80045ac:	4a09      	ldr	r2, [pc, #36]	; (80045d4 <SystemInit+0xd8>)
 80045ae:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80045b2:	6013      	str	r3, [r2, #0]

  /* Disable all interrupts */
  RCC->CIER = 0x00000000;
 80045b4:	4b07      	ldr	r3, [pc, #28]	; (80045d4 <SystemInit+0xd8>)
 80045b6:	2200      	movs	r2, #0
 80045b8:	661a      	str	r2, [r3, #96]	; 0x60
  /*
   * Disable the FMC bank1 (enabled after reset).
   * This, prevents CPU speculation access on this bank which blocks the use of FMC during
   * 24us. During this time the others FMC master (such as LTDC) cannot use it!
   */
  FMC_Bank1_R->BTCR[0] = 0x000030D2;
 80045ba:	4b0b      	ldr	r3, [pc, #44]	; (80045e8 <SystemInit+0xec>)
 80045bc:	f243 02d2 	movw	r2, #12498	; 0x30d2
 80045c0:	601a      	str	r2, [r3, #0]
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal D1 AXI-RAM or in Internal FLASH */
#endif /* USER_VECT_TAB_ADDRESS */

#endif /*DUAL_CORE && CORE_CM4*/
}
 80045c2:	bf00      	nop
 80045c4:	46bd      	mov	sp, r7
 80045c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80045ca:	4770      	bx	lr
 80045cc:	e000ed00 	.word	0xe000ed00
 80045d0:	52002000 	.word	0x52002000
 80045d4:	58024400 	.word	0x58024400
 80045d8:	eaf6ed7f 	.word	0xeaf6ed7f
 80045dc:	02020200 	.word	0x02020200
 80045e0:	01ff0000 	.word	0x01ff0000
 80045e4:	01010280 	.word	0x01010280
 80045e8:	52004000 	.word	0x52004000

080045ec <HAL_TIM_PeriodElapsedCallback>:
#define STEP_PIN_4 GPIO_PIN_9

//int ms=0;
double ac;

void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim) {
 80045ec:	b580      	push	{r7, lr}
 80045ee:	b082      	sub	sp, #8
 80045f0:	af00      	add	r7, sp, #0
 80045f2:	6078      	str	r0, [r7, #4]

	if (htim->Instance == TIM13) {
 80045f4:	687b      	ldr	r3, [r7, #4]
 80045f6:	681b      	ldr	r3, [r3, #0]
 80045f8:	4a8f      	ldr	r2, [pc, #572]	; (8004838 <HAL_TIM_PeriodElapsedCallback+0x24c>)
 80045fa:	4293      	cmp	r3, r2
 80045fc:	f040 8118 	bne.w	8004830 <HAL_TIM_PeriodElapsedCallback+0x244>
		/*enc 1*/

//		if(__HAL_TIM_GetCounter(&htim2)>40000000||fr.rps_now>4800)
//			fr.CountNow=__HAL_TIM_GetCounter(&htim2)-65535;
//		else
			fr.CountNow = __HAL_TIM_GetCounter(&htim2);
 8004600:	4b8e      	ldr	r3, [pc, #568]	; (800483c <HAL_TIM_PeriodElapsedCallback+0x250>)
 8004602:	681b      	ldr	r3, [r3, #0]
 8004604:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004606:	b21a      	sxth	r2, r3
 8004608:	4b8d      	ldr	r3, [pc, #564]	; (8004840 <HAL_TIM_PeriodElapsedCallback+0x254>)
 800460a:	f8a3 2070 	strh.w	r2, [r3, #112]	; 0x70

		fr.PIDControl();
 800460e:	488c      	ldr	r0, [pc, #560]	; (8004840 <HAL_TIM_PeriodElapsedCallback+0x254>)
 8004610:	f7fc f8ba 	bl	8000788 <_ZN8DC_motor10PIDControlEv>
		__HAL_TIM_SetCounter(&htim2,0);
 8004614:	4b89      	ldr	r3, [pc, #548]	; (800483c <HAL_TIM_PeriodElapsedCallback+0x250>)
 8004616:	681b      	ldr	r3, [r3, #0]
 8004618:	2200      	movs	r2, #0
 800461a:	625a      	str	r2, [r3, #36]	; 0x24
		if (fr.PID >= 0) {
 800461c:	4b88      	ldr	r3, [pc, #544]	; (8004840 <HAL_TIM_PeriodElapsedCallback+0x254>)
 800461e:	ed93 7b0c 	vldr	d7, [r3, #48]	; 0x30
 8004622:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
 8004626:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800462a:	db0c      	blt.n	8004646 <HAL_TIM_PeriodElapsedCallback+0x5a>
			HAL_GPIO_WritePin(MOTORPLUS_PORT_fr, MOTORPLUS_PIN_fr, GPIO_PIN_SET);
 800462c:	2201      	movs	r2, #1
 800462e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004632:	4884      	ldr	r0, [pc, #528]	; (8004844 <HAL_TIM_PeriodElapsedCallback+0x258>)
 8004634:	f003 facc 	bl	8007bd0 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(MOTORMINUS_PORT_fr, MOTORMINUS_PIN_fr, GPIO_PIN_RESET);
 8004638:	2200      	movs	r2, #0
 800463a:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 800463e:	4881      	ldr	r0, [pc, #516]	; (8004844 <HAL_TIM_PeriodElapsedCallback+0x258>)
 8004640:	f003 fac6 	bl	8007bd0 <HAL_GPIO_WritePin>
 8004644:	e013      	b.n	800466e <HAL_TIM_PeriodElapsedCallback+0x82>
		}
		else{
			HAL_GPIO_WritePin(MOTORPLUS_PORT_fr, MOTORPLUS_PIN_fr, GPIO_PIN_RESET);
 8004646:	2200      	movs	r2, #0
 8004648:	f44f 7180 	mov.w	r1, #256	; 0x100
 800464c:	487d      	ldr	r0, [pc, #500]	; (8004844 <HAL_TIM_PeriodElapsedCallback+0x258>)
 800464e:	f003 fabf 	bl	8007bd0 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(MOTORMINUS_PORT_fr, MOTORMINUS_PIN_fr, GPIO_PIN_SET);
 8004652:	2201      	movs	r2, #1
 8004654:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8004658:	487a      	ldr	r0, [pc, #488]	; (8004844 <HAL_TIM_PeriodElapsedCallback+0x258>)
 800465a:	f003 fab9 	bl	8007bd0 <HAL_GPIO_WritePin>
			fr.PID = -fr.PID;
 800465e:	4b78      	ldr	r3, [pc, #480]	; (8004840 <HAL_TIM_PeriodElapsedCallback+0x254>)
 8004660:	ed93 7b0c 	vldr	d7, [r3, #48]	; 0x30
 8004664:	eeb1 7b47 	vneg.f64	d7, d7
 8004668:	4b75      	ldr	r3, [pc, #468]	; (8004840 <HAL_TIM_PeriodElapsedCallback+0x254>)
 800466a:	ed83 7b0c 	vstr	d7, [r3, #48]	; 0x30
		}
		fr.PID = fabs(fr.PID);
 800466e:	4b74      	ldr	r3, [pc, #464]	; (8004840 <HAL_TIM_PeriodElapsedCallback+0x254>)
 8004670:	ed93 7b0c 	vldr	d7, [r3, #48]	; 0x30
 8004674:	eeb0 7bc7 	vabs.f64	d7, d7
 8004678:	4b71      	ldr	r3, [pc, #452]	; (8004840 <HAL_TIM_PeriodElapsedCallback+0x254>)
 800467a:	ed83 7b0c 	vstr	d7, [r3, #48]	; 0x30
		__HAL_TIM_SET_COMPARE(&htim12, TIM_CHANNEL_2, abs((int)fr.PID));
 800467e:	4b70      	ldr	r3, [pc, #448]	; (8004840 <HAL_TIM_PeriodElapsedCallback+0x254>)
 8004680:	ed93 7b0c 	vldr	d7, [r3, #48]	; 0x30
 8004684:	eefd 7bc7 	vcvt.s32.f64	s15, d7
 8004688:	ee17 3a90 	vmov	r3, s15
 800468c:	ea83 72e3 	eor.w	r2, r3, r3, asr #31
 8004690:	eba2 72e3 	sub.w	r2, r2, r3, asr #31
 8004694:	4b6c      	ldr	r3, [pc, #432]	; (8004848 <HAL_TIM_PeriodElapsedCallback+0x25c>)
 8004696:	681b      	ldr	r3, [r3, #0]
 8004698:	639a      	str	r2, [r3, #56]	; 0x38
		/*enc 2*/
//		if(__HAL_TIM_GetCounter(&htim5)>400000000||fl.rps_now>4800)
//			fl.CountNow=0;
//
//		else
			fl.CountNow = __HAL_TIM_GetCounter(&htim5);
 800469a:	4b6c      	ldr	r3, [pc, #432]	; (800484c <HAL_TIM_PeriodElapsedCallback+0x260>)
 800469c:	681b      	ldr	r3, [r3, #0]
 800469e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80046a0:	b21a      	sxth	r2, r3
 80046a2:	4b6b      	ldr	r3, [pc, #428]	; (8004850 <HAL_TIM_PeriodElapsedCallback+0x264>)
 80046a4:	f8a3 2070 	strh.w	r2, [r3, #112]	; 0x70

		fl.PIDControl();
 80046a8:	4869      	ldr	r0, [pc, #420]	; (8004850 <HAL_TIM_PeriodElapsedCallback+0x264>)
 80046aa:	f7fc f86d 	bl	8000788 <_ZN8DC_motor10PIDControlEv>
		__HAL_TIM_SetCounter(&htim5,0);
 80046ae:	4b67      	ldr	r3, [pc, #412]	; (800484c <HAL_TIM_PeriodElapsedCallback+0x260>)
 80046b0:	681b      	ldr	r3, [r3, #0]
 80046b2:	2200      	movs	r2, #0
 80046b4:	625a      	str	r2, [r3, #36]	; 0x24
		if (fl.PID < 0) {
 80046b6:	4b66      	ldr	r3, [pc, #408]	; (8004850 <HAL_TIM_PeriodElapsedCallback+0x264>)
 80046b8:	ed93 7b0c 	vldr	d7, [r3, #48]	; 0x30
 80046bc:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
 80046c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80046c4:	d50b      	bpl.n	80046de <HAL_TIM_PeriodElapsedCallback+0xf2>
			HAL_GPIO_WritePin(MOTORPLUS_PORT_fl, MOTORPLUS_PIN_fl, GPIO_PIN_SET);
 80046c6:	2201      	movs	r2, #1
 80046c8:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80046cc:	4861      	ldr	r0, [pc, #388]	; (8004854 <HAL_TIM_PeriodElapsedCallback+0x268>)
 80046ce:	f003 fa7f 	bl	8007bd0 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(MOTORMINUS_PORT_fl, MOTORMINUS_PIN_fl, GPIO_PIN_RESET);
 80046d2:	2200      	movs	r2, #0
 80046d4:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80046d8:	485e      	ldr	r0, [pc, #376]	; (8004854 <HAL_TIM_PeriodElapsedCallback+0x268>)
 80046da:	f003 fa79 	bl	8007bd0 <HAL_GPIO_WritePin>
		}
		if (fl.PID >= 0) {
 80046de:	4b5c      	ldr	r3, [pc, #368]	; (8004850 <HAL_TIM_PeriodElapsedCallback+0x264>)
 80046e0:	ed93 7b0c 	vldr	d7, [r3, #48]	; 0x30
 80046e4:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
 80046e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80046ec:	db13      	blt.n	8004716 <HAL_TIM_PeriodElapsedCallback+0x12a>
			HAL_GPIO_WritePin(MOTORPLUS_PORT_fl, MOTORPLUS_PIN_fl, GPIO_PIN_RESET);
 80046ee:	2200      	movs	r2, #0
 80046f0:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80046f4:	4857      	ldr	r0, [pc, #348]	; (8004854 <HAL_TIM_PeriodElapsedCallback+0x268>)
 80046f6:	f003 fa6b 	bl	8007bd0 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(MOTORMINUS_PORT_fl, MOTORMINUS_PIN_fl, GPIO_PIN_SET);
 80046fa:	2201      	movs	r2, #1
 80046fc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8004700:	4854      	ldr	r0, [pc, #336]	; (8004854 <HAL_TIM_PeriodElapsedCallback+0x268>)
 8004702:	f003 fa65 	bl	8007bd0 <HAL_GPIO_WritePin>
			fl.PID = -fl.PID;
 8004706:	4b52      	ldr	r3, [pc, #328]	; (8004850 <HAL_TIM_PeriodElapsedCallback+0x264>)
 8004708:	ed93 7b0c 	vldr	d7, [r3, #48]	; 0x30
 800470c:	eeb1 7b47 	vneg.f64	d7, d7
 8004710:	4b4f      	ldr	r3, [pc, #316]	; (8004850 <HAL_TIM_PeriodElapsedCallback+0x264>)
 8004712:	ed83 7b0c 	vstr	d7, [r3, #48]	; 0x30
		}
		__HAL_TIM_SET_COMPARE(&htim12, TIM_CHANNEL_1, (int )fl.PID);
 8004716:	4b4e      	ldr	r3, [pc, #312]	; (8004850 <HAL_TIM_PeriodElapsedCallback+0x264>)
 8004718:	ed93 7b0c 	vldr	d7, [r3, #48]	; 0x30
 800471c:	eefd 7bc7 	vcvt.s32.f64	s15, d7
 8004720:	4b49      	ldr	r3, [pc, #292]	; (8004848 <HAL_TIM_PeriodElapsedCallback+0x25c>)
 8004722:	681b      	ldr	r3, [r3, #0]
 8004724:	ee17 2a90 	vmov	r2, s15
 8004728:	635a      	str	r2, [r3, #52]	; 0x34
		/*enc 3*/
//		if(__HAL_TIM_GetCounter(&htim3)>400000000||br.rps_now>4800)
//			br.CountNow=0;
//
//		 else
			br.CountNow = __HAL_TIM_GetCounter(&htim3);
 800472a:	4b4b      	ldr	r3, [pc, #300]	; (8004858 <HAL_TIM_PeriodElapsedCallback+0x26c>)
 800472c:	681b      	ldr	r3, [r3, #0]
 800472e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004730:	b21a      	sxth	r2, r3
 8004732:	4b4a      	ldr	r3, [pc, #296]	; (800485c <HAL_TIM_PeriodElapsedCallback+0x270>)
 8004734:	f8a3 2070 	strh.w	r2, [r3, #112]	; 0x70

		br.PIDControl();
 8004738:	4848      	ldr	r0, [pc, #288]	; (800485c <HAL_TIM_PeriodElapsedCallback+0x270>)
 800473a:	f7fc f825 	bl	8000788 <_ZN8DC_motor10PIDControlEv>
		__HAL_TIM_SetCounter(&htim3,0);
 800473e:	4b46      	ldr	r3, [pc, #280]	; (8004858 <HAL_TIM_PeriodElapsedCallback+0x26c>)
 8004740:	681b      	ldr	r3, [r3, #0]
 8004742:	2200      	movs	r2, #0
 8004744:	625a      	str	r2, [r3, #36]	; 0x24
		if (br.PID > 0) {
 8004746:	4b45      	ldr	r3, [pc, #276]	; (800485c <HAL_TIM_PeriodElapsedCallback+0x270>)
 8004748:	ed93 7b0c 	vldr	d7, [r3, #48]	; 0x30
 800474c:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
 8004750:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004754:	dd0a      	ble.n	800476c <HAL_TIM_PeriodElapsedCallback+0x180>
			HAL_GPIO_WritePin(MOTORPLUS_PORT_br, MOTORPLUS_PIN_br, GPIO_PIN_SET);
 8004756:	2201      	movs	r2, #1
 8004758:	2104      	movs	r1, #4
 800475a:	4841      	ldr	r0, [pc, #260]	; (8004860 <HAL_TIM_PeriodElapsedCallback+0x274>)
 800475c:	f003 fa38 	bl	8007bd0 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(MOTORMINUS_PORT_br, MOTORMINUS_PIN_br, GPIO_PIN_RESET);
 8004760:	2200      	movs	r2, #0
 8004762:	2108      	movs	r1, #8
 8004764:	483e      	ldr	r0, [pc, #248]	; (8004860 <HAL_TIM_PeriodElapsedCallback+0x274>)
 8004766:	f003 fa33 	bl	8007bd0 <HAL_GPIO_WritePin>
 800476a:	e011      	b.n	8004790 <HAL_TIM_PeriodElapsedCallback+0x1a4>
		}
		else{
			HAL_GPIO_WritePin(MOTORPLUS_PORT_br, MOTORPLUS_PIN_br, GPIO_PIN_RESET);
 800476c:	2200      	movs	r2, #0
 800476e:	2104      	movs	r1, #4
 8004770:	483b      	ldr	r0, [pc, #236]	; (8004860 <HAL_TIM_PeriodElapsedCallback+0x274>)
 8004772:	f003 fa2d 	bl	8007bd0 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(MOTORMINUS_PORT_br, MOTORMINUS_PIN_br, GPIO_PIN_SET);
 8004776:	2201      	movs	r2, #1
 8004778:	2108      	movs	r1, #8
 800477a:	4839      	ldr	r0, [pc, #228]	; (8004860 <HAL_TIM_PeriodElapsedCallback+0x274>)
 800477c:	f003 fa28 	bl	8007bd0 <HAL_GPIO_WritePin>
			br.PID = -br.PID;
 8004780:	4b36      	ldr	r3, [pc, #216]	; (800485c <HAL_TIM_PeriodElapsedCallback+0x270>)
 8004782:	ed93 7b0c 	vldr	d7, [r3, #48]	; 0x30
 8004786:	eeb1 7b47 	vneg.f64	d7, d7
 800478a:	4b34      	ldr	r3, [pc, #208]	; (800485c <HAL_TIM_PeriodElapsedCallback+0x270>)
 800478c:	ed83 7b0c 	vstr	d7, [r3, #48]	; 0x30
		}
		__HAL_TIM_SET_COMPARE(&htim15, TIM_CHANNEL_1, (int )br.PID);
 8004790:	4b32      	ldr	r3, [pc, #200]	; (800485c <HAL_TIM_PeriodElapsedCallback+0x270>)
 8004792:	ed93 7b0c 	vldr	d7, [r3, #48]	; 0x30
 8004796:	eefd 7bc7 	vcvt.s32.f64	s15, d7
 800479a:	4b32      	ldr	r3, [pc, #200]	; (8004864 <HAL_TIM_PeriodElapsedCallback+0x278>)
 800479c:	681b      	ldr	r3, [r3, #0]
 800479e:	ee17 2a90 	vmov	r2, s15
 80047a2:	635a      	str	r2, [r3, #52]	; 0x34
		/*enc 4*/
//		if(__HAL_TIM_GetCounter(&htim4)>400000000||bl.rps_now>4800)
//			bl.CountNow=0;
//
//		else
			bl.CountNow = __HAL_TIM_GetCounter(&htim4);
 80047a4:	4b30      	ldr	r3, [pc, #192]	; (8004868 <HAL_TIM_PeriodElapsedCallback+0x27c>)
 80047a6:	681b      	ldr	r3, [r3, #0]
 80047a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80047aa:	b21a      	sxth	r2, r3
 80047ac:	4b2f      	ldr	r3, [pc, #188]	; (800486c <HAL_TIM_PeriodElapsedCallback+0x280>)
 80047ae:	f8a3 2070 	strh.w	r2, [r3, #112]	; 0x70

		bl.PIDControl();
 80047b2:	482e      	ldr	r0, [pc, #184]	; (800486c <HAL_TIM_PeriodElapsedCallback+0x280>)
 80047b4:	f7fb ffe8 	bl	8000788 <_ZN8DC_motor10PIDControlEv>
		__HAL_TIM_SetCounter(&htim4,0);
 80047b8:	4b2b      	ldr	r3, [pc, #172]	; (8004868 <HAL_TIM_PeriodElapsedCallback+0x27c>)
 80047ba:	681b      	ldr	r3, [r3, #0]
 80047bc:	2200      	movs	r2, #0
 80047be:	625a      	str	r2, [r3, #36]	; 0x24
		if (bl.PID >= 0) {
 80047c0:	4b2a      	ldr	r3, [pc, #168]	; (800486c <HAL_TIM_PeriodElapsedCallback+0x280>)
 80047c2:	ed93 7b0c 	vldr	d7, [r3, #48]	; 0x30
 80047c6:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
 80047ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80047ce:	db0a      	blt.n	80047e6 <HAL_TIM_PeriodElapsedCallback+0x1fa>
			HAL_GPIO_WritePin(MOTORPLUS_PORT_bl, MOTORPLUS_PIN_bl, GPIO_PIN_SET);
 80047d0:	2201      	movs	r2, #1
 80047d2:	2110      	movs	r1, #16
 80047d4:	4822      	ldr	r0, [pc, #136]	; (8004860 <HAL_TIM_PeriodElapsedCallback+0x274>)
 80047d6:	f003 f9fb 	bl	8007bd0 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(MOTORMINUS_PORT_bl, MOTORMINUS_PIN_bl, GPIO_PIN_RESET);
 80047da:	2200      	movs	r2, #0
 80047dc:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80047e0:	4823      	ldr	r0, [pc, #140]	; (8004870 <HAL_TIM_PeriodElapsedCallback+0x284>)
 80047e2:	f003 f9f5 	bl	8007bd0 <HAL_GPIO_WritePin>
		}
		if (bl.PID < 0) {
 80047e6:	4b21      	ldr	r3, [pc, #132]	; (800486c <HAL_TIM_PeriodElapsedCallback+0x280>)
 80047e8:	ed93 7b0c 	vldr	d7, [r3, #48]	; 0x30
 80047ec:	eeb5 7bc0 	vcmpe.f64	d7, #0.0
 80047f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80047f4:	d512      	bpl.n	800481c <HAL_TIM_PeriodElapsedCallback+0x230>
			HAL_GPIO_WritePin(MOTORPLUS_PORT_bl, MOTORPLUS_PIN_bl, GPIO_PIN_RESET);
 80047f6:	2200      	movs	r2, #0
 80047f8:	2110      	movs	r1, #16
 80047fa:	4819      	ldr	r0, [pc, #100]	; (8004860 <HAL_TIM_PeriodElapsedCallback+0x274>)
 80047fc:	f003 f9e8 	bl	8007bd0 <HAL_GPIO_WritePin>
			HAL_GPIO_WritePin(MOTORMINUS_PORT_bl, MOTORMINUS_PIN_bl, GPIO_PIN_SET);
 8004800:	2201      	movs	r2, #1
 8004802:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8004806:	481a      	ldr	r0, [pc, #104]	; (8004870 <HAL_TIM_PeriodElapsedCallback+0x284>)
 8004808:	f003 f9e2 	bl	8007bd0 <HAL_GPIO_WritePin>
			bl.PID = -bl.PID;
 800480c:	4b17      	ldr	r3, [pc, #92]	; (800486c <HAL_TIM_PeriodElapsedCallback+0x280>)
 800480e:	ed93 7b0c 	vldr	d7, [r3, #48]	; 0x30
 8004812:	eeb1 7b47 	vneg.f64	d7, d7
 8004816:	4b15      	ldr	r3, [pc, #84]	; (800486c <HAL_TIM_PeriodElapsedCallback+0x280>)
 8004818:	ed83 7b0c 	vstr	d7, [r3, #48]	; 0x30
		}
		__HAL_TIM_SET_COMPARE(&htim15, TIM_CHANNEL_2,(int )bl.PID);
 800481c:	4b13      	ldr	r3, [pc, #76]	; (800486c <HAL_TIM_PeriodElapsedCallback+0x280>)
 800481e:	ed93 7b0c 	vldr	d7, [r3, #48]	; 0x30
 8004822:	eefd 7bc7 	vcvt.s32.f64	s15, d7
 8004826:	4b0f      	ldr	r3, [pc, #60]	; (8004864 <HAL_TIM_PeriodElapsedCallback+0x278>)
 8004828:	681b      	ldr	r3, [r3, #0]
 800482a:	ee17 2a90 	vmov	r2, s15
 800482e:	639a      	str	r2, [r3, #56]	; 0x38


	}

}
 8004830:	bf00      	nop
 8004832:	3708      	adds	r7, #8
 8004834:	46bd      	mov	sp, r7
 8004836:	bd80      	pop	{r7, pc}
 8004838:	40001c00 	.word	0x40001c00
 800483c:	240002e0 	.word	0x240002e0
 8004840:	240000a0 	.word	0x240000a0
 8004844:	58020c00 	.word	0x58020c00
 8004848:	24000410 	.word	0x24000410
 800484c:	240003c4 	.word	0x240003c4
 8004850:	24000130 	.word	0x24000130
 8004854:	58020400 	.word	0x58020400
 8004858:	2400032c 	.word	0x2400032c
 800485c:	240001c0 	.word	0x240001c0
 8004860:	58021000 	.word	0x58021000
 8004864:	240004a8 	.word	0x240004a8
 8004868:	24000378 	.word	0x24000378
 800486c:	24000250 	.word	0x24000250
 8004870:	58020800 	.word	0x58020800

08004874 <Reset_Handler>:
 8004874:	f8df d034 	ldr.w	sp, [pc, #52]	; 80048ac <LoopFillZerobss+0xe>
 8004878:	f7ff fe40 	bl	80044fc <SystemInit>
 800487c:	480c      	ldr	r0, [pc, #48]	; (80048b0 <LoopFillZerobss+0x12>)
 800487e:	490d      	ldr	r1, [pc, #52]	; (80048b4 <LoopFillZerobss+0x16>)
 8004880:	4a0d      	ldr	r2, [pc, #52]	; (80048b8 <LoopFillZerobss+0x1a>)
 8004882:	2300      	movs	r3, #0
 8004884:	e002      	b.n	800488c <LoopCopyDataInit>

08004886 <CopyDataInit>:
 8004886:	58d4      	ldr	r4, [r2, r3]
 8004888:	50c4      	str	r4, [r0, r3]
 800488a:	3304      	adds	r3, #4

0800488c <LoopCopyDataInit>:
 800488c:	18c4      	adds	r4, r0, r3
 800488e:	428c      	cmp	r4, r1
 8004890:	d3f9      	bcc.n	8004886 <CopyDataInit>
 8004892:	4a0a      	ldr	r2, [pc, #40]	; (80048bc <LoopFillZerobss+0x1e>)
 8004894:	4c0a      	ldr	r4, [pc, #40]	; (80048c0 <LoopFillZerobss+0x22>)
 8004896:	2300      	movs	r3, #0
 8004898:	e001      	b.n	800489e <LoopFillZerobss>

0800489a <FillZerobss>:
 800489a:	6013      	str	r3, [r2, #0]
 800489c:	3204      	adds	r2, #4

0800489e <LoopFillZerobss>:
 800489e:	42a2      	cmp	r2, r4
 80048a0:	d3fb      	bcc.n	800489a <FillZerobss>
 80048a2:	f009 f8a5 	bl	800d9f0 <__libc_init_array>
 80048a6:	f7fc f8eb 	bl	8000a80 <main>
 80048aa:	4770      	bx	lr
 80048ac:	24050000 	.word	0x24050000
 80048b0:	24000000 	.word	0x24000000
 80048b4:	2400007c 	.word	0x2400007c
 80048b8:	0800e048 	.word	0x0800e048
 80048bc:	24000080 	.word	0x24000080
 80048c0:	24001084 	.word	0x24001084

080048c4 <ADC3_IRQHandler>:
 80048c4:	e7fe      	b.n	80048c4 <ADC3_IRQHandler>
	...

080048c8 <HAL_Init>:
 80048c8:	b580      	push	{r7, lr}
 80048ca:	b082      	sub	sp, #8
 80048cc:	af00      	add	r7, sp, #0
 80048ce:	2003      	movs	r0, #3
 80048d0:	f000 f95c 	bl	8004b8c <HAL_NVIC_SetPriorityGrouping>
 80048d4:	f003 ff34 	bl	8008740 <HAL_RCC_GetSysClockFreq>
 80048d8:	4602      	mov	r2, r0
 80048da:	4b15      	ldr	r3, [pc, #84]	; (8004930 <HAL_Init+0x68>)
 80048dc:	699b      	ldr	r3, [r3, #24]
 80048de:	0a1b      	lsrs	r3, r3, #8
 80048e0:	f003 030f 	and.w	r3, r3, #15
 80048e4:	4913      	ldr	r1, [pc, #76]	; (8004934 <HAL_Init+0x6c>)
 80048e6:	5ccb      	ldrb	r3, [r1, r3]
 80048e8:	f003 031f 	and.w	r3, r3, #31
 80048ec:	fa22 f303 	lsr.w	r3, r2, r3
 80048f0:	607b      	str	r3, [r7, #4]
 80048f2:	4b0f      	ldr	r3, [pc, #60]	; (8004930 <HAL_Init+0x68>)
 80048f4:	699b      	ldr	r3, [r3, #24]
 80048f6:	f003 030f 	and.w	r3, r3, #15
 80048fa:	4a0e      	ldr	r2, [pc, #56]	; (8004934 <HAL_Init+0x6c>)
 80048fc:	5cd3      	ldrb	r3, [r2, r3]
 80048fe:	f003 031f 	and.w	r3, r3, #31
 8004902:	687a      	ldr	r2, [r7, #4]
 8004904:	fa22 f303 	lsr.w	r3, r2, r3
 8004908:	4a0b      	ldr	r2, [pc, #44]	; (8004938 <HAL_Init+0x70>)
 800490a:	6013      	str	r3, [r2, #0]
 800490c:	4a0b      	ldr	r2, [pc, #44]	; (800493c <HAL_Init+0x74>)
 800490e:	687b      	ldr	r3, [r7, #4]
 8004910:	6013      	str	r3, [r2, #0]
 8004912:	200f      	movs	r0, #15
 8004914:	f000 f814 	bl	8004940 <HAL_InitTick>
 8004918:	4603      	mov	r3, r0
 800491a:	2b00      	cmp	r3, #0
 800491c:	d001      	beq.n	8004922 <HAL_Init+0x5a>
 800491e:	2301      	movs	r3, #1
 8004920:	e002      	b.n	8004928 <HAL_Init+0x60>
 8004922:	f7ff fa41 	bl	8003da8 <HAL_MspInit>
 8004926:	2300      	movs	r3, #0
 8004928:	4618      	mov	r0, r3
 800492a:	3708      	adds	r7, #8
 800492c:	46bd      	mov	sp, r7
 800492e:	bd80      	pop	{r7, pc}
 8004930:	58024400 	.word	0x58024400
 8004934:	0800dfec 	.word	0x0800dfec
 8004938:	24000008 	.word	0x24000008
 800493c:	24000004 	.word	0x24000004

08004940 <HAL_InitTick>:
 8004940:	b580      	push	{r7, lr}
 8004942:	b082      	sub	sp, #8
 8004944:	af00      	add	r7, sp, #0
 8004946:	6078      	str	r0, [r7, #4]
 8004948:	4b15      	ldr	r3, [pc, #84]	; (80049a0 <HAL_InitTick+0x60>)
 800494a:	781b      	ldrb	r3, [r3, #0]
 800494c:	2b00      	cmp	r3, #0
 800494e:	d101      	bne.n	8004954 <HAL_InitTick+0x14>
 8004950:	2301      	movs	r3, #1
 8004952:	e021      	b.n	8004998 <HAL_InitTick+0x58>
 8004954:	4b13      	ldr	r3, [pc, #76]	; (80049a4 <HAL_InitTick+0x64>)
 8004956:	681a      	ldr	r2, [r3, #0]
 8004958:	4b11      	ldr	r3, [pc, #68]	; (80049a0 <HAL_InitTick+0x60>)
 800495a:	781b      	ldrb	r3, [r3, #0]
 800495c:	4619      	mov	r1, r3
 800495e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8004962:	fbb3 f3f1 	udiv	r3, r3, r1
 8004966:	fbb2 f3f3 	udiv	r3, r2, r3
 800496a:	4618      	mov	r0, r3
 800496c:	f000 f941 	bl	8004bf2 <HAL_SYSTICK_Config>
 8004970:	4603      	mov	r3, r0
 8004972:	2b00      	cmp	r3, #0
 8004974:	d001      	beq.n	800497a <HAL_InitTick+0x3a>
 8004976:	2301      	movs	r3, #1
 8004978:	e00e      	b.n	8004998 <HAL_InitTick+0x58>
 800497a:	687b      	ldr	r3, [r7, #4]
 800497c:	2b0f      	cmp	r3, #15
 800497e:	d80a      	bhi.n	8004996 <HAL_InitTick+0x56>
 8004980:	2200      	movs	r2, #0
 8004982:	6879      	ldr	r1, [r7, #4]
 8004984:	f04f 30ff 	mov.w	r0, #4294967295
 8004988:	f000 f90b 	bl	8004ba2 <HAL_NVIC_SetPriority>
 800498c:	4a06      	ldr	r2, [pc, #24]	; (80049a8 <HAL_InitTick+0x68>)
 800498e:	687b      	ldr	r3, [r7, #4]
 8004990:	6013      	str	r3, [r2, #0]
 8004992:	2300      	movs	r3, #0
 8004994:	e000      	b.n	8004998 <HAL_InitTick+0x58>
 8004996:	2301      	movs	r3, #1
 8004998:	4618      	mov	r0, r3
 800499a:	3708      	adds	r7, #8
 800499c:	46bd      	mov	sp, r7
 800499e:	bd80      	pop	{r7, pc}
 80049a0:	24000010 	.word	0x24000010
 80049a4:	24000004 	.word	0x24000004
 80049a8:	2400000c 	.word	0x2400000c

080049ac <HAL_IncTick>:
 80049ac:	b480      	push	{r7}
 80049ae:	af00      	add	r7, sp, #0
 80049b0:	4b06      	ldr	r3, [pc, #24]	; (80049cc <HAL_IncTick+0x20>)
 80049b2:	781b      	ldrb	r3, [r3, #0]
 80049b4:	461a      	mov	r2, r3
 80049b6:	4b06      	ldr	r3, [pc, #24]	; (80049d0 <HAL_IncTick+0x24>)
 80049b8:	681b      	ldr	r3, [r3, #0]
 80049ba:	4413      	add	r3, r2
 80049bc:	4a04      	ldr	r2, [pc, #16]	; (80049d0 <HAL_IncTick+0x24>)
 80049be:	6013      	str	r3, [r2, #0]
 80049c0:	bf00      	nop
 80049c2:	46bd      	mov	sp, r7
 80049c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049c8:	4770      	bx	lr
 80049ca:	bf00      	nop
 80049cc:	24000010 	.word	0x24000010
 80049d0:	24001070 	.word	0x24001070

080049d4 <HAL_GetTick>:
 80049d4:	b480      	push	{r7}
 80049d6:	af00      	add	r7, sp, #0
 80049d8:	4b03      	ldr	r3, [pc, #12]	; (80049e8 <HAL_GetTick+0x14>)
 80049da:	681b      	ldr	r3, [r3, #0]
 80049dc:	4618      	mov	r0, r3
 80049de:	46bd      	mov	sp, r7
 80049e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80049e4:	4770      	bx	lr
 80049e6:	bf00      	nop
 80049e8:	24001070 	.word	0x24001070

080049ec <__NVIC_SetPriorityGrouping>:
 80049ec:	b480      	push	{r7}
 80049ee:	b085      	sub	sp, #20
 80049f0:	af00      	add	r7, sp, #0
 80049f2:	6078      	str	r0, [r7, #4]
 80049f4:	687b      	ldr	r3, [r7, #4]
 80049f6:	f003 0307 	and.w	r3, r3, #7
 80049fa:	60fb      	str	r3, [r7, #12]
 80049fc:	4b0b      	ldr	r3, [pc, #44]	; (8004a2c <__NVIC_SetPriorityGrouping+0x40>)
 80049fe:	68db      	ldr	r3, [r3, #12]
 8004a00:	60bb      	str	r3, [r7, #8]
 8004a02:	68ba      	ldr	r2, [r7, #8]
 8004a04:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8004a08:	4013      	ands	r3, r2
 8004a0a:	60bb      	str	r3, [r7, #8]
 8004a0c:	68fb      	ldr	r3, [r7, #12]
 8004a0e:	021a      	lsls	r2, r3, #8
 8004a10:	68bb      	ldr	r3, [r7, #8]
 8004a12:	431a      	orrs	r2, r3
 8004a14:	4b06      	ldr	r3, [pc, #24]	; (8004a30 <__NVIC_SetPriorityGrouping+0x44>)
 8004a16:	4313      	orrs	r3, r2
 8004a18:	60bb      	str	r3, [r7, #8]
 8004a1a:	4a04      	ldr	r2, [pc, #16]	; (8004a2c <__NVIC_SetPriorityGrouping+0x40>)
 8004a1c:	68bb      	ldr	r3, [r7, #8]
 8004a1e:	60d3      	str	r3, [r2, #12]
 8004a20:	bf00      	nop
 8004a22:	3714      	adds	r7, #20
 8004a24:	46bd      	mov	sp, r7
 8004a26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a2a:	4770      	bx	lr
 8004a2c:	e000ed00 	.word	0xe000ed00
 8004a30:	05fa0000 	.word	0x05fa0000

08004a34 <__NVIC_GetPriorityGrouping>:
 8004a34:	b480      	push	{r7}
 8004a36:	af00      	add	r7, sp, #0
 8004a38:	4b04      	ldr	r3, [pc, #16]	; (8004a4c <__NVIC_GetPriorityGrouping+0x18>)
 8004a3a:	68db      	ldr	r3, [r3, #12]
 8004a3c:	0a1b      	lsrs	r3, r3, #8
 8004a3e:	f003 0307 	and.w	r3, r3, #7
 8004a42:	4618      	mov	r0, r3
 8004a44:	46bd      	mov	sp, r7
 8004a46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a4a:	4770      	bx	lr
 8004a4c:	e000ed00 	.word	0xe000ed00

08004a50 <__NVIC_EnableIRQ>:
 8004a50:	b480      	push	{r7}
 8004a52:	b083      	sub	sp, #12
 8004a54:	af00      	add	r7, sp, #0
 8004a56:	4603      	mov	r3, r0
 8004a58:	80fb      	strh	r3, [r7, #6]
 8004a5a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8004a5e:	2b00      	cmp	r3, #0
 8004a60:	db0b      	blt.n	8004a7a <__NVIC_EnableIRQ+0x2a>
 8004a62:	88fb      	ldrh	r3, [r7, #6]
 8004a64:	f003 021f 	and.w	r2, r3, #31
 8004a68:	4907      	ldr	r1, [pc, #28]	; (8004a88 <__NVIC_EnableIRQ+0x38>)
 8004a6a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8004a6e:	095b      	lsrs	r3, r3, #5
 8004a70:	2001      	movs	r0, #1
 8004a72:	fa00 f202 	lsl.w	r2, r0, r2
 8004a76:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004a7a:	bf00      	nop
 8004a7c:	370c      	adds	r7, #12
 8004a7e:	46bd      	mov	sp, r7
 8004a80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a84:	4770      	bx	lr
 8004a86:	bf00      	nop
 8004a88:	e000e100 	.word	0xe000e100

08004a8c <__NVIC_SetPriority>:
 8004a8c:	b480      	push	{r7}
 8004a8e:	b083      	sub	sp, #12
 8004a90:	af00      	add	r7, sp, #0
 8004a92:	4603      	mov	r3, r0
 8004a94:	6039      	str	r1, [r7, #0]
 8004a96:	80fb      	strh	r3, [r7, #6]
 8004a98:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8004a9c:	2b00      	cmp	r3, #0
 8004a9e:	db0a      	blt.n	8004ab6 <__NVIC_SetPriority+0x2a>
 8004aa0:	683b      	ldr	r3, [r7, #0]
 8004aa2:	b2da      	uxtb	r2, r3
 8004aa4:	490c      	ldr	r1, [pc, #48]	; (8004ad8 <__NVIC_SetPriority+0x4c>)
 8004aa6:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8004aaa:	0112      	lsls	r2, r2, #4
 8004aac:	b2d2      	uxtb	r2, r2
 8004aae:	440b      	add	r3, r1
 8004ab0:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8004ab4:	e00a      	b.n	8004acc <__NVIC_SetPriority+0x40>
 8004ab6:	683b      	ldr	r3, [r7, #0]
 8004ab8:	b2da      	uxtb	r2, r3
 8004aba:	4908      	ldr	r1, [pc, #32]	; (8004adc <__NVIC_SetPriority+0x50>)
 8004abc:	88fb      	ldrh	r3, [r7, #6]
 8004abe:	f003 030f 	and.w	r3, r3, #15
 8004ac2:	3b04      	subs	r3, #4
 8004ac4:	0112      	lsls	r2, r2, #4
 8004ac6:	b2d2      	uxtb	r2, r2
 8004ac8:	440b      	add	r3, r1
 8004aca:	761a      	strb	r2, [r3, #24]
 8004acc:	bf00      	nop
 8004ace:	370c      	adds	r7, #12
 8004ad0:	46bd      	mov	sp, r7
 8004ad2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004ad6:	4770      	bx	lr
 8004ad8:	e000e100 	.word	0xe000e100
 8004adc:	e000ed00 	.word	0xe000ed00

08004ae0 <NVIC_EncodePriority>:
 8004ae0:	b480      	push	{r7}
 8004ae2:	b089      	sub	sp, #36	; 0x24
 8004ae4:	af00      	add	r7, sp, #0
 8004ae6:	60f8      	str	r0, [r7, #12]
 8004ae8:	60b9      	str	r1, [r7, #8]
 8004aea:	607a      	str	r2, [r7, #4]
 8004aec:	68fb      	ldr	r3, [r7, #12]
 8004aee:	f003 0307 	and.w	r3, r3, #7
 8004af2:	61fb      	str	r3, [r7, #28]
 8004af4:	69fb      	ldr	r3, [r7, #28]
 8004af6:	f1c3 0307 	rsb	r3, r3, #7
 8004afa:	2b04      	cmp	r3, #4
 8004afc:	bf28      	it	cs
 8004afe:	2304      	movcs	r3, #4
 8004b00:	61bb      	str	r3, [r7, #24]
 8004b02:	69fb      	ldr	r3, [r7, #28]
 8004b04:	3304      	adds	r3, #4
 8004b06:	2b06      	cmp	r3, #6
 8004b08:	d902      	bls.n	8004b10 <NVIC_EncodePriority+0x30>
 8004b0a:	69fb      	ldr	r3, [r7, #28]
 8004b0c:	3b03      	subs	r3, #3
 8004b0e:	e000      	b.n	8004b12 <NVIC_EncodePriority+0x32>
 8004b10:	2300      	movs	r3, #0
 8004b12:	617b      	str	r3, [r7, #20]
 8004b14:	f04f 32ff 	mov.w	r2, #4294967295
 8004b18:	69bb      	ldr	r3, [r7, #24]
 8004b1a:	fa02 f303 	lsl.w	r3, r2, r3
 8004b1e:	43da      	mvns	r2, r3
 8004b20:	68bb      	ldr	r3, [r7, #8]
 8004b22:	401a      	ands	r2, r3
 8004b24:	697b      	ldr	r3, [r7, #20]
 8004b26:	409a      	lsls	r2, r3
 8004b28:	f04f 31ff 	mov.w	r1, #4294967295
 8004b2c:	697b      	ldr	r3, [r7, #20]
 8004b2e:	fa01 f303 	lsl.w	r3, r1, r3
 8004b32:	43d9      	mvns	r1, r3
 8004b34:	687b      	ldr	r3, [r7, #4]
 8004b36:	400b      	ands	r3, r1
 8004b38:	4313      	orrs	r3, r2
 8004b3a:	4618      	mov	r0, r3
 8004b3c:	3724      	adds	r7, #36	; 0x24
 8004b3e:	46bd      	mov	sp, r7
 8004b40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b44:	4770      	bx	lr
	...

08004b48 <SysTick_Config>:
 8004b48:	b580      	push	{r7, lr}
 8004b4a:	b082      	sub	sp, #8
 8004b4c:	af00      	add	r7, sp, #0
 8004b4e:	6078      	str	r0, [r7, #4]
 8004b50:	687b      	ldr	r3, [r7, #4]
 8004b52:	3b01      	subs	r3, #1
 8004b54:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8004b58:	d301      	bcc.n	8004b5e <SysTick_Config+0x16>
 8004b5a:	2301      	movs	r3, #1
 8004b5c:	e00f      	b.n	8004b7e <SysTick_Config+0x36>
 8004b5e:	4a0a      	ldr	r2, [pc, #40]	; (8004b88 <SysTick_Config+0x40>)
 8004b60:	687b      	ldr	r3, [r7, #4]
 8004b62:	3b01      	subs	r3, #1
 8004b64:	6053      	str	r3, [r2, #4]
 8004b66:	210f      	movs	r1, #15
 8004b68:	f04f 30ff 	mov.w	r0, #4294967295
 8004b6c:	f7ff ff8e 	bl	8004a8c <__NVIC_SetPriority>
 8004b70:	4b05      	ldr	r3, [pc, #20]	; (8004b88 <SysTick_Config+0x40>)
 8004b72:	2200      	movs	r2, #0
 8004b74:	609a      	str	r2, [r3, #8]
 8004b76:	4b04      	ldr	r3, [pc, #16]	; (8004b88 <SysTick_Config+0x40>)
 8004b78:	2207      	movs	r2, #7
 8004b7a:	601a      	str	r2, [r3, #0]
 8004b7c:	2300      	movs	r3, #0
 8004b7e:	4618      	mov	r0, r3
 8004b80:	3708      	adds	r7, #8
 8004b82:	46bd      	mov	sp, r7
 8004b84:	bd80      	pop	{r7, pc}
 8004b86:	bf00      	nop
 8004b88:	e000e010 	.word	0xe000e010

08004b8c <HAL_NVIC_SetPriorityGrouping>:
 8004b8c:	b580      	push	{r7, lr}
 8004b8e:	b082      	sub	sp, #8
 8004b90:	af00      	add	r7, sp, #0
 8004b92:	6078      	str	r0, [r7, #4]
 8004b94:	6878      	ldr	r0, [r7, #4]
 8004b96:	f7ff ff29 	bl	80049ec <__NVIC_SetPriorityGrouping>
 8004b9a:	bf00      	nop
 8004b9c:	3708      	adds	r7, #8
 8004b9e:	46bd      	mov	sp, r7
 8004ba0:	bd80      	pop	{r7, pc}

08004ba2 <HAL_NVIC_SetPriority>:
 8004ba2:	b580      	push	{r7, lr}
 8004ba4:	b086      	sub	sp, #24
 8004ba6:	af00      	add	r7, sp, #0
 8004ba8:	4603      	mov	r3, r0
 8004baa:	60b9      	str	r1, [r7, #8]
 8004bac:	607a      	str	r2, [r7, #4]
 8004bae:	81fb      	strh	r3, [r7, #14]
 8004bb0:	f7ff ff40 	bl	8004a34 <__NVIC_GetPriorityGrouping>
 8004bb4:	6178      	str	r0, [r7, #20]
 8004bb6:	687a      	ldr	r2, [r7, #4]
 8004bb8:	68b9      	ldr	r1, [r7, #8]
 8004bba:	6978      	ldr	r0, [r7, #20]
 8004bbc:	f7ff ff90 	bl	8004ae0 <NVIC_EncodePriority>
 8004bc0:	4602      	mov	r2, r0
 8004bc2:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004bc6:	4611      	mov	r1, r2
 8004bc8:	4618      	mov	r0, r3
 8004bca:	f7ff ff5f 	bl	8004a8c <__NVIC_SetPriority>
 8004bce:	bf00      	nop
 8004bd0:	3718      	adds	r7, #24
 8004bd2:	46bd      	mov	sp, r7
 8004bd4:	bd80      	pop	{r7, pc}

08004bd6 <HAL_NVIC_EnableIRQ>:
 8004bd6:	b580      	push	{r7, lr}
 8004bd8:	b082      	sub	sp, #8
 8004bda:	af00      	add	r7, sp, #0
 8004bdc:	4603      	mov	r3, r0
 8004bde:	80fb      	strh	r3, [r7, #6]
 8004be0:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8004be4:	4618      	mov	r0, r3
 8004be6:	f7ff ff33 	bl	8004a50 <__NVIC_EnableIRQ>
 8004bea:	bf00      	nop
 8004bec:	3708      	adds	r7, #8
 8004bee:	46bd      	mov	sp, r7
 8004bf0:	bd80      	pop	{r7, pc}

08004bf2 <HAL_SYSTICK_Config>:
 8004bf2:	b580      	push	{r7, lr}
 8004bf4:	b082      	sub	sp, #8
 8004bf6:	af00      	add	r7, sp, #0
 8004bf8:	6078      	str	r0, [r7, #4]
 8004bfa:	6878      	ldr	r0, [r7, #4]
 8004bfc:	f7ff ffa4 	bl	8004b48 <SysTick_Config>
 8004c00:	4603      	mov	r3, r0
 8004c02:	4618      	mov	r0, r3
 8004c04:	3708      	adds	r7, #8
 8004c06:	46bd      	mov	sp, r7
 8004c08:	bd80      	pop	{r7, pc}
	...

08004c0c <HAL_DMA_Init>:
 8004c0c:	b580      	push	{r7, lr}
 8004c0e:	b086      	sub	sp, #24
 8004c10:	af00      	add	r7, sp, #0
 8004c12:	6078      	str	r0, [r7, #4]
 8004c14:	f7ff fede 	bl	80049d4 <HAL_GetTick>
 8004c18:	6138      	str	r0, [r7, #16]
 8004c1a:	687b      	ldr	r3, [r7, #4]
 8004c1c:	2b00      	cmp	r3, #0
 8004c1e:	d101      	bne.n	8004c24 <HAL_DMA_Init+0x18>
 8004c20:	2301      	movs	r3, #1
 8004c22:	e314      	b.n	800524e <HAL_DMA_Init+0x642>
 8004c24:	687b      	ldr	r3, [r7, #4]
 8004c26:	681b      	ldr	r3, [r3, #0]
 8004c28:	4a66      	ldr	r2, [pc, #408]	; (8004dc4 <HAL_DMA_Init+0x1b8>)
 8004c2a:	4293      	cmp	r3, r2
 8004c2c:	d04a      	beq.n	8004cc4 <HAL_DMA_Init+0xb8>
 8004c2e:	687b      	ldr	r3, [r7, #4]
 8004c30:	681b      	ldr	r3, [r3, #0]
 8004c32:	4a65      	ldr	r2, [pc, #404]	; (8004dc8 <HAL_DMA_Init+0x1bc>)
 8004c34:	4293      	cmp	r3, r2
 8004c36:	d045      	beq.n	8004cc4 <HAL_DMA_Init+0xb8>
 8004c38:	687b      	ldr	r3, [r7, #4]
 8004c3a:	681b      	ldr	r3, [r3, #0]
 8004c3c:	4a63      	ldr	r2, [pc, #396]	; (8004dcc <HAL_DMA_Init+0x1c0>)
 8004c3e:	4293      	cmp	r3, r2
 8004c40:	d040      	beq.n	8004cc4 <HAL_DMA_Init+0xb8>
 8004c42:	687b      	ldr	r3, [r7, #4]
 8004c44:	681b      	ldr	r3, [r3, #0]
 8004c46:	4a62      	ldr	r2, [pc, #392]	; (8004dd0 <HAL_DMA_Init+0x1c4>)
 8004c48:	4293      	cmp	r3, r2
 8004c4a:	d03b      	beq.n	8004cc4 <HAL_DMA_Init+0xb8>
 8004c4c:	687b      	ldr	r3, [r7, #4]
 8004c4e:	681b      	ldr	r3, [r3, #0]
 8004c50:	4a60      	ldr	r2, [pc, #384]	; (8004dd4 <HAL_DMA_Init+0x1c8>)
 8004c52:	4293      	cmp	r3, r2
 8004c54:	d036      	beq.n	8004cc4 <HAL_DMA_Init+0xb8>
 8004c56:	687b      	ldr	r3, [r7, #4]
 8004c58:	681b      	ldr	r3, [r3, #0]
 8004c5a:	4a5f      	ldr	r2, [pc, #380]	; (8004dd8 <HAL_DMA_Init+0x1cc>)
 8004c5c:	4293      	cmp	r3, r2
 8004c5e:	d031      	beq.n	8004cc4 <HAL_DMA_Init+0xb8>
 8004c60:	687b      	ldr	r3, [r7, #4]
 8004c62:	681b      	ldr	r3, [r3, #0]
 8004c64:	4a5d      	ldr	r2, [pc, #372]	; (8004ddc <HAL_DMA_Init+0x1d0>)
 8004c66:	4293      	cmp	r3, r2
 8004c68:	d02c      	beq.n	8004cc4 <HAL_DMA_Init+0xb8>
 8004c6a:	687b      	ldr	r3, [r7, #4]
 8004c6c:	681b      	ldr	r3, [r3, #0]
 8004c6e:	4a5c      	ldr	r2, [pc, #368]	; (8004de0 <HAL_DMA_Init+0x1d4>)
 8004c70:	4293      	cmp	r3, r2
 8004c72:	d027      	beq.n	8004cc4 <HAL_DMA_Init+0xb8>
 8004c74:	687b      	ldr	r3, [r7, #4]
 8004c76:	681b      	ldr	r3, [r3, #0]
 8004c78:	4a5a      	ldr	r2, [pc, #360]	; (8004de4 <HAL_DMA_Init+0x1d8>)
 8004c7a:	4293      	cmp	r3, r2
 8004c7c:	d022      	beq.n	8004cc4 <HAL_DMA_Init+0xb8>
 8004c7e:	687b      	ldr	r3, [r7, #4]
 8004c80:	681b      	ldr	r3, [r3, #0]
 8004c82:	4a59      	ldr	r2, [pc, #356]	; (8004de8 <HAL_DMA_Init+0x1dc>)
 8004c84:	4293      	cmp	r3, r2
 8004c86:	d01d      	beq.n	8004cc4 <HAL_DMA_Init+0xb8>
 8004c88:	687b      	ldr	r3, [r7, #4]
 8004c8a:	681b      	ldr	r3, [r3, #0]
 8004c8c:	4a57      	ldr	r2, [pc, #348]	; (8004dec <HAL_DMA_Init+0x1e0>)
 8004c8e:	4293      	cmp	r3, r2
 8004c90:	d018      	beq.n	8004cc4 <HAL_DMA_Init+0xb8>
 8004c92:	687b      	ldr	r3, [r7, #4]
 8004c94:	681b      	ldr	r3, [r3, #0]
 8004c96:	4a56      	ldr	r2, [pc, #344]	; (8004df0 <HAL_DMA_Init+0x1e4>)
 8004c98:	4293      	cmp	r3, r2
 8004c9a:	d013      	beq.n	8004cc4 <HAL_DMA_Init+0xb8>
 8004c9c:	687b      	ldr	r3, [r7, #4]
 8004c9e:	681b      	ldr	r3, [r3, #0]
 8004ca0:	4a54      	ldr	r2, [pc, #336]	; (8004df4 <HAL_DMA_Init+0x1e8>)
 8004ca2:	4293      	cmp	r3, r2
 8004ca4:	d00e      	beq.n	8004cc4 <HAL_DMA_Init+0xb8>
 8004ca6:	687b      	ldr	r3, [r7, #4]
 8004ca8:	681b      	ldr	r3, [r3, #0]
 8004caa:	4a53      	ldr	r2, [pc, #332]	; (8004df8 <HAL_DMA_Init+0x1ec>)
 8004cac:	4293      	cmp	r3, r2
 8004cae:	d009      	beq.n	8004cc4 <HAL_DMA_Init+0xb8>
 8004cb0:	687b      	ldr	r3, [r7, #4]
 8004cb2:	681b      	ldr	r3, [r3, #0]
 8004cb4:	4a51      	ldr	r2, [pc, #324]	; (8004dfc <HAL_DMA_Init+0x1f0>)
 8004cb6:	4293      	cmp	r3, r2
 8004cb8:	d004      	beq.n	8004cc4 <HAL_DMA_Init+0xb8>
 8004cba:	687b      	ldr	r3, [r7, #4]
 8004cbc:	681b      	ldr	r3, [r3, #0]
 8004cbe:	4a50      	ldr	r2, [pc, #320]	; (8004e00 <HAL_DMA_Init+0x1f4>)
 8004cc0:	4293      	cmp	r3, r2
 8004cc2:	d101      	bne.n	8004cc8 <HAL_DMA_Init+0xbc>
 8004cc4:	2301      	movs	r3, #1
 8004cc6:	e000      	b.n	8004cca <HAL_DMA_Init+0xbe>
 8004cc8:	2300      	movs	r3, #0
 8004cca:	2b00      	cmp	r3, #0
 8004ccc:	f000 813c 	beq.w	8004f48 <HAL_DMA_Init+0x33c>
 8004cd0:	687b      	ldr	r3, [r7, #4]
 8004cd2:	2202      	movs	r2, #2
 8004cd4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004cd8:	687b      	ldr	r3, [r7, #4]
 8004cda:	2200      	movs	r2, #0
 8004cdc:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004ce0:	687b      	ldr	r3, [r7, #4]
 8004ce2:	681b      	ldr	r3, [r3, #0]
 8004ce4:	4a37      	ldr	r2, [pc, #220]	; (8004dc4 <HAL_DMA_Init+0x1b8>)
 8004ce6:	4293      	cmp	r3, r2
 8004ce8:	d04a      	beq.n	8004d80 <HAL_DMA_Init+0x174>
 8004cea:	687b      	ldr	r3, [r7, #4]
 8004cec:	681b      	ldr	r3, [r3, #0]
 8004cee:	4a36      	ldr	r2, [pc, #216]	; (8004dc8 <HAL_DMA_Init+0x1bc>)
 8004cf0:	4293      	cmp	r3, r2
 8004cf2:	d045      	beq.n	8004d80 <HAL_DMA_Init+0x174>
 8004cf4:	687b      	ldr	r3, [r7, #4]
 8004cf6:	681b      	ldr	r3, [r3, #0]
 8004cf8:	4a34      	ldr	r2, [pc, #208]	; (8004dcc <HAL_DMA_Init+0x1c0>)
 8004cfa:	4293      	cmp	r3, r2
 8004cfc:	d040      	beq.n	8004d80 <HAL_DMA_Init+0x174>
 8004cfe:	687b      	ldr	r3, [r7, #4]
 8004d00:	681b      	ldr	r3, [r3, #0]
 8004d02:	4a33      	ldr	r2, [pc, #204]	; (8004dd0 <HAL_DMA_Init+0x1c4>)
 8004d04:	4293      	cmp	r3, r2
 8004d06:	d03b      	beq.n	8004d80 <HAL_DMA_Init+0x174>
 8004d08:	687b      	ldr	r3, [r7, #4]
 8004d0a:	681b      	ldr	r3, [r3, #0]
 8004d0c:	4a31      	ldr	r2, [pc, #196]	; (8004dd4 <HAL_DMA_Init+0x1c8>)
 8004d0e:	4293      	cmp	r3, r2
 8004d10:	d036      	beq.n	8004d80 <HAL_DMA_Init+0x174>
 8004d12:	687b      	ldr	r3, [r7, #4]
 8004d14:	681b      	ldr	r3, [r3, #0]
 8004d16:	4a30      	ldr	r2, [pc, #192]	; (8004dd8 <HAL_DMA_Init+0x1cc>)
 8004d18:	4293      	cmp	r3, r2
 8004d1a:	d031      	beq.n	8004d80 <HAL_DMA_Init+0x174>
 8004d1c:	687b      	ldr	r3, [r7, #4]
 8004d1e:	681b      	ldr	r3, [r3, #0]
 8004d20:	4a2e      	ldr	r2, [pc, #184]	; (8004ddc <HAL_DMA_Init+0x1d0>)
 8004d22:	4293      	cmp	r3, r2
 8004d24:	d02c      	beq.n	8004d80 <HAL_DMA_Init+0x174>
 8004d26:	687b      	ldr	r3, [r7, #4]
 8004d28:	681b      	ldr	r3, [r3, #0]
 8004d2a:	4a2d      	ldr	r2, [pc, #180]	; (8004de0 <HAL_DMA_Init+0x1d4>)
 8004d2c:	4293      	cmp	r3, r2
 8004d2e:	d027      	beq.n	8004d80 <HAL_DMA_Init+0x174>
 8004d30:	687b      	ldr	r3, [r7, #4]
 8004d32:	681b      	ldr	r3, [r3, #0]
 8004d34:	4a2b      	ldr	r2, [pc, #172]	; (8004de4 <HAL_DMA_Init+0x1d8>)
 8004d36:	4293      	cmp	r3, r2
 8004d38:	d022      	beq.n	8004d80 <HAL_DMA_Init+0x174>
 8004d3a:	687b      	ldr	r3, [r7, #4]
 8004d3c:	681b      	ldr	r3, [r3, #0]
 8004d3e:	4a2a      	ldr	r2, [pc, #168]	; (8004de8 <HAL_DMA_Init+0x1dc>)
 8004d40:	4293      	cmp	r3, r2
 8004d42:	d01d      	beq.n	8004d80 <HAL_DMA_Init+0x174>
 8004d44:	687b      	ldr	r3, [r7, #4]
 8004d46:	681b      	ldr	r3, [r3, #0]
 8004d48:	4a28      	ldr	r2, [pc, #160]	; (8004dec <HAL_DMA_Init+0x1e0>)
 8004d4a:	4293      	cmp	r3, r2
 8004d4c:	d018      	beq.n	8004d80 <HAL_DMA_Init+0x174>
 8004d4e:	687b      	ldr	r3, [r7, #4]
 8004d50:	681b      	ldr	r3, [r3, #0]
 8004d52:	4a27      	ldr	r2, [pc, #156]	; (8004df0 <HAL_DMA_Init+0x1e4>)
 8004d54:	4293      	cmp	r3, r2
 8004d56:	d013      	beq.n	8004d80 <HAL_DMA_Init+0x174>
 8004d58:	687b      	ldr	r3, [r7, #4]
 8004d5a:	681b      	ldr	r3, [r3, #0]
 8004d5c:	4a25      	ldr	r2, [pc, #148]	; (8004df4 <HAL_DMA_Init+0x1e8>)
 8004d5e:	4293      	cmp	r3, r2
 8004d60:	d00e      	beq.n	8004d80 <HAL_DMA_Init+0x174>
 8004d62:	687b      	ldr	r3, [r7, #4]
 8004d64:	681b      	ldr	r3, [r3, #0]
 8004d66:	4a24      	ldr	r2, [pc, #144]	; (8004df8 <HAL_DMA_Init+0x1ec>)
 8004d68:	4293      	cmp	r3, r2
 8004d6a:	d009      	beq.n	8004d80 <HAL_DMA_Init+0x174>
 8004d6c:	687b      	ldr	r3, [r7, #4]
 8004d6e:	681b      	ldr	r3, [r3, #0]
 8004d70:	4a22      	ldr	r2, [pc, #136]	; (8004dfc <HAL_DMA_Init+0x1f0>)
 8004d72:	4293      	cmp	r3, r2
 8004d74:	d004      	beq.n	8004d80 <HAL_DMA_Init+0x174>
 8004d76:	687b      	ldr	r3, [r7, #4]
 8004d78:	681b      	ldr	r3, [r3, #0]
 8004d7a:	4a21      	ldr	r2, [pc, #132]	; (8004e00 <HAL_DMA_Init+0x1f4>)
 8004d7c:	4293      	cmp	r3, r2
 8004d7e:	d108      	bne.n	8004d92 <HAL_DMA_Init+0x186>
 8004d80:	687b      	ldr	r3, [r7, #4]
 8004d82:	681b      	ldr	r3, [r3, #0]
 8004d84:	681a      	ldr	r2, [r3, #0]
 8004d86:	687b      	ldr	r3, [r7, #4]
 8004d88:	681b      	ldr	r3, [r3, #0]
 8004d8a:	f022 0201 	bic.w	r2, r2, #1
 8004d8e:	601a      	str	r2, [r3, #0]
 8004d90:	e007      	b.n	8004da2 <HAL_DMA_Init+0x196>
 8004d92:	687b      	ldr	r3, [r7, #4]
 8004d94:	681b      	ldr	r3, [r3, #0]
 8004d96:	681a      	ldr	r2, [r3, #0]
 8004d98:	687b      	ldr	r3, [r7, #4]
 8004d9a:	681b      	ldr	r3, [r3, #0]
 8004d9c:	f022 0201 	bic.w	r2, r2, #1
 8004da0:	601a      	str	r2, [r3, #0]
 8004da2:	e02f      	b.n	8004e04 <HAL_DMA_Init+0x1f8>
 8004da4:	f7ff fe16 	bl	80049d4 <HAL_GetTick>
 8004da8:	4602      	mov	r2, r0
 8004daa:	693b      	ldr	r3, [r7, #16]
 8004dac:	1ad3      	subs	r3, r2, r3
 8004dae:	2b05      	cmp	r3, #5
 8004db0:	d928      	bls.n	8004e04 <HAL_DMA_Init+0x1f8>
 8004db2:	687b      	ldr	r3, [r7, #4]
 8004db4:	2220      	movs	r2, #32
 8004db6:	655a      	str	r2, [r3, #84]	; 0x54
 8004db8:	687b      	ldr	r3, [r7, #4]
 8004dba:	2203      	movs	r2, #3
 8004dbc:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004dc0:	2301      	movs	r3, #1
 8004dc2:	e244      	b.n	800524e <HAL_DMA_Init+0x642>
 8004dc4:	40020010 	.word	0x40020010
 8004dc8:	40020028 	.word	0x40020028
 8004dcc:	40020040 	.word	0x40020040
 8004dd0:	40020058 	.word	0x40020058
 8004dd4:	40020070 	.word	0x40020070
 8004dd8:	40020088 	.word	0x40020088
 8004ddc:	400200a0 	.word	0x400200a0
 8004de0:	400200b8 	.word	0x400200b8
 8004de4:	40020410 	.word	0x40020410
 8004de8:	40020428 	.word	0x40020428
 8004dec:	40020440 	.word	0x40020440
 8004df0:	40020458 	.word	0x40020458
 8004df4:	40020470 	.word	0x40020470
 8004df8:	40020488 	.word	0x40020488
 8004dfc:	400204a0 	.word	0x400204a0
 8004e00:	400204b8 	.word	0x400204b8
 8004e04:	687b      	ldr	r3, [r7, #4]
 8004e06:	681b      	ldr	r3, [r3, #0]
 8004e08:	681b      	ldr	r3, [r3, #0]
 8004e0a:	f003 0301 	and.w	r3, r3, #1
 8004e0e:	2b00      	cmp	r3, #0
 8004e10:	d1c8      	bne.n	8004da4 <HAL_DMA_Init+0x198>
 8004e12:	687b      	ldr	r3, [r7, #4]
 8004e14:	681b      	ldr	r3, [r3, #0]
 8004e16:	681b      	ldr	r3, [r3, #0]
 8004e18:	617b      	str	r3, [r7, #20]
 8004e1a:	697a      	ldr	r2, [r7, #20]
 8004e1c:	4b84      	ldr	r3, [pc, #528]	; (8005030 <HAL_DMA_Init+0x424>)
 8004e1e:	4013      	ands	r3, r2
 8004e20:	617b      	str	r3, [r7, #20]
 8004e22:	687b      	ldr	r3, [r7, #4]
 8004e24:	689a      	ldr	r2, [r3, #8]
 8004e26:	687b      	ldr	r3, [r7, #4]
 8004e28:	68db      	ldr	r3, [r3, #12]
 8004e2a:	431a      	orrs	r2, r3
 8004e2c:	687b      	ldr	r3, [r7, #4]
 8004e2e:	691b      	ldr	r3, [r3, #16]
 8004e30:	431a      	orrs	r2, r3
 8004e32:	687b      	ldr	r3, [r7, #4]
 8004e34:	695b      	ldr	r3, [r3, #20]
 8004e36:	431a      	orrs	r2, r3
 8004e38:	687b      	ldr	r3, [r7, #4]
 8004e3a:	699b      	ldr	r3, [r3, #24]
 8004e3c:	431a      	orrs	r2, r3
 8004e3e:	687b      	ldr	r3, [r7, #4]
 8004e40:	69db      	ldr	r3, [r3, #28]
 8004e42:	431a      	orrs	r2, r3
 8004e44:	687b      	ldr	r3, [r7, #4]
 8004e46:	6a1b      	ldr	r3, [r3, #32]
 8004e48:	4313      	orrs	r3, r2
 8004e4a:	697a      	ldr	r2, [r7, #20]
 8004e4c:	4313      	orrs	r3, r2
 8004e4e:	617b      	str	r3, [r7, #20]
 8004e50:	687b      	ldr	r3, [r7, #4]
 8004e52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004e54:	2b04      	cmp	r3, #4
 8004e56:	d107      	bne.n	8004e68 <HAL_DMA_Init+0x25c>
 8004e58:	687b      	ldr	r3, [r7, #4]
 8004e5a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004e5c:	687b      	ldr	r3, [r7, #4]
 8004e5e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004e60:	4313      	orrs	r3, r2
 8004e62:	697a      	ldr	r2, [r7, #20]
 8004e64:	4313      	orrs	r3, r2
 8004e66:	617b      	str	r3, [r7, #20]
 8004e68:	687b      	ldr	r3, [r7, #4]
 8004e6a:	685b      	ldr	r3, [r3, #4]
 8004e6c:	2b28      	cmp	r3, #40	; 0x28
 8004e6e:	d903      	bls.n	8004e78 <HAL_DMA_Init+0x26c>
 8004e70:	687b      	ldr	r3, [r7, #4]
 8004e72:	685b      	ldr	r3, [r3, #4]
 8004e74:	2b2e      	cmp	r3, #46	; 0x2e
 8004e76:	d91f      	bls.n	8004eb8 <HAL_DMA_Init+0x2ac>
 8004e78:	687b      	ldr	r3, [r7, #4]
 8004e7a:	685b      	ldr	r3, [r3, #4]
 8004e7c:	2b3e      	cmp	r3, #62	; 0x3e
 8004e7e:	d903      	bls.n	8004e88 <HAL_DMA_Init+0x27c>
 8004e80:	687b      	ldr	r3, [r7, #4]
 8004e82:	685b      	ldr	r3, [r3, #4]
 8004e84:	2b42      	cmp	r3, #66	; 0x42
 8004e86:	d917      	bls.n	8004eb8 <HAL_DMA_Init+0x2ac>
 8004e88:	687b      	ldr	r3, [r7, #4]
 8004e8a:	685b      	ldr	r3, [r3, #4]
 8004e8c:	2b46      	cmp	r3, #70	; 0x46
 8004e8e:	d903      	bls.n	8004e98 <HAL_DMA_Init+0x28c>
 8004e90:	687b      	ldr	r3, [r7, #4]
 8004e92:	685b      	ldr	r3, [r3, #4]
 8004e94:	2b48      	cmp	r3, #72	; 0x48
 8004e96:	d90f      	bls.n	8004eb8 <HAL_DMA_Init+0x2ac>
 8004e98:	687b      	ldr	r3, [r7, #4]
 8004e9a:	685b      	ldr	r3, [r3, #4]
 8004e9c:	2b4e      	cmp	r3, #78	; 0x4e
 8004e9e:	d903      	bls.n	8004ea8 <HAL_DMA_Init+0x29c>
 8004ea0:	687b      	ldr	r3, [r7, #4]
 8004ea2:	685b      	ldr	r3, [r3, #4]
 8004ea4:	2b52      	cmp	r3, #82	; 0x52
 8004ea6:	d907      	bls.n	8004eb8 <HAL_DMA_Init+0x2ac>
 8004ea8:	687b      	ldr	r3, [r7, #4]
 8004eaa:	685b      	ldr	r3, [r3, #4]
 8004eac:	2b73      	cmp	r3, #115	; 0x73
 8004eae:	d905      	bls.n	8004ebc <HAL_DMA_Init+0x2b0>
 8004eb0:	687b      	ldr	r3, [r7, #4]
 8004eb2:	685b      	ldr	r3, [r3, #4]
 8004eb4:	2b77      	cmp	r3, #119	; 0x77
 8004eb6:	d801      	bhi.n	8004ebc <HAL_DMA_Init+0x2b0>
 8004eb8:	2301      	movs	r3, #1
 8004eba:	e000      	b.n	8004ebe <HAL_DMA_Init+0x2b2>
 8004ebc:	2300      	movs	r3, #0
 8004ebe:	2b00      	cmp	r3, #0
 8004ec0:	d003      	beq.n	8004eca <HAL_DMA_Init+0x2be>
 8004ec2:	697b      	ldr	r3, [r7, #20]
 8004ec4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8004ec8:	617b      	str	r3, [r7, #20]
 8004eca:	687b      	ldr	r3, [r7, #4]
 8004ecc:	681b      	ldr	r3, [r3, #0]
 8004ece:	697a      	ldr	r2, [r7, #20]
 8004ed0:	601a      	str	r2, [r3, #0]
 8004ed2:	687b      	ldr	r3, [r7, #4]
 8004ed4:	681b      	ldr	r3, [r3, #0]
 8004ed6:	695b      	ldr	r3, [r3, #20]
 8004ed8:	617b      	str	r3, [r7, #20]
 8004eda:	697b      	ldr	r3, [r7, #20]
 8004edc:	f023 0307 	bic.w	r3, r3, #7
 8004ee0:	617b      	str	r3, [r7, #20]
 8004ee2:	687b      	ldr	r3, [r7, #4]
 8004ee4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ee6:	697a      	ldr	r2, [r7, #20]
 8004ee8:	4313      	orrs	r3, r2
 8004eea:	617b      	str	r3, [r7, #20]
 8004eec:	687b      	ldr	r3, [r7, #4]
 8004eee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004ef0:	2b04      	cmp	r3, #4
 8004ef2:	d117      	bne.n	8004f24 <HAL_DMA_Init+0x318>
 8004ef4:	687b      	ldr	r3, [r7, #4]
 8004ef6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8004ef8:	697a      	ldr	r2, [r7, #20]
 8004efa:	4313      	orrs	r3, r2
 8004efc:	617b      	str	r3, [r7, #20]
 8004efe:	687b      	ldr	r3, [r7, #4]
 8004f00:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004f02:	2b00      	cmp	r3, #0
 8004f04:	d00e      	beq.n	8004f24 <HAL_DMA_Init+0x318>
 8004f06:	6878      	ldr	r0, [r7, #4]
 8004f08:	f002 fb30 	bl	800756c <DMA_CheckFifoParam>
 8004f0c:	4603      	mov	r3, r0
 8004f0e:	2b00      	cmp	r3, #0
 8004f10:	d008      	beq.n	8004f24 <HAL_DMA_Init+0x318>
 8004f12:	687b      	ldr	r3, [r7, #4]
 8004f14:	2240      	movs	r2, #64	; 0x40
 8004f16:	655a      	str	r2, [r3, #84]	; 0x54
 8004f18:	687b      	ldr	r3, [r7, #4]
 8004f1a:	2201      	movs	r2, #1
 8004f1c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004f20:	2301      	movs	r3, #1
 8004f22:	e194      	b.n	800524e <HAL_DMA_Init+0x642>
 8004f24:	687b      	ldr	r3, [r7, #4]
 8004f26:	681b      	ldr	r3, [r3, #0]
 8004f28:	697a      	ldr	r2, [r7, #20]
 8004f2a:	615a      	str	r2, [r3, #20]
 8004f2c:	6878      	ldr	r0, [r7, #4]
 8004f2e:	f002 fa6b 	bl	8007408 <DMA_CalcBaseAndBitshift>
 8004f32:	4603      	mov	r3, r0
 8004f34:	60bb      	str	r3, [r7, #8]
 8004f36:	687b      	ldr	r3, [r7, #4]
 8004f38:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004f3a:	f003 031f 	and.w	r3, r3, #31
 8004f3e:	223f      	movs	r2, #63	; 0x3f
 8004f40:	409a      	lsls	r2, r3
 8004f42:	68bb      	ldr	r3, [r7, #8]
 8004f44:	609a      	str	r2, [r3, #8]
 8004f46:	e0ca      	b.n	80050de <HAL_DMA_Init+0x4d2>
 8004f48:	687b      	ldr	r3, [r7, #4]
 8004f4a:	681b      	ldr	r3, [r3, #0]
 8004f4c:	4a39      	ldr	r2, [pc, #228]	; (8005034 <HAL_DMA_Init+0x428>)
 8004f4e:	4293      	cmp	r3, r2
 8004f50:	d022      	beq.n	8004f98 <HAL_DMA_Init+0x38c>
 8004f52:	687b      	ldr	r3, [r7, #4]
 8004f54:	681b      	ldr	r3, [r3, #0]
 8004f56:	4a38      	ldr	r2, [pc, #224]	; (8005038 <HAL_DMA_Init+0x42c>)
 8004f58:	4293      	cmp	r3, r2
 8004f5a:	d01d      	beq.n	8004f98 <HAL_DMA_Init+0x38c>
 8004f5c:	687b      	ldr	r3, [r7, #4]
 8004f5e:	681b      	ldr	r3, [r3, #0]
 8004f60:	4a36      	ldr	r2, [pc, #216]	; (800503c <HAL_DMA_Init+0x430>)
 8004f62:	4293      	cmp	r3, r2
 8004f64:	d018      	beq.n	8004f98 <HAL_DMA_Init+0x38c>
 8004f66:	687b      	ldr	r3, [r7, #4]
 8004f68:	681b      	ldr	r3, [r3, #0]
 8004f6a:	4a35      	ldr	r2, [pc, #212]	; (8005040 <HAL_DMA_Init+0x434>)
 8004f6c:	4293      	cmp	r3, r2
 8004f6e:	d013      	beq.n	8004f98 <HAL_DMA_Init+0x38c>
 8004f70:	687b      	ldr	r3, [r7, #4]
 8004f72:	681b      	ldr	r3, [r3, #0]
 8004f74:	4a33      	ldr	r2, [pc, #204]	; (8005044 <HAL_DMA_Init+0x438>)
 8004f76:	4293      	cmp	r3, r2
 8004f78:	d00e      	beq.n	8004f98 <HAL_DMA_Init+0x38c>
 8004f7a:	687b      	ldr	r3, [r7, #4]
 8004f7c:	681b      	ldr	r3, [r3, #0]
 8004f7e:	4a32      	ldr	r2, [pc, #200]	; (8005048 <HAL_DMA_Init+0x43c>)
 8004f80:	4293      	cmp	r3, r2
 8004f82:	d009      	beq.n	8004f98 <HAL_DMA_Init+0x38c>
 8004f84:	687b      	ldr	r3, [r7, #4]
 8004f86:	681b      	ldr	r3, [r3, #0]
 8004f88:	4a30      	ldr	r2, [pc, #192]	; (800504c <HAL_DMA_Init+0x440>)
 8004f8a:	4293      	cmp	r3, r2
 8004f8c:	d004      	beq.n	8004f98 <HAL_DMA_Init+0x38c>
 8004f8e:	687b      	ldr	r3, [r7, #4]
 8004f90:	681b      	ldr	r3, [r3, #0]
 8004f92:	4a2f      	ldr	r2, [pc, #188]	; (8005050 <HAL_DMA_Init+0x444>)
 8004f94:	4293      	cmp	r3, r2
 8004f96:	d101      	bne.n	8004f9c <HAL_DMA_Init+0x390>
 8004f98:	2301      	movs	r3, #1
 8004f9a:	e000      	b.n	8004f9e <HAL_DMA_Init+0x392>
 8004f9c:	2300      	movs	r3, #0
 8004f9e:	2b00      	cmp	r3, #0
 8004fa0:	f000 8094 	beq.w	80050cc <HAL_DMA_Init+0x4c0>
 8004fa4:	687b      	ldr	r3, [r7, #4]
 8004fa6:	681b      	ldr	r3, [r3, #0]
 8004fa8:	4a22      	ldr	r2, [pc, #136]	; (8005034 <HAL_DMA_Init+0x428>)
 8004faa:	4293      	cmp	r3, r2
 8004fac:	d021      	beq.n	8004ff2 <HAL_DMA_Init+0x3e6>
 8004fae:	687b      	ldr	r3, [r7, #4]
 8004fb0:	681b      	ldr	r3, [r3, #0]
 8004fb2:	4a21      	ldr	r2, [pc, #132]	; (8005038 <HAL_DMA_Init+0x42c>)
 8004fb4:	4293      	cmp	r3, r2
 8004fb6:	d01c      	beq.n	8004ff2 <HAL_DMA_Init+0x3e6>
 8004fb8:	687b      	ldr	r3, [r7, #4]
 8004fba:	681b      	ldr	r3, [r3, #0]
 8004fbc:	4a1f      	ldr	r2, [pc, #124]	; (800503c <HAL_DMA_Init+0x430>)
 8004fbe:	4293      	cmp	r3, r2
 8004fc0:	d017      	beq.n	8004ff2 <HAL_DMA_Init+0x3e6>
 8004fc2:	687b      	ldr	r3, [r7, #4]
 8004fc4:	681b      	ldr	r3, [r3, #0]
 8004fc6:	4a1e      	ldr	r2, [pc, #120]	; (8005040 <HAL_DMA_Init+0x434>)
 8004fc8:	4293      	cmp	r3, r2
 8004fca:	d012      	beq.n	8004ff2 <HAL_DMA_Init+0x3e6>
 8004fcc:	687b      	ldr	r3, [r7, #4]
 8004fce:	681b      	ldr	r3, [r3, #0]
 8004fd0:	4a1c      	ldr	r2, [pc, #112]	; (8005044 <HAL_DMA_Init+0x438>)
 8004fd2:	4293      	cmp	r3, r2
 8004fd4:	d00d      	beq.n	8004ff2 <HAL_DMA_Init+0x3e6>
 8004fd6:	687b      	ldr	r3, [r7, #4]
 8004fd8:	681b      	ldr	r3, [r3, #0]
 8004fda:	4a1b      	ldr	r2, [pc, #108]	; (8005048 <HAL_DMA_Init+0x43c>)
 8004fdc:	4293      	cmp	r3, r2
 8004fde:	d008      	beq.n	8004ff2 <HAL_DMA_Init+0x3e6>
 8004fe0:	687b      	ldr	r3, [r7, #4]
 8004fe2:	681b      	ldr	r3, [r3, #0]
 8004fe4:	4a19      	ldr	r2, [pc, #100]	; (800504c <HAL_DMA_Init+0x440>)
 8004fe6:	4293      	cmp	r3, r2
 8004fe8:	d003      	beq.n	8004ff2 <HAL_DMA_Init+0x3e6>
 8004fea:	687b      	ldr	r3, [r7, #4]
 8004fec:	681b      	ldr	r3, [r3, #0]
 8004fee:	4a18      	ldr	r2, [pc, #96]	; (8005050 <HAL_DMA_Init+0x444>)
 8004ff0:	4293      	cmp	r3, r2
 8004ff2:	bf00      	nop
 8004ff4:	687b      	ldr	r3, [r7, #4]
 8004ff6:	2202      	movs	r2, #2
 8004ff8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004ffc:	687b      	ldr	r3, [r7, #4]
 8004ffe:	2200      	movs	r2, #0
 8005000:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8005004:	687b      	ldr	r3, [r7, #4]
 8005006:	681b      	ldr	r3, [r3, #0]
 8005008:	681b      	ldr	r3, [r3, #0]
 800500a:	617b      	str	r3, [r7, #20]
 800500c:	697a      	ldr	r2, [r7, #20]
 800500e:	4b11      	ldr	r3, [pc, #68]	; (8005054 <HAL_DMA_Init+0x448>)
 8005010:	4013      	ands	r3, r2
 8005012:	617b      	str	r3, [r7, #20]
 8005014:	687b      	ldr	r3, [r7, #4]
 8005016:	689b      	ldr	r3, [r3, #8]
 8005018:	2b40      	cmp	r3, #64	; 0x40
 800501a:	d01d      	beq.n	8005058 <HAL_DMA_Init+0x44c>
 800501c:	687b      	ldr	r3, [r7, #4]
 800501e:	689b      	ldr	r3, [r3, #8]
 8005020:	2b80      	cmp	r3, #128	; 0x80
 8005022:	d102      	bne.n	800502a <HAL_DMA_Init+0x41e>
 8005024:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8005028:	e017      	b.n	800505a <HAL_DMA_Init+0x44e>
 800502a:	2300      	movs	r3, #0
 800502c:	e015      	b.n	800505a <HAL_DMA_Init+0x44e>
 800502e:	bf00      	nop
 8005030:	fe10803f 	.word	0xfe10803f
 8005034:	58025408 	.word	0x58025408
 8005038:	5802541c 	.word	0x5802541c
 800503c:	58025430 	.word	0x58025430
 8005040:	58025444 	.word	0x58025444
 8005044:	58025458 	.word	0x58025458
 8005048:	5802546c 	.word	0x5802546c
 800504c:	58025480 	.word	0x58025480
 8005050:	58025494 	.word	0x58025494
 8005054:	fffe000f 	.word	0xfffe000f
 8005058:	2310      	movs	r3, #16
 800505a:	687a      	ldr	r2, [r7, #4]
 800505c:	68d2      	ldr	r2, [r2, #12]
 800505e:	08d2      	lsrs	r2, r2, #3
 8005060:	431a      	orrs	r2, r3
 8005062:	687b      	ldr	r3, [r7, #4]
 8005064:	691b      	ldr	r3, [r3, #16]
 8005066:	08db      	lsrs	r3, r3, #3
 8005068:	431a      	orrs	r2, r3
 800506a:	687b      	ldr	r3, [r7, #4]
 800506c:	695b      	ldr	r3, [r3, #20]
 800506e:	08db      	lsrs	r3, r3, #3
 8005070:	431a      	orrs	r2, r3
 8005072:	687b      	ldr	r3, [r7, #4]
 8005074:	699b      	ldr	r3, [r3, #24]
 8005076:	08db      	lsrs	r3, r3, #3
 8005078:	431a      	orrs	r2, r3
 800507a:	687b      	ldr	r3, [r7, #4]
 800507c:	69db      	ldr	r3, [r3, #28]
 800507e:	08db      	lsrs	r3, r3, #3
 8005080:	431a      	orrs	r2, r3
 8005082:	687b      	ldr	r3, [r7, #4]
 8005084:	6a1b      	ldr	r3, [r3, #32]
 8005086:	091b      	lsrs	r3, r3, #4
 8005088:	4313      	orrs	r3, r2
 800508a:	697a      	ldr	r2, [r7, #20]
 800508c:	4313      	orrs	r3, r2
 800508e:	617b      	str	r3, [r7, #20]
 8005090:	687b      	ldr	r3, [r7, #4]
 8005092:	681b      	ldr	r3, [r3, #0]
 8005094:	697a      	ldr	r2, [r7, #20]
 8005096:	601a      	str	r2, [r3, #0]
 8005098:	687b      	ldr	r3, [r7, #4]
 800509a:	681b      	ldr	r3, [r3, #0]
 800509c:	461a      	mov	r2, r3
 800509e:	4b6e      	ldr	r3, [pc, #440]	; (8005258 <HAL_DMA_Init+0x64c>)
 80050a0:	4413      	add	r3, r2
 80050a2:	4a6e      	ldr	r2, [pc, #440]	; (800525c <HAL_DMA_Init+0x650>)
 80050a4:	fba2 2303 	umull	r2, r3, r2, r3
 80050a8:	091b      	lsrs	r3, r3, #4
 80050aa:	009a      	lsls	r2, r3, #2
 80050ac:	687b      	ldr	r3, [r7, #4]
 80050ae:	65da      	str	r2, [r3, #92]	; 0x5c
 80050b0:	6878      	ldr	r0, [r7, #4]
 80050b2:	f002 f9a9 	bl	8007408 <DMA_CalcBaseAndBitshift>
 80050b6:	4603      	mov	r3, r0
 80050b8:	60fb      	str	r3, [r7, #12]
 80050ba:	687b      	ldr	r3, [r7, #4]
 80050bc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80050be:	f003 031f 	and.w	r3, r3, #31
 80050c2:	2201      	movs	r2, #1
 80050c4:	409a      	lsls	r2, r3
 80050c6:	68fb      	ldr	r3, [r7, #12]
 80050c8:	605a      	str	r2, [r3, #4]
 80050ca:	e008      	b.n	80050de <HAL_DMA_Init+0x4d2>
 80050cc:	687b      	ldr	r3, [r7, #4]
 80050ce:	2240      	movs	r2, #64	; 0x40
 80050d0:	655a      	str	r2, [r3, #84]	; 0x54
 80050d2:	687b      	ldr	r3, [r7, #4]
 80050d4:	2203      	movs	r2, #3
 80050d6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80050da:	2301      	movs	r3, #1
 80050dc:	e0b7      	b.n	800524e <HAL_DMA_Init+0x642>
 80050de:	687b      	ldr	r3, [r7, #4]
 80050e0:	681b      	ldr	r3, [r3, #0]
 80050e2:	4a5f      	ldr	r2, [pc, #380]	; (8005260 <HAL_DMA_Init+0x654>)
 80050e4:	4293      	cmp	r3, r2
 80050e6:	d072      	beq.n	80051ce <HAL_DMA_Init+0x5c2>
 80050e8:	687b      	ldr	r3, [r7, #4]
 80050ea:	681b      	ldr	r3, [r3, #0]
 80050ec:	4a5d      	ldr	r2, [pc, #372]	; (8005264 <HAL_DMA_Init+0x658>)
 80050ee:	4293      	cmp	r3, r2
 80050f0:	d06d      	beq.n	80051ce <HAL_DMA_Init+0x5c2>
 80050f2:	687b      	ldr	r3, [r7, #4]
 80050f4:	681b      	ldr	r3, [r3, #0]
 80050f6:	4a5c      	ldr	r2, [pc, #368]	; (8005268 <HAL_DMA_Init+0x65c>)
 80050f8:	4293      	cmp	r3, r2
 80050fa:	d068      	beq.n	80051ce <HAL_DMA_Init+0x5c2>
 80050fc:	687b      	ldr	r3, [r7, #4]
 80050fe:	681b      	ldr	r3, [r3, #0]
 8005100:	4a5a      	ldr	r2, [pc, #360]	; (800526c <HAL_DMA_Init+0x660>)
 8005102:	4293      	cmp	r3, r2
 8005104:	d063      	beq.n	80051ce <HAL_DMA_Init+0x5c2>
 8005106:	687b      	ldr	r3, [r7, #4]
 8005108:	681b      	ldr	r3, [r3, #0]
 800510a:	4a59      	ldr	r2, [pc, #356]	; (8005270 <HAL_DMA_Init+0x664>)
 800510c:	4293      	cmp	r3, r2
 800510e:	d05e      	beq.n	80051ce <HAL_DMA_Init+0x5c2>
 8005110:	687b      	ldr	r3, [r7, #4]
 8005112:	681b      	ldr	r3, [r3, #0]
 8005114:	4a57      	ldr	r2, [pc, #348]	; (8005274 <HAL_DMA_Init+0x668>)
 8005116:	4293      	cmp	r3, r2
 8005118:	d059      	beq.n	80051ce <HAL_DMA_Init+0x5c2>
 800511a:	687b      	ldr	r3, [r7, #4]
 800511c:	681b      	ldr	r3, [r3, #0]
 800511e:	4a56      	ldr	r2, [pc, #344]	; (8005278 <HAL_DMA_Init+0x66c>)
 8005120:	4293      	cmp	r3, r2
 8005122:	d054      	beq.n	80051ce <HAL_DMA_Init+0x5c2>
 8005124:	687b      	ldr	r3, [r7, #4]
 8005126:	681b      	ldr	r3, [r3, #0]
 8005128:	4a54      	ldr	r2, [pc, #336]	; (800527c <HAL_DMA_Init+0x670>)
 800512a:	4293      	cmp	r3, r2
 800512c:	d04f      	beq.n	80051ce <HAL_DMA_Init+0x5c2>
 800512e:	687b      	ldr	r3, [r7, #4]
 8005130:	681b      	ldr	r3, [r3, #0]
 8005132:	4a53      	ldr	r2, [pc, #332]	; (8005280 <HAL_DMA_Init+0x674>)
 8005134:	4293      	cmp	r3, r2
 8005136:	d04a      	beq.n	80051ce <HAL_DMA_Init+0x5c2>
 8005138:	687b      	ldr	r3, [r7, #4]
 800513a:	681b      	ldr	r3, [r3, #0]
 800513c:	4a51      	ldr	r2, [pc, #324]	; (8005284 <HAL_DMA_Init+0x678>)
 800513e:	4293      	cmp	r3, r2
 8005140:	d045      	beq.n	80051ce <HAL_DMA_Init+0x5c2>
 8005142:	687b      	ldr	r3, [r7, #4]
 8005144:	681b      	ldr	r3, [r3, #0]
 8005146:	4a50      	ldr	r2, [pc, #320]	; (8005288 <HAL_DMA_Init+0x67c>)
 8005148:	4293      	cmp	r3, r2
 800514a:	d040      	beq.n	80051ce <HAL_DMA_Init+0x5c2>
 800514c:	687b      	ldr	r3, [r7, #4]
 800514e:	681b      	ldr	r3, [r3, #0]
 8005150:	4a4e      	ldr	r2, [pc, #312]	; (800528c <HAL_DMA_Init+0x680>)
 8005152:	4293      	cmp	r3, r2
 8005154:	d03b      	beq.n	80051ce <HAL_DMA_Init+0x5c2>
 8005156:	687b      	ldr	r3, [r7, #4]
 8005158:	681b      	ldr	r3, [r3, #0]
 800515a:	4a4d      	ldr	r2, [pc, #308]	; (8005290 <HAL_DMA_Init+0x684>)
 800515c:	4293      	cmp	r3, r2
 800515e:	d036      	beq.n	80051ce <HAL_DMA_Init+0x5c2>
 8005160:	687b      	ldr	r3, [r7, #4]
 8005162:	681b      	ldr	r3, [r3, #0]
 8005164:	4a4b      	ldr	r2, [pc, #300]	; (8005294 <HAL_DMA_Init+0x688>)
 8005166:	4293      	cmp	r3, r2
 8005168:	d031      	beq.n	80051ce <HAL_DMA_Init+0x5c2>
 800516a:	687b      	ldr	r3, [r7, #4]
 800516c:	681b      	ldr	r3, [r3, #0]
 800516e:	4a4a      	ldr	r2, [pc, #296]	; (8005298 <HAL_DMA_Init+0x68c>)
 8005170:	4293      	cmp	r3, r2
 8005172:	d02c      	beq.n	80051ce <HAL_DMA_Init+0x5c2>
 8005174:	687b      	ldr	r3, [r7, #4]
 8005176:	681b      	ldr	r3, [r3, #0]
 8005178:	4a48      	ldr	r2, [pc, #288]	; (800529c <HAL_DMA_Init+0x690>)
 800517a:	4293      	cmp	r3, r2
 800517c:	d027      	beq.n	80051ce <HAL_DMA_Init+0x5c2>
 800517e:	687b      	ldr	r3, [r7, #4]
 8005180:	681b      	ldr	r3, [r3, #0]
 8005182:	4a47      	ldr	r2, [pc, #284]	; (80052a0 <HAL_DMA_Init+0x694>)
 8005184:	4293      	cmp	r3, r2
 8005186:	d022      	beq.n	80051ce <HAL_DMA_Init+0x5c2>
 8005188:	687b      	ldr	r3, [r7, #4]
 800518a:	681b      	ldr	r3, [r3, #0]
 800518c:	4a45      	ldr	r2, [pc, #276]	; (80052a4 <HAL_DMA_Init+0x698>)
 800518e:	4293      	cmp	r3, r2
 8005190:	d01d      	beq.n	80051ce <HAL_DMA_Init+0x5c2>
 8005192:	687b      	ldr	r3, [r7, #4]
 8005194:	681b      	ldr	r3, [r3, #0]
 8005196:	4a44      	ldr	r2, [pc, #272]	; (80052a8 <HAL_DMA_Init+0x69c>)
 8005198:	4293      	cmp	r3, r2
 800519a:	d018      	beq.n	80051ce <HAL_DMA_Init+0x5c2>
 800519c:	687b      	ldr	r3, [r7, #4]
 800519e:	681b      	ldr	r3, [r3, #0]
 80051a0:	4a42      	ldr	r2, [pc, #264]	; (80052ac <HAL_DMA_Init+0x6a0>)
 80051a2:	4293      	cmp	r3, r2
 80051a4:	d013      	beq.n	80051ce <HAL_DMA_Init+0x5c2>
 80051a6:	687b      	ldr	r3, [r7, #4]
 80051a8:	681b      	ldr	r3, [r3, #0]
 80051aa:	4a41      	ldr	r2, [pc, #260]	; (80052b0 <HAL_DMA_Init+0x6a4>)
 80051ac:	4293      	cmp	r3, r2
 80051ae:	d00e      	beq.n	80051ce <HAL_DMA_Init+0x5c2>
 80051b0:	687b      	ldr	r3, [r7, #4]
 80051b2:	681b      	ldr	r3, [r3, #0]
 80051b4:	4a3f      	ldr	r2, [pc, #252]	; (80052b4 <HAL_DMA_Init+0x6a8>)
 80051b6:	4293      	cmp	r3, r2
 80051b8:	d009      	beq.n	80051ce <HAL_DMA_Init+0x5c2>
 80051ba:	687b      	ldr	r3, [r7, #4]
 80051bc:	681b      	ldr	r3, [r3, #0]
 80051be:	4a3e      	ldr	r2, [pc, #248]	; (80052b8 <HAL_DMA_Init+0x6ac>)
 80051c0:	4293      	cmp	r3, r2
 80051c2:	d004      	beq.n	80051ce <HAL_DMA_Init+0x5c2>
 80051c4:	687b      	ldr	r3, [r7, #4]
 80051c6:	681b      	ldr	r3, [r3, #0]
 80051c8:	4a3c      	ldr	r2, [pc, #240]	; (80052bc <HAL_DMA_Init+0x6b0>)
 80051ca:	4293      	cmp	r3, r2
 80051cc:	d101      	bne.n	80051d2 <HAL_DMA_Init+0x5c6>
 80051ce:	2301      	movs	r3, #1
 80051d0:	e000      	b.n	80051d4 <HAL_DMA_Init+0x5c8>
 80051d2:	2300      	movs	r3, #0
 80051d4:	2b00      	cmp	r3, #0
 80051d6:	d032      	beq.n	800523e <HAL_DMA_Init+0x632>
 80051d8:	6878      	ldr	r0, [r7, #4]
 80051da:	f002 fa43 	bl	8007664 <DMA_CalcDMAMUXChannelBaseAndMask>
 80051de:	687b      	ldr	r3, [r7, #4]
 80051e0:	689b      	ldr	r3, [r3, #8]
 80051e2:	2b80      	cmp	r3, #128	; 0x80
 80051e4:	d102      	bne.n	80051ec <HAL_DMA_Init+0x5e0>
 80051e6:	687b      	ldr	r3, [r7, #4]
 80051e8:	2200      	movs	r2, #0
 80051ea:	605a      	str	r2, [r3, #4]
 80051ec:	687b      	ldr	r3, [r7, #4]
 80051ee:	685a      	ldr	r2, [r3, #4]
 80051f0:	687b      	ldr	r3, [r7, #4]
 80051f2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80051f4:	b2d2      	uxtb	r2, r2
 80051f6:	601a      	str	r2, [r3, #0]
 80051f8:	687b      	ldr	r3, [r7, #4]
 80051fa:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80051fc:	687a      	ldr	r2, [r7, #4]
 80051fe:	6e92      	ldr	r2, [r2, #104]	; 0x68
 8005200:	605a      	str	r2, [r3, #4]
 8005202:	687b      	ldr	r3, [r7, #4]
 8005204:	685b      	ldr	r3, [r3, #4]
 8005206:	2b00      	cmp	r3, #0
 8005208:	d010      	beq.n	800522c <HAL_DMA_Init+0x620>
 800520a:	687b      	ldr	r3, [r7, #4]
 800520c:	685b      	ldr	r3, [r3, #4]
 800520e:	2b08      	cmp	r3, #8
 8005210:	d80c      	bhi.n	800522c <HAL_DMA_Init+0x620>
 8005212:	6878      	ldr	r0, [r7, #4]
 8005214:	f002 fac0 	bl	8007798 <DMA_CalcDMAMUXRequestGenBaseAndMask>
 8005218:	687b      	ldr	r3, [r7, #4]
 800521a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800521c:	2200      	movs	r2, #0
 800521e:	601a      	str	r2, [r3, #0]
 8005220:	687b      	ldr	r3, [r7, #4]
 8005222:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005224:	687a      	ldr	r2, [r7, #4]
 8005226:	6f52      	ldr	r2, [r2, #116]	; 0x74
 8005228:	605a      	str	r2, [r3, #4]
 800522a:	e008      	b.n	800523e <HAL_DMA_Init+0x632>
 800522c:	687b      	ldr	r3, [r7, #4]
 800522e:	2200      	movs	r2, #0
 8005230:	66da      	str	r2, [r3, #108]	; 0x6c
 8005232:	687b      	ldr	r3, [r7, #4]
 8005234:	2200      	movs	r2, #0
 8005236:	671a      	str	r2, [r3, #112]	; 0x70
 8005238:	687b      	ldr	r3, [r7, #4]
 800523a:	2200      	movs	r2, #0
 800523c:	675a      	str	r2, [r3, #116]	; 0x74
 800523e:	687b      	ldr	r3, [r7, #4]
 8005240:	2200      	movs	r2, #0
 8005242:	655a      	str	r2, [r3, #84]	; 0x54
 8005244:	687b      	ldr	r3, [r7, #4]
 8005246:	2201      	movs	r2, #1
 8005248:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 800524c:	2300      	movs	r3, #0
 800524e:	4618      	mov	r0, r3
 8005250:	3718      	adds	r7, #24
 8005252:	46bd      	mov	sp, r7
 8005254:	bd80      	pop	{r7, pc}
 8005256:	bf00      	nop
 8005258:	a7fdabf8 	.word	0xa7fdabf8
 800525c:	cccccccd 	.word	0xcccccccd
 8005260:	40020010 	.word	0x40020010
 8005264:	40020028 	.word	0x40020028
 8005268:	40020040 	.word	0x40020040
 800526c:	40020058 	.word	0x40020058
 8005270:	40020070 	.word	0x40020070
 8005274:	40020088 	.word	0x40020088
 8005278:	400200a0 	.word	0x400200a0
 800527c:	400200b8 	.word	0x400200b8
 8005280:	40020410 	.word	0x40020410
 8005284:	40020428 	.word	0x40020428
 8005288:	40020440 	.word	0x40020440
 800528c:	40020458 	.word	0x40020458
 8005290:	40020470 	.word	0x40020470
 8005294:	40020488 	.word	0x40020488
 8005298:	400204a0 	.word	0x400204a0
 800529c:	400204b8 	.word	0x400204b8
 80052a0:	58025408 	.word	0x58025408
 80052a4:	5802541c 	.word	0x5802541c
 80052a8:	58025430 	.word	0x58025430
 80052ac:	58025444 	.word	0x58025444
 80052b0:	58025458 	.word	0x58025458
 80052b4:	5802546c 	.word	0x5802546c
 80052b8:	58025480 	.word	0x58025480
 80052bc:	58025494 	.word	0x58025494

080052c0 <HAL_DMA_Start_IT>:
 80052c0:	b580      	push	{r7, lr}
 80052c2:	b086      	sub	sp, #24
 80052c4:	af00      	add	r7, sp, #0
 80052c6:	60f8      	str	r0, [r7, #12]
 80052c8:	60b9      	str	r1, [r7, #8]
 80052ca:	607a      	str	r2, [r7, #4]
 80052cc:	603b      	str	r3, [r7, #0]
 80052ce:	2300      	movs	r3, #0
 80052d0:	75fb      	strb	r3, [r7, #23]
 80052d2:	68fb      	ldr	r3, [r7, #12]
 80052d4:	2b00      	cmp	r3, #0
 80052d6:	d101      	bne.n	80052dc <HAL_DMA_Start_IT+0x1c>
 80052d8:	2301      	movs	r3, #1
 80052da:	e226      	b.n	800572a <HAL_DMA_Start_IT+0x46a>
 80052dc:	68fb      	ldr	r3, [r7, #12]
 80052de:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 80052e2:	2b01      	cmp	r3, #1
 80052e4:	d101      	bne.n	80052ea <HAL_DMA_Start_IT+0x2a>
 80052e6:	2302      	movs	r3, #2
 80052e8:	e21f      	b.n	800572a <HAL_DMA_Start_IT+0x46a>
 80052ea:	68fb      	ldr	r3, [r7, #12]
 80052ec:	2201      	movs	r2, #1
 80052ee:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80052f2:	68fb      	ldr	r3, [r7, #12]
 80052f4:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80052f8:	b2db      	uxtb	r3, r3
 80052fa:	2b01      	cmp	r3, #1
 80052fc:	f040 820a 	bne.w	8005714 <HAL_DMA_Start_IT+0x454>
 8005300:	68fb      	ldr	r3, [r7, #12]
 8005302:	2202      	movs	r2, #2
 8005304:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8005308:	68fb      	ldr	r3, [r7, #12]
 800530a:	2200      	movs	r2, #0
 800530c:	655a      	str	r2, [r3, #84]	; 0x54
 800530e:	68fb      	ldr	r3, [r7, #12]
 8005310:	681b      	ldr	r3, [r3, #0]
 8005312:	4a68      	ldr	r2, [pc, #416]	; (80054b4 <HAL_DMA_Start_IT+0x1f4>)
 8005314:	4293      	cmp	r3, r2
 8005316:	d04a      	beq.n	80053ae <HAL_DMA_Start_IT+0xee>
 8005318:	68fb      	ldr	r3, [r7, #12]
 800531a:	681b      	ldr	r3, [r3, #0]
 800531c:	4a66      	ldr	r2, [pc, #408]	; (80054b8 <HAL_DMA_Start_IT+0x1f8>)
 800531e:	4293      	cmp	r3, r2
 8005320:	d045      	beq.n	80053ae <HAL_DMA_Start_IT+0xee>
 8005322:	68fb      	ldr	r3, [r7, #12]
 8005324:	681b      	ldr	r3, [r3, #0]
 8005326:	4a65      	ldr	r2, [pc, #404]	; (80054bc <HAL_DMA_Start_IT+0x1fc>)
 8005328:	4293      	cmp	r3, r2
 800532a:	d040      	beq.n	80053ae <HAL_DMA_Start_IT+0xee>
 800532c:	68fb      	ldr	r3, [r7, #12]
 800532e:	681b      	ldr	r3, [r3, #0]
 8005330:	4a63      	ldr	r2, [pc, #396]	; (80054c0 <HAL_DMA_Start_IT+0x200>)
 8005332:	4293      	cmp	r3, r2
 8005334:	d03b      	beq.n	80053ae <HAL_DMA_Start_IT+0xee>
 8005336:	68fb      	ldr	r3, [r7, #12]
 8005338:	681b      	ldr	r3, [r3, #0]
 800533a:	4a62      	ldr	r2, [pc, #392]	; (80054c4 <HAL_DMA_Start_IT+0x204>)
 800533c:	4293      	cmp	r3, r2
 800533e:	d036      	beq.n	80053ae <HAL_DMA_Start_IT+0xee>
 8005340:	68fb      	ldr	r3, [r7, #12]
 8005342:	681b      	ldr	r3, [r3, #0]
 8005344:	4a60      	ldr	r2, [pc, #384]	; (80054c8 <HAL_DMA_Start_IT+0x208>)
 8005346:	4293      	cmp	r3, r2
 8005348:	d031      	beq.n	80053ae <HAL_DMA_Start_IT+0xee>
 800534a:	68fb      	ldr	r3, [r7, #12]
 800534c:	681b      	ldr	r3, [r3, #0]
 800534e:	4a5f      	ldr	r2, [pc, #380]	; (80054cc <HAL_DMA_Start_IT+0x20c>)
 8005350:	4293      	cmp	r3, r2
 8005352:	d02c      	beq.n	80053ae <HAL_DMA_Start_IT+0xee>
 8005354:	68fb      	ldr	r3, [r7, #12]
 8005356:	681b      	ldr	r3, [r3, #0]
 8005358:	4a5d      	ldr	r2, [pc, #372]	; (80054d0 <HAL_DMA_Start_IT+0x210>)
 800535a:	4293      	cmp	r3, r2
 800535c:	d027      	beq.n	80053ae <HAL_DMA_Start_IT+0xee>
 800535e:	68fb      	ldr	r3, [r7, #12]
 8005360:	681b      	ldr	r3, [r3, #0]
 8005362:	4a5c      	ldr	r2, [pc, #368]	; (80054d4 <HAL_DMA_Start_IT+0x214>)
 8005364:	4293      	cmp	r3, r2
 8005366:	d022      	beq.n	80053ae <HAL_DMA_Start_IT+0xee>
 8005368:	68fb      	ldr	r3, [r7, #12]
 800536a:	681b      	ldr	r3, [r3, #0]
 800536c:	4a5a      	ldr	r2, [pc, #360]	; (80054d8 <HAL_DMA_Start_IT+0x218>)
 800536e:	4293      	cmp	r3, r2
 8005370:	d01d      	beq.n	80053ae <HAL_DMA_Start_IT+0xee>
 8005372:	68fb      	ldr	r3, [r7, #12]
 8005374:	681b      	ldr	r3, [r3, #0]
 8005376:	4a59      	ldr	r2, [pc, #356]	; (80054dc <HAL_DMA_Start_IT+0x21c>)
 8005378:	4293      	cmp	r3, r2
 800537a:	d018      	beq.n	80053ae <HAL_DMA_Start_IT+0xee>
 800537c:	68fb      	ldr	r3, [r7, #12]
 800537e:	681b      	ldr	r3, [r3, #0]
 8005380:	4a57      	ldr	r2, [pc, #348]	; (80054e0 <HAL_DMA_Start_IT+0x220>)
 8005382:	4293      	cmp	r3, r2
 8005384:	d013      	beq.n	80053ae <HAL_DMA_Start_IT+0xee>
 8005386:	68fb      	ldr	r3, [r7, #12]
 8005388:	681b      	ldr	r3, [r3, #0]
 800538a:	4a56      	ldr	r2, [pc, #344]	; (80054e4 <HAL_DMA_Start_IT+0x224>)
 800538c:	4293      	cmp	r3, r2
 800538e:	d00e      	beq.n	80053ae <HAL_DMA_Start_IT+0xee>
 8005390:	68fb      	ldr	r3, [r7, #12]
 8005392:	681b      	ldr	r3, [r3, #0]
 8005394:	4a54      	ldr	r2, [pc, #336]	; (80054e8 <HAL_DMA_Start_IT+0x228>)
 8005396:	4293      	cmp	r3, r2
 8005398:	d009      	beq.n	80053ae <HAL_DMA_Start_IT+0xee>
 800539a:	68fb      	ldr	r3, [r7, #12]
 800539c:	681b      	ldr	r3, [r3, #0]
 800539e:	4a53      	ldr	r2, [pc, #332]	; (80054ec <HAL_DMA_Start_IT+0x22c>)
 80053a0:	4293      	cmp	r3, r2
 80053a2:	d004      	beq.n	80053ae <HAL_DMA_Start_IT+0xee>
 80053a4:	68fb      	ldr	r3, [r7, #12]
 80053a6:	681b      	ldr	r3, [r3, #0]
 80053a8:	4a51      	ldr	r2, [pc, #324]	; (80054f0 <HAL_DMA_Start_IT+0x230>)
 80053aa:	4293      	cmp	r3, r2
 80053ac:	d108      	bne.n	80053c0 <HAL_DMA_Start_IT+0x100>
 80053ae:	68fb      	ldr	r3, [r7, #12]
 80053b0:	681b      	ldr	r3, [r3, #0]
 80053b2:	681a      	ldr	r2, [r3, #0]
 80053b4:	68fb      	ldr	r3, [r7, #12]
 80053b6:	681b      	ldr	r3, [r3, #0]
 80053b8:	f022 0201 	bic.w	r2, r2, #1
 80053bc:	601a      	str	r2, [r3, #0]
 80053be:	e007      	b.n	80053d0 <HAL_DMA_Start_IT+0x110>
 80053c0:	68fb      	ldr	r3, [r7, #12]
 80053c2:	681b      	ldr	r3, [r3, #0]
 80053c4:	681a      	ldr	r2, [r3, #0]
 80053c6:	68fb      	ldr	r3, [r7, #12]
 80053c8:	681b      	ldr	r3, [r3, #0]
 80053ca:	f022 0201 	bic.w	r2, r2, #1
 80053ce:	601a      	str	r2, [r3, #0]
 80053d0:	683b      	ldr	r3, [r7, #0]
 80053d2:	687a      	ldr	r2, [r7, #4]
 80053d4:	68b9      	ldr	r1, [r7, #8]
 80053d6:	68f8      	ldr	r0, [r7, #12]
 80053d8:	f001 fe6a 	bl	80070b0 <DMA_SetConfig>
 80053dc:	68fb      	ldr	r3, [r7, #12]
 80053de:	681b      	ldr	r3, [r3, #0]
 80053e0:	4a34      	ldr	r2, [pc, #208]	; (80054b4 <HAL_DMA_Start_IT+0x1f4>)
 80053e2:	4293      	cmp	r3, r2
 80053e4:	d04a      	beq.n	800547c <HAL_DMA_Start_IT+0x1bc>
 80053e6:	68fb      	ldr	r3, [r7, #12]
 80053e8:	681b      	ldr	r3, [r3, #0]
 80053ea:	4a33      	ldr	r2, [pc, #204]	; (80054b8 <HAL_DMA_Start_IT+0x1f8>)
 80053ec:	4293      	cmp	r3, r2
 80053ee:	d045      	beq.n	800547c <HAL_DMA_Start_IT+0x1bc>
 80053f0:	68fb      	ldr	r3, [r7, #12]
 80053f2:	681b      	ldr	r3, [r3, #0]
 80053f4:	4a31      	ldr	r2, [pc, #196]	; (80054bc <HAL_DMA_Start_IT+0x1fc>)
 80053f6:	4293      	cmp	r3, r2
 80053f8:	d040      	beq.n	800547c <HAL_DMA_Start_IT+0x1bc>
 80053fa:	68fb      	ldr	r3, [r7, #12]
 80053fc:	681b      	ldr	r3, [r3, #0]
 80053fe:	4a30      	ldr	r2, [pc, #192]	; (80054c0 <HAL_DMA_Start_IT+0x200>)
 8005400:	4293      	cmp	r3, r2
 8005402:	d03b      	beq.n	800547c <HAL_DMA_Start_IT+0x1bc>
 8005404:	68fb      	ldr	r3, [r7, #12]
 8005406:	681b      	ldr	r3, [r3, #0]
 8005408:	4a2e      	ldr	r2, [pc, #184]	; (80054c4 <HAL_DMA_Start_IT+0x204>)
 800540a:	4293      	cmp	r3, r2
 800540c:	d036      	beq.n	800547c <HAL_DMA_Start_IT+0x1bc>
 800540e:	68fb      	ldr	r3, [r7, #12]
 8005410:	681b      	ldr	r3, [r3, #0]
 8005412:	4a2d      	ldr	r2, [pc, #180]	; (80054c8 <HAL_DMA_Start_IT+0x208>)
 8005414:	4293      	cmp	r3, r2
 8005416:	d031      	beq.n	800547c <HAL_DMA_Start_IT+0x1bc>
 8005418:	68fb      	ldr	r3, [r7, #12]
 800541a:	681b      	ldr	r3, [r3, #0]
 800541c:	4a2b      	ldr	r2, [pc, #172]	; (80054cc <HAL_DMA_Start_IT+0x20c>)
 800541e:	4293      	cmp	r3, r2
 8005420:	d02c      	beq.n	800547c <HAL_DMA_Start_IT+0x1bc>
 8005422:	68fb      	ldr	r3, [r7, #12]
 8005424:	681b      	ldr	r3, [r3, #0]
 8005426:	4a2a      	ldr	r2, [pc, #168]	; (80054d0 <HAL_DMA_Start_IT+0x210>)
 8005428:	4293      	cmp	r3, r2
 800542a:	d027      	beq.n	800547c <HAL_DMA_Start_IT+0x1bc>
 800542c:	68fb      	ldr	r3, [r7, #12]
 800542e:	681b      	ldr	r3, [r3, #0]
 8005430:	4a28      	ldr	r2, [pc, #160]	; (80054d4 <HAL_DMA_Start_IT+0x214>)
 8005432:	4293      	cmp	r3, r2
 8005434:	d022      	beq.n	800547c <HAL_DMA_Start_IT+0x1bc>
 8005436:	68fb      	ldr	r3, [r7, #12]
 8005438:	681b      	ldr	r3, [r3, #0]
 800543a:	4a27      	ldr	r2, [pc, #156]	; (80054d8 <HAL_DMA_Start_IT+0x218>)
 800543c:	4293      	cmp	r3, r2
 800543e:	d01d      	beq.n	800547c <HAL_DMA_Start_IT+0x1bc>
 8005440:	68fb      	ldr	r3, [r7, #12]
 8005442:	681b      	ldr	r3, [r3, #0]
 8005444:	4a25      	ldr	r2, [pc, #148]	; (80054dc <HAL_DMA_Start_IT+0x21c>)
 8005446:	4293      	cmp	r3, r2
 8005448:	d018      	beq.n	800547c <HAL_DMA_Start_IT+0x1bc>
 800544a:	68fb      	ldr	r3, [r7, #12]
 800544c:	681b      	ldr	r3, [r3, #0]
 800544e:	4a24      	ldr	r2, [pc, #144]	; (80054e0 <HAL_DMA_Start_IT+0x220>)
 8005450:	4293      	cmp	r3, r2
 8005452:	d013      	beq.n	800547c <HAL_DMA_Start_IT+0x1bc>
 8005454:	68fb      	ldr	r3, [r7, #12]
 8005456:	681b      	ldr	r3, [r3, #0]
 8005458:	4a22      	ldr	r2, [pc, #136]	; (80054e4 <HAL_DMA_Start_IT+0x224>)
 800545a:	4293      	cmp	r3, r2
 800545c:	d00e      	beq.n	800547c <HAL_DMA_Start_IT+0x1bc>
 800545e:	68fb      	ldr	r3, [r7, #12]
 8005460:	681b      	ldr	r3, [r3, #0]
 8005462:	4a21      	ldr	r2, [pc, #132]	; (80054e8 <HAL_DMA_Start_IT+0x228>)
 8005464:	4293      	cmp	r3, r2
 8005466:	d009      	beq.n	800547c <HAL_DMA_Start_IT+0x1bc>
 8005468:	68fb      	ldr	r3, [r7, #12]
 800546a:	681b      	ldr	r3, [r3, #0]
 800546c:	4a1f      	ldr	r2, [pc, #124]	; (80054ec <HAL_DMA_Start_IT+0x22c>)
 800546e:	4293      	cmp	r3, r2
 8005470:	d004      	beq.n	800547c <HAL_DMA_Start_IT+0x1bc>
 8005472:	68fb      	ldr	r3, [r7, #12]
 8005474:	681b      	ldr	r3, [r3, #0]
 8005476:	4a1e      	ldr	r2, [pc, #120]	; (80054f0 <HAL_DMA_Start_IT+0x230>)
 8005478:	4293      	cmp	r3, r2
 800547a:	d101      	bne.n	8005480 <HAL_DMA_Start_IT+0x1c0>
 800547c:	2301      	movs	r3, #1
 800547e:	e000      	b.n	8005482 <HAL_DMA_Start_IT+0x1c2>
 8005480:	2300      	movs	r3, #0
 8005482:	2b00      	cmp	r3, #0
 8005484:	d036      	beq.n	80054f4 <HAL_DMA_Start_IT+0x234>
 8005486:	68fb      	ldr	r3, [r7, #12]
 8005488:	681b      	ldr	r3, [r3, #0]
 800548a:	681b      	ldr	r3, [r3, #0]
 800548c:	f023 021e 	bic.w	r2, r3, #30
 8005490:	68fb      	ldr	r3, [r7, #12]
 8005492:	681b      	ldr	r3, [r3, #0]
 8005494:	f042 0216 	orr.w	r2, r2, #22
 8005498:	601a      	str	r2, [r3, #0]
 800549a:	68fb      	ldr	r3, [r7, #12]
 800549c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800549e:	2b00      	cmp	r3, #0
 80054a0:	d03e      	beq.n	8005520 <HAL_DMA_Start_IT+0x260>
 80054a2:	68fb      	ldr	r3, [r7, #12]
 80054a4:	681b      	ldr	r3, [r3, #0]
 80054a6:	681a      	ldr	r2, [r3, #0]
 80054a8:	68fb      	ldr	r3, [r7, #12]
 80054aa:	681b      	ldr	r3, [r3, #0]
 80054ac:	f042 0208 	orr.w	r2, r2, #8
 80054b0:	601a      	str	r2, [r3, #0]
 80054b2:	e035      	b.n	8005520 <HAL_DMA_Start_IT+0x260>
 80054b4:	40020010 	.word	0x40020010
 80054b8:	40020028 	.word	0x40020028
 80054bc:	40020040 	.word	0x40020040
 80054c0:	40020058 	.word	0x40020058
 80054c4:	40020070 	.word	0x40020070
 80054c8:	40020088 	.word	0x40020088
 80054cc:	400200a0 	.word	0x400200a0
 80054d0:	400200b8 	.word	0x400200b8
 80054d4:	40020410 	.word	0x40020410
 80054d8:	40020428 	.word	0x40020428
 80054dc:	40020440 	.word	0x40020440
 80054e0:	40020458 	.word	0x40020458
 80054e4:	40020470 	.word	0x40020470
 80054e8:	40020488 	.word	0x40020488
 80054ec:	400204a0 	.word	0x400204a0
 80054f0:	400204b8 	.word	0x400204b8
 80054f4:	68fb      	ldr	r3, [r7, #12]
 80054f6:	681b      	ldr	r3, [r3, #0]
 80054f8:	681b      	ldr	r3, [r3, #0]
 80054fa:	f023 020e 	bic.w	r2, r3, #14
 80054fe:	68fb      	ldr	r3, [r7, #12]
 8005500:	681b      	ldr	r3, [r3, #0]
 8005502:	f042 020a 	orr.w	r2, r2, #10
 8005506:	601a      	str	r2, [r3, #0]
 8005508:	68fb      	ldr	r3, [r7, #12]
 800550a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800550c:	2b00      	cmp	r3, #0
 800550e:	d007      	beq.n	8005520 <HAL_DMA_Start_IT+0x260>
 8005510:	68fb      	ldr	r3, [r7, #12]
 8005512:	681b      	ldr	r3, [r3, #0]
 8005514:	681a      	ldr	r2, [r3, #0]
 8005516:	68fb      	ldr	r3, [r7, #12]
 8005518:	681b      	ldr	r3, [r3, #0]
 800551a:	f042 0204 	orr.w	r2, r2, #4
 800551e:	601a      	str	r2, [r3, #0]
 8005520:	68fb      	ldr	r3, [r7, #12]
 8005522:	681b      	ldr	r3, [r3, #0]
 8005524:	4a83      	ldr	r2, [pc, #524]	; (8005734 <HAL_DMA_Start_IT+0x474>)
 8005526:	4293      	cmp	r3, r2
 8005528:	d072      	beq.n	8005610 <HAL_DMA_Start_IT+0x350>
 800552a:	68fb      	ldr	r3, [r7, #12]
 800552c:	681b      	ldr	r3, [r3, #0]
 800552e:	4a82      	ldr	r2, [pc, #520]	; (8005738 <HAL_DMA_Start_IT+0x478>)
 8005530:	4293      	cmp	r3, r2
 8005532:	d06d      	beq.n	8005610 <HAL_DMA_Start_IT+0x350>
 8005534:	68fb      	ldr	r3, [r7, #12]
 8005536:	681b      	ldr	r3, [r3, #0]
 8005538:	4a80      	ldr	r2, [pc, #512]	; (800573c <HAL_DMA_Start_IT+0x47c>)
 800553a:	4293      	cmp	r3, r2
 800553c:	d068      	beq.n	8005610 <HAL_DMA_Start_IT+0x350>
 800553e:	68fb      	ldr	r3, [r7, #12]
 8005540:	681b      	ldr	r3, [r3, #0]
 8005542:	4a7f      	ldr	r2, [pc, #508]	; (8005740 <HAL_DMA_Start_IT+0x480>)
 8005544:	4293      	cmp	r3, r2
 8005546:	d063      	beq.n	8005610 <HAL_DMA_Start_IT+0x350>
 8005548:	68fb      	ldr	r3, [r7, #12]
 800554a:	681b      	ldr	r3, [r3, #0]
 800554c:	4a7d      	ldr	r2, [pc, #500]	; (8005744 <HAL_DMA_Start_IT+0x484>)
 800554e:	4293      	cmp	r3, r2
 8005550:	d05e      	beq.n	8005610 <HAL_DMA_Start_IT+0x350>
 8005552:	68fb      	ldr	r3, [r7, #12]
 8005554:	681b      	ldr	r3, [r3, #0]
 8005556:	4a7c      	ldr	r2, [pc, #496]	; (8005748 <HAL_DMA_Start_IT+0x488>)
 8005558:	4293      	cmp	r3, r2
 800555a:	d059      	beq.n	8005610 <HAL_DMA_Start_IT+0x350>
 800555c:	68fb      	ldr	r3, [r7, #12]
 800555e:	681b      	ldr	r3, [r3, #0]
 8005560:	4a7a      	ldr	r2, [pc, #488]	; (800574c <HAL_DMA_Start_IT+0x48c>)
 8005562:	4293      	cmp	r3, r2
 8005564:	d054      	beq.n	8005610 <HAL_DMA_Start_IT+0x350>
 8005566:	68fb      	ldr	r3, [r7, #12]
 8005568:	681b      	ldr	r3, [r3, #0]
 800556a:	4a79      	ldr	r2, [pc, #484]	; (8005750 <HAL_DMA_Start_IT+0x490>)
 800556c:	4293      	cmp	r3, r2
 800556e:	d04f      	beq.n	8005610 <HAL_DMA_Start_IT+0x350>
 8005570:	68fb      	ldr	r3, [r7, #12]
 8005572:	681b      	ldr	r3, [r3, #0]
 8005574:	4a77      	ldr	r2, [pc, #476]	; (8005754 <HAL_DMA_Start_IT+0x494>)
 8005576:	4293      	cmp	r3, r2
 8005578:	d04a      	beq.n	8005610 <HAL_DMA_Start_IT+0x350>
 800557a:	68fb      	ldr	r3, [r7, #12]
 800557c:	681b      	ldr	r3, [r3, #0]
 800557e:	4a76      	ldr	r2, [pc, #472]	; (8005758 <HAL_DMA_Start_IT+0x498>)
 8005580:	4293      	cmp	r3, r2
 8005582:	d045      	beq.n	8005610 <HAL_DMA_Start_IT+0x350>
 8005584:	68fb      	ldr	r3, [r7, #12]
 8005586:	681b      	ldr	r3, [r3, #0]
 8005588:	4a74      	ldr	r2, [pc, #464]	; (800575c <HAL_DMA_Start_IT+0x49c>)
 800558a:	4293      	cmp	r3, r2
 800558c:	d040      	beq.n	8005610 <HAL_DMA_Start_IT+0x350>
 800558e:	68fb      	ldr	r3, [r7, #12]
 8005590:	681b      	ldr	r3, [r3, #0]
 8005592:	4a73      	ldr	r2, [pc, #460]	; (8005760 <HAL_DMA_Start_IT+0x4a0>)
 8005594:	4293      	cmp	r3, r2
 8005596:	d03b      	beq.n	8005610 <HAL_DMA_Start_IT+0x350>
 8005598:	68fb      	ldr	r3, [r7, #12]
 800559a:	681b      	ldr	r3, [r3, #0]
 800559c:	4a71      	ldr	r2, [pc, #452]	; (8005764 <HAL_DMA_Start_IT+0x4a4>)
 800559e:	4293      	cmp	r3, r2
 80055a0:	d036      	beq.n	8005610 <HAL_DMA_Start_IT+0x350>
 80055a2:	68fb      	ldr	r3, [r7, #12]
 80055a4:	681b      	ldr	r3, [r3, #0]
 80055a6:	4a70      	ldr	r2, [pc, #448]	; (8005768 <HAL_DMA_Start_IT+0x4a8>)
 80055a8:	4293      	cmp	r3, r2
 80055aa:	d031      	beq.n	8005610 <HAL_DMA_Start_IT+0x350>
 80055ac:	68fb      	ldr	r3, [r7, #12]
 80055ae:	681b      	ldr	r3, [r3, #0]
 80055b0:	4a6e      	ldr	r2, [pc, #440]	; (800576c <HAL_DMA_Start_IT+0x4ac>)
 80055b2:	4293      	cmp	r3, r2
 80055b4:	d02c      	beq.n	8005610 <HAL_DMA_Start_IT+0x350>
 80055b6:	68fb      	ldr	r3, [r7, #12]
 80055b8:	681b      	ldr	r3, [r3, #0]
 80055ba:	4a6d      	ldr	r2, [pc, #436]	; (8005770 <HAL_DMA_Start_IT+0x4b0>)
 80055bc:	4293      	cmp	r3, r2
 80055be:	d027      	beq.n	8005610 <HAL_DMA_Start_IT+0x350>
 80055c0:	68fb      	ldr	r3, [r7, #12]
 80055c2:	681b      	ldr	r3, [r3, #0]
 80055c4:	4a6b      	ldr	r2, [pc, #428]	; (8005774 <HAL_DMA_Start_IT+0x4b4>)
 80055c6:	4293      	cmp	r3, r2
 80055c8:	d022      	beq.n	8005610 <HAL_DMA_Start_IT+0x350>
 80055ca:	68fb      	ldr	r3, [r7, #12]
 80055cc:	681b      	ldr	r3, [r3, #0]
 80055ce:	4a6a      	ldr	r2, [pc, #424]	; (8005778 <HAL_DMA_Start_IT+0x4b8>)
 80055d0:	4293      	cmp	r3, r2
 80055d2:	d01d      	beq.n	8005610 <HAL_DMA_Start_IT+0x350>
 80055d4:	68fb      	ldr	r3, [r7, #12]
 80055d6:	681b      	ldr	r3, [r3, #0]
 80055d8:	4a68      	ldr	r2, [pc, #416]	; (800577c <HAL_DMA_Start_IT+0x4bc>)
 80055da:	4293      	cmp	r3, r2
 80055dc:	d018      	beq.n	8005610 <HAL_DMA_Start_IT+0x350>
 80055de:	68fb      	ldr	r3, [r7, #12]
 80055e0:	681b      	ldr	r3, [r3, #0]
 80055e2:	4a67      	ldr	r2, [pc, #412]	; (8005780 <HAL_DMA_Start_IT+0x4c0>)
 80055e4:	4293      	cmp	r3, r2
 80055e6:	d013      	beq.n	8005610 <HAL_DMA_Start_IT+0x350>
 80055e8:	68fb      	ldr	r3, [r7, #12]
 80055ea:	681b      	ldr	r3, [r3, #0]
 80055ec:	4a65      	ldr	r2, [pc, #404]	; (8005784 <HAL_DMA_Start_IT+0x4c4>)
 80055ee:	4293      	cmp	r3, r2
 80055f0:	d00e      	beq.n	8005610 <HAL_DMA_Start_IT+0x350>
 80055f2:	68fb      	ldr	r3, [r7, #12]
 80055f4:	681b      	ldr	r3, [r3, #0]
 80055f6:	4a64      	ldr	r2, [pc, #400]	; (8005788 <HAL_DMA_Start_IT+0x4c8>)
 80055f8:	4293      	cmp	r3, r2
 80055fa:	d009      	beq.n	8005610 <HAL_DMA_Start_IT+0x350>
 80055fc:	68fb      	ldr	r3, [r7, #12]
 80055fe:	681b      	ldr	r3, [r3, #0]
 8005600:	4a62      	ldr	r2, [pc, #392]	; (800578c <HAL_DMA_Start_IT+0x4cc>)
 8005602:	4293      	cmp	r3, r2
 8005604:	d004      	beq.n	8005610 <HAL_DMA_Start_IT+0x350>
 8005606:	68fb      	ldr	r3, [r7, #12]
 8005608:	681b      	ldr	r3, [r3, #0]
 800560a:	4a61      	ldr	r2, [pc, #388]	; (8005790 <HAL_DMA_Start_IT+0x4d0>)
 800560c:	4293      	cmp	r3, r2
 800560e:	d101      	bne.n	8005614 <HAL_DMA_Start_IT+0x354>
 8005610:	2301      	movs	r3, #1
 8005612:	e000      	b.n	8005616 <HAL_DMA_Start_IT+0x356>
 8005614:	2300      	movs	r3, #0
 8005616:	2b00      	cmp	r3, #0
 8005618:	d01a      	beq.n	8005650 <HAL_DMA_Start_IT+0x390>
 800561a:	68fb      	ldr	r3, [r7, #12]
 800561c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800561e:	681b      	ldr	r3, [r3, #0]
 8005620:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8005624:	2b00      	cmp	r3, #0
 8005626:	d007      	beq.n	8005638 <HAL_DMA_Start_IT+0x378>
 8005628:	68fb      	ldr	r3, [r7, #12]
 800562a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800562c:	681a      	ldr	r2, [r3, #0]
 800562e:	68fb      	ldr	r3, [r7, #12]
 8005630:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8005632:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005636:	601a      	str	r2, [r3, #0]
 8005638:	68fb      	ldr	r3, [r7, #12]
 800563a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800563c:	2b00      	cmp	r3, #0
 800563e:	d007      	beq.n	8005650 <HAL_DMA_Start_IT+0x390>
 8005640:	68fb      	ldr	r3, [r7, #12]
 8005642:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8005644:	681a      	ldr	r2, [r3, #0]
 8005646:	68fb      	ldr	r3, [r7, #12]
 8005648:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800564a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800564e:	601a      	str	r2, [r3, #0]
 8005650:	68fb      	ldr	r3, [r7, #12]
 8005652:	681b      	ldr	r3, [r3, #0]
 8005654:	4a37      	ldr	r2, [pc, #220]	; (8005734 <HAL_DMA_Start_IT+0x474>)
 8005656:	4293      	cmp	r3, r2
 8005658:	d04a      	beq.n	80056f0 <HAL_DMA_Start_IT+0x430>
 800565a:	68fb      	ldr	r3, [r7, #12]
 800565c:	681b      	ldr	r3, [r3, #0]
 800565e:	4a36      	ldr	r2, [pc, #216]	; (8005738 <HAL_DMA_Start_IT+0x478>)
 8005660:	4293      	cmp	r3, r2
 8005662:	d045      	beq.n	80056f0 <HAL_DMA_Start_IT+0x430>
 8005664:	68fb      	ldr	r3, [r7, #12]
 8005666:	681b      	ldr	r3, [r3, #0]
 8005668:	4a34      	ldr	r2, [pc, #208]	; (800573c <HAL_DMA_Start_IT+0x47c>)
 800566a:	4293      	cmp	r3, r2
 800566c:	d040      	beq.n	80056f0 <HAL_DMA_Start_IT+0x430>
 800566e:	68fb      	ldr	r3, [r7, #12]
 8005670:	681b      	ldr	r3, [r3, #0]
 8005672:	4a33      	ldr	r2, [pc, #204]	; (8005740 <HAL_DMA_Start_IT+0x480>)
 8005674:	4293      	cmp	r3, r2
 8005676:	d03b      	beq.n	80056f0 <HAL_DMA_Start_IT+0x430>
 8005678:	68fb      	ldr	r3, [r7, #12]
 800567a:	681b      	ldr	r3, [r3, #0]
 800567c:	4a31      	ldr	r2, [pc, #196]	; (8005744 <HAL_DMA_Start_IT+0x484>)
 800567e:	4293      	cmp	r3, r2
 8005680:	d036      	beq.n	80056f0 <HAL_DMA_Start_IT+0x430>
 8005682:	68fb      	ldr	r3, [r7, #12]
 8005684:	681b      	ldr	r3, [r3, #0]
 8005686:	4a30      	ldr	r2, [pc, #192]	; (8005748 <HAL_DMA_Start_IT+0x488>)
 8005688:	4293      	cmp	r3, r2
 800568a:	d031      	beq.n	80056f0 <HAL_DMA_Start_IT+0x430>
 800568c:	68fb      	ldr	r3, [r7, #12]
 800568e:	681b      	ldr	r3, [r3, #0]
 8005690:	4a2e      	ldr	r2, [pc, #184]	; (800574c <HAL_DMA_Start_IT+0x48c>)
 8005692:	4293      	cmp	r3, r2
 8005694:	d02c      	beq.n	80056f0 <HAL_DMA_Start_IT+0x430>
 8005696:	68fb      	ldr	r3, [r7, #12]
 8005698:	681b      	ldr	r3, [r3, #0]
 800569a:	4a2d      	ldr	r2, [pc, #180]	; (8005750 <HAL_DMA_Start_IT+0x490>)
 800569c:	4293      	cmp	r3, r2
 800569e:	d027      	beq.n	80056f0 <HAL_DMA_Start_IT+0x430>
 80056a0:	68fb      	ldr	r3, [r7, #12]
 80056a2:	681b      	ldr	r3, [r3, #0]
 80056a4:	4a2b      	ldr	r2, [pc, #172]	; (8005754 <HAL_DMA_Start_IT+0x494>)
 80056a6:	4293      	cmp	r3, r2
 80056a8:	d022      	beq.n	80056f0 <HAL_DMA_Start_IT+0x430>
 80056aa:	68fb      	ldr	r3, [r7, #12]
 80056ac:	681b      	ldr	r3, [r3, #0]
 80056ae:	4a2a      	ldr	r2, [pc, #168]	; (8005758 <HAL_DMA_Start_IT+0x498>)
 80056b0:	4293      	cmp	r3, r2
 80056b2:	d01d      	beq.n	80056f0 <HAL_DMA_Start_IT+0x430>
 80056b4:	68fb      	ldr	r3, [r7, #12]
 80056b6:	681b      	ldr	r3, [r3, #0]
 80056b8:	4a28      	ldr	r2, [pc, #160]	; (800575c <HAL_DMA_Start_IT+0x49c>)
 80056ba:	4293      	cmp	r3, r2
 80056bc:	d018      	beq.n	80056f0 <HAL_DMA_Start_IT+0x430>
 80056be:	68fb      	ldr	r3, [r7, #12]
 80056c0:	681b      	ldr	r3, [r3, #0]
 80056c2:	4a27      	ldr	r2, [pc, #156]	; (8005760 <HAL_DMA_Start_IT+0x4a0>)
 80056c4:	4293      	cmp	r3, r2
 80056c6:	d013      	beq.n	80056f0 <HAL_DMA_Start_IT+0x430>
 80056c8:	68fb      	ldr	r3, [r7, #12]
 80056ca:	681b      	ldr	r3, [r3, #0]
 80056cc:	4a25      	ldr	r2, [pc, #148]	; (8005764 <HAL_DMA_Start_IT+0x4a4>)
 80056ce:	4293      	cmp	r3, r2
 80056d0:	d00e      	beq.n	80056f0 <HAL_DMA_Start_IT+0x430>
 80056d2:	68fb      	ldr	r3, [r7, #12]
 80056d4:	681b      	ldr	r3, [r3, #0]
 80056d6:	4a24      	ldr	r2, [pc, #144]	; (8005768 <HAL_DMA_Start_IT+0x4a8>)
 80056d8:	4293      	cmp	r3, r2
 80056da:	d009      	beq.n	80056f0 <HAL_DMA_Start_IT+0x430>
 80056dc:	68fb      	ldr	r3, [r7, #12]
 80056de:	681b      	ldr	r3, [r3, #0]
 80056e0:	4a22      	ldr	r2, [pc, #136]	; (800576c <HAL_DMA_Start_IT+0x4ac>)
 80056e2:	4293      	cmp	r3, r2
 80056e4:	d004      	beq.n	80056f0 <HAL_DMA_Start_IT+0x430>
 80056e6:	68fb      	ldr	r3, [r7, #12]
 80056e8:	681b      	ldr	r3, [r3, #0]
 80056ea:	4a21      	ldr	r2, [pc, #132]	; (8005770 <HAL_DMA_Start_IT+0x4b0>)
 80056ec:	4293      	cmp	r3, r2
 80056ee:	d108      	bne.n	8005702 <HAL_DMA_Start_IT+0x442>
 80056f0:	68fb      	ldr	r3, [r7, #12]
 80056f2:	681b      	ldr	r3, [r3, #0]
 80056f4:	681a      	ldr	r2, [r3, #0]
 80056f6:	68fb      	ldr	r3, [r7, #12]
 80056f8:	681b      	ldr	r3, [r3, #0]
 80056fa:	f042 0201 	orr.w	r2, r2, #1
 80056fe:	601a      	str	r2, [r3, #0]
 8005700:	e012      	b.n	8005728 <HAL_DMA_Start_IT+0x468>
 8005702:	68fb      	ldr	r3, [r7, #12]
 8005704:	681b      	ldr	r3, [r3, #0]
 8005706:	681a      	ldr	r2, [r3, #0]
 8005708:	68fb      	ldr	r3, [r7, #12]
 800570a:	681b      	ldr	r3, [r3, #0]
 800570c:	f042 0201 	orr.w	r2, r2, #1
 8005710:	601a      	str	r2, [r3, #0]
 8005712:	e009      	b.n	8005728 <HAL_DMA_Start_IT+0x468>
 8005714:	68fb      	ldr	r3, [r7, #12]
 8005716:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800571a:	655a      	str	r2, [r3, #84]	; 0x54
 800571c:	68fb      	ldr	r3, [r7, #12]
 800571e:	2200      	movs	r2, #0
 8005720:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8005724:	2301      	movs	r3, #1
 8005726:	75fb      	strb	r3, [r7, #23]
 8005728:	7dfb      	ldrb	r3, [r7, #23]
 800572a:	4618      	mov	r0, r3
 800572c:	3718      	adds	r7, #24
 800572e:	46bd      	mov	sp, r7
 8005730:	bd80      	pop	{r7, pc}
 8005732:	bf00      	nop
 8005734:	40020010 	.word	0x40020010
 8005738:	40020028 	.word	0x40020028
 800573c:	40020040 	.word	0x40020040
 8005740:	40020058 	.word	0x40020058
 8005744:	40020070 	.word	0x40020070
 8005748:	40020088 	.word	0x40020088
 800574c:	400200a0 	.word	0x400200a0
 8005750:	400200b8 	.word	0x400200b8
 8005754:	40020410 	.word	0x40020410
 8005758:	40020428 	.word	0x40020428
 800575c:	40020440 	.word	0x40020440
 8005760:	40020458 	.word	0x40020458
 8005764:	40020470 	.word	0x40020470
 8005768:	40020488 	.word	0x40020488
 800576c:	400204a0 	.word	0x400204a0
 8005770:	400204b8 	.word	0x400204b8
 8005774:	58025408 	.word	0x58025408
 8005778:	5802541c 	.word	0x5802541c
 800577c:	58025430 	.word	0x58025430
 8005780:	58025444 	.word	0x58025444
 8005784:	58025458 	.word	0x58025458
 8005788:	5802546c 	.word	0x5802546c
 800578c:	58025480 	.word	0x58025480
 8005790:	58025494 	.word	0x58025494

08005794 <HAL_DMA_Abort>:
 8005794:	b580      	push	{r7, lr}
 8005796:	b086      	sub	sp, #24
 8005798:	af00      	add	r7, sp, #0
 800579a:	6078      	str	r0, [r7, #4]
 800579c:	f7ff f91a 	bl	80049d4 <HAL_GetTick>
 80057a0:	6138      	str	r0, [r7, #16]
 80057a2:	687b      	ldr	r3, [r7, #4]
 80057a4:	2b00      	cmp	r3, #0
 80057a6:	d101      	bne.n	80057ac <HAL_DMA_Abort+0x18>
 80057a8:	2301      	movs	r3, #1
 80057aa:	e2dc      	b.n	8005d66 <HAL_DMA_Abort+0x5d2>
 80057ac:	687b      	ldr	r3, [r7, #4]
 80057ae:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80057b2:	b2db      	uxtb	r3, r3
 80057b4:	2b02      	cmp	r3, #2
 80057b6:	d008      	beq.n	80057ca <HAL_DMA_Abort+0x36>
 80057b8:	687b      	ldr	r3, [r7, #4]
 80057ba:	2280      	movs	r2, #128	; 0x80
 80057bc:	655a      	str	r2, [r3, #84]	; 0x54
 80057be:	687b      	ldr	r3, [r7, #4]
 80057c0:	2200      	movs	r2, #0
 80057c2:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80057c6:	2301      	movs	r3, #1
 80057c8:	e2cd      	b.n	8005d66 <HAL_DMA_Abort+0x5d2>
 80057ca:	687b      	ldr	r3, [r7, #4]
 80057cc:	681b      	ldr	r3, [r3, #0]
 80057ce:	4a76      	ldr	r2, [pc, #472]	; (80059a8 <HAL_DMA_Abort+0x214>)
 80057d0:	4293      	cmp	r3, r2
 80057d2:	d04a      	beq.n	800586a <HAL_DMA_Abort+0xd6>
 80057d4:	687b      	ldr	r3, [r7, #4]
 80057d6:	681b      	ldr	r3, [r3, #0]
 80057d8:	4a74      	ldr	r2, [pc, #464]	; (80059ac <HAL_DMA_Abort+0x218>)
 80057da:	4293      	cmp	r3, r2
 80057dc:	d045      	beq.n	800586a <HAL_DMA_Abort+0xd6>
 80057de:	687b      	ldr	r3, [r7, #4]
 80057e0:	681b      	ldr	r3, [r3, #0]
 80057e2:	4a73      	ldr	r2, [pc, #460]	; (80059b0 <HAL_DMA_Abort+0x21c>)
 80057e4:	4293      	cmp	r3, r2
 80057e6:	d040      	beq.n	800586a <HAL_DMA_Abort+0xd6>
 80057e8:	687b      	ldr	r3, [r7, #4]
 80057ea:	681b      	ldr	r3, [r3, #0]
 80057ec:	4a71      	ldr	r2, [pc, #452]	; (80059b4 <HAL_DMA_Abort+0x220>)
 80057ee:	4293      	cmp	r3, r2
 80057f0:	d03b      	beq.n	800586a <HAL_DMA_Abort+0xd6>
 80057f2:	687b      	ldr	r3, [r7, #4]
 80057f4:	681b      	ldr	r3, [r3, #0]
 80057f6:	4a70      	ldr	r2, [pc, #448]	; (80059b8 <HAL_DMA_Abort+0x224>)
 80057f8:	4293      	cmp	r3, r2
 80057fa:	d036      	beq.n	800586a <HAL_DMA_Abort+0xd6>
 80057fc:	687b      	ldr	r3, [r7, #4]
 80057fe:	681b      	ldr	r3, [r3, #0]
 8005800:	4a6e      	ldr	r2, [pc, #440]	; (80059bc <HAL_DMA_Abort+0x228>)
 8005802:	4293      	cmp	r3, r2
 8005804:	d031      	beq.n	800586a <HAL_DMA_Abort+0xd6>
 8005806:	687b      	ldr	r3, [r7, #4]
 8005808:	681b      	ldr	r3, [r3, #0]
 800580a:	4a6d      	ldr	r2, [pc, #436]	; (80059c0 <HAL_DMA_Abort+0x22c>)
 800580c:	4293      	cmp	r3, r2
 800580e:	d02c      	beq.n	800586a <HAL_DMA_Abort+0xd6>
 8005810:	687b      	ldr	r3, [r7, #4]
 8005812:	681b      	ldr	r3, [r3, #0]
 8005814:	4a6b      	ldr	r2, [pc, #428]	; (80059c4 <HAL_DMA_Abort+0x230>)
 8005816:	4293      	cmp	r3, r2
 8005818:	d027      	beq.n	800586a <HAL_DMA_Abort+0xd6>
 800581a:	687b      	ldr	r3, [r7, #4]
 800581c:	681b      	ldr	r3, [r3, #0]
 800581e:	4a6a      	ldr	r2, [pc, #424]	; (80059c8 <HAL_DMA_Abort+0x234>)
 8005820:	4293      	cmp	r3, r2
 8005822:	d022      	beq.n	800586a <HAL_DMA_Abort+0xd6>
 8005824:	687b      	ldr	r3, [r7, #4]
 8005826:	681b      	ldr	r3, [r3, #0]
 8005828:	4a68      	ldr	r2, [pc, #416]	; (80059cc <HAL_DMA_Abort+0x238>)
 800582a:	4293      	cmp	r3, r2
 800582c:	d01d      	beq.n	800586a <HAL_DMA_Abort+0xd6>
 800582e:	687b      	ldr	r3, [r7, #4]
 8005830:	681b      	ldr	r3, [r3, #0]
 8005832:	4a67      	ldr	r2, [pc, #412]	; (80059d0 <HAL_DMA_Abort+0x23c>)
 8005834:	4293      	cmp	r3, r2
 8005836:	d018      	beq.n	800586a <HAL_DMA_Abort+0xd6>
 8005838:	687b      	ldr	r3, [r7, #4]
 800583a:	681b      	ldr	r3, [r3, #0]
 800583c:	4a65      	ldr	r2, [pc, #404]	; (80059d4 <HAL_DMA_Abort+0x240>)
 800583e:	4293      	cmp	r3, r2
 8005840:	d013      	beq.n	800586a <HAL_DMA_Abort+0xd6>
 8005842:	687b      	ldr	r3, [r7, #4]
 8005844:	681b      	ldr	r3, [r3, #0]
 8005846:	4a64      	ldr	r2, [pc, #400]	; (80059d8 <HAL_DMA_Abort+0x244>)
 8005848:	4293      	cmp	r3, r2
 800584a:	d00e      	beq.n	800586a <HAL_DMA_Abort+0xd6>
 800584c:	687b      	ldr	r3, [r7, #4]
 800584e:	681b      	ldr	r3, [r3, #0]
 8005850:	4a62      	ldr	r2, [pc, #392]	; (80059dc <HAL_DMA_Abort+0x248>)
 8005852:	4293      	cmp	r3, r2
 8005854:	d009      	beq.n	800586a <HAL_DMA_Abort+0xd6>
 8005856:	687b      	ldr	r3, [r7, #4]
 8005858:	681b      	ldr	r3, [r3, #0]
 800585a:	4a61      	ldr	r2, [pc, #388]	; (80059e0 <HAL_DMA_Abort+0x24c>)
 800585c:	4293      	cmp	r3, r2
 800585e:	d004      	beq.n	800586a <HAL_DMA_Abort+0xd6>
 8005860:	687b      	ldr	r3, [r7, #4]
 8005862:	681b      	ldr	r3, [r3, #0]
 8005864:	4a5f      	ldr	r2, [pc, #380]	; (80059e4 <HAL_DMA_Abort+0x250>)
 8005866:	4293      	cmp	r3, r2
 8005868:	d101      	bne.n	800586e <HAL_DMA_Abort+0xda>
 800586a:	2301      	movs	r3, #1
 800586c:	e000      	b.n	8005870 <HAL_DMA_Abort+0xdc>
 800586e:	2300      	movs	r3, #0
 8005870:	2b00      	cmp	r3, #0
 8005872:	d013      	beq.n	800589c <HAL_DMA_Abort+0x108>
 8005874:	687b      	ldr	r3, [r7, #4]
 8005876:	681b      	ldr	r3, [r3, #0]
 8005878:	681a      	ldr	r2, [r3, #0]
 800587a:	687b      	ldr	r3, [r7, #4]
 800587c:	681b      	ldr	r3, [r3, #0]
 800587e:	f022 021e 	bic.w	r2, r2, #30
 8005882:	601a      	str	r2, [r3, #0]
 8005884:	687b      	ldr	r3, [r7, #4]
 8005886:	681b      	ldr	r3, [r3, #0]
 8005888:	695a      	ldr	r2, [r3, #20]
 800588a:	687b      	ldr	r3, [r7, #4]
 800588c:	681b      	ldr	r3, [r3, #0]
 800588e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8005892:	615a      	str	r2, [r3, #20]
 8005894:	687b      	ldr	r3, [r7, #4]
 8005896:	681b      	ldr	r3, [r3, #0]
 8005898:	617b      	str	r3, [r7, #20]
 800589a:	e00a      	b.n	80058b2 <HAL_DMA_Abort+0x11e>
 800589c:	687b      	ldr	r3, [r7, #4]
 800589e:	681b      	ldr	r3, [r3, #0]
 80058a0:	681a      	ldr	r2, [r3, #0]
 80058a2:	687b      	ldr	r3, [r7, #4]
 80058a4:	681b      	ldr	r3, [r3, #0]
 80058a6:	f022 020e 	bic.w	r2, r2, #14
 80058aa:	601a      	str	r2, [r3, #0]
 80058ac:	687b      	ldr	r3, [r7, #4]
 80058ae:	681b      	ldr	r3, [r3, #0]
 80058b0:	617b      	str	r3, [r7, #20]
 80058b2:	687b      	ldr	r3, [r7, #4]
 80058b4:	681b      	ldr	r3, [r3, #0]
 80058b6:	4a3c      	ldr	r2, [pc, #240]	; (80059a8 <HAL_DMA_Abort+0x214>)
 80058b8:	4293      	cmp	r3, r2
 80058ba:	d072      	beq.n	80059a2 <HAL_DMA_Abort+0x20e>
 80058bc:	687b      	ldr	r3, [r7, #4]
 80058be:	681b      	ldr	r3, [r3, #0]
 80058c0:	4a3a      	ldr	r2, [pc, #232]	; (80059ac <HAL_DMA_Abort+0x218>)
 80058c2:	4293      	cmp	r3, r2
 80058c4:	d06d      	beq.n	80059a2 <HAL_DMA_Abort+0x20e>
 80058c6:	687b      	ldr	r3, [r7, #4]
 80058c8:	681b      	ldr	r3, [r3, #0]
 80058ca:	4a39      	ldr	r2, [pc, #228]	; (80059b0 <HAL_DMA_Abort+0x21c>)
 80058cc:	4293      	cmp	r3, r2
 80058ce:	d068      	beq.n	80059a2 <HAL_DMA_Abort+0x20e>
 80058d0:	687b      	ldr	r3, [r7, #4]
 80058d2:	681b      	ldr	r3, [r3, #0]
 80058d4:	4a37      	ldr	r2, [pc, #220]	; (80059b4 <HAL_DMA_Abort+0x220>)
 80058d6:	4293      	cmp	r3, r2
 80058d8:	d063      	beq.n	80059a2 <HAL_DMA_Abort+0x20e>
 80058da:	687b      	ldr	r3, [r7, #4]
 80058dc:	681b      	ldr	r3, [r3, #0]
 80058de:	4a36      	ldr	r2, [pc, #216]	; (80059b8 <HAL_DMA_Abort+0x224>)
 80058e0:	4293      	cmp	r3, r2
 80058e2:	d05e      	beq.n	80059a2 <HAL_DMA_Abort+0x20e>
 80058e4:	687b      	ldr	r3, [r7, #4]
 80058e6:	681b      	ldr	r3, [r3, #0]
 80058e8:	4a34      	ldr	r2, [pc, #208]	; (80059bc <HAL_DMA_Abort+0x228>)
 80058ea:	4293      	cmp	r3, r2
 80058ec:	d059      	beq.n	80059a2 <HAL_DMA_Abort+0x20e>
 80058ee:	687b      	ldr	r3, [r7, #4]
 80058f0:	681b      	ldr	r3, [r3, #0]
 80058f2:	4a33      	ldr	r2, [pc, #204]	; (80059c0 <HAL_DMA_Abort+0x22c>)
 80058f4:	4293      	cmp	r3, r2
 80058f6:	d054      	beq.n	80059a2 <HAL_DMA_Abort+0x20e>
 80058f8:	687b      	ldr	r3, [r7, #4]
 80058fa:	681b      	ldr	r3, [r3, #0]
 80058fc:	4a31      	ldr	r2, [pc, #196]	; (80059c4 <HAL_DMA_Abort+0x230>)
 80058fe:	4293      	cmp	r3, r2
 8005900:	d04f      	beq.n	80059a2 <HAL_DMA_Abort+0x20e>
 8005902:	687b      	ldr	r3, [r7, #4]
 8005904:	681b      	ldr	r3, [r3, #0]
 8005906:	4a30      	ldr	r2, [pc, #192]	; (80059c8 <HAL_DMA_Abort+0x234>)
 8005908:	4293      	cmp	r3, r2
 800590a:	d04a      	beq.n	80059a2 <HAL_DMA_Abort+0x20e>
 800590c:	687b      	ldr	r3, [r7, #4]
 800590e:	681b      	ldr	r3, [r3, #0]
 8005910:	4a2e      	ldr	r2, [pc, #184]	; (80059cc <HAL_DMA_Abort+0x238>)
 8005912:	4293      	cmp	r3, r2
 8005914:	d045      	beq.n	80059a2 <HAL_DMA_Abort+0x20e>
 8005916:	687b      	ldr	r3, [r7, #4]
 8005918:	681b      	ldr	r3, [r3, #0]
 800591a:	4a2d      	ldr	r2, [pc, #180]	; (80059d0 <HAL_DMA_Abort+0x23c>)
 800591c:	4293      	cmp	r3, r2
 800591e:	d040      	beq.n	80059a2 <HAL_DMA_Abort+0x20e>
 8005920:	687b      	ldr	r3, [r7, #4]
 8005922:	681b      	ldr	r3, [r3, #0]
 8005924:	4a2b      	ldr	r2, [pc, #172]	; (80059d4 <HAL_DMA_Abort+0x240>)
 8005926:	4293      	cmp	r3, r2
 8005928:	d03b      	beq.n	80059a2 <HAL_DMA_Abort+0x20e>
 800592a:	687b      	ldr	r3, [r7, #4]
 800592c:	681b      	ldr	r3, [r3, #0]
 800592e:	4a2a      	ldr	r2, [pc, #168]	; (80059d8 <HAL_DMA_Abort+0x244>)
 8005930:	4293      	cmp	r3, r2
 8005932:	d036      	beq.n	80059a2 <HAL_DMA_Abort+0x20e>
 8005934:	687b      	ldr	r3, [r7, #4]
 8005936:	681b      	ldr	r3, [r3, #0]
 8005938:	4a28      	ldr	r2, [pc, #160]	; (80059dc <HAL_DMA_Abort+0x248>)
 800593a:	4293      	cmp	r3, r2
 800593c:	d031      	beq.n	80059a2 <HAL_DMA_Abort+0x20e>
 800593e:	687b      	ldr	r3, [r7, #4]
 8005940:	681b      	ldr	r3, [r3, #0]
 8005942:	4a27      	ldr	r2, [pc, #156]	; (80059e0 <HAL_DMA_Abort+0x24c>)
 8005944:	4293      	cmp	r3, r2
 8005946:	d02c      	beq.n	80059a2 <HAL_DMA_Abort+0x20e>
 8005948:	687b      	ldr	r3, [r7, #4]
 800594a:	681b      	ldr	r3, [r3, #0]
 800594c:	4a25      	ldr	r2, [pc, #148]	; (80059e4 <HAL_DMA_Abort+0x250>)
 800594e:	4293      	cmp	r3, r2
 8005950:	d027      	beq.n	80059a2 <HAL_DMA_Abort+0x20e>
 8005952:	687b      	ldr	r3, [r7, #4]
 8005954:	681b      	ldr	r3, [r3, #0]
 8005956:	4a24      	ldr	r2, [pc, #144]	; (80059e8 <HAL_DMA_Abort+0x254>)
 8005958:	4293      	cmp	r3, r2
 800595a:	d022      	beq.n	80059a2 <HAL_DMA_Abort+0x20e>
 800595c:	687b      	ldr	r3, [r7, #4]
 800595e:	681b      	ldr	r3, [r3, #0]
 8005960:	4a22      	ldr	r2, [pc, #136]	; (80059ec <HAL_DMA_Abort+0x258>)
 8005962:	4293      	cmp	r3, r2
 8005964:	d01d      	beq.n	80059a2 <HAL_DMA_Abort+0x20e>
 8005966:	687b      	ldr	r3, [r7, #4]
 8005968:	681b      	ldr	r3, [r3, #0]
 800596a:	4a21      	ldr	r2, [pc, #132]	; (80059f0 <HAL_DMA_Abort+0x25c>)
 800596c:	4293      	cmp	r3, r2
 800596e:	d018      	beq.n	80059a2 <HAL_DMA_Abort+0x20e>
 8005970:	687b      	ldr	r3, [r7, #4]
 8005972:	681b      	ldr	r3, [r3, #0]
 8005974:	4a1f      	ldr	r2, [pc, #124]	; (80059f4 <HAL_DMA_Abort+0x260>)
 8005976:	4293      	cmp	r3, r2
 8005978:	d013      	beq.n	80059a2 <HAL_DMA_Abort+0x20e>
 800597a:	687b      	ldr	r3, [r7, #4]
 800597c:	681b      	ldr	r3, [r3, #0]
 800597e:	4a1e      	ldr	r2, [pc, #120]	; (80059f8 <HAL_DMA_Abort+0x264>)
 8005980:	4293      	cmp	r3, r2
 8005982:	d00e      	beq.n	80059a2 <HAL_DMA_Abort+0x20e>
 8005984:	687b      	ldr	r3, [r7, #4]
 8005986:	681b      	ldr	r3, [r3, #0]
 8005988:	4a1c      	ldr	r2, [pc, #112]	; (80059fc <HAL_DMA_Abort+0x268>)
 800598a:	4293      	cmp	r3, r2
 800598c:	d009      	beq.n	80059a2 <HAL_DMA_Abort+0x20e>
 800598e:	687b      	ldr	r3, [r7, #4]
 8005990:	681b      	ldr	r3, [r3, #0]
 8005992:	4a1b      	ldr	r2, [pc, #108]	; (8005a00 <HAL_DMA_Abort+0x26c>)
 8005994:	4293      	cmp	r3, r2
 8005996:	d004      	beq.n	80059a2 <HAL_DMA_Abort+0x20e>
 8005998:	687b      	ldr	r3, [r7, #4]
 800599a:	681b      	ldr	r3, [r3, #0]
 800599c:	4a19      	ldr	r2, [pc, #100]	; (8005a04 <HAL_DMA_Abort+0x270>)
 800599e:	4293      	cmp	r3, r2
 80059a0:	d132      	bne.n	8005a08 <HAL_DMA_Abort+0x274>
 80059a2:	2301      	movs	r3, #1
 80059a4:	e031      	b.n	8005a0a <HAL_DMA_Abort+0x276>
 80059a6:	bf00      	nop
 80059a8:	40020010 	.word	0x40020010
 80059ac:	40020028 	.word	0x40020028
 80059b0:	40020040 	.word	0x40020040
 80059b4:	40020058 	.word	0x40020058
 80059b8:	40020070 	.word	0x40020070
 80059bc:	40020088 	.word	0x40020088
 80059c0:	400200a0 	.word	0x400200a0
 80059c4:	400200b8 	.word	0x400200b8
 80059c8:	40020410 	.word	0x40020410
 80059cc:	40020428 	.word	0x40020428
 80059d0:	40020440 	.word	0x40020440
 80059d4:	40020458 	.word	0x40020458
 80059d8:	40020470 	.word	0x40020470
 80059dc:	40020488 	.word	0x40020488
 80059e0:	400204a0 	.word	0x400204a0
 80059e4:	400204b8 	.word	0x400204b8
 80059e8:	58025408 	.word	0x58025408
 80059ec:	5802541c 	.word	0x5802541c
 80059f0:	58025430 	.word	0x58025430
 80059f4:	58025444 	.word	0x58025444
 80059f8:	58025458 	.word	0x58025458
 80059fc:	5802546c 	.word	0x5802546c
 8005a00:	58025480 	.word	0x58025480
 8005a04:	58025494 	.word	0x58025494
 8005a08:	2300      	movs	r3, #0
 8005a0a:	2b00      	cmp	r3, #0
 8005a0c:	d007      	beq.n	8005a1e <HAL_DMA_Abort+0x28a>
 8005a0e:	687b      	ldr	r3, [r7, #4]
 8005a10:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8005a12:	681a      	ldr	r2, [r3, #0]
 8005a14:	687b      	ldr	r3, [r7, #4]
 8005a16:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8005a18:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005a1c:	601a      	str	r2, [r3, #0]
 8005a1e:	687b      	ldr	r3, [r7, #4]
 8005a20:	681b      	ldr	r3, [r3, #0]
 8005a22:	4a6d      	ldr	r2, [pc, #436]	; (8005bd8 <HAL_DMA_Abort+0x444>)
 8005a24:	4293      	cmp	r3, r2
 8005a26:	d04a      	beq.n	8005abe <HAL_DMA_Abort+0x32a>
 8005a28:	687b      	ldr	r3, [r7, #4]
 8005a2a:	681b      	ldr	r3, [r3, #0]
 8005a2c:	4a6b      	ldr	r2, [pc, #428]	; (8005bdc <HAL_DMA_Abort+0x448>)
 8005a2e:	4293      	cmp	r3, r2
 8005a30:	d045      	beq.n	8005abe <HAL_DMA_Abort+0x32a>
 8005a32:	687b      	ldr	r3, [r7, #4]
 8005a34:	681b      	ldr	r3, [r3, #0]
 8005a36:	4a6a      	ldr	r2, [pc, #424]	; (8005be0 <HAL_DMA_Abort+0x44c>)
 8005a38:	4293      	cmp	r3, r2
 8005a3a:	d040      	beq.n	8005abe <HAL_DMA_Abort+0x32a>
 8005a3c:	687b      	ldr	r3, [r7, #4]
 8005a3e:	681b      	ldr	r3, [r3, #0]
 8005a40:	4a68      	ldr	r2, [pc, #416]	; (8005be4 <HAL_DMA_Abort+0x450>)
 8005a42:	4293      	cmp	r3, r2
 8005a44:	d03b      	beq.n	8005abe <HAL_DMA_Abort+0x32a>
 8005a46:	687b      	ldr	r3, [r7, #4]
 8005a48:	681b      	ldr	r3, [r3, #0]
 8005a4a:	4a67      	ldr	r2, [pc, #412]	; (8005be8 <HAL_DMA_Abort+0x454>)
 8005a4c:	4293      	cmp	r3, r2
 8005a4e:	d036      	beq.n	8005abe <HAL_DMA_Abort+0x32a>
 8005a50:	687b      	ldr	r3, [r7, #4]
 8005a52:	681b      	ldr	r3, [r3, #0]
 8005a54:	4a65      	ldr	r2, [pc, #404]	; (8005bec <HAL_DMA_Abort+0x458>)
 8005a56:	4293      	cmp	r3, r2
 8005a58:	d031      	beq.n	8005abe <HAL_DMA_Abort+0x32a>
 8005a5a:	687b      	ldr	r3, [r7, #4]
 8005a5c:	681b      	ldr	r3, [r3, #0]
 8005a5e:	4a64      	ldr	r2, [pc, #400]	; (8005bf0 <HAL_DMA_Abort+0x45c>)
 8005a60:	4293      	cmp	r3, r2
 8005a62:	d02c      	beq.n	8005abe <HAL_DMA_Abort+0x32a>
 8005a64:	687b      	ldr	r3, [r7, #4]
 8005a66:	681b      	ldr	r3, [r3, #0]
 8005a68:	4a62      	ldr	r2, [pc, #392]	; (8005bf4 <HAL_DMA_Abort+0x460>)
 8005a6a:	4293      	cmp	r3, r2
 8005a6c:	d027      	beq.n	8005abe <HAL_DMA_Abort+0x32a>
 8005a6e:	687b      	ldr	r3, [r7, #4]
 8005a70:	681b      	ldr	r3, [r3, #0]
 8005a72:	4a61      	ldr	r2, [pc, #388]	; (8005bf8 <HAL_DMA_Abort+0x464>)
 8005a74:	4293      	cmp	r3, r2
 8005a76:	d022      	beq.n	8005abe <HAL_DMA_Abort+0x32a>
 8005a78:	687b      	ldr	r3, [r7, #4]
 8005a7a:	681b      	ldr	r3, [r3, #0]
 8005a7c:	4a5f      	ldr	r2, [pc, #380]	; (8005bfc <HAL_DMA_Abort+0x468>)
 8005a7e:	4293      	cmp	r3, r2
 8005a80:	d01d      	beq.n	8005abe <HAL_DMA_Abort+0x32a>
 8005a82:	687b      	ldr	r3, [r7, #4]
 8005a84:	681b      	ldr	r3, [r3, #0]
 8005a86:	4a5e      	ldr	r2, [pc, #376]	; (8005c00 <HAL_DMA_Abort+0x46c>)
 8005a88:	4293      	cmp	r3, r2
 8005a8a:	d018      	beq.n	8005abe <HAL_DMA_Abort+0x32a>
 8005a8c:	687b      	ldr	r3, [r7, #4]
 8005a8e:	681b      	ldr	r3, [r3, #0]
 8005a90:	4a5c      	ldr	r2, [pc, #368]	; (8005c04 <HAL_DMA_Abort+0x470>)
 8005a92:	4293      	cmp	r3, r2
 8005a94:	d013      	beq.n	8005abe <HAL_DMA_Abort+0x32a>
 8005a96:	687b      	ldr	r3, [r7, #4]
 8005a98:	681b      	ldr	r3, [r3, #0]
 8005a9a:	4a5b      	ldr	r2, [pc, #364]	; (8005c08 <HAL_DMA_Abort+0x474>)
 8005a9c:	4293      	cmp	r3, r2
 8005a9e:	d00e      	beq.n	8005abe <HAL_DMA_Abort+0x32a>
 8005aa0:	687b      	ldr	r3, [r7, #4]
 8005aa2:	681b      	ldr	r3, [r3, #0]
 8005aa4:	4a59      	ldr	r2, [pc, #356]	; (8005c0c <HAL_DMA_Abort+0x478>)
 8005aa6:	4293      	cmp	r3, r2
 8005aa8:	d009      	beq.n	8005abe <HAL_DMA_Abort+0x32a>
 8005aaa:	687b      	ldr	r3, [r7, #4]
 8005aac:	681b      	ldr	r3, [r3, #0]
 8005aae:	4a58      	ldr	r2, [pc, #352]	; (8005c10 <HAL_DMA_Abort+0x47c>)
 8005ab0:	4293      	cmp	r3, r2
 8005ab2:	d004      	beq.n	8005abe <HAL_DMA_Abort+0x32a>
 8005ab4:	687b      	ldr	r3, [r7, #4]
 8005ab6:	681b      	ldr	r3, [r3, #0]
 8005ab8:	4a56      	ldr	r2, [pc, #344]	; (8005c14 <HAL_DMA_Abort+0x480>)
 8005aba:	4293      	cmp	r3, r2
 8005abc:	d108      	bne.n	8005ad0 <HAL_DMA_Abort+0x33c>
 8005abe:	687b      	ldr	r3, [r7, #4]
 8005ac0:	681b      	ldr	r3, [r3, #0]
 8005ac2:	681a      	ldr	r2, [r3, #0]
 8005ac4:	687b      	ldr	r3, [r7, #4]
 8005ac6:	681b      	ldr	r3, [r3, #0]
 8005ac8:	f022 0201 	bic.w	r2, r2, #1
 8005acc:	601a      	str	r2, [r3, #0]
 8005ace:	e007      	b.n	8005ae0 <HAL_DMA_Abort+0x34c>
 8005ad0:	687b      	ldr	r3, [r7, #4]
 8005ad2:	681b      	ldr	r3, [r3, #0]
 8005ad4:	681a      	ldr	r2, [r3, #0]
 8005ad6:	687b      	ldr	r3, [r7, #4]
 8005ad8:	681b      	ldr	r3, [r3, #0]
 8005ada:	f022 0201 	bic.w	r2, r2, #1
 8005ade:	601a      	str	r2, [r3, #0]
 8005ae0:	e013      	b.n	8005b0a <HAL_DMA_Abort+0x376>
 8005ae2:	f7fe ff77 	bl	80049d4 <HAL_GetTick>
 8005ae6:	4602      	mov	r2, r0
 8005ae8:	693b      	ldr	r3, [r7, #16]
 8005aea:	1ad3      	subs	r3, r2, r3
 8005aec:	2b05      	cmp	r3, #5
 8005aee:	d90c      	bls.n	8005b0a <HAL_DMA_Abort+0x376>
 8005af0:	687b      	ldr	r3, [r7, #4]
 8005af2:	2220      	movs	r2, #32
 8005af4:	655a      	str	r2, [r3, #84]	; 0x54
 8005af6:	687b      	ldr	r3, [r7, #4]
 8005af8:	2203      	movs	r2, #3
 8005afa:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8005afe:	687b      	ldr	r3, [r7, #4]
 8005b00:	2200      	movs	r2, #0
 8005b02:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8005b06:	2301      	movs	r3, #1
 8005b08:	e12d      	b.n	8005d66 <HAL_DMA_Abort+0x5d2>
 8005b0a:	697b      	ldr	r3, [r7, #20]
 8005b0c:	681b      	ldr	r3, [r3, #0]
 8005b0e:	f003 0301 	and.w	r3, r3, #1
 8005b12:	2b00      	cmp	r3, #0
 8005b14:	d1e5      	bne.n	8005ae2 <HAL_DMA_Abort+0x34e>
 8005b16:	687b      	ldr	r3, [r7, #4]
 8005b18:	681b      	ldr	r3, [r3, #0]
 8005b1a:	4a2f      	ldr	r2, [pc, #188]	; (8005bd8 <HAL_DMA_Abort+0x444>)
 8005b1c:	4293      	cmp	r3, r2
 8005b1e:	d04a      	beq.n	8005bb6 <HAL_DMA_Abort+0x422>
 8005b20:	687b      	ldr	r3, [r7, #4]
 8005b22:	681b      	ldr	r3, [r3, #0]
 8005b24:	4a2d      	ldr	r2, [pc, #180]	; (8005bdc <HAL_DMA_Abort+0x448>)
 8005b26:	4293      	cmp	r3, r2
 8005b28:	d045      	beq.n	8005bb6 <HAL_DMA_Abort+0x422>
 8005b2a:	687b      	ldr	r3, [r7, #4]
 8005b2c:	681b      	ldr	r3, [r3, #0]
 8005b2e:	4a2c      	ldr	r2, [pc, #176]	; (8005be0 <HAL_DMA_Abort+0x44c>)
 8005b30:	4293      	cmp	r3, r2
 8005b32:	d040      	beq.n	8005bb6 <HAL_DMA_Abort+0x422>
 8005b34:	687b      	ldr	r3, [r7, #4]
 8005b36:	681b      	ldr	r3, [r3, #0]
 8005b38:	4a2a      	ldr	r2, [pc, #168]	; (8005be4 <HAL_DMA_Abort+0x450>)
 8005b3a:	4293      	cmp	r3, r2
 8005b3c:	d03b      	beq.n	8005bb6 <HAL_DMA_Abort+0x422>
 8005b3e:	687b      	ldr	r3, [r7, #4]
 8005b40:	681b      	ldr	r3, [r3, #0]
 8005b42:	4a29      	ldr	r2, [pc, #164]	; (8005be8 <HAL_DMA_Abort+0x454>)
 8005b44:	4293      	cmp	r3, r2
 8005b46:	d036      	beq.n	8005bb6 <HAL_DMA_Abort+0x422>
 8005b48:	687b      	ldr	r3, [r7, #4]
 8005b4a:	681b      	ldr	r3, [r3, #0]
 8005b4c:	4a27      	ldr	r2, [pc, #156]	; (8005bec <HAL_DMA_Abort+0x458>)
 8005b4e:	4293      	cmp	r3, r2
 8005b50:	d031      	beq.n	8005bb6 <HAL_DMA_Abort+0x422>
 8005b52:	687b      	ldr	r3, [r7, #4]
 8005b54:	681b      	ldr	r3, [r3, #0]
 8005b56:	4a26      	ldr	r2, [pc, #152]	; (8005bf0 <HAL_DMA_Abort+0x45c>)
 8005b58:	4293      	cmp	r3, r2
 8005b5a:	d02c      	beq.n	8005bb6 <HAL_DMA_Abort+0x422>
 8005b5c:	687b      	ldr	r3, [r7, #4]
 8005b5e:	681b      	ldr	r3, [r3, #0]
 8005b60:	4a24      	ldr	r2, [pc, #144]	; (8005bf4 <HAL_DMA_Abort+0x460>)
 8005b62:	4293      	cmp	r3, r2
 8005b64:	d027      	beq.n	8005bb6 <HAL_DMA_Abort+0x422>
 8005b66:	687b      	ldr	r3, [r7, #4]
 8005b68:	681b      	ldr	r3, [r3, #0]
 8005b6a:	4a23      	ldr	r2, [pc, #140]	; (8005bf8 <HAL_DMA_Abort+0x464>)
 8005b6c:	4293      	cmp	r3, r2
 8005b6e:	d022      	beq.n	8005bb6 <HAL_DMA_Abort+0x422>
 8005b70:	687b      	ldr	r3, [r7, #4]
 8005b72:	681b      	ldr	r3, [r3, #0]
 8005b74:	4a21      	ldr	r2, [pc, #132]	; (8005bfc <HAL_DMA_Abort+0x468>)
 8005b76:	4293      	cmp	r3, r2
 8005b78:	d01d      	beq.n	8005bb6 <HAL_DMA_Abort+0x422>
 8005b7a:	687b      	ldr	r3, [r7, #4]
 8005b7c:	681b      	ldr	r3, [r3, #0]
 8005b7e:	4a20      	ldr	r2, [pc, #128]	; (8005c00 <HAL_DMA_Abort+0x46c>)
 8005b80:	4293      	cmp	r3, r2
 8005b82:	d018      	beq.n	8005bb6 <HAL_DMA_Abort+0x422>
 8005b84:	687b      	ldr	r3, [r7, #4]
 8005b86:	681b      	ldr	r3, [r3, #0]
 8005b88:	4a1e      	ldr	r2, [pc, #120]	; (8005c04 <HAL_DMA_Abort+0x470>)
 8005b8a:	4293      	cmp	r3, r2
 8005b8c:	d013      	beq.n	8005bb6 <HAL_DMA_Abort+0x422>
 8005b8e:	687b      	ldr	r3, [r7, #4]
 8005b90:	681b      	ldr	r3, [r3, #0]
 8005b92:	4a1d      	ldr	r2, [pc, #116]	; (8005c08 <HAL_DMA_Abort+0x474>)
 8005b94:	4293      	cmp	r3, r2
 8005b96:	d00e      	beq.n	8005bb6 <HAL_DMA_Abort+0x422>
 8005b98:	687b      	ldr	r3, [r7, #4]
 8005b9a:	681b      	ldr	r3, [r3, #0]
 8005b9c:	4a1b      	ldr	r2, [pc, #108]	; (8005c0c <HAL_DMA_Abort+0x478>)
 8005b9e:	4293      	cmp	r3, r2
 8005ba0:	d009      	beq.n	8005bb6 <HAL_DMA_Abort+0x422>
 8005ba2:	687b      	ldr	r3, [r7, #4]
 8005ba4:	681b      	ldr	r3, [r3, #0]
 8005ba6:	4a1a      	ldr	r2, [pc, #104]	; (8005c10 <HAL_DMA_Abort+0x47c>)
 8005ba8:	4293      	cmp	r3, r2
 8005baa:	d004      	beq.n	8005bb6 <HAL_DMA_Abort+0x422>
 8005bac:	687b      	ldr	r3, [r7, #4]
 8005bae:	681b      	ldr	r3, [r3, #0]
 8005bb0:	4a18      	ldr	r2, [pc, #96]	; (8005c14 <HAL_DMA_Abort+0x480>)
 8005bb2:	4293      	cmp	r3, r2
 8005bb4:	d101      	bne.n	8005bba <HAL_DMA_Abort+0x426>
 8005bb6:	2301      	movs	r3, #1
 8005bb8:	e000      	b.n	8005bbc <HAL_DMA_Abort+0x428>
 8005bba:	2300      	movs	r3, #0
 8005bbc:	2b00      	cmp	r3, #0
 8005bbe:	d02b      	beq.n	8005c18 <HAL_DMA_Abort+0x484>
 8005bc0:	687b      	ldr	r3, [r7, #4]
 8005bc2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005bc4:	60bb      	str	r3, [r7, #8]
 8005bc6:	687b      	ldr	r3, [r7, #4]
 8005bc8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005bca:	f003 031f 	and.w	r3, r3, #31
 8005bce:	223f      	movs	r2, #63	; 0x3f
 8005bd0:	409a      	lsls	r2, r3
 8005bd2:	68bb      	ldr	r3, [r7, #8]
 8005bd4:	609a      	str	r2, [r3, #8]
 8005bd6:	e02a      	b.n	8005c2e <HAL_DMA_Abort+0x49a>
 8005bd8:	40020010 	.word	0x40020010
 8005bdc:	40020028 	.word	0x40020028
 8005be0:	40020040 	.word	0x40020040
 8005be4:	40020058 	.word	0x40020058
 8005be8:	40020070 	.word	0x40020070
 8005bec:	40020088 	.word	0x40020088
 8005bf0:	400200a0 	.word	0x400200a0
 8005bf4:	400200b8 	.word	0x400200b8
 8005bf8:	40020410 	.word	0x40020410
 8005bfc:	40020428 	.word	0x40020428
 8005c00:	40020440 	.word	0x40020440
 8005c04:	40020458 	.word	0x40020458
 8005c08:	40020470 	.word	0x40020470
 8005c0c:	40020488 	.word	0x40020488
 8005c10:	400204a0 	.word	0x400204a0
 8005c14:	400204b8 	.word	0x400204b8
 8005c18:	687b      	ldr	r3, [r7, #4]
 8005c1a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8005c1c:	60fb      	str	r3, [r7, #12]
 8005c1e:	687b      	ldr	r3, [r7, #4]
 8005c20:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8005c22:	f003 031f 	and.w	r3, r3, #31
 8005c26:	2201      	movs	r2, #1
 8005c28:	409a      	lsls	r2, r3
 8005c2a:	68fb      	ldr	r3, [r7, #12]
 8005c2c:	605a      	str	r2, [r3, #4]
 8005c2e:	687b      	ldr	r3, [r7, #4]
 8005c30:	681b      	ldr	r3, [r3, #0]
 8005c32:	4a4f      	ldr	r2, [pc, #316]	; (8005d70 <HAL_DMA_Abort+0x5dc>)
 8005c34:	4293      	cmp	r3, r2
 8005c36:	d072      	beq.n	8005d1e <HAL_DMA_Abort+0x58a>
 8005c38:	687b      	ldr	r3, [r7, #4]
 8005c3a:	681b      	ldr	r3, [r3, #0]
 8005c3c:	4a4d      	ldr	r2, [pc, #308]	; (8005d74 <HAL_DMA_Abort+0x5e0>)
 8005c3e:	4293      	cmp	r3, r2
 8005c40:	d06d      	beq.n	8005d1e <HAL_DMA_Abort+0x58a>
 8005c42:	687b      	ldr	r3, [r7, #4]
 8005c44:	681b      	ldr	r3, [r3, #0]
 8005c46:	4a4c      	ldr	r2, [pc, #304]	; (8005d78 <HAL_DMA_Abort+0x5e4>)
 8005c48:	4293      	cmp	r3, r2
 8005c4a:	d068      	beq.n	8005d1e <HAL_DMA_Abort+0x58a>
 8005c4c:	687b      	ldr	r3, [r7, #4]
 8005c4e:	681b      	ldr	r3, [r3, #0]
 8005c50:	4a4a      	ldr	r2, [pc, #296]	; (8005d7c <HAL_DMA_Abort+0x5e8>)
 8005c52:	4293      	cmp	r3, r2
 8005c54:	d063      	beq.n	8005d1e <HAL_DMA_Abort+0x58a>
 8005c56:	687b      	ldr	r3, [r7, #4]
 8005c58:	681b      	ldr	r3, [r3, #0]
 8005c5a:	4a49      	ldr	r2, [pc, #292]	; (8005d80 <HAL_DMA_Abort+0x5ec>)
 8005c5c:	4293      	cmp	r3, r2
 8005c5e:	d05e      	beq.n	8005d1e <HAL_DMA_Abort+0x58a>
 8005c60:	687b      	ldr	r3, [r7, #4]
 8005c62:	681b      	ldr	r3, [r3, #0]
 8005c64:	4a47      	ldr	r2, [pc, #284]	; (8005d84 <HAL_DMA_Abort+0x5f0>)
 8005c66:	4293      	cmp	r3, r2
 8005c68:	d059      	beq.n	8005d1e <HAL_DMA_Abort+0x58a>
 8005c6a:	687b      	ldr	r3, [r7, #4]
 8005c6c:	681b      	ldr	r3, [r3, #0]
 8005c6e:	4a46      	ldr	r2, [pc, #280]	; (8005d88 <HAL_DMA_Abort+0x5f4>)
 8005c70:	4293      	cmp	r3, r2
 8005c72:	d054      	beq.n	8005d1e <HAL_DMA_Abort+0x58a>
 8005c74:	687b      	ldr	r3, [r7, #4]
 8005c76:	681b      	ldr	r3, [r3, #0]
 8005c78:	4a44      	ldr	r2, [pc, #272]	; (8005d8c <HAL_DMA_Abort+0x5f8>)
 8005c7a:	4293      	cmp	r3, r2
 8005c7c:	d04f      	beq.n	8005d1e <HAL_DMA_Abort+0x58a>
 8005c7e:	687b      	ldr	r3, [r7, #4]
 8005c80:	681b      	ldr	r3, [r3, #0]
 8005c82:	4a43      	ldr	r2, [pc, #268]	; (8005d90 <HAL_DMA_Abort+0x5fc>)
 8005c84:	4293      	cmp	r3, r2
 8005c86:	d04a      	beq.n	8005d1e <HAL_DMA_Abort+0x58a>
 8005c88:	687b      	ldr	r3, [r7, #4]
 8005c8a:	681b      	ldr	r3, [r3, #0]
 8005c8c:	4a41      	ldr	r2, [pc, #260]	; (8005d94 <HAL_DMA_Abort+0x600>)
 8005c8e:	4293      	cmp	r3, r2
 8005c90:	d045      	beq.n	8005d1e <HAL_DMA_Abort+0x58a>
 8005c92:	687b      	ldr	r3, [r7, #4]
 8005c94:	681b      	ldr	r3, [r3, #0]
 8005c96:	4a40      	ldr	r2, [pc, #256]	; (8005d98 <HAL_DMA_Abort+0x604>)
 8005c98:	4293      	cmp	r3, r2
 8005c9a:	d040      	beq.n	8005d1e <HAL_DMA_Abort+0x58a>
 8005c9c:	687b      	ldr	r3, [r7, #4]
 8005c9e:	681b      	ldr	r3, [r3, #0]
 8005ca0:	4a3e      	ldr	r2, [pc, #248]	; (8005d9c <HAL_DMA_Abort+0x608>)
 8005ca2:	4293      	cmp	r3, r2
 8005ca4:	d03b      	beq.n	8005d1e <HAL_DMA_Abort+0x58a>
 8005ca6:	687b      	ldr	r3, [r7, #4]
 8005ca8:	681b      	ldr	r3, [r3, #0]
 8005caa:	4a3d      	ldr	r2, [pc, #244]	; (8005da0 <HAL_DMA_Abort+0x60c>)
 8005cac:	4293      	cmp	r3, r2
 8005cae:	d036      	beq.n	8005d1e <HAL_DMA_Abort+0x58a>
 8005cb0:	687b      	ldr	r3, [r7, #4]
 8005cb2:	681b      	ldr	r3, [r3, #0]
 8005cb4:	4a3b      	ldr	r2, [pc, #236]	; (8005da4 <HAL_DMA_Abort+0x610>)
 8005cb6:	4293      	cmp	r3, r2
 8005cb8:	d031      	beq.n	8005d1e <HAL_DMA_Abort+0x58a>
 8005cba:	687b      	ldr	r3, [r7, #4]
 8005cbc:	681b      	ldr	r3, [r3, #0]
 8005cbe:	4a3a      	ldr	r2, [pc, #232]	; (8005da8 <HAL_DMA_Abort+0x614>)
 8005cc0:	4293      	cmp	r3, r2
 8005cc2:	d02c      	beq.n	8005d1e <HAL_DMA_Abort+0x58a>
 8005cc4:	687b      	ldr	r3, [r7, #4]
 8005cc6:	681b      	ldr	r3, [r3, #0]
 8005cc8:	4a38      	ldr	r2, [pc, #224]	; (8005dac <HAL_DMA_Abort+0x618>)
 8005cca:	4293      	cmp	r3, r2
 8005ccc:	d027      	beq.n	8005d1e <HAL_DMA_Abort+0x58a>
 8005cce:	687b      	ldr	r3, [r7, #4]
 8005cd0:	681b      	ldr	r3, [r3, #0]
 8005cd2:	4a37      	ldr	r2, [pc, #220]	; (8005db0 <HAL_DMA_Abort+0x61c>)
 8005cd4:	4293      	cmp	r3, r2
 8005cd6:	d022      	beq.n	8005d1e <HAL_DMA_Abort+0x58a>
 8005cd8:	687b      	ldr	r3, [r7, #4]
 8005cda:	681b      	ldr	r3, [r3, #0]
 8005cdc:	4a35      	ldr	r2, [pc, #212]	; (8005db4 <HAL_DMA_Abort+0x620>)
 8005cde:	4293      	cmp	r3, r2
 8005ce0:	d01d      	beq.n	8005d1e <HAL_DMA_Abort+0x58a>
 8005ce2:	687b      	ldr	r3, [r7, #4]
 8005ce4:	681b      	ldr	r3, [r3, #0]
 8005ce6:	4a34      	ldr	r2, [pc, #208]	; (8005db8 <HAL_DMA_Abort+0x624>)
 8005ce8:	4293      	cmp	r3, r2
 8005cea:	d018      	beq.n	8005d1e <HAL_DMA_Abort+0x58a>
 8005cec:	687b      	ldr	r3, [r7, #4]
 8005cee:	681b      	ldr	r3, [r3, #0]
 8005cf0:	4a32      	ldr	r2, [pc, #200]	; (8005dbc <HAL_DMA_Abort+0x628>)
 8005cf2:	4293      	cmp	r3, r2
 8005cf4:	d013      	beq.n	8005d1e <HAL_DMA_Abort+0x58a>
 8005cf6:	687b      	ldr	r3, [r7, #4]
 8005cf8:	681b      	ldr	r3, [r3, #0]
 8005cfa:	4a31      	ldr	r2, [pc, #196]	; (8005dc0 <HAL_DMA_Abort+0x62c>)
 8005cfc:	4293      	cmp	r3, r2
 8005cfe:	d00e      	beq.n	8005d1e <HAL_DMA_Abort+0x58a>
 8005d00:	687b      	ldr	r3, [r7, #4]
 8005d02:	681b      	ldr	r3, [r3, #0]
 8005d04:	4a2f      	ldr	r2, [pc, #188]	; (8005dc4 <HAL_DMA_Abort+0x630>)
 8005d06:	4293      	cmp	r3, r2
 8005d08:	d009      	beq.n	8005d1e <HAL_DMA_Abort+0x58a>
 8005d0a:	687b      	ldr	r3, [r7, #4]
 8005d0c:	681b      	ldr	r3, [r3, #0]
 8005d0e:	4a2e      	ldr	r2, [pc, #184]	; (8005dc8 <HAL_DMA_Abort+0x634>)
 8005d10:	4293      	cmp	r3, r2
 8005d12:	d004      	beq.n	8005d1e <HAL_DMA_Abort+0x58a>
 8005d14:	687b      	ldr	r3, [r7, #4]
 8005d16:	681b      	ldr	r3, [r3, #0]
 8005d18:	4a2c      	ldr	r2, [pc, #176]	; (8005dcc <HAL_DMA_Abort+0x638>)
 8005d1a:	4293      	cmp	r3, r2
 8005d1c:	d101      	bne.n	8005d22 <HAL_DMA_Abort+0x58e>
 8005d1e:	2301      	movs	r3, #1
 8005d20:	e000      	b.n	8005d24 <HAL_DMA_Abort+0x590>
 8005d22:	2300      	movs	r3, #0
 8005d24:	2b00      	cmp	r3, #0
 8005d26:	d015      	beq.n	8005d54 <HAL_DMA_Abort+0x5c0>
 8005d28:	687b      	ldr	r3, [r7, #4]
 8005d2a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8005d2c:	687a      	ldr	r2, [r7, #4]
 8005d2e:	6e92      	ldr	r2, [r2, #104]	; 0x68
 8005d30:	605a      	str	r2, [r3, #4]
 8005d32:	687b      	ldr	r3, [r7, #4]
 8005d34:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8005d36:	2b00      	cmp	r3, #0
 8005d38:	d00c      	beq.n	8005d54 <HAL_DMA_Abort+0x5c0>
 8005d3a:	687b      	ldr	r3, [r7, #4]
 8005d3c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8005d3e:	681a      	ldr	r2, [r3, #0]
 8005d40:	687b      	ldr	r3, [r7, #4]
 8005d42:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8005d44:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005d48:	601a      	str	r2, [r3, #0]
 8005d4a:	687b      	ldr	r3, [r7, #4]
 8005d4c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005d4e:	687a      	ldr	r2, [r7, #4]
 8005d50:	6f52      	ldr	r2, [r2, #116]	; 0x74
 8005d52:	605a      	str	r2, [r3, #4]
 8005d54:	687b      	ldr	r3, [r7, #4]
 8005d56:	2201      	movs	r2, #1
 8005d58:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8005d5c:	687b      	ldr	r3, [r7, #4]
 8005d5e:	2200      	movs	r2, #0
 8005d60:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8005d64:	2300      	movs	r3, #0
 8005d66:	4618      	mov	r0, r3
 8005d68:	3718      	adds	r7, #24
 8005d6a:	46bd      	mov	sp, r7
 8005d6c:	bd80      	pop	{r7, pc}
 8005d6e:	bf00      	nop
 8005d70:	40020010 	.word	0x40020010
 8005d74:	40020028 	.word	0x40020028
 8005d78:	40020040 	.word	0x40020040
 8005d7c:	40020058 	.word	0x40020058
 8005d80:	40020070 	.word	0x40020070
 8005d84:	40020088 	.word	0x40020088
 8005d88:	400200a0 	.word	0x400200a0
 8005d8c:	400200b8 	.word	0x400200b8
 8005d90:	40020410 	.word	0x40020410
 8005d94:	40020428 	.word	0x40020428
 8005d98:	40020440 	.word	0x40020440
 8005d9c:	40020458 	.word	0x40020458
 8005da0:	40020470 	.word	0x40020470
 8005da4:	40020488 	.word	0x40020488
 8005da8:	400204a0 	.word	0x400204a0
 8005dac:	400204b8 	.word	0x400204b8
 8005db0:	58025408 	.word	0x58025408
 8005db4:	5802541c 	.word	0x5802541c
 8005db8:	58025430 	.word	0x58025430
 8005dbc:	58025444 	.word	0x58025444
 8005dc0:	58025458 	.word	0x58025458
 8005dc4:	5802546c 	.word	0x5802546c
 8005dc8:	58025480 	.word	0x58025480
 8005dcc:	58025494 	.word	0x58025494

08005dd0 <HAL_DMA_Abort_IT>:
 8005dd0:	b580      	push	{r7, lr}
 8005dd2:	b084      	sub	sp, #16
 8005dd4:	af00      	add	r7, sp, #0
 8005dd6:	6078      	str	r0, [r7, #4]
 8005dd8:	687b      	ldr	r3, [r7, #4]
 8005dda:	2b00      	cmp	r3, #0
 8005ddc:	d101      	bne.n	8005de2 <HAL_DMA_Abort_IT+0x12>
 8005dde:	2301      	movs	r3, #1
 8005de0:	e237      	b.n	8006252 <HAL_DMA_Abort_IT+0x482>
 8005de2:	687b      	ldr	r3, [r7, #4]
 8005de4:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8005de8:	b2db      	uxtb	r3, r3
 8005dea:	2b02      	cmp	r3, #2
 8005dec:	d004      	beq.n	8005df8 <HAL_DMA_Abort_IT+0x28>
 8005dee:	687b      	ldr	r3, [r7, #4]
 8005df0:	2280      	movs	r2, #128	; 0x80
 8005df2:	655a      	str	r2, [r3, #84]	; 0x54
 8005df4:	2301      	movs	r3, #1
 8005df6:	e22c      	b.n	8006252 <HAL_DMA_Abort_IT+0x482>
 8005df8:	687b      	ldr	r3, [r7, #4]
 8005dfa:	681b      	ldr	r3, [r3, #0]
 8005dfc:	4a5c      	ldr	r2, [pc, #368]	; (8005f70 <HAL_DMA_Abort_IT+0x1a0>)
 8005dfe:	4293      	cmp	r3, r2
 8005e00:	d04a      	beq.n	8005e98 <HAL_DMA_Abort_IT+0xc8>
 8005e02:	687b      	ldr	r3, [r7, #4]
 8005e04:	681b      	ldr	r3, [r3, #0]
 8005e06:	4a5b      	ldr	r2, [pc, #364]	; (8005f74 <HAL_DMA_Abort_IT+0x1a4>)
 8005e08:	4293      	cmp	r3, r2
 8005e0a:	d045      	beq.n	8005e98 <HAL_DMA_Abort_IT+0xc8>
 8005e0c:	687b      	ldr	r3, [r7, #4]
 8005e0e:	681b      	ldr	r3, [r3, #0]
 8005e10:	4a59      	ldr	r2, [pc, #356]	; (8005f78 <HAL_DMA_Abort_IT+0x1a8>)
 8005e12:	4293      	cmp	r3, r2
 8005e14:	d040      	beq.n	8005e98 <HAL_DMA_Abort_IT+0xc8>
 8005e16:	687b      	ldr	r3, [r7, #4]
 8005e18:	681b      	ldr	r3, [r3, #0]
 8005e1a:	4a58      	ldr	r2, [pc, #352]	; (8005f7c <HAL_DMA_Abort_IT+0x1ac>)
 8005e1c:	4293      	cmp	r3, r2
 8005e1e:	d03b      	beq.n	8005e98 <HAL_DMA_Abort_IT+0xc8>
 8005e20:	687b      	ldr	r3, [r7, #4]
 8005e22:	681b      	ldr	r3, [r3, #0]
 8005e24:	4a56      	ldr	r2, [pc, #344]	; (8005f80 <HAL_DMA_Abort_IT+0x1b0>)
 8005e26:	4293      	cmp	r3, r2
 8005e28:	d036      	beq.n	8005e98 <HAL_DMA_Abort_IT+0xc8>
 8005e2a:	687b      	ldr	r3, [r7, #4]
 8005e2c:	681b      	ldr	r3, [r3, #0]
 8005e2e:	4a55      	ldr	r2, [pc, #340]	; (8005f84 <HAL_DMA_Abort_IT+0x1b4>)
 8005e30:	4293      	cmp	r3, r2
 8005e32:	d031      	beq.n	8005e98 <HAL_DMA_Abort_IT+0xc8>
 8005e34:	687b      	ldr	r3, [r7, #4]
 8005e36:	681b      	ldr	r3, [r3, #0]
 8005e38:	4a53      	ldr	r2, [pc, #332]	; (8005f88 <HAL_DMA_Abort_IT+0x1b8>)
 8005e3a:	4293      	cmp	r3, r2
 8005e3c:	d02c      	beq.n	8005e98 <HAL_DMA_Abort_IT+0xc8>
 8005e3e:	687b      	ldr	r3, [r7, #4]
 8005e40:	681b      	ldr	r3, [r3, #0]
 8005e42:	4a52      	ldr	r2, [pc, #328]	; (8005f8c <HAL_DMA_Abort_IT+0x1bc>)
 8005e44:	4293      	cmp	r3, r2
 8005e46:	d027      	beq.n	8005e98 <HAL_DMA_Abort_IT+0xc8>
 8005e48:	687b      	ldr	r3, [r7, #4]
 8005e4a:	681b      	ldr	r3, [r3, #0]
 8005e4c:	4a50      	ldr	r2, [pc, #320]	; (8005f90 <HAL_DMA_Abort_IT+0x1c0>)
 8005e4e:	4293      	cmp	r3, r2
 8005e50:	d022      	beq.n	8005e98 <HAL_DMA_Abort_IT+0xc8>
 8005e52:	687b      	ldr	r3, [r7, #4]
 8005e54:	681b      	ldr	r3, [r3, #0]
 8005e56:	4a4f      	ldr	r2, [pc, #316]	; (8005f94 <HAL_DMA_Abort_IT+0x1c4>)
 8005e58:	4293      	cmp	r3, r2
 8005e5a:	d01d      	beq.n	8005e98 <HAL_DMA_Abort_IT+0xc8>
 8005e5c:	687b      	ldr	r3, [r7, #4]
 8005e5e:	681b      	ldr	r3, [r3, #0]
 8005e60:	4a4d      	ldr	r2, [pc, #308]	; (8005f98 <HAL_DMA_Abort_IT+0x1c8>)
 8005e62:	4293      	cmp	r3, r2
 8005e64:	d018      	beq.n	8005e98 <HAL_DMA_Abort_IT+0xc8>
 8005e66:	687b      	ldr	r3, [r7, #4]
 8005e68:	681b      	ldr	r3, [r3, #0]
 8005e6a:	4a4c      	ldr	r2, [pc, #304]	; (8005f9c <HAL_DMA_Abort_IT+0x1cc>)
 8005e6c:	4293      	cmp	r3, r2
 8005e6e:	d013      	beq.n	8005e98 <HAL_DMA_Abort_IT+0xc8>
 8005e70:	687b      	ldr	r3, [r7, #4]
 8005e72:	681b      	ldr	r3, [r3, #0]
 8005e74:	4a4a      	ldr	r2, [pc, #296]	; (8005fa0 <HAL_DMA_Abort_IT+0x1d0>)
 8005e76:	4293      	cmp	r3, r2
 8005e78:	d00e      	beq.n	8005e98 <HAL_DMA_Abort_IT+0xc8>
 8005e7a:	687b      	ldr	r3, [r7, #4]
 8005e7c:	681b      	ldr	r3, [r3, #0]
 8005e7e:	4a49      	ldr	r2, [pc, #292]	; (8005fa4 <HAL_DMA_Abort_IT+0x1d4>)
 8005e80:	4293      	cmp	r3, r2
 8005e82:	d009      	beq.n	8005e98 <HAL_DMA_Abort_IT+0xc8>
 8005e84:	687b      	ldr	r3, [r7, #4]
 8005e86:	681b      	ldr	r3, [r3, #0]
 8005e88:	4a47      	ldr	r2, [pc, #284]	; (8005fa8 <HAL_DMA_Abort_IT+0x1d8>)
 8005e8a:	4293      	cmp	r3, r2
 8005e8c:	d004      	beq.n	8005e98 <HAL_DMA_Abort_IT+0xc8>
 8005e8e:	687b      	ldr	r3, [r7, #4]
 8005e90:	681b      	ldr	r3, [r3, #0]
 8005e92:	4a46      	ldr	r2, [pc, #280]	; (8005fac <HAL_DMA_Abort_IT+0x1dc>)
 8005e94:	4293      	cmp	r3, r2
 8005e96:	d101      	bne.n	8005e9c <HAL_DMA_Abort_IT+0xcc>
 8005e98:	2301      	movs	r3, #1
 8005e9a:	e000      	b.n	8005e9e <HAL_DMA_Abort_IT+0xce>
 8005e9c:	2300      	movs	r3, #0
 8005e9e:	2b00      	cmp	r3, #0
 8005ea0:	f000 8086 	beq.w	8005fb0 <HAL_DMA_Abort_IT+0x1e0>
 8005ea4:	687b      	ldr	r3, [r7, #4]
 8005ea6:	2204      	movs	r2, #4
 8005ea8:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8005eac:	687b      	ldr	r3, [r7, #4]
 8005eae:	681b      	ldr	r3, [r3, #0]
 8005eb0:	4a2f      	ldr	r2, [pc, #188]	; (8005f70 <HAL_DMA_Abort_IT+0x1a0>)
 8005eb2:	4293      	cmp	r3, r2
 8005eb4:	d04a      	beq.n	8005f4c <HAL_DMA_Abort_IT+0x17c>
 8005eb6:	687b      	ldr	r3, [r7, #4]
 8005eb8:	681b      	ldr	r3, [r3, #0]
 8005eba:	4a2e      	ldr	r2, [pc, #184]	; (8005f74 <HAL_DMA_Abort_IT+0x1a4>)
 8005ebc:	4293      	cmp	r3, r2
 8005ebe:	d045      	beq.n	8005f4c <HAL_DMA_Abort_IT+0x17c>
 8005ec0:	687b      	ldr	r3, [r7, #4]
 8005ec2:	681b      	ldr	r3, [r3, #0]
 8005ec4:	4a2c      	ldr	r2, [pc, #176]	; (8005f78 <HAL_DMA_Abort_IT+0x1a8>)
 8005ec6:	4293      	cmp	r3, r2
 8005ec8:	d040      	beq.n	8005f4c <HAL_DMA_Abort_IT+0x17c>
 8005eca:	687b      	ldr	r3, [r7, #4]
 8005ecc:	681b      	ldr	r3, [r3, #0]
 8005ece:	4a2b      	ldr	r2, [pc, #172]	; (8005f7c <HAL_DMA_Abort_IT+0x1ac>)
 8005ed0:	4293      	cmp	r3, r2
 8005ed2:	d03b      	beq.n	8005f4c <HAL_DMA_Abort_IT+0x17c>
 8005ed4:	687b      	ldr	r3, [r7, #4]
 8005ed6:	681b      	ldr	r3, [r3, #0]
 8005ed8:	4a29      	ldr	r2, [pc, #164]	; (8005f80 <HAL_DMA_Abort_IT+0x1b0>)
 8005eda:	4293      	cmp	r3, r2
 8005edc:	d036      	beq.n	8005f4c <HAL_DMA_Abort_IT+0x17c>
 8005ede:	687b      	ldr	r3, [r7, #4]
 8005ee0:	681b      	ldr	r3, [r3, #0]
 8005ee2:	4a28      	ldr	r2, [pc, #160]	; (8005f84 <HAL_DMA_Abort_IT+0x1b4>)
 8005ee4:	4293      	cmp	r3, r2
 8005ee6:	d031      	beq.n	8005f4c <HAL_DMA_Abort_IT+0x17c>
 8005ee8:	687b      	ldr	r3, [r7, #4]
 8005eea:	681b      	ldr	r3, [r3, #0]
 8005eec:	4a26      	ldr	r2, [pc, #152]	; (8005f88 <HAL_DMA_Abort_IT+0x1b8>)
 8005eee:	4293      	cmp	r3, r2
 8005ef0:	d02c      	beq.n	8005f4c <HAL_DMA_Abort_IT+0x17c>
 8005ef2:	687b      	ldr	r3, [r7, #4]
 8005ef4:	681b      	ldr	r3, [r3, #0]
 8005ef6:	4a25      	ldr	r2, [pc, #148]	; (8005f8c <HAL_DMA_Abort_IT+0x1bc>)
 8005ef8:	4293      	cmp	r3, r2
 8005efa:	d027      	beq.n	8005f4c <HAL_DMA_Abort_IT+0x17c>
 8005efc:	687b      	ldr	r3, [r7, #4]
 8005efe:	681b      	ldr	r3, [r3, #0]
 8005f00:	4a23      	ldr	r2, [pc, #140]	; (8005f90 <HAL_DMA_Abort_IT+0x1c0>)
 8005f02:	4293      	cmp	r3, r2
 8005f04:	d022      	beq.n	8005f4c <HAL_DMA_Abort_IT+0x17c>
 8005f06:	687b      	ldr	r3, [r7, #4]
 8005f08:	681b      	ldr	r3, [r3, #0]
 8005f0a:	4a22      	ldr	r2, [pc, #136]	; (8005f94 <HAL_DMA_Abort_IT+0x1c4>)
 8005f0c:	4293      	cmp	r3, r2
 8005f0e:	d01d      	beq.n	8005f4c <HAL_DMA_Abort_IT+0x17c>
 8005f10:	687b      	ldr	r3, [r7, #4]
 8005f12:	681b      	ldr	r3, [r3, #0]
 8005f14:	4a20      	ldr	r2, [pc, #128]	; (8005f98 <HAL_DMA_Abort_IT+0x1c8>)
 8005f16:	4293      	cmp	r3, r2
 8005f18:	d018      	beq.n	8005f4c <HAL_DMA_Abort_IT+0x17c>
 8005f1a:	687b      	ldr	r3, [r7, #4]
 8005f1c:	681b      	ldr	r3, [r3, #0]
 8005f1e:	4a1f      	ldr	r2, [pc, #124]	; (8005f9c <HAL_DMA_Abort_IT+0x1cc>)
 8005f20:	4293      	cmp	r3, r2
 8005f22:	d013      	beq.n	8005f4c <HAL_DMA_Abort_IT+0x17c>
 8005f24:	687b      	ldr	r3, [r7, #4]
 8005f26:	681b      	ldr	r3, [r3, #0]
 8005f28:	4a1d      	ldr	r2, [pc, #116]	; (8005fa0 <HAL_DMA_Abort_IT+0x1d0>)
 8005f2a:	4293      	cmp	r3, r2
 8005f2c:	d00e      	beq.n	8005f4c <HAL_DMA_Abort_IT+0x17c>
 8005f2e:	687b      	ldr	r3, [r7, #4]
 8005f30:	681b      	ldr	r3, [r3, #0]
 8005f32:	4a1c      	ldr	r2, [pc, #112]	; (8005fa4 <HAL_DMA_Abort_IT+0x1d4>)
 8005f34:	4293      	cmp	r3, r2
 8005f36:	d009      	beq.n	8005f4c <HAL_DMA_Abort_IT+0x17c>
 8005f38:	687b      	ldr	r3, [r7, #4]
 8005f3a:	681b      	ldr	r3, [r3, #0]
 8005f3c:	4a1a      	ldr	r2, [pc, #104]	; (8005fa8 <HAL_DMA_Abort_IT+0x1d8>)
 8005f3e:	4293      	cmp	r3, r2
 8005f40:	d004      	beq.n	8005f4c <HAL_DMA_Abort_IT+0x17c>
 8005f42:	687b      	ldr	r3, [r7, #4]
 8005f44:	681b      	ldr	r3, [r3, #0]
 8005f46:	4a19      	ldr	r2, [pc, #100]	; (8005fac <HAL_DMA_Abort_IT+0x1dc>)
 8005f48:	4293      	cmp	r3, r2
 8005f4a:	d108      	bne.n	8005f5e <HAL_DMA_Abort_IT+0x18e>
 8005f4c:	687b      	ldr	r3, [r7, #4]
 8005f4e:	681b      	ldr	r3, [r3, #0]
 8005f50:	681a      	ldr	r2, [r3, #0]
 8005f52:	687b      	ldr	r3, [r7, #4]
 8005f54:	681b      	ldr	r3, [r3, #0]
 8005f56:	f022 0201 	bic.w	r2, r2, #1
 8005f5a:	601a      	str	r2, [r3, #0]
 8005f5c:	e178      	b.n	8006250 <HAL_DMA_Abort_IT+0x480>
 8005f5e:	687b      	ldr	r3, [r7, #4]
 8005f60:	681b      	ldr	r3, [r3, #0]
 8005f62:	681a      	ldr	r2, [r3, #0]
 8005f64:	687b      	ldr	r3, [r7, #4]
 8005f66:	681b      	ldr	r3, [r3, #0]
 8005f68:	f022 0201 	bic.w	r2, r2, #1
 8005f6c:	601a      	str	r2, [r3, #0]
 8005f6e:	e16f      	b.n	8006250 <HAL_DMA_Abort_IT+0x480>
 8005f70:	40020010 	.word	0x40020010
 8005f74:	40020028 	.word	0x40020028
 8005f78:	40020040 	.word	0x40020040
 8005f7c:	40020058 	.word	0x40020058
 8005f80:	40020070 	.word	0x40020070
 8005f84:	40020088 	.word	0x40020088
 8005f88:	400200a0 	.word	0x400200a0
 8005f8c:	400200b8 	.word	0x400200b8
 8005f90:	40020410 	.word	0x40020410
 8005f94:	40020428 	.word	0x40020428
 8005f98:	40020440 	.word	0x40020440
 8005f9c:	40020458 	.word	0x40020458
 8005fa0:	40020470 	.word	0x40020470
 8005fa4:	40020488 	.word	0x40020488
 8005fa8:	400204a0 	.word	0x400204a0
 8005fac:	400204b8 	.word	0x400204b8
 8005fb0:	687b      	ldr	r3, [r7, #4]
 8005fb2:	681b      	ldr	r3, [r3, #0]
 8005fb4:	681a      	ldr	r2, [r3, #0]
 8005fb6:	687b      	ldr	r3, [r7, #4]
 8005fb8:	681b      	ldr	r3, [r3, #0]
 8005fba:	f022 020e 	bic.w	r2, r2, #14
 8005fbe:	601a      	str	r2, [r3, #0]
 8005fc0:	687b      	ldr	r3, [r7, #4]
 8005fc2:	681b      	ldr	r3, [r3, #0]
 8005fc4:	4a6c      	ldr	r2, [pc, #432]	; (8006178 <HAL_DMA_Abort_IT+0x3a8>)
 8005fc6:	4293      	cmp	r3, r2
 8005fc8:	d04a      	beq.n	8006060 <HAL_DMA_Abort_IT+0x290>
 8005fca:	687b      	ldr	r3, [r7, #4]
 8005fcc:	681b      	ldr	r3, [r3, #0]
 8005fce:	4a6b      	ldr	r2, [pc, #428]	; (800617c <HAL_DMA_Abort_IT+0x3ac>)
 8005fd0:	4293      	cmp	r3, r2
 8005fd2:	d045      	beq.n	8006060 <HAL_DMA_Abort_IT+0x290>
 8005fd4:	687b      	ldr	r3, [r7, #4]
 8005fd6:	681b      	ldr	r3, [r3, #0]
 8005fd8:	4a69      	ldr	r2, [pc, #420]	; (8006180 <HAL_DMA_Abort_IT+0x3b0>)
 8005fda:	4293      	cmp	r3, r2
 8005fdc:	d040      	beq.n	8006060 <HAL_DMA_Abort_IT+0x290>
 8005fde:	687b      	ldr	r3, [r7, #4]
 8005fe0:	681b      	ldr	r3, [r3, #0]
 8005fe2:	4a68      	ldr	r2, [pc, #416]	; (8006184 <HAL_DMA_Abort_IT+0x3b4>)
 8005fe4:	4293      	cmp	r3, r2
 8005fe6:	d03b      	beq.n	8006060 <HAL_DMA_Abort_IT+0x290>
 8005fe8:	687b      	ldr	r3, [r7, #4]
 8005fea:	681b      	ldr	r3, [r3, #0]
 8005fec:	4a66      	ldr	r2, [pc, #408]	; (8006188 <HAL_DMA_Abort_IT+0x3b8>)
 8005fee:	4293      	cmp	r3, r2
 8005ff0:	d036      	beq.n	8006060 <HAL_DMA_Abort_IT+0x290>
 8005ff2:	687b      	ldr	r3, [r7, #4]
 8005ff4:	681b      	ldr	r3, [r3, #0]
 8005ff6:	4a65      	ldr	r2, [pc, #404]	; (800618c <HAL_DMA_Abort_IT+0x3bc>)
 8005ff8:	4293      	cmp	r3, r2
 8005ffa:	d031      	beq.n	8006060 <HAL_DMA_Abort_IT+0x290>
 8005ffc:	687b      	ldr	r3, [r7, #4]
 8005ffe:	681b      	ldr	r3, [r3, #0]
 8006000:	4a63      	ldr	r2, [pc, #396]	; (8006190 <HAL_DMA_Abort_IT+0x3c0>)
 8006002:	4293      	cmp	r3, r2
 8006004:	d02c      	beq.n	8006060 <HAL_DMA_Abort_IT+0x290>
 8006006:	687b      	ldr	r3, [r7, #4]
 8006008:	681b      	ldr	r3, [r3, #0]
 800600a:	4a62      	ldr	r2, [pc, #392]	; (8006194 <HAL_DMA_Abort_IT+0x3c4>)
 800600c:	4293      	cmp	r3, r2
 800600e:	d027      	beq.n	8006060 <HAL_DMA_Abort_IT+0x290>
 8006010:	687b      	ldr	r3, [r7, #4]
 8006012:	681b      	ldr	r3, [r3, #0]
 8006014:	4a60      	ldr	r2, [pc, #384]	; (8006198 <HAL_DMA_Abort_IT+0x3c8>)
 8006016:	4293      	cmp	r3, r2
 8006018:	d022      	beq.n	8006060 <HAL_DMA_Abort_IT+0x290>
 800601a:	687b      	ldr	r3, [r7, #4]
 800601c:	681b      	ldr	r3, [r3, #0]
 800601e:	4a5f      	ldr	r2, [pc, #380]	; (800619c <HAL_DMA_Abort_IT+0x3cc>)
 8006020:	4293      	cmp	r3, r2
 8006022:	d01d      	beq.n	8006060 <HAL_DMA_Abort_IT+0x290>
 8006024:	687b      	ldr	r3, [r7, #4]
 8006026:	681b      	ldr	r3, [r3, #0]
 8006028:	4a5d      	ldr	r2, [pc, #372]	; (80061a0 <HAL_DMA_Abort_IT+0x3d0>)
 800602a:	4293      	cmp	r3, r2
 800602c:	d018      	beq.n	8006060 <HAL_DMA_Abort_IT+0x290>
 800602e:	687b      	ldr	r3, [r7, #4]
 8006030:	681b      	ldr	r3, [r3, #0]
 8006032:	4a5c      	ldr	r2, [pc, #368]	; (80061a4 <HAL_DMA_Abort_IT+0x3d4>)
 8006034:	4293      	cmp	r3, r2
 8006036:	d013      	beq.n	8006060 <HAL_DMA_Abort_IT+0x290>
 8006038:	687b      	ldr	r3, [r7, #4]
 800603a:	681b      	ldr	r3, [r3, #0]
 800603c:	4a5a      	ldr	r2, [pc, #360]	; (80061a8 <HAL_DMA_Abort_IT+0x3d8>)
 800603e:	4293      	cmp	r3, r2
 8006040:	d00e      	beq.n	8006060 <HAL_DMA_Abort_IT+0x290>
 8006042:	687b      	ldr	r3, [r7, #4]
 8006044:	681b      	ldr	r3, [r3, #0]
 8006046:	4a59      	ldr	r2, [pc, #356]	; (80061ac <HAL_DMA_Abort_IT+0x3dc>)
 8006048:	4293      	cmp	r3, r2
 800604a:	d009      	beq.n	8006060 <HAL_DMA_Abort_IT+0x290>
 800604c:	687b      	ldr	r3, [r7, #4]
 800604e:	681b      	ldr	r3, [r3, #0]
 8006050:	4a57      	ldr	r2, [pc, #348]	; (80061b0 <HAL_DMA_Abort_IT+0x3e0>)
 8006052:	4293      	cmp	r3, r2
 8006054:	d004      	beq.n	8006060 <HAL_DMA_Abort_IT+0x290>
 8006056:	687b      	ldr	r3, [r7, #4]
 8006058:	681b      	ldr	r3, [r3, #0]
 800605a:	4a56      	ldr	r2, [pc, #344]	; (80061b4 <HAL_DMA_Abort_IT+0x3e4>)
 800605c:	4293      	cmp	r3, r2
 800605e:	d108      	bne.n	8006072 <HAL_DMA_Abort_IT+0x2a2>
 8006060:	687b      	ldr	r3, [r7, #4]
 8006062:	681b      	ldr	r3, [r3, #0]
 8006064:	681a      	ldr	r2, [r3, #0]
 8006066:	687b      	ldr	r3, [r7, #4]
 8006068:	681b      	ldr	r3, [r3, #0]
 800606a:	f022 0201 	bic.w	r2, r2, #1
 800606e:	601a      	str	r2, [r3, #0]
 8006070:	e007      	b.n	8006082 <HAL_DMA_Abort_IT+0x2b2>
 8006072:	687b      	ldr	r3, [r7, #4]
 8006074:	681b      	ldr	r3, [r3, #0]
 8006076:	681a      	ldr	r2, [r3, #0]
 8006078:	687b      	ldr	r3, [r7, #4]
 800607a:	681b      	ldr	r3, [r3, #0]
 800607c:	f022 0201 	bic.w	r2, r2, #1
 8006080:	601a      	str	r2, [r3, #0]
 8006082:	687b      	ldr	r3, [r7, #4]
 8006084:	681b      	ldr	r3, [r3, #0]
 8006086:	4a3c      	ldr	r2, [pc, #240]	; (8006178 <HAL_DMA_Abort_IT+0x3a8>)
 8006088:	4293      	cmp	r3, r2
 800608a:	d072      	beq.n	8006172 <HAL_DMA_Abort_IT+0x3a2>
 800608c:	687b      	ldr	r3, [r7, #4]
 800608e:	681b      	ldr	r3, [r3, #0]
 8006090:	4a3a      	ldr	r2, [pc, #232]	; (800617c <HAL_DMA_Abort_IT+0x3ac>)
 8006092:	4293      	cmp	r3, r2
 8006094:	d06d      	beq.n	8006172 <HAL_DMA_Abort_IT+0x3a2>
 8006096:	687b      	ldr	r3, [r7, #4]
 8006098:	681b      	ldr	r3, [r3, #0]
 800609a:	4a39      	ldr	r2, [pc, #228]	; (8006180 <HAL_DMA_Abort_IT+0x3b0>)
 800609c:	4293      	cmp	r3, r2
 800609e:	d068      	beq.n	8006172 <HAL_DMA_Abort_IT+0x3a2>
 80060a0:	687b      	ldr	r3, [r7, #4]
 80060a2:	681b      	ldr	r3, [r3, #0]
 80060a4:	4a37      	ldr	r2, [pc, #220]	; (8006184 <HAL_DMA_Abort_IT+0x3b4>)
 80060a6:	4293      	cmp	r3, r2
 80060a8:	d063      	beq.n	8006172 <HAL_DMA_Abort_IT+0x3a2>
 80060aa:	687b      	ldr	r3, [r7, #4]
 80060ac:	681b      	ldr	r3, [r3, #0]
 80060ae:	4a36      	ldr	r2, [pc, #216]	; (8006188 <HAL_DMA_Abort_IT+0x3b8>)
 80060b0:	4293      	cmp	r3, r2
 80060b2:	d05e      	beq.n	8006172 <HAL_DMA_Abort_IT+0x3a2>
 80060b4:	687b      	ldr	r3, [r7, #4]
 80060b6:	681b      	ldr	r3, [r3, #0]
 80060b8:	4a34      	ldr	r2, [pc, #208]	; (800618c <HAL_DMA_Abort_IT+0x3bc>)
 80060ba:	4293      	cmp	r3, r2
 80060bc:	d059      	beq.n	8006172 <HAL_DMA_Abort_IT+0x3a2>
 80060be:	687b      	ldr	r3, [r7, #4]
 80060c0:	681b      	ldr	r3, [r3, #0]
 80060c2:	4a33      	ldr	r2, [pc, #204]	; (8006190 <HAL_DMA_Abort_IT+0x3c0>)
 80060c4:	4293      	cmp	r3, r2
 80060c6:	d054      	beq.n	8006172 <HAL_DMA_Abort_IT+0x3a2>
 80060c8:	687b      	ldr	r3, [r7, #4]
 80060ca:	681b      	ldr	r3, [r3, #0]
 80060cc:	4a31      	ldr	r2, [pc, #196]	; (8006194 <HAL_DMA_Abort_IT+0x3c4>)
 80060ce:	4293      	cmp	r3, r2
 80060d0:	d04f      	beq.n	8006172 <HAL_DMA_Abort_IT+0x3a2>
 80060d2:	687b      	ldr	r3, [r7, #4]
 80060d4:	681b      	ldr	r3, [r3, #0]
 80060d6:	4a30      	ldr	r2, [pc, #192]	; (8006198 <HAL_DMA_Abort_IT+0x3c8>)
 80060d8:	4293      	cmp	r3, r2
 80060da:	d04a      	beq.n	8006172 <HAL_DMA_Abort_IT+0x3a2>
 80060dc:	687b      	ldr	r3, [r7, #4]
 80060de:	681b      	ldr	r3, [r3, #0]
 80060e0:	4a2e      	ldr	r2, [pc, #184]	; (800619c <HAL_DMA_Abort_IT+0x3cc>)
 80060e2:	4293      	cmp	r3, r2
 80060e4:	d045      	beq.n	8006172 <HAL_DMA_Abort_IT+0x3a2>
 80060e6:	687b      	ldr	r3, [r7, #4]
 80060e8:	681b      	ldr	r3, [r3, #0]
 80060ea:	4a2d      	ldr	r2, [pc, #180]	; (80061a0 <HAL_DMA_Abort_IT+0x3d0>)
 80060ec:	4293      	cmp	r3, r2
 80060ee:	d040      	beq.n	8006172 <HAL_DMA_Abort_IT+0x3a2>
 80060f0:	687b      	ldr	r3, [r7, #4]
 80060f2:	681b      	ldr	r3, [r3, #0]
 80060f4:	4a2b      	ldr	r2, [pc, #172]	; (80061a4 <HAL_DMA_Abort_IT+0x3d4>)
 80060f6:	4293      	cmp	r3, r2
 80060f8:	d03b      	beq.n	8006172 <HAL_DMA_Abort_IT+0x3a2>
 80060fa:	687b      	ldr	r3, [r7, #4]
 80060fc:	681b      	ldr	r3, [r3, #0]
 80060fe:	4a2a      	ldr	r2, [pc, #168]	; (80061a8 <HAL_DMA_Abort_IT+0x3d8>)
 8006100:	4293      	cmp	r3, r2
 8006102:	d036      	beq.n	8006172 <HAL_DMA_Abort_IT+0x3a2>
 8006104:	687b      	ldr	r3, [r7, #4]
 8006106:	681b      	ldr	r3, [r3, #0]
 8006108:	4a28      	ldr	r2, [pc, #160]	; (80061ac <HAL_DMA_Abort_IT+0x3dc>)
 800610a:	4293      	cmp	r3, r2
 800610c:	d031      	beq.n	8006172 <HAL_DMA_Abort_IT+0x3a2>
 800610e:	687b      	ldr	r3, [r7, #4]
 8006110:	681b      	ldr	r3, [r3, #0]
 8006112:	4a27      	ldr	r2, [pc, #156]	; (80061b0 <HAL_DMA_Abort_IT+0x3e0>)
 8006114:	4293      	cmp	r3, r2
 8006116:	d02c      	beq.n	8006172 <HAL_DMA_Abort_IT+0x3a2>
 8006118:	687b      	ldr	r3, [r7, #4]
 800611a:	681b      	ldr	r3, [r3, #0]
 800611c:	4a25      	ldr	r2, [pc, #148]	; (80061b4 <HAL_DMA_Abort_IT+0x3e4>)
 800611e:	4293      	cmp	r3, r2
 8006120:	d027      	beq.n	8006172 <HAL_DMA_Abort_IT+0x3a2>
 8006122:	687b      	ldr	r3, [r7, #4]
 8006124:	681b      	ldr	r3, [r3, #0]
 8006126:	4a24      	ldr	r2, [pc, #144]	; (80061b8 <HAL_DMA_Abort_IT+0x3e8>)
 8006128:	4293      	cmp	r3, r2
 800612a:	d022      	beq.n	8006172 <HAL_DMA_Abort_IT+0x3a2>
 800612c:	687b      	ldr	r3, [r7, #4]
 800612e:	681b      	ldr	r3, [r3, #0]
 8006130:	4a22      	ldr	r2, [pc, #136]	; (80061bc <HAL_DMA_Abort_IT+0x3ec>)
 8006132:	4293      	cmp	r3, r2
 8006134:	d01d      	beq.n	8006172 <HAL_DMA_Abort_IT+0x3a2>
 8006136:	687b      	ldr	r3, [r7, #4]
 8006138:	681b      	ldr	r3, [r3, #0]
 800613a:	4a21      	ldr	r2, [pc, #132]	; (80061c0 <HAL_DMA_Abort_IT+0x3f0>)
 800613c:	4293      	cmp	r3, r2
 800613e:	d018      	beq.n	8006172 <HAL_DMA_Abort_IT+0x3a2>
 8006140:	687b      	ldr	r3, [r7, #4]
 8006142:	681b      	ldr	r3, [r3, #0]
 8006144:	4a1f      	ldr	r2, [pc, #124]	; (80061c4 <HAL_DMA_Abort_IT+0x3f4>)
 8006146:	4293      	cmp	r3, r2
 8006148:	d013      	beq.n	8006172 <HAL_DMA_Abort_IT+0x3a2>
 800614a:	687b      	ldr	r3, [r7, #4]
 800614c:	681b      	ldr	r3, [r3, #0]
 800614e:	4a1e      	ldr	r2, [pc, #120]	; (80061c8 <HAL_DMA_Abort_IT+0x3f8>)
 8006150:	4293      	cmp	r3, r2
 8006152:	d00e      	beq.n	8006172 <HAL_DMA_Abort_IT+0x3a2>
 8006154:	687b      	ldr	r3, [r7, #4]
 8006156:	681b      	ldr	r3, [r3, #0]
 8006158:	4a1c      	ldr	r2, [pc, #112]	; (80061cc <HAL_DMA_Abort_IT+0x3fc>)
 800615a:	4293      	cmp	r3, r2
 800615c:	d009      	beq.n	8006172 <HAL_DMA_Abort_IT+0x3a2>
 800615e:	687b      	ldr	r3, [r7, #4]
 8006160:	681b      	ldr	r3, [r3, #0]
 8006162:	4a1b      	ldr	r2, [pc, #108]	; (80061d0 <HAL_DMA_Abort_IT+0x400>)
 8006164:	4293      	cmp	r3, r2
 8006166:	d004      	beq.n	8006172 <HAL_DMA_Abort_IT+0x3a2>
 8006168:	687b      	ldr	r3, [r7, #4]
 800616a:	681b      	ldr	r3, [r3, #0]
 800616c:	4a19      	ldr	r2, [pc, #100]	; (80061d4 <HAL_DMA_Abort_IT+0x404>)
 800616e:	4293      	cmp	r3, r2
 8006170:	d132      	bne.n	80061d8 <HAL_DMA_Abort_IT+0x408>
 8006172:	2301      	movs	r3, #1
 8006174:	e031      	b.n	80061da <HAL_DMA_Abort_IT+0x40a>
 8006176:	bf00      	nop
 8006178:	40020010 	.word	0x40020010
 800617c:	40020028 	.word	0x40020028
 8006180:	40020040 	.word	0x40020040
 8006184:	40020058 	.word	0x40020058
 8006188:	40020070 	.word	0x40020070
 800618c:	40020088 	.word	0x40020088
 8006190:	400200a0 	.word	0x400200a0
 8006194:	400200b8 	.word	0x400200b8
 8006198:	40020410 	.word	0x40020410
 800619c:	40020428 	.word	0x40020428
 80061a0:	40020440 	.word	0x40020440
 80061a4:	40020458 	.word	0x40020458
 80061a8:	40020470 	.word	0x40020470
 80061ac:	40020488 	.word	0x40020488
 80061b0:	400204a0 	.word	0x400204a0
 80061b4:	400204b8 	.word	0x400204b8
 80061b8:	58025408 	.word	0x58025408
 80061bc:	5802541c 	.word	0x5802541c
 80061c0:	58025430 	.word	0x58025430
 80061c4:	58025444 	.word	0x58025444
 80061c8:	58025458 	.word	0x58025458
 80061cc:	5802546c 	.word	0x5802546c
 80061d0:	58025480 	.word	0x58025480
 80061d4:	58025494 	.word	0x58025494
 80061d8:	2300      	movs	r3, #0
 80061da:	2b00      	cmp	r3, #0
 80061dc:	d028      	beq.n	8006230 <HAL_DMA_Abort_IT+0x460>
 80061de:	687b      	ldr	r3, [r7, #4]
 80061e0:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80061e2:	681a      	ldr	r2, [r3, #0]
 80061e4:	687b      	ldr	r3, [r7, #4]
 80061e6:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80061e8:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80061ec:	601a      	str	r2, [r3, #0]
 80061ee:	687b      	ldr	r3, [r7, #4]
 80061f0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80061f2:	60fb      	str	r3, [r7, #12]
 80061f4:	687b      	ldr	r3, [r7, #4]
 80061f6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80061f8:	f003 031f 	and.w	r3, r3, #31
 80061fc:	2201      	movs	r2, #1
 80061fe:	409a      	lsls	r2, r3
 8006200:	68fb      	ldr	r3, [r7, #12]
 8006202:	605a      	str	r2, [r3, #4]
 8006204:	687b      	ldr	r3, [r7, #4]
 8006206:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8006208:	687a      	ldr	r2, [r7, #4]
 800620a:	6e92      	ldr	r2, [r2, #104]	; 0x68
 800620c:	605a      	str	r2, [r3, #4]
 800620e:	687b      	ldr	r3, [r7, #4]
 8006210:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8006212:	2b00      	cmp	r3, #0
 8006214:	d00c      	beq.n	8006230 <HAL_DMA_Abort_IT+0x460>
 8006216:	687b      	ldr	r3, [r7, #4]
 8006218:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800621a:	681a      	ldr	r2, [r3, #0]
 800621c:	687b      	ldr	r3, [r7, #4]
 800621e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8006220:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8006224:	601a      	str	r2, [r3, #0]
 8006226:	687b      	ldr	r3, [r7, #4]
 8006228:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800622a:	687a      	ldr	r2, [r7, #4]
 800622c:	6f52      	ldr	r2, [r2, #116]	; 0x74
 800622e:	605a      	str	r2, [r3, #4]
 8006230:	687b      	ldr	r3, [r7, #4]
 8006232:	2201      	movs	r2, #1
 8006234:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8006238:	687b      	ldr	r3, [r7, #4]
 800623a:	2200      	movs	r2, #0
 800623c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006240:	687b      	ldr	r3, [r7, #4]
 8006242:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8006244:	2b00      	cmp	r3, #0
 8006246:	d003      	beq.n	8006250 <HAL_DMA_Abort_IT+0x480>
 8006248:	687b      	ldr	r3, [r7, #4]
 800624a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800624c:	6878      	ldr	r0, [r7, #4]
 800624e:	4798      	blx	r3
 8006250:	2300      	movs	r3, #0
 8006252:	4618      	mov	r0, r3
 8006254:	3710      	adds	r7, #16
 8006256:	46bd      	mov	sp, r7
 8006258:	bd80      	pop	{r7, pc}
 800625a:	bf00      	nop

0800625c <HAL_DMA_IRQHandler>:
 800625c:	b580      	push	{r7, lr}
 800625e:	b08a      	sub	sp, #40	; 0x28
 8006260:	af00      	add	r7, sp, #0
 8006262:	6078      	str	r0, [r7, #4]
 8006264:	2300      	movs	r3, #0
 8006266:	60fb      	str	r3, [r7, #12]
 8006268:	4b67      	ldr	r3, [pc, #412]	; (8006408 <HAL_DMA_IRQHandler+0x1ac>)
 800626a:	681b      	ldr	r3, [r3, #0]
 800626c:	4a67      	ldr	r2, [pc, #412]	; (800640c <HAL_DMA_IRQHandler+0x1b0>)
 800626e:	fba2 2303 	umull	r2, r3, r2, r3
 8006272:	0a9b      	lsrs	r3, r3, #10
 8006274:	627b      	str	r3, [r7, #36]	; 0x24
 8006276:	687b      	ldr	r3, [r7, #4]
 8006278:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800627a:	623b      	str	r3, [r7, #32]
 800627c:	687b      	ldr	r3, [r7, #4]
 800627e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8006280:	61fb      	str	r3, [r7, #28]
 8006282:	6a3b      	ldr	r3, [r7, #32]
 8006284:	681b      	ldr	r3, [r3, #0]
 8006286:	61bb      	str	r3, [r7, #24]
 8006288:	69fb      	ldr	r3, [r7, #28]
 800628a:	681b      	ldr	r3, [r3, #0]
 800628c:	617b      	str	r3, [r7, #20]
 800628e:	687b      	ldr	r3, [r7, #4]
 8006290:	681b      	ldr	r3, [r3, #0]
 8006292:	4a5f      	ldr	r2, [pc, #380]	; (8006410 <HAL_DMA_IRQHandler+0x1b4>)
 8006294:	4293      	cmp	r3, r2
 8006296:	d04a      	beq.n	800632e <HAL_DMA_IRQHandler+0xd2>
 8006298:	687b      	ldr	r3, [r7, #4]
 800629a:	681b      	ldr	r3, [r3, #0]
 800629c:	4a5d      	ldr	r2, [pc, #372]	; (8006414 <HAL_DMA_IRQHandler+0x1b8>)
 800629e:	4293      	cmp	r3, r2
 80062a0:	d045      	beq.n	800632e <HAL_DMA_IRQHandler+0xd2>
 80062a2:	687b      	ldr	r3, [r7, #4]
 80062a4:	681b      	ldr	r3, [r3, #0]
 80062a6:	4a5c      	ldr	r2, [pc, #368]	; (8006418 <HAL_DMA_IRQHandler+0x1bc>)
 80062a8:	4293      	cmp	r3, r2
 80062aa:	d040      	beq.n	800632e <HAL_DMA_IRQHandler+0xd2>
 80062ac:	687b      	ldr	r3, [r7, #4]
 80062ae:	681b      	ldr	r3, [r3, #0]
 80062b0:	4a5a      	ldr	r2, [pc, #360]	; (800641c <HAL_DMA_IRQHandler+0x1c0>)
 80062b2:	4293      	cmp	r3, r2
 80062b4:	d03b      	beq.n	800632e <HAL_DMA_IRQHandler+0xd2>
 80062b6:	687b      	ldr	r3, [r7, #4]
 80062b8:	681b      	ldr	r3, [r3, #0]
 80062ba:	4a59      	ldr	r2, [pc, #356]	; (8006420 <HAL_DMA_IRQHandler+0x1c4>)
 80062bc:	4293      	cmp	r3, r2
 80062be:	d036      	beq.n	800632e <HAL_DMA_IRQHandler+0xd2>
 80062c0:	687b      	ldr	r3, [r7, #4]
 80062c2:	681b      	ldr	r3, [r3, #0]
 80062c4:	4a57      	ldr	r2, [pc, #348]	; (8006424 <HAL_DMA_IRQHandler+0x1c8>)
 80062c6:	4293      	cmp	r3, r2
 80062c8:	d031      	beq.n	800632e <HAL_DMA_IRQHandler+0xd2>
 80062ca:	687b      	ldr	r3, [r7, #4]
 80062cc:	681b      	ldr	r3, [r3, #0]
 80062ce:	4a56      	ldr	r2, [pc, #344]	; (8006428 <HAL_DMA_IRQHandler+0x1cc>)
 80062d0:	4293      	cmp	r3, r2
 80062d2:	d02c      	beq.n	800632e <HAL_DMA_IRQHandler+0xd2>
 80062d4:	687b      	ldr	r3, [r7, #4]
 80062d6:	681b      	ldr	r3, [r3, #0]
 80062d8:	4a54      	ldr	r2, [pc, #336]	; (800642c <HAL_DMA_IRQHandler+0x1d0>)
 80062da:	4293      	cmp	r3, r2
 80062dc:	d027      	beq.n	800632e <HAL_DMA_IRQHandler+0xd2>
 80062de:	687b      	ldr	r3, [r7, #4]
 80062e0:	681b      	ldr	r3, [r3, #0]
 80062e2:	4a53      	ldr	r2, [pc, #332]	; (8006430 <HAL_DMA_IRQHandler+0x1d4>)
 80062e4:	4293      	cmp	r3, r2
 80062e6:	d022      	beq.n	800632e <HAL_DMA_IRQHandler+0xd2>
 80062e8:	687b      	ldr	r3, [r7, #4]
 80062ea:	681b      	ldr	r3, [r3, #0]
 80062ec:	4a51      	ldr	r2, [pc, #324]	; (8006434 <HAL_DMA_IRQHandler+0x1d8>)
 80062ee:	4293      	cmp	r3, r2
 80062f0:	d01d      	beq.n	800632e <HAL_DMA_IRQHandler+0xd2>
 80062f2:	687b      	ldr	r3, [r7, #4]
 80062f4:	681b      	ldr	r3, [r3, #0]
 80062f6:	4a50      	ldr	r2, [pc, #320]	; (8006438 <HAL_DMA_IRQHandler+0x1dc>)
 80062f8:	4293      	cmp	r3, r2
 80062fa:	d018      	beq.n	800632e <HAL_DMA_IRQHandler+0xd2>
 80062fc:	687b      	ldr	r3, [r7, #4]
 80062fe:	681b      	ldr	r3, [r3, #0]
 8006300:	4a4e      	ldr	r2, [pc, #312]	; (800643c <HAL_DMA_IRQHandler+0x1e0>)
 8006302:	4293      	cmp	r3, r2
 8006304:	d013      	beq.n	800632e <HAL_DMA_IRQHandler+0xd2>
 8006306:	687b      	ldr	r3, [r7, #4]
 8006308:	681b      	ldr	r3, [r3, #0]
 800630a:	4a4d      	ldr	r2, [pc, #308]	; (8006440 <HAL_DMA_IRQHandler+0x1e4>)
 800630c:	4293      	cmp	r3, r2
 800630e:	d00e      	beq.n	800632e <HAL_DMA_IRQHandler+0xd2>
 8006310:	687b      	ldr	r3, [r7, #4]
 8006312:	681b      	ldr	r3, [r3, #0]
 8006314:	4a4b      	ldr	r2, [pc, #300]	; (8006444 <HAL_DMA_IRQHandler+0x1e8>)
 8006316:	4293      	cmp	r3, r2
 8006318:	d009      	beq.n	800632e <HAL_DMA_IRQHandler+0xd2>
 800631a:	687b      	ldr	r3, [r7, #4]
 800631c:	681b      	ldr	r3, [r3, #0]
 800631e:	4a4a      	ldr	r2, [pc, #296]	; (8006448 <HAL_DMA_IRQHandler+0x1ec>)
 8006320:	4293      	cmp	r3, r2
 8006322:	d004      	beq.n	800632e <HAL_DMA_IRQHandler+0xd2>
 8006324:	687b      	ldr	r3, [r7, #4]
 8006326:	681b      	ldr	r3, [r3, #0]
 8006328:	4a48      	ldr	r2, [pc, #288]	; (800644c <HAL_DMA_IRQHandler+0x1f0>)
 800632a:	4293      	cmp	r3, r2
 800632c:	d101      	bne.n	8006332 <HAL_DMA_IRQHandler+0xd6>
 800632e:	2301      	movs	r3, #1
 8006330:	e000      	b.n	8006334 <HAL_DMA_IRQHandler+0xd8>
 8006332:	2300      	movs	r3, #0
 8006334:	2b00      	cmp	r3, #0
 8006336:	f000 842b 	beq.w	8006b90 <HAL_DMA_IRQHandler+0x934>
 800633a:	687b      	ldr	r3, [r7, #4]
 800633c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800633e:	f003 031f 	and.w	r3, r3, #31
 8006342:	2208      	movs	r2, #8
 8006344:	409a      	lsls	r2, r3
 8006346:	69bb      	ldr	r3, [r7, #24]
 8006348:	4013      	ands	r3, r2
 800634a:	2b00      	cmp	r3, #0
 800634c:	f000 80a2 	beq.w	8006494 <HAL_DMA_IRQHandler+0x238>
 8006350:	687b      	ldr	r3, [r7, #4]
 8006352:	681b      	ldr	r3, [r3, #0]
 8006354:	4a2e      	ldr	r2, [pc, #184]	; (8006410 <HAL_DMA_IRQHandler+0x1b4>)
 8006356:	4293      	cmp	r3, r2
 8006358:	d04a      	beq.n	80063f0 <HAL_DMA_IRQHandler+0x194>
 800635a:	687b      	ldr	r3, [r7, #4]
 800635c:	681b      	ldr	r3, [r3, #0]
 800635e:	4a2d      	ldr	r2, [pc, #180]	; (8006414 <HAL_DMA_IRQHandler+0x1b8>)
 8006360:	4293      	cmp	r3, r2
 8006362:	d045      	beq.n	80063f0 <HAL_DMA_IRQHandler+0x194>
 8006364:	687b      	ldr	r3, [r7, #4]
 8006366:	681b      	ldr	r3, [r3, #0]
 8006368:	4a2b      	ldr	r2, [pc, #172]	; (8006418 <HAL_DMA_IRQHandler+0x1bc>)
 800636a:	4293      	cmp	r3, r2
 800636c:	d040      	beq.n	80063f0 <HAL_DMA_IRQHandler+0x194>
 800636e:	687b      	ldr	r3, [r7, #4]
 8006370:	681b      	ldr	r3, [r3, #0]
 8006372:	4a2a      	ldr	r2, [pc, #168]	; (800641c <HAL_DMA_IRQHandler+0x1c0>)
 8006374:	4293      	cmp	r3, r2
 8006376:	d03b      	beq.n	80063f0 <HAL_DMA_IRQHandler+0x194>
 8006378:	687b      	ldr	r3, [r7, #4]
 800637a:	681b      	ldr	r3, [r3, #0]
 800637c:	4a28      	ldr	r2, [pc, #160]	; (8006420 <HAL_DMA_IRQHandler+0x1c4>)
 800637e:	4293      	cmp	r3, r2
 8006380:	d036      	beq.n	80063f0 <HAL_DMA_IRQHandler+0x194>
 8006382:	687b      	ldr	r3, [r7, #4]
 8006384:	681b      	ldr	r3, [r3, #0]
 8006386:	4a27      	ldr	r2, [pc, #156]	; (8006424 <HAL_DMA_IRQHandler+0x1c8>)
 8006388:	4293      	cmp	r3, r2
 800638a:	d031      	beq.n	80063f0 <HAL_DMA_IRQHandler+0x194>
 800638c:	687b      	ldr	r3, [r7, #4]
 800638e:	681b      	ldr	r3, [r3, #0]
 8006390:	4a25      	ldr	r2, [pc, #148]	; (8006428 <HAL_DMA_IRQHandler+0x1cc>)
 8006392:	4293      	cmp	r3, r2
 8006394:	d02c      	beq.n	80063f0 <HAL_DMA_IRQHandler+0x194>
 8006396:	687b      	ldr	r3, [r7, #4]
 8006398:	681b      	ldr	r3, [r3, #0]
 800639a:	4a24      	ldr	r2, [pc, #144]	; (800642c <HAL_DMA_IRQHandler+0x1d0>)
 800639c:	4293      	cmp	r3, r2
 800639e:	d027      	beq.n	80063f0 <HAL_DMA_IRQHandler+0x194>
 80063a0:	687b      	ldr	r3, [r7, #4]
 80063a2:	681b      	ldr	r3, [r3, #0]
 80063a4:	4a22      	ldr	r2, [pc, #136]	; (8006430 <HAL_DMA_IRQHandler+0x1d4>)
 80063a6:	4293      	cmp	r3, r2
 80063a8:	d022      	beq.n	80063f0 <HAL_DMA_IRQHandler+0x194>
 80063aa:	687b      	ldr	r3, [r7, #4]
 80063ac:	681b      	ldr	r3, [r3, #0]
 80063ae:	4a21      	ldr	r2, [pc, #132]	; (8006434 <HAL_DMA_IRQHandler+0x1d8>)
 80063b0:	4293      	cmp	r3, r2
 80063b2:	d01d      	beq.n	80063f0 <HAL_DMA_IRQHandler+0x194>
 80063b4:	687b      	ldr	r3, [r7, #4]
 80063b6:	681b      	ldr	r3, [r3, #0]
 80063b8:	4a1f      	ldr	r2, [pc, #124]	; (8006438 <HAL_DMA_IRQHandler+0x1dc>)
 80063ba:	4293      	cmp	r3, r2
 80063bc:	d018      	beq.n	80063f0 <HAL_DMA_IRQHandler+0x194>
 80063be:	687b      	ldr	r3, [r7, #4]
 80063c0:	681b      	ldr	r3, [r3, #0]
 80063c2:	4a1e      	ldr	r2, [pc, #120]	; (800643c <HAL_DMA_IRQHandler+0x1e0>)
 80063c4:	4293      	cmp	r3, r2
 80063c6:	d013      	beq.n	80063f0 <HAL_DMA_IRQHandler+0x194>
 80063c8:	687b      	ldr	r3, [r7, #4]
 80063ca:	681b      	ldr	r3, [r3, #0]
 80063cc:	4a1c      	ldr	r2, [pc, #112]	; (8006440 <HAL_DMA_IRQHandler+0x1e4>)
 80063ce:	4293      	cmp	r3, r2
 80063d0:	d00e      	beq.n	80063f0 <HAL_DMA_IRQHandler+0x194>
 80063d2:	687b      	ldr	r3, [r7, #4]
 80063d4:	681b      	ldr	r3, [r3, #0]
 80063d6:	4a1b      	ldr	r2, [pc, #108]	; (8006444 <HAL_DMA_IRQHandler+0x1e8>)
 80063d8:	4293      	cmp	r3, r2
 80063da:	d009      	beq.n	80063f0 <HAL_DMA_IRQHandler+0x194>
 80063dc:	687b      	ldr	r3, [r7, #4]
 80063de:	681b      	ldr	r3, [r3, #0]
 80063e0:	4a19      	ldr	r2, [pc, #100]	; (8006448 <HAL_DMA_IRQHandler+0x1ec>)
 80063e2:	4293      	cmp	r3, r2
 80063e4:	d004      	beq.n	80063f0 <HAL_DMA_IRQHandler+0x194>
 80063e6:	687b      	ldr	r3, [r7, #4]
 80063e8:	681b      	ldr	r3, [r3, #0]
 80063ea:	4a18      	ldr	r2, [pc, #96]	; (800644c <HAL_DMA_IRQHandler+0x1f0>)
 80063ec:	4293      	cmp	r3, r2
 80063ee:	d12f      	bne.n	8006450 <HAL_DMA_IRQHandler+0x1f4>
 80063f0:	687b      	ldr	r3, [r7, #4]
 80063f2:	681b      	ldr	r3, [r3, #0]
 80063f4:	681b      	ldr	r3, [r3, #0]
 80063f6:	f003 0304 	and.w	r3, r3, #4
 80063fa:	2b00      	cmp	r3, #0
 80063fc:	bf14      	ite	ne
 80063fe:	2301      	movne	r3, #1
 8006400:	2300      	moveq	r3, #0
 8006402:	b2db      	uxtb	r3, r3
 8006404:	e02e      	b.n	8006464 <HAL_DMA_IRQHandler+0x208>
 8006406:	bf00      	nop
 8006408:	24000004 	.word	0x24000004
 800640c:	1b4e81b5 	.word	0x1b4e81b5
 8006410:	40020010 	.word	0x40020010
 8006414:	40020028 	.word	0x40020028
 8006418:	40020040 	.word	0x40020040
 800641c:	40020058 	.word	0x40020058
 8006420:	40020070 	.word	0x40020070
 8006424:	40020088 	.word	0x40020088
 8006428:	400200a0 	.word	0x400200a0
 800642c:	400200b8 	.word	0x400200b8
 8006430:	40020410 	.word	0x40020410
 8006434:	40020428 	.word	0x40020428
 8006438:	40020440 	.word	0x40020440
 800643c:	40020458 	.word	0x40020458
 8006440:	40020470 	.word	0x40020470
 8006444:	40020488 	.word	0x40020488
 8006448:	400204a0 	.word	0x400204a0
 800644c:	400204b8 	.word	0x400204b8
 8006450:	687b      	ldr	r3, [r7, #4]
 8006452:	681b      	ldr	r3, [r3, #0]
 8006454:	681b      	ldr	r3, [r3, #0]
 8006456:	f003 0308 	and.w	r3, r3, #8
 800645a:	2b00      	cmp	r3, #0
 800645c:	bf14      	ite	ne
 800645e:	2301      	movne	r3, #1
 8006460:	2300      	moveq	r3, #0
 8006462:	b2db      	uxtb	r3, r3
 8006464:	2b00      	cmp	r3, #0
 8006466:	d015      	beq.n	8006494 <HAL_DMA_IRQHandler+0x238>
 8006468:	687b      	ldr	r3, [r7, #4]
 800646a:	681b      	ldr	r3, [r3, #0]
 800646c:	681a      	ldr	r2, [r3, #0]
 800646e:	687b      	ldr	r3, [r7, #4]
 8006470:	681b      	ldr	r3, [r3, #0]
 8006472:	f022 0204 	bic.w	r2, r2, #4
 8006476:	601a      	str	r2, [r3, #0]
 8006478:	687b      	ldr	r3, [r7, #4]
 800647a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800647c:	f003 031f 	and.w	r3, r3, #31
 8006480:	2208      	movs	r2, #8
 8006482:	409a      	lsls	r2, r3
 8006484:	6a3b      	ldr	r3, [r7, #32]
 8006486:	609a      	str	r2, [r3, #8]
 8006488:	687b      	ldr	r3, [r7, #4]
 800648a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800648c:	f043 0201 	orr.w	r2, r3, #1
 8006490:	687b      	ldr	r3, [r7, #4]
 8006492:	655a      	str	r2, [r3, #84]	; 0x54
 8006494:	687b      	ldr	r3, [r7, #4]
 8006496:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8006498:	f003 031f 	and.w	r3, r3, #31
 800649c:	69ba      	ldr	r2, [r7, #24]
 800649e:	fa22 f303 	lsr.w	r3, r2, r3
 80064a2:	f003 0301 	and.w	r3, r3, #1
 80064a6:	2b00      	cmp	r3, #0
 80064a8:	d06e      	beq.n	8006588 <HAL_DMA_IRQHandler+0x32c>
 80064aa:	687b      	ldr	r3, [r7, #4]
 80064ac:	681b      	ldr	r3, [r3, #0]
 80064ae:	4a69      	ldr	r2, [pc, #420]	; (8006654 <HAL_DMA_IRQHandler+0x3f8>)
 80064b0:	4293      	cmp	r3, r2
 80064b2:	d04a      	beq.n	800654a <HAL_DMA_IRQHandler+0x2ee>
 80064b4:	687b      	ldr	r3, [r7, #4]
 80064b6:	681b      	ldr	r3, [r3, #0]
 80064b8:	4a67      	ldr	r2, [pc, #412]	; (8006658 <HAL_DMA_IRQHandler+0x3fc>)
 80064ba:	4293      	cmp	r3, r2
 80064bc:	d045      	beq.n	800654a <HAL_DMA_IRQHandler+0x2ee>
 80064be:	687b      	ldr	r3, [r7, #4]
 80064c0:	681b      	ldr	r3, [r3, #0]
 80064c2:	4a66      	ldr	r2, [pc, #408]	; (800665c <HAL_DMA_IRQHandler+0x400>)
 80064c4:	4293      	cmp	r3, r2
 80064c6:	d040      	beq.n	800654a <HAL_DMA_IRQHandler+0x2ee>
 80064c8:	687b      	ldr	r3, [r7, #4]
 80064ca:	681b      	ldr	r3, [r3, #0]
 80064cc:	4a64      	ldr	r2, [pc, #400]	; (8006660 <HAL_DMA_IRQHandler+0x404>)
 80064ce:	4293      	cmp	r3, r2
 80064d0:	d03b      	beq.n	800654a <HAL_DMA_IRQHandler+0x2ee>
 80064d2:	687b      	ldr	r3, [r7, #4]
 80064d4:	681b      	ldr	r3, [r3, #0]
 80064d6:	4a63      	ldr	r2, [pc, #396]	; (8006664 <HAL_DMA_IRQHandler+0x408>)
 80064d8:	4293      	cmp	r3, r2
 80064da:	d036      	beq.n	800654a <HAL_DMA_IRQHandler+0x2ee>
 80064dc:	687b      	ldr	r3, [r7, #4]
 80064de:	681b      	ldr	r3, [r3, #0]
 80064e0:	4a61      	ldr	r2, [pc, #388]	; (8006668 <HAL_DMA_IRQHandler+0x40c>)
 80064e2:	4293      	cmp	r3, r2
 80064e4:	d031      	beq.n	800654a <HAL_DMA_IRQHandler+0x2ee>
 80064e6:	687b      	ldr	r3, [r7, #4]
 80064e8:	681b      	ldr	r3, [r3, #0]
 80064ea:	4a60      	ldr	r2, [pc, #384]	; (800666c <HAL_DMA_IRQHandler+0x410>)
 80064ec:	4293      	cmp	r3, r2
 80064ee:	d02c      	beq.n	800654a <HAL_DMA_IRQHandler+0x2ee>
 80064f0:	687b      	ldr	r3, [r7, #4]
 80064f2:	681b      	ldr	r3, [r3, #0]
 80064f4:	4a5e      	ldr	r2, [pc, #376]	; (8006670 <HAL_DMA_IRQHandler+0x414>)
 80064f6:	4293      	cmp	r3, r2
 80064f8:	d027      	beq.n	800654a <HAL_DMA_IRQHandler+0x2ee>
 80064fa:	687b      	ldr	r3, [r7, #4]
 80064fc:	681b      	ldr	r3, [r3, #0]
 80064fe:	4a5d      	ldr	r2, [pc, #372]	; (8006674 <HAL_DMA_IRQHandler+0x418>)
 8006500:	4293      	cmp	r3, r2
 8006502:	d022      	beq.n	800654a <HAL_DMA_IRQHandler+0x2ee>
 8006504:	687b      	ldr	r3, [r7, #4]
 8006506:	681b      	ldr	r3, [r3, #0]
 8006508:	4a5b      	ldr	r2, [pc, #364]	; (8006678 <HAL_DMA_IRQHandler+0x41c>)
 800650a:	4293      	cmp	r3, r2
 800650c:	d01d      	beq.n	800654a <HAL_DMA_IRQHandler+0x2ee>
 800650e:	687b      	ldr	r3, [r7, #4]
 8006510:	681b      	ldr	r3, [r3, #0]
 8006512:	4a5a      	ldr	r2, [pc, #360]	; (800667c <HAL_DMA_IRQHandler+0x420>)
 8006514:	4293      	cmp	r3, r2
 8006516:	d018      	beq.n	800654a <HAL_DMA_IRQHandler+0x2ee>
 8006518:	687b      	ldr	r3, [r7, #4]
 800651a:	681b      	ldr	r3, [r3, #0]
 800651c:	4a58      	ldr	r2, [pc, #352]	; (8006680 <HAL_DMA_IRQHandler+0x424>)
 800651e:	4293      	cmp	r3, r2
 8006520:	d013      	beq.n	800654a <HAL_DMA_IRQHandler+0x2ee>
 8006522:	687b      	ldr	r3, [r7, #4]
 8006524:	681b      	ldr	r3, [r3, #0]
 8006526:	4a57      	ldr	r2, [pc, #348]	; (8006684 <HAL_DMA_IRQHandler+0x428>)
 8006528:	4293      	cmp	r3, r2
 800652a:	d00e      	beq.n	800654a <HAL_DMA_IRQHandler+0x2ee>
 800652c:	687b      	ldr	r3, [r7, #4]
 800652e:	681b      	ldr	r3, [r3, #0]
 8006530:	4a55      	ldr	r2, [pc, #340]	; (8006688 <HAL_DMA_IRQHandler+0x42c>)
 8006532:	4293      	cmp	r3, r2
 8006534:	d009      	beq.n	800654a <HAL_DMA_IRQHandler+0x2ee>
 8006536:	687b      	ldr	r3, [r7, #4]
 8006538:	681b      	ldr	r3, [r3, #0]
 800653a:	4a54      	ldr	r2, [pc, #336]	; (800668c <HAL_DMA_IRQHandler+0x430>)
 800653c:	4293      	cmp	r3, r2
 800653e:	d004      	beq.n	800654a <HAL_DMA_IRQHandler+0x2ee>
 8006540:	687b      	ldr	r3, [r7, #4]
 8006542:	681b      	ldr	r3, [r3, #0]
 8006544:	4a52      	ldr	r2, [pc, #328]	; (8006690 <HAL_DMA_IRQHandler+0x434>)
 8006546:	4293      	cmp	r3, r2
 8006548:	d10a      	bne.n	8006560 <HAL_DMA_IRQHandler+0x304>
 800654a:	687b      	ldr	r3, [r7, #4]
 800654c:	681b      	ldr	r3, [r3, #0]
 800654e:	695b      	ldr	r3, [r3, #20]
 8006550:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8006554:	2b00      	cmp	r3, #0
 8006556:	bf14      	ite	ne
 8006558:	2301      	movne	r3, #1
 800655a:	2300      	moveq	r3, #0
 800655c:	b2db      	uxtb	r3, r3
 800655e:	e003      	b.n	8006568 <HAL_DMA_IRQHandler+0x30c>
 8006560:	687b      	ldr	r3, [r7, #4]
 8006562:	681b      	ldr	r3, [r3, #0]
 8006564:	681b      	ldr	r3, [r3, #0]
 8006566:	2300      	movs	r3, #0
 8006568:	2b00      	cmp	r3, #0
 800656a:	d00d      	beq.n	8006588 <HAL_DMA_IRQHandler+0x32c>
 800656c:	687b      	ldr	r3, [r7, #4]
 800656e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8006570:	f003 031f 	and.w	r3, r3, #31
 8006574:	2201      	movs	r2, #1
 8006576:	409a      	lsls	r2, r3
 8006578:	6a3b      	ldr	r3, [r7, #32]
 800657a:	609a      	str	r2, [r3, #8]
 800657c:	687b      	ldr	r3, [r7, #4]
 800657e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006580:	f043 0202 	orr.w	r2, r3, #2
 8006584:	687b      	ldr	r3, [r7, #4]
 8006586:	655a      	str	r2, [r3, #84]	; 0x54
 8006588:	687b      	ldr	r3, [r7, #4]
 800658a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800658c:	f003 031f 	and.w	r3, r3, #31
 8006590:	2204      	movs	r2, #4
 8006592:	409a      	lsls	r2, r3
 8006594:	69bb      	ldr	r3, [r7, #24]
 8006596:	4013      	ands	r3, r2
 8006598:	2b00      	cmp	r3, #0
 800659a:	f000 808f 	beq.w	80066bc <HAL_DMA_IRQHandler+0x460>
 800659e:	687b      	ldr	r3, [r7, #4]
 80065a0:	681b      	ldr	r3, [r3, #0]
 80065a2:	4a2c      	ldr	r2, [pc, #176]	; (8006654 <HAL_DMA_IRQHandler+0x3f8>)
 80065a4:	4293      	cmp	r3, r2
 80065a6:	d04a      	beq.n	800663e <HAL_DMA_IRQHandler+0x3e2>
 80065a8:	687b      	ldr	r3, [r7, #4]
 80065aa:	681b      	ldr	r3, [r3, #0]
 80065ac:	4a2a      	ldr	r2, [pc, #168]	; (8006658 <HAL_DMA_IRQHandler+0x3fc>)
 80065ae:	4293      	cmp	r3, r2
 80065b0:	d045      	beq.n	800663e <HAL_DMA_IRQHandler+0x3e2>
 80065b2:	687b      	ldr	r3, [r7, #4]
 80065b4:	681b      	ldr	r3, [r3, #0]
 80065b6:	4a29      	ldr	r2, [pc, #164]	; (800665c <HAL_DMA_IRQHandler+0x400>)
 80065b8:	4293      	cmp	r3, r2
 80065ba:	d040      	beq.n	800663e <HAL_DMA_IRQHandler+0x3e2>
 80065bc:	687b      	ldr	r3, [r7, #4]
 80065be:	681b      	ldr	r3, [r3, #0]
 80065c0:	4a27      	ldr	r2, [pc, #156]	; (8006660 <HAL_DMA_IRQHandler+0x404>)
 80065c2:	4293      	cmp	r3, r2
 80065c4:	d03b      	beq.n	800663e <HAL_DMA_IRQHandler+0x3e2>
 80065c6:	687b      	ldr	r3, [r7, #4]
 80065c8:	681b      	ldr	r3, [r3, #0]
 80065ca:	4a26      	ldr	r2, [pc, #152]	; (8006664 <HAL_DMA_IRQHandler+0x408>)
 80065cc:	4293      	cmp	r3, r2
 80065ce:	d036      	beq.n	800663e <HAL_DMA_IRQHandler+0x3e2>
 80065d0:	687b      	ldr	r3, [r7, #4]
 80065d2:	681b      	ldr	r3, [r3, #0]
 80065d4:	4a24      	ldr	r2, [pc, #144]	; (8006668 <HAL_DMA_IRQHandler+0x40c>)
 80065d6:	4293      	cmp	r3, r2
 80065d8:	d031      	beq.n	800663e <HAL_DMA_IRQHandler+0x3e2>
 80065da:	687b      	ldr	r3, [r7, #4]
 80065dc:	681b      	ldr	r3, [r3, #0]
 80065de:	4a23      	ldr	r2, [pc, #140]	; (800666c <HAL_DMA_IRQHandler+0x410>)
 80065e0:	4293      	cmp	r3, r2
 80065e2:	d02c      	beq.n	800663e <HAL_DMA_IRQHandler+0x3e2>
 80065e4:	687b      	ldr	r3, [r7, #4]
 80065e6:	681b      	ldr	r3, [r3, #0]
 80065e8:	4a21      	ldr	r2, [pc, #132]	; (8006670 <HAL_DMA_IRQHandler+0x414>)
 80065ea:	4293      	cmp	r3, r2
 80065ec:	d027      	beq.n	800663e <HAL_DMA_IRQHandler+0x3e2>
 80065ee:	687b      	ldr	r3, [r7, #4]
 80065f0:	681b      	ldr	r3, [r3, #0]
 80065f2:	4a20      	ldr	r2, [pc, #128]	; (8006674 <HAL_DMA_IRQHandler+0x418>)
 80065f4:	4293      	cmp	r3, r2
 80065f6:	d022      	beq.n	800663e <HAL_DMA_IRQHandler+0x3e2>
 80065f8:	687b      	ldr	r3, [r7, #4]
 80065fa:	681b      	ldr	r3, [r3, #0]
 80065fc:	4a1e      	ldr	r2, [pc, #120]	; (8006678 <HAL_DMA_IRQHandler+0x41c>)
 80065fe:	4293      	cmp	r3, r2
 8006600:	d01d      	beq.n	800663e <HAL_DMA_IRQHandler+0x3e2>
 8006602:	687b      	ldr	r3, [r7, #4]
 8006604:	681b      	ldr	r3, [r3, #0]
 8006606:	4a1d      	ldr	r2, [pc, #116]	; (800667c <HAL_DMA_IRQHandler+0x420>)
 8006608:	4293      	cmp	r3, r2
 800660a:	d018      	beq.n	800663e <HAL_DMA_IRQHandler+0x3e2>
 800660c:	687b      	ldr	r3, [r7, #4]
 800660e:	681b      	ldr	r3, [r3, #0]
 8006610:	4a1b      	ldr	r2, [pc, #108]	; (8006680 <HAL_DMA_IRQHandler+0x424>)
 8006612:	4293      	cmp	r3, r2
 8006614:	d013      	beq.n	800663e <HAL_DMA_IRQHandler+0x3e2>
 8006616:	687b      	ldr	r3, [r7, #4]
 8006618:	681b      	ldr	r3, [r3, #0]
 800661a:	4a1a      	ldr	r2, [pc, #104]	; (8006684 <HAL_DMA_IRQHandler+0x428>)
 800661c:	4293      	cmp	r3, r2
 800661e:	d00e      	beq.n	800663e <HAL_DMA_IRQHandler+0x3e2>
 8006620:	687b      	ldr	r3, [r7, #4]
 8006622:	681b      	ldr	r3, [r3, #0]
 8006624:	4a18      	ldr	r2, [pc, #96]	; (8006688 <HAL_DMA_IRQHandler+0x42c>)
 8006626:	4293      	cmp	r3, r2
 8006628:	d009      	beq.n	800663e <HAL_DMA_IRQHandler+0x3e2>
 800662a:	687b      	ldr	r3, [r7, #4]
 800662c:	681b      	ldr	r3, [r3, #0]
 800662e:	4a17      	ldr	r2, [pc, #92]	; (800668c <HAL_DMA_IRQHandler+0x430>)
 8006630:	4293      	cmp	r3, r2
 8006632:	d004      	beq.n	800663e <HAL_DMA_IRQHandler+0x3e2>
 8006634:	687b      	ldr	r3, [r7, #4]
 8006636:	681b      	ldr	r3, [r3, #0]
 8006638:	4a15      	ldr	r2, [pc, #84]	; (8006690 <HAL_DMA_IRQHandler+0x434>)
 800663a:	4293      	cmp	r3, r2
 800663c:	d12a      	bne.n	8006694 <HAL_DMA_IRQHandler+0x438>
 800663e:	687b      	ldr	r3, [r7, #4]
 8006640:	681b      	ldr	r3, [r3, #0]
 8006642:	681b      	ldr	r3, [r3, #0]
 8006644:	f003 0302 	and.w	r3, r3, #2
 8006648:	2b00      	cmp	r3, #0
 800664a:	bf14      	ite	ne
 800664c:	2301      	movne	r3, #1
 800664e:	2300      	moveq	r3, #0
 8006650:	b2db      	uxtb	r3, r3
 8006652:	e023      	b.n	800669c <HAL_DMA_IRQHandler+0x440>
 8006654:	40020010 	.word	0x40020010
 8006658:	40020028 	.word	0x40020028
 800665c:	40020040 	.word	0x40020040
 8006660:	40020058 	.word	0x40020058
 8006664:	40020070 	.word	0x40020070
 8006668:	40020088 	.word	0x40020088
 800666c:	400200a0 	.word	0x400200a0
 8006670:	400200b8 	.word	0x400200b8
 8006674:	40020410 	.word	0x40020410
 8006678:	40020428 	.word	0x40020428
 800667c:	40020440 	.word	0x40020440
 8006680:	40020458 	.word	0x40020458
 8006684:	40020470 	.word	0x40020470
 8006688:	40020488 	.word	0x40020488
 800668c:	400204a0 	.word	0x400204a0
 8006690:	400204b8 	.word	0x400204b8
 8006694:	687b      	ldr	r3, [r7, #4]
 8006696:	681b      	ldr	r3, [r3, #0]
 8006698:	681b      	ldr	r3, [r3, #0]
 800669a:	2300      	movs	r3, #0
 800669c:	2b00      	cmp	r3, #0
 800669e:	d00d      	beq.n	80066bc <HAL_DMA_IRQHandler+0x460>
 80066a0:	687b      	ldr	r3, [r7, #4]
 80066a2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80066a4:	f003 031f 	and.w	r3, r3, #31
 80066a8:	2204      	movs	r2, #4
 80066aa:	409a      	lsls	r2, r3
 80066ac:	6a3b      	ldr	r3, [r7, #32]
 80066ae:	609a      	str	r2, [r3, #8]
 80066b0:	687b      	ldr	r3, [r7, #4]
 80066b2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80066b4:	f043 0204 	orr.w	r2, r3, #4
 80066b8:	687b      	ldr	r3, [r7, #4]
 80066ba:	655a      	str	r2, [r3, #84]	; 0x54
 80066bc:	687b      	ldr	r3, [r7, #4]
 80066be:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80066c0:	f003 031f 	and.w	r3, r3, #31
 80066c4:	2210      	movs	r2, #16
 80066c6:	409a      	lsls	r2, r3
 80066c8:	69bb      	ldr	r3, [r7, #24]
 80066ca:	4013      	ands	r3, r2
 80066cc:	2b00      	cmp	r3, #0
 80066ce:	f000 80a6 	beq.w	800681e <HAL_DMA_IRQHandler+0x5c2>
 80066d2:	687b      	ldr	r3, [r7, #4]
 80066d4:	681b      	ldr	r3, [r3, #0]
 80066d6:	4a85      	ldr	r2, [pc, #532]	; (80068ec <HAL_DMA_IRQHandler+0x690>)
 80066d8:	4293      	cmp	r3, r2
 80066da:	d04a      	beq.n	8006772 <HAL_DMA_IRQHandler+0x516>
 80066dc:	687b      	ldr	r3, [r7, #4]
 80066de:	681b      	ldr	r3, [r3, #0]
 80066e0:	4a83      	ldr	r2, [pc, #524]	; (80068f0 <HAL_DMA_IRQHandler+0x694>)
 80066e2:	4293      	cmp	r3, r2
 80066e4:	d045      	beq.n	8006772 <HAL_DMA_IRQHandler+0x516>
 80066e6:	687b      	ldr	r3, [r7, #4]
 80066e8:	681b      	ldr	r3, [r3, #0]
 80066ea:	4a82      	ldr	r2, [pc, #520]	; (80068f4 <HAL_DMA_IRQHandler+0x698>)
 80066ec:	4293      	cmp	r3, r2
 80066ee:	d040      	beq.n	8006772 <HAL_DMA_IRQHandler+0x516>
 80066f0:	687b      	ldr	r3, [r7, #4]
 80066f2:	681b      	ldr	r3, [r3, #0]
 80066f4:	4a80      	ldr	r2, [pc, #512]	; (80068f8 <HAL_DMA_IRQHandler+0x69c>)
 80066f6:	4293      	cmp	r3, r2
 80066f8:	d03b      	beq.n	8006772 <HAL_DMA_IRQHandler+0x516>
 80066fa:	687b      	ldr	r3, [r7, #4]
 80066fc:	681b      	ldr	r3, [r3, #0]
 80066fe:	4a7f      	ldr	r2, [pc, #508]	; (80068fc <HAL_DMA_IRQHandler+0x6a0>)
 8006700:	4293      	cmp	r3, r2
 8006702:	d036      	beq.n	8006772 <HAL_DMA_IRQHandler+0x516>
 8006704:	687b      	ldr	r3, [r7, #4]
 8006706:	681b      	ldr	r3, [r3, #0]
 8006708:	4a7d      	ldr	r2, [pc, #500]	; (8006900 <HAL_DMA_IRQHandler+0x6a4>)
 800670a:	4293      	cmp	r3, r2
 800670c:	d031      	beq.n	8006772 <HAL_DMA_IRQHandler+0x516>
 800670e:	687b      	ldr	r3, [r7, #4]
 8006710:	681b      	ldr	r3, [r3, #0]
 8006712:	4a7c      	ldr	r2, [pc, #496]	; (8006904 <HAL_DMA_IRQHandler+0x6a8>)
 8006714:	4293      	cmp	r3, r2
 8006716:	d02c      	beq.n	8006772 <HAL_DMA_IRQHandler+0x516>
 8006718:	687b      	ldr	r3, [r7, #4]
 800671a:	681b      	ldr	r3, [r3, #0]
 800671c:	4a7a      	ldr	r2, [pc, #488]	; (8006908 <HAL_DMA_IRQHandler+0x6ac>)
 800671e:	4293      	cmp	r3, r2
 8006720:	d027      	beq.n	8006772 <HAL_DMA_IRQHandler+0x516>
 8006722:	687b      	ldr	r3, [r7, #4]
 8006724:	681b      	ldr	r3, [r3, #0]
 8006726:	4a79      	ldr	r2, [pc, #484]	; (800690c <HAL_DMA_IRQHandler+0x6b0>)
 8006728:	4293      	cmp	r3, r2
 800672a:	d022      	beq.n	8006772 <HAL_DMA_IRQHandler+0x516>
 800672c:	687b      	ldr	r3, [r7, #4]
 800672e:	681b      	ldr	r3, [r3, #0]
 8006730:	4a77      	ldr	r2, [pc, #476]	; (8006910 <HAL_DMA_IRQHandler+0x6b4>)
 8006732:	4293      	cmp	r3, r2
 8006734:	d01d      	beq.n	8006772 <HAL_DMA_IRQHandler+0x516>
 8006736:	687b      	ldr	r3, [r7, #4]
 8006738:	681b      	ldr	r3, [r3, #0]
 800673a:	4a76      	ldr	r2, [pc, #472]	; (8006914 <HAL_DMA_IRQHandler+0x6b8>)
 800673c:	4293      	cmp	r3, r2
 800673e:	d018      	beq.n	8006772 <HAL_DMA_IRQHandler+0x516>
 8006740:	687b      	ldr	r3, [r7, #4]
 8006742:	681b      	ldr	r3, [r3, #0]
 8006744:	4a74      	ldr	r2, [pc, #464]	; (8006918 <HAL_DMA_IRQHandler+0x6bc>)
 8006746:	4293      	cmp	r3, r2
 8006748:	d013      	beq.n	8006772 <HAL_DMA_IRQHandler+0x516>
 800674a:	687b      	ldr	r3, [r7, #4]
 800674c:	681b      	ldr	r3, [r3, #0]
 800674e:	4a73      	ldr	r2, [pc, #460]	; (800691c <HAL_DMA_IRQHandler+0x6c0>)
 8006750:	4293      	cmp	r3, r2
 8006752:	d00e      	beq.n	8006772 <HAL_DMA_IRQHandler+0x516>
 8006754:	687b      	ldr	r3, [r7, #4]
 8006756:	681b      	ldr	r3, [r3, #0]
 8006758:	4a71      	ldr	r2, [pc, #452]	; (8006920 <HAL_DMA_IRQHandler+0x6c4>)
 800675a:	4293      	cmp	r3, r2
 800675c:	d009      	beq.n	8006772 <HAL_DMA_IRQHandler+0x516>
 800675e:	687b      	ldr	r3, [r7, #4]
 8006760:	681b      	ldr	r3, [r3, #0]
 8006762:	4a70      	ldr	r2, [pc, #448]	; (8006924 <HAL_DMA_IRQHandler+0x6c8>)
 8006764:	4293      	cmp	r3, r2
 8006766:	d004      	beq.n	8006772 <HAL_DMA_IRQHandler+0x516>
 8006768:	687b      	ldr	r3, [r7, #4]
 800676a:	681b      	ldr	r3, [r3, #0]
 800676c:	4a6e      	ldr	r2, [pc, #440]	; (8006928 <HAL_DMA_IRQHandler+0x6cc>)
 800676e:	4293      	cmp	r3, r2
 8006770:	d10a      	bne.n	8006788 <HAL_DMA_IRQHandler+0x52c>
 8006772:	687b      	ldr	r3, [r7, #4]
 8006774:	681b      	ldr	r3, [r3, #0]
 8006776:	681b      	ldr	r3, [r3, #0]
 8006778:	f003 0308 	and.w	r3, r3, #8
 800677c:	2b00      	cmp	r3, #0
 800677e:	bf14      	ite	ne
 8006780:	2301      	movne	r3, #1
 8006782:	2300      	moveq	r3, #0
 8006784:	b2db      	uxtb	r3, r3
 8006786:	e009      	b.n	800679c <HAL_DMA_IRQHandler+0x540>
 8006788:	687b      	ldr	r3, [r7, #4]
 800678a:	681b      	ldr	r3, [r3, #0]
 800678c:	681b      	ldr	r3, [r3, #0]
 800678e:	f003 0304 	and.w	r3, r3, #4
 8006792:	2b00      	cmp	r3, #0
 8006794:	bf14      	ite	ne
 8006796:	2301      	movne	r3, #1
 8006798:	2300      	moveq	r3, #0
 800679a:	b2db      	uxtb	r3, r3
 800679c:	2b00      	cmp	r3, #0
 800679e:	d03e      	beq.n	800681e <HAL_DMA_IRQHandler+0x5c2>
 80067a0:	687b      	ldr	r3, [r7, #4]
 80067a2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80067a4:	f003 031f 	and.w	r3, r3, #31
 80067a8:	2210      	movs	r2, #16
 80067aa:	409a      	lsls	r2, r3
 80067ac:	6a3b      	ldr	r3, [r7, #32]
 80067ae:	609a      	str	r2, [r3, #8]
 80067b0:	687b      	ldr	r3, [r7, #4]
 80067b2:	681b      	ldr	r3, [r3, #0]
 80067b4:	681b      	ldr	r3, [r3, #0]
 80067b6:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80067ba:	2b00      	cmp	r3, #0
 80067bc:	d018      	beq.n	80067f0 <HAL_DMA_IRQHandler+0x594>
 80067be:	687b      	ldr	r3, [r7, #4]
 80067c0:	681b      	ldr	r3, [r3, #0]
 80067c2:	681b      	ldr	r3, [r3, #0]
 80067c4:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80067c8:	2b00      	cmp	r3, #0
 80067ca:	d108      	bne.n	80067de <HAL_DMA_IRQHandler+0x582>
 80067cc:	687b      	ldr	r3, [r7, #4]
 80067ce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80067d0:	2b00      	cmp	r3, #0
 80067d2:	d024      	beq.n	800681e <HAL_DMA_IRQHandler+0x5c2>
 80067d4:	687b      	ldr	r3, [r7, #4]
 80067d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80067d8:	6878      	ldr	r0, [r7, #4]
 80067da:	4798      	blx	r3
 80067dc:	e01f      	b.n	800681e <HAL_DMA_IRQHandler+0x5c2>
 80067de:	687b      	ldr	r3, [r7, #4]
 80067e0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80067e2:	2b00      	cmp	r3, #0
 80067e4:	d01b      	beq.n	800681e <HAL_DMA_IRQHandler+0x5c2>
 80067e6:	687b      	ldr	r3, [r7, #4]
 80067e8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80067ea:	6878      	ldr	r0, [r7, #4]
 80067ec:	4798      	blx	r3
 80067ee:	e016      	b.n	800681e <HAL_DMA_IRQHandler+0x5c2>
 80067f0:	687b      	ldr	r3, [r7, #4]
 80067f2:	681b      	ldr	r3, [r3, #0]
 80067f4:	681b      	ldr	r3, [r3, #0]
 80067f6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80067fa:	2b00      	cmp	r3, #0
 80067fc:	d107      	bne.n	800680e <HAL_DMA_IRQHandler+0x5b2>
 80067fe:	687b      	ldr	r3, [r7, #4]
 8006800:	681b      	ldr	r3, [r3, #0]
 8006802:	681a      	ldr	r2, [r3, #0]
 8006804:	687b      	ldr	r3, [r7, #4]
 8006806:	681b      	ldr	r3, [r3, #0]
 8006808:	f022 0208 	bic.w	r2, r2, #8
 800680c:	601a      	str	r2, [r3, #0]
 800680e:	687b      	ldr	r3, [r7, #4]
 8006810:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006812:	2b00      	cmp	r3, #0
 8006814:	d003      	beq.n	800681e <HAL_DMA_IRQHandler+0x5c2>
 8006816:	687b      	ldr	r3, [r7, #4]
 8006818:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800681a:	6878      	ldr	r0, [r7, #4]
 800681c:	4798      	blx	r3
 800681e:	687b      	ldr	r3, [r7, #4]
 8006820:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8006822:	f003 031f 	and.w	r3, r3, #31
 8006826:	2220      	movs	r2, #32
 8006828:	409a      	lsls	r2, r3
 800682a:	69bb      	ldr	r3, [r7, #24]
 800682c:	4013      	ands	r3, r2
 800682e:	2b00      	cmp	r3, #0
 8006830:	f000 8110 	beq.w	8006a54 <HAL_DMA_IRQHandler+0x7f8>
 8006834:	687b      	ldr	r3, [r7, #4]
 8006836:	681b      	ldr	r3, [r3, #0]
 8006838:	4a2c      	ldr	r2, [pc, #176]	; (80068ec <HAL_DMA_IRQHandler+0x690>)
 800683a:	4293      	cmp	r3, r2
 800683c:	d04a      	beq.n	80068d4 <HAL_DMA_IRQHandler+0x678>
 800683e:	687b      	ldr	r3, [r7, #4]
 8006840:	681b      	ldr	r3, [r3, #0]
 8006842:	4a2b      	ldr	r2, [pc, #172]	; (80068f0 <HAL_DMA_IRQHandler+0x694>)
 8006844:	4293      	cmp	r3, r2
 8006846:	d045      	beq.n	80068d4 <HAL_DMA_IRQHandler+0x678>
 8006848:	687b      	ldr	r3, [r7, #4]
 800684a:	681b      	ldr	r3, [r3, #0]
 800684c:	4a29      	ldr	r2, [pc, #164]	; (80068f4 <HAL_DMA_IRQHandler+0x698>)
 800684e:	4293      	cmp	r3, r2
 8006850:	d040      	beq.n	80068d4 <HAL_DMA_IRQHandler+0x678>
 8006852:	687b      	ldr	r3, [r7, #4]
 8006854:	681b      	ldr	r3, [r3, #0]
 8006856:	4a28      	ldr	r2, [pc, #160]	; (80068f8 <HAL_DMA_IRQHandler+0x69c>)
 8006858:	4293      	cmp	r3, r2
 800685a:	d03b      	beq.n	80068d4 <HAL_DMA_IRQHandler+0x678>
 800685c:	687b      	ldr	r3, [r7, #4]
 800685e:	681b      	ldr	r3, [r3, #0]
 8006860:	4a26      	ldr	r2, [pc, #152]	; (80068fc <HAL_DMA_IRQHandler+0x6a0>)
 8006862:	4293      	cmp	r3, r2
 8006864:	d036      	beq.n	80068d4 <HAL_DMA_IRQHandler+0x678>
 8006866:	687b      	ldr	r3, [r7, #4]
 8006868:	681b      	ldr	r3, [r3, #0]
 800686a:	4a25      	ldr	r2, [pc, #148]	; (8006900 <HAL_DMA_IRQHandler+0x6a4>)
 800686c:	4293      	cmp	r3, r2
 800686e:	d031      	beq.n	80068d4 <HAL_DMA_IRQHandler+0x678>
 8006870:	687b      	ldr	r3, [r7, #4]
 8006872:	681b      	ldr	r3, [r3, #0]
 8006874:	4a23      	ldr	r2, [pc, #140]	; (8006904 <HAL_DMA_IRQHandler+0x6a8>)
 8006876:	4293      	cmp	r3, r2
 8006878:	d02c      	beq.n	80068d4 <HAL_DMA_IRQHandler+0x678>
 800687a:	687b      	ldr	r3, [r7, #4]
 800687c:	681b      	ldr	r3, [r3, #0]
 800687e:	4a22      	ldr	r2, [pc, #136]	; (8006908 <HAL_DMA_IRQHandler+0x6ac>)
 8006880:	4293      	cmp	r3, r2
 8006882:	d027      	beq.n	80068d4 <HAL_DMA_IRQHandler+0x678>
 8006884:	687b      	ldr	r3, [r7, #4]
 8006886:	681b      	ldr	r3, [r3, #0]
 8006888:	4a20      	ldr	r2, [pc, #128]	; (800690c <HAL_DMA_IRQHandler+0x6b0>)
 800688a:	4293      	cmp	r3, r2
 800688c:	d022      	beq.n	80068d4 <HAL_DMA_IRQHandler+0x678>
 800688e:	687b      	ldr	r3, [r7, #4]
 8006890:	681b      	ldr	r3, [r3, #0]
 8006892:	4a1f      	ldr	r2, [pc, #124]	; (8006910 <HAL_DMA_IRQHandler+0x6b4>)
 8006894:	4293      	cmp	r3, r2
 8006896:	d01d      	beq.n	80068d4 <HAL_DMA_IRQHandler+0x678>
 8006898:	687b      	ldr	r3, [r7, #4]
 800689a:	681b      	ldr	r3, [r3, #0]
 800689c:	4a1d      	ldr	r2, [pc, #116]	; (8006914 <HAL_DMA_IRQHandler+0x6b8>)
 800689e:	4293      	cmp	r3, r2
 80068a0:	d018      	beq.n	80068d4 <HAL_DMA_IRQHandler+0x678>
 80068a2:	687b      	ldr	r3, [r7, #4]
 80068a4:	681b      	ldr	r3, [r3, #0]
 80068a6:	4a1c      	ldr	r2, [pc, #112]	; (8006918 <HAL_DMA_IRQHandler+0x6bc>)
 80068a8:	4293      	cmp	r3, r2
 80068aa:	d013      	beq.n	80068d4 <HAL_DMA_IRQHandler+0x678>
 80068ac:	687b      	ldr	r3, [r7, #4]
 80068ae:	681b      	ldr	r3, [r3, #0]
 80068b0:	4a1a      	ldr	r2, [pc, #104]	; (800691c <HAL_DMA_IRQHandler+0x6c0>)
 80068b2:	4293      	cmp	r3, r2
 80068b4:	d00e      	beq.n	80068d4 <HAL_DMA_IRQHandler+0x678>
 80068b6:	687b      	ldr	r3, [r7, #4]
 80068b8:	681b      	ldr	r3, [r3, #0]
 80068ba:	4a19      	ldr	r2, [pc, #100]	; (8006920 <HAL_DMA_IRQHandler+0x6c4>)
 80068bc:	4293      	cmp	r3, r2
 80068be:	d009      	beq.n	80068d4 <HAL_DMA_IRQHandler+0x678>
 80068c0:	687b      	ldr	r3, [r7, #4]
 80068c2:	681b      	ldr	r3, [r3, #0]
 80068c4:	4a17      	ldr	r2, [pc, #92]	; (8006924 <HAL_DMA_IRQHandler+0x6c8>)
 80068c6:	4293      	cmp	r3, r2
 80068c8:	d004      	beq.n	80068d4 <HAL_DMA_IRQHandler+0x678>
 80068ca:	687b      	ldr	r3, [r7, #4]
 80068cc:	681b      	ldr	r3, [r3, #0]
 80068ce:	4a16      	ldr	r2, [pc, #88]	; (8006928 <HAL_DMA_IRQHandler+0x6cc>)
 80068d0:	4293      	cmp	r3, r2
 80068d2:	d12b      	bne.n	800692c <HAL_DMA_IRQHandler+0x6d0>
 80068d4:	687b      	ldr	r3, [r7, #4]
 80068d6:	681b      	ldr	r3, [r3, #0]
 80068d8:	681b      	ldr	r3, [r3, #0]
 80068da:	f003 0310 	and.w	r3, r3, #16
 80068de:	2b00      	cmp	r3, #0
 80068e0:	bf14      	ite	ne
 80068e2:	2301      	movne	r3, #1
 80068e4:	2300      	moveq	r3, #0
 80068e6:	b2db      	uxtb	r3, r3
 80068e8:	e02a      	b.n	8006940 <HAL_DMA_IRQHandler+0x6e4>
 80068ea:	bf00      	nop
 80068ec:	40020010 	.word	0x40020010
 80068f0:	40020028 	.word	0x40020028
 80068f4:	40020040 	.word	0x40020040
 80068f8:	40020058 	.word	0x40020058
 80068fc:	40020070 	.word	0x40020070
 8006900:	40020088 	.word	0x40020088
 8006904:	400200a0 	.word	0x400200a0
 8006908:	400200b8 	.word	0x400200b8
 800690c:	40020410 	.word	0x40020410
 8006910:	40020428 	.word	0x40020428
 8006914:	40020440 	.word	0x40020440
 8006918:	40020458 	.word	0x40020458
 800691c:	40020470 	.word	0x40020470
 8006920:	40020488 	.word	0x40020488
 8006924:	400204a0 	.word	0x400204a0
 8006928:	400204b8 	.word	0x400204b8
 800692c:	687b      	ldr	r3, [r7, #4]
 800692e:	681b      	ldr	r3, [r3, #0]
 8006930:	681b      	ldr	r3, [r3, #0]
 8006932:	f003 0302 	and.w	r3, r3, #2
 8006936:	2b00      	cmp	r3, #0
 8006938:	bf14      	ite	ne
 800693a:	2301      	movne	r3, #1
 800693c:	2300      	moveq	r3, #0
 800693e:	b2db      	uxtb	r3, r3
 8006940:	2b00      	cmp	r3, #0
 8006942:	f000 8087 	beq.w	8006a54 <HAL_DMA_IRQHandler+0x7f8>
 8006946:	687b      	ldr	r3, [r7, #4]
 8006948:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800694a:	f003 031f 	and.w	r3, r3, #31
 800694e:	2220      	movs	r2, #32
 8006950:	409a      	lsls	r2, r3
 8006952:	6a3b      	ldr	r3, [r7, #32]
 8006954:	609a      	str	r2, [r3, #8]
 8006956:	687b      	ldr	r3, [r7, #4]
 8006958:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 800695c:	b2db      	uxtb	r3, r3
 800695e:	2b04      	cmp	r3, #4
 8006960:	d139      	bne.n	80069d6 <HAL_DMA_IRQHandler+0x77a>
 8006962:	687b      	ldr	r3, [r7, #4]
 8006964:	681b      	ldr	r3, [r3, #0]
 8006966:	681a      	ldr	r2, [r3, #0]
 8006968:	687b      	ldr	r3, [r7, #4]
 800696a:	681b      	ldr	r3, [r3, #0]
 800696c:	f022 0216 	bic.w	r2, r2, #22
 8006970:	601a      	str	r2, [r3, #0]
 8006972:	687b      	ldr	r3, [r7, #4]
 8006974:	681b      	ldr	r3, [r3, #0]
 8006976:	695a      	ldr	r2, [r3, #20]
 8006978:	687b      	ldr	r3, [r7, #4]
 800697a:	681b      	ldr	r3, [r3, #0]
 800697c:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8006980:	615a      	str	r2, [r3, #20]
 8006982:	687b      	ldr	r3, [r7, #4]
 8006984:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006986:	2b00      	cmp	r3, #0
 8006988:	d103      	bne.n	8006992 <HAL_DMA_IRQHandler+0x736>
 800698a:	687b      	ldr	r3, [r7, #4]
 800698c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800698e:	2b00      	cmp	r3, #0
 8006990:	d007      	beq.n	80069a2 <HAL_DMA_IRQHandler+0x746>
 8006992:	687b      	ldr	r3, [r7, #4]
 8006994:	681b      	ldr	r3, [r3, #0]
 8006996:	681a      	ldr	r2, [r3, #0]
 8006998:	687b      	ldr	r3, [r7, #4]
 800699a:	681b      	ldr	r3, [r3, #0]
 800699c:	f022 0208 	bic.w	r2, r2, #8
 80069a0:	601a      	str	r2, [r3, #0]
 80069a2:	687b      	ldr	r3, [r7, #4]
 80069a4:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80069a6:	f003 031f 	and.w	r3, r3, #31
 80069aa:	223f      	movs	r2, #63	; 0x3f
 80069ac:	409a      	lsls	r2, r3
 80069ae:	6a3b      	ldr	r3, [r7, #32]
 80069b0:	609a      	str	r2, [r3, #8]
 80069b2:	687b      	ldr	r3, [r7, #4]
 80069b4:	2201      	movs	r2, #1
 80069b6:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 80069ba:	687b      	ldr	r3, [r7, #4]
 80069bc:	2200      	movs	r2, #0
 80069be:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 80069c2:	687b      	ldr	r3, [r7, #4]
 80069c4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80069c6:	2b00      	cmp	r3, #0
 80069c8:	f000 834a 	beq.w	8007060 <HAL_DMA_IRQHandler+0xe04>
 80069cc:	687b      	ldr	r3, [r7, #4]
 80069ce:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80069d0:	6878      	ldr	r0, [r7, #4]
 80069d2:	4798      	blx	r3
 80069d4:	e344      	b.n	8007060 <HAL_DMA_IRQHandler+0xe04>
 80069d6:	687b      	ldr	r3, [r7, #4]
 80069d8:	681b      	ldr	r3, [r3, #0]
 80069da:	681b      	ldr	r3, [r3, #0]
 80069dc:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80069e0:	2b00      	cmp	r3, #0
 80069e2:	d018      	beq.n	8006a16 <HAL_DMA_IRQHandler+0x7ba>
 80069e4:	687b      	ldr	r3, [r7, #4]
 80069e6:	681b      	ldr	r3, [r3, #0]
 80069e8:	681b      	ldr	r3, [r3, #0]
 80069ea:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 80069ee:	2b00      	cmp	r3, #0
 80069f0:	d108      	bne.n	8006a04 <HAL_DMA_IRQHandler+0x7a8>
 80069f2:	687b      	ldr	r3, [r7, #4]
 80069f4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80069f6:	2b00      	cmp	r3, #0
 80069f8:	d02c      	beq.n	8006a54 <HAL_DMA_IRQHandler+0x7f8>
 80069fa:	687b      	ldr	r3, [r7, #4]
 80069fc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80069fe:	6878      	ldr	r0, [r7, #4]
 8006a00:	4798      	blx	r3
 8006a02:	e027      	b.n	8006a54 <HAL_DMA_IRQHandler+0x7f8>
 8006a04:	687b      	ldr	r3, [r7, #4]
 8006a06:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006a08:	2b00      	cmp	r3, #0
 8006a0a:	d023      	beq.n	8006a54 <HAL_DMA_IRQHandler+0x7f8>
 8006a0c:	687b      	ldr	r3, [r7, #4]
 8006a0e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006a10:	6878      	ldr	r0, [r7, #4]
 8006a12:	4798      	blx	r3
 8006a14:	e01e      	b.n	8006a54 <HAL_DMA_IRQHandler+0x7f8>
 8006a16:	687b      	ldr	r3, [r7, #4]
 8006a18:	681b      	ldr	r3, [r3, #0]
 8006a1a:	681b      	ldr	r3, [r3, #0]
 8006a1c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8006a20:	2b00      	cmp	r3, #0
 8006a22:	d10f      	bne.n	8006a44 <HAL_DMA_IRQHandler+0x7e8>
 8006a24:	687b      	ldr	r3, [r7, #4]
 8006a26:	681b      	ldr	r3, [r3, #0]
 8006a28:	681a      	ldr	r2, [r3, #0]
 8006a2a:	687b      	ldr	r3, [r7, #4]
 8006a2c:	681b      	ldr	r3, [r3, #0]
 8006a2e:	f022 0210 	bic.w	r2, r2, #16
 8006a32:	601a      	str	r2, [r3, #0]
 8006a34:	687b      	ldr	r3, [r7, #4]
 8006a36:	2201      	movs	r2, #1
 8006a38:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8006a3c:	687b      	ldr	r3, [r7, #4]
 8006a3e:	2200      	movs	r2, #0
 8006a40:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006a44:	687b      	ldr	r3, [r7, #4]
 8006a46:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006a48:	2b00      	cmp	r3, #0
 8006a4a:	d003      	beq.n	8006a54 <HAL_DMA_IRQHandler+0x7f8>
 8006a4c:	687b      	ldr	r3, [r7, #4]
 8006a4e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006a50:	6878      	ldr	r0, [r7, #4]
 8006a52:	4798      	blx	r3
 8006a54:	687b      	ldr	r3, [r7, #4]
 8006a56:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006a58:	2b00      	cmp	r3, #0
 8006a5a:	f000 8306 	beq.w	800706a <HAL_DMA_IRQHandler+0xe0e>
 8006a5e:	687b      	ldr	r3, [r7, #4]
 8006a60:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006a62:	f003 0301 	and.w	r3, r3, #1
 8006a66:	2b00      	cmp	r3, #0
 8006a68:	f000 8088 	beq.w	8006b7c <HAL_DMA_IRQHandler+0x920>
 8006a6c:	687b      	ldr	r3, [r7, #4]
 8006a6e:	2204      	movs	r2, #4
 8006a70:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8006a74:	687b      	ldr	r3, [r7, #4]
 8006a76:	681b      	ldr	r3, [r3, #0]
 8006a78:	4a7a      	ldr	r2, [pc, #488]	; (8006c64 <HAL_DMA_IRQHandler+0xa08>)
 8006a7a:	4293      	cmp	r3, r2
 8006a7c:	d04a      	beq.n	8006b14 <HAL_DMA_IRQHandler+0x8b8>
 8006a7e:	687b      	ldr	r3, [r7, #4]
 8006a80:	681b      	ldr	r3, [r3, #0]
 8006a82:	4a79      	ldr	r2, [pc, #484]	; (8006c68 <HAL_DMA_IRQHandler+0xa0c>)
 8006a84:	4293      	cmp	r3, r2
 8006a86:	d045      	beq.n	8006b14 <HAL_DMA_IRQHandler+0x8b8>
 8006a88:	687b      	ldr	r3, [r7, #4]
 8006a8a:	681b      	ldr	r3, [r3, #0]
 8006a8c:	4a77      	ldr	r2, [pc, #476]	; (8006c6c <HAL_DMA_IRQHandler+0xa10>)
 8006a8e:	4293      	cmp	r3, r2
 8006a90:	d040      	beq.n	8006b14 <HAL_DMA_IRQHandler+0x8b8>
 8006a92:	687b      	ldr	r3, [r7, #4]
 8006a94:	681b      	ldr	r3, [r3, #0]
 8006a96:	4a76      	ldr	r2, [pc, #472]	; (8006c70 <HAL_DMA_IRQHandler+0xa14>)
 8006a98:	4293      	cmp	r3, r2
 8006a9a:	d03b      	beq.n	8006b14 <HAL_DMA_IRQHandler+0x8b8>
 8006a9c:	687b      	ldr	r3, [r7, #4]
 8006a9e:	681b      	ldr	r3, [r3, #0]
 8006aa0:	4a74      	ldr	r2, [pc, #464]	; (8006c74 <HAL_DMA_IRQHandler+0xa18>)
 8006aa2:	4293      	cmp	r3, r2
 8006aa4:	d036      	beq.n	8006b14 <HAL_DMA_IRQHandler+0x8b8>
 8006aa6:	687b      	ldr	r3, [r7, #4]
 8006aa8:	681b      	ldr	r3, [r3, #0]
 8006aaa:	4a73      	ldr	r2, [pc, #460]	; (8006c78 <HAL_DMA_IRQHandler+0xa1c>)
 8006aac:	4293      	cmp	r3, r2
 8006aae:	d031      	beq.n	8006b14 <HAL_DMA_IRQHandler+0x8b8>
 8006ab0:	687b      	ldr	r3, [r7, #4]
 8006ab2:	681b      	ldr	r3, [r3, #0]
 8006ab4:	4a71      	ldr	r2, [pc, #452]	; (8006c7c <HAL_DMA_IRQHandler+0xa20>)
 8006ab6:	4293      	cmp	r3, r2
 8006ab8:	d02c      	beq.n	8006b14 <HAL_DMA_IRQHandler+0x8b8>
 8006aba:	687b      	ldr	r3, [r7, #4]
 8006abc:	681b      	ldr	r3, [r3, #0]
 8006abe:	4a70      	ldr	r2, [pc, #448]	; (8006c80 <HAL_DMA_IRQHandler+0xa24>)
 8006ac0:	4293      	cmp	r3, r2
 8006ac2:	d027      	beq.n	8006b14 <HAL_DMA_IRQHandler+0x8b8>
 8006ac4:	687b      	ldr	r3, [r7, #4]
 8006ac6:	681b      	ldr	r3, [r3, #0]
 8006ac8:	4a6e      	ldr	r2, [pc, #440]	; (8006c84 <HAL_DMA_IRQHandler+0xa28>)
 8006aca:	4293      	cmp	r3, r2
 8006acc:	d022      	beq.n	8006b14 <HAL_DMA_IRQHandler+0x8b8>
 8006ace:	687b      	ldr	r3, [r7, #4]
 8006ad0:	681b      	ldr	r3, [r3, #0]
 8006ad2:	4a6d      	ldr	r2, [pc, #436]	; (8006c88 <HAL_DMA_IRQHandler+0xa2c>)
 8006ad4:	4293      	cmp	r3, r2
 8006ad6:	d01d      	beq.n	8006b14 <HAL_DMA_IRQHandler+0x8b8>
 8006ad8:	687b      	ldr	r3, [r7, #4]
 8006ada:	681b      	ldr	r3, [r3, #0]
 8006adc:	4a6b      	ldr	r2, [pc, #428]	; (8006c8c <HAL_DMA_IRQHandler+0xa30>)
 8006ade:	4293      	cmp	r3, r2
 8006ae0:	d018      	beq.n	8006b14 <HAL_DMA_IRQHandler+0x8b8>
 8006ae2:	687b      	ldr	r3, [r7, #4]
 8006ae4:	681b      	ldr	r3, [r3, #0]
 8006ae6:	4a6a      	ldr	r2, [pc, #424]	; (8006c90 <HAL_DMA_IRQHandler+0xa34>)
 8006ae8:	4293      	cmp	r3, r2
 8006aea:	d013      	beq.n	8006b14 <HAL_DMA_IRQHandler+0x8b8>
 8006aec:	687b      	ldr	r3, [r7, #4]
 8006aee:	681b      	ldr	r3, [r3, #0]
 8006af0:	4a68      	ldr	r2, [pc, #416]	; (8006c94 <HAL_DMA_IRQHandler+0xa38>)
 8006af2:	4293      	cmp	r3, r2
 8006af4:	d00e      	beq.n	8006b14 <HAL_DMA_IRQHandler+0x8b8>
 8006af6:	687b      	ldr	r3, [r7, #4]
 8006af8:	681b      	ldr	r3, [r3, #0]
 8006afa:	4a67      	ldr	r2, [pc, #412]	; (8006c98 <HAL_DMA_IRQHandler+0xa3c>)
 8006afc:	4293      	cmp	r3, r2
 8006afe:	d009      	beq.n	8006b14 <HAL_DMA_IRQHandler+0x8b8>
 8006b00:	687b      	ldr	r3, [r7, #4]
 8006b02:	681b      	ldr	r3, [r3, #0]
 8006b04:	4a65      	ldr	r2, [pc, #404]	; (8006c9c <HAL_DMA_IRQHandler+0xa40>)
 8006b06:	4293      	cmp	r3, r2
 8006b08:	d004      	beq.n	8006b14 <HAL_DMA_IRQHandler+0x8b8>
 8006b0a:	687b      	ldr	r3, [r7, #4]
 8006b0c:	681b      	ldr	r3, [r3, #0]
 8006b0e:	4a64      	ldr	r2, [pc, #400]	; (8006ca0 <HAL_DMA_IRQHandler+0xa44>)
 8006b10:	4293      	cmp	r3, r2
 8006b12:	d108      	bne.n	8006b26 <HAL_DMA_IRQHandler+0x8ca>
 8006b14:	687b      	ldr	r3, [r7, #4]
 8006b16:	681b      	ldr	r3, [r3, #0]
 8006b18:	681a      	ldr	r2, [r3, #0]
 8006b1a:	687b      	ldr	r3, [r7, #4]
 8006b1c:	681b      	ldr	r3, [r3, #0]
 8006b1e:	f022 0201 	bic.w	r2, r2, #1
 8006b22:	601a      	str	r2, [r3, #0]
 8006b24:	e007      	b.n	8006b36 <HAL_DMA_IRQHandler+0x8da>
 8006b26:	687b      	ldr	r3, [r7, #4]
 8006b28:	681b      	ldr	r3, [r3, #0]
 8006b2a:	681a      	ldr	r2, [r3, #0]
 8006b2c:	687b      	ldr	r3, [r7, #4]
 8006b2e:	681b      	ldr	r3, [r3, #0]
 8006b30:	f022 0201 	bic.w	r2, r2, #1
 8006b34:	601a      	str	r2, [r3, #0]
 8006b36:	68fb      	ldr	r3, [r7, #12]
 8006b38:	3301      	adds	r3, #1
 8006b3a:	60fb      	str	r3, [r7, #12]
 8006b3c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006b3e:	429a      	cmp	r2, r3
 8006b40:	d307      	bcc.n	8006b52 <HAL_DMA_IRQHandler+0x8f6>
 8006b42:	687b      	ldr	r3, [r7, #4]
 8006b44:	681b      	ldr	r3, [r3, #0]
 8006b46:	681b      	ldr	r3, [r3, #0]
 8006b48:	f003 0301 	and.w	r3, r3, #1
 8006b4c:	2b00      	cmp	r3, #0
 8006b4e:	d1f2      	bne.n	8006b36 <HAL_DMA_IRQHandler+0x8da>
 8006b50:	e000      	b.n	8006b54 <HAL_DMA_IRQHandler+0x8f8>
 8006b52:	bf00      	nop
 8006b54:	687b      	ldr	r3, [r7, #4]
 8006b56:	681b      	ldr	r3, [r3, #0]
 8006b58:	681b      	ldr	r3, [r3, #0]
 8006b5a:	f003 0301 	and.w	r3, r3, #1
 8006b5e:	2b00      	cmp	r3, #0
 8006b60:	d004      	beq.n	8006b6c <HAL_DMA_IRQHandler+0x910>
 8006b62:	687b      	ldr	r3, [r7, #4]
 8006b64:	2203      	movs	r2, #3
 8006b66:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8006b6a:	e003      	b.n	8006b74 <HAL_DMA_IRQHandler+0x918>
 8006b6c:	687b      	ldr	r3, [r7, #4]
 8006b6e:	2201      	movs	r2, #1
 8006b70:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8006b74:	687b      	ldr	r3, [r7, #4]
 8006b76:	2200      	movs	r2, #0
 8006b78:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006b7c:	687b      	ldr	r3, [r7, #4]
 8006b7e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006b80:	2b00      	cmp	r3, #0
 8006b82:	f000 8272 	beq.w	800706a <HAL_DMA_IRQHandler+0xe0e>
 8006b86:	687b      	ldr	r3, [r7, #4]
 8006b88:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006b8a:	6878      	ldr	r0, [r7, #4]
 8006b8c:	4798      	blx	r3
 8006b8e:	e26c      	b.n	800706a <HAL_DMA_IRQHandler+0xe0e>
 8006b90:	687b      	ldr	r3, [r7, #4]
 8006b92:	681b      	ldr	r3, [r3, #0]
 8006b94:	4a43      	ldr	r2, [pc, #268]	; (8006ca4 <HAL_DMA_IRQHandler+0xa48>)
 8006b96:	4293      	cmp	r3, r2
 8006b98:	d022      	beq.n	8006be0 <HAL_DMA_IRQHandler+0x984>
 8006b9a:	687b      	ldr	r3, [r7, #4]
 8006b9c:	681b      	ldr	r3, [r3, #0]
 8006b9e:	4a42      	ldr	r2, [pc, #264]	; (8006ca8 <HAL_DMA_IRQHandler+0xa4c>)
 8006ba0:	4293      	cmp	r3, r2
 8006ba2:	d01d      	beq.n	8006be0 <HAL_DMA_IRQHandler+0x984>
 8006ba4:	687b      	ldr	r3, [r7, #4]
 8006ba6:	681b      	ldr	r3, [r3, #0]
 8006ba8:	4a40      	ldr	r2, [pc, #256]	; (8006cac <HAL_DMA_IRQHandler+0xa50>)
 8006baa:	4293      	cmp	r3, r2
 8006bac:	d018      	beq.n	8006be0 <HAL_DMA_IRQHandler+0x984>
 8006bae:	687b      	ldr	r3, [r7, #4]
 8006bb0:	681b      	ldr	r3, [r3, #0]
 8006bb2:	4a3f      	ldr	r2, [pc, #252]	; (8006cb0 <HAL_DMA_IRQHandler+0xa54>)
 8006bb4:	4293      	cmp	r3, r2
 8006bb6:	d013      	beq.n	8006be0 <HAL_DMA_IRQHandler+0x984>
 8006bb8:	687b      	ldr	r3, [r7, #4]
 8006bba:	681b      	ldr	r3, [r3, #0]
 8006bbc:	4a3d      	ldr	r2, [pc, #244]	; (8006cb4 <HAL_DMA_IRQHandler+0xa58>)
 8006bbe:	4293      	cmp	r3, r2
 8006bc0:	d00e      	beq.n	8006be0 <HAL_DMA_IRQHandler+0x984>
 8006bc2:	687b      	ldr	r3, [r7, #4]
 8006bc4:	681b      	ldr	r3, [r3, #0]
 8006bc6:	4a3c      	ldr	r2, [pc, #240]	; (8006cb8 <HAL_DMA_IRQHandler+0xa5c>)
 8006bc8:	4293      	cmp	r3, r2
 8006bca:	d009      	beq.n	8006be0 <HAL_DMA_IRQHandler+0x984>
 8006bcc:	687b      	ldr	r3, [r7, #4]
 8006bce:	681b      	ldr	r3, [r3, #0]
 8006bd0:	4a3a      	ldr	r2, [pc, #232]	; (8006cbc <HAL_DMA_IRQHandler+0xa60>)
 8006bd2:	4293      	cmp	r3, r2
 8006bd4:	d004      	beq.n	8006be0 <HAL_DMA_IRQHandler+0x984>
 8006bd6:	687b      	ldr	r3, [r7, #4]
 8006bd8:	681b      	ldr	r3, [r3, #0]
 8006bda:	4a39      	ldr	r2, [pc, #228]	; (8006cc0 <HAL_DMA_IRQHandler+0xa64>)
 8006bdc:	4293      	cmp	r3, r2
 8006bde:	d101      	bne.n	8006be4 <HAL_DMA_IRQHandler+0x988>
 8006be0:	2301      	movs	r3, #1
 8006be2:	e000      	b.n	8006be6 <HAL_DMA_IRQHandler+0x98a>
 8006be4:	2300      	movs	r3, #0
 8006be6:	2b00      	cmp	r3, #0
 8006be8:	f000 823f 	beq.w	800706a <HAL_DMA_IRQHandler+0xe0e>
 8006bec:	687b      	ldr	r3, [r7, #4]
 8006bee:	681b      	ldr	r3, [r3, #0]
 8006bf0:	681b      	ldr	r3, [r3, #0]
 8006bf2:	613b      	str	r3, [r7, #16]
 8006bf4:	687b      	ldr	r3, [r7, #4]
 8006bf6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8006bf8:	f003 031f 	and.w	r3, r3, #31
 8006bfc:	2204      	movs	r2, #4
 8006bfe:	409a      	lsls	r2, r3
 8006c00:	697b      	ldr	r3, [r7, #20]
 8006c02:	4013      	ands	r3, r2
 8006c04:	2b00      	cmp	r3, #0
 8006c06:	f000 80cd 	beq.w	8006da4 <HAL_DMA_IRQHandler+0xb48>
 8006c0a:	693b      	ldr	r3, [r7, #16]
 8006c0c:	f003 0304 	and.w	r3, r3, #4
 8006c10:	2b00      	cmp	r3, #0
 8006c12:	f000 80c7 	beq.w	8006da4 <HAL_DMA_IRQHandler+0xb48>
 8006c16:	687b      	ldr	r3, [r7, #4]
 8006c18:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8006c1a:	f003 031f 	and.w	r3, r3, #31
 8006c1e:	2204      	movs	r2, #4
 8006c20:	409a      	lsls	r2, r3
 8006c22:	69fb      	ldr	r3, [r7, #28]
 8006c24:	605a      	str	r2, [r3, #4]
 8006c26:	693b      	ldr	r3, [r7, #16]
 8006c28:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8006c2c:	2b00      	cmp	r3, #0
 8006c2e:	d049      	beq.n	8006cc4 <HAL_DMA_IRQHandler+0xa68>
 8006c30:	693b      	ldr	r3, [r7, #16]
 8006c32:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8006c36:	2b00      	cmp	r3, #0
 8006c38:	d109      	bne.n	8006c4e <HAL_DMA_IRQHandler+0x9f2>
 8006c3a:	687b      	ldr	r3, [r7, #4]
 8006c3c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8006c3e:	2b00      	cmp	r3, #0
 8006c40:	f000 8210 	beq.w	8007064 <HAL_DMA_IRQHandler+0xe08>
 8006c44:	687b      	ldr	r3, [r7, #4]
 8006c46:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8006c48:	6878      	ldr	r0, [r7, #4]
 8006c4a:	4798      	blx	r3
 8006c4c:	e20a      	b.n	8007064 <HAL_DMA_IRQHandler+0xe08>
 8006c4e:	687b      	ldr	r3, [r7, #4]
 8006c50:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006c52:	2b00      	cmp	r3, #0
 8006c54:	f000 8206 	beq.w	8007064 <HAL_DMA_IRQHandler+0xe08>
 8006c58:	687b      	ldr	r3, [r7, #4]
 8006c5a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006c5c:	6878      	ldr	r0, [r7, #4]
 8006c5e:	4798      	blx	r3
 8006c60:	e200      	b.n	8007064 <HAL_DMA_IRQHandler+0xe08>
 8006c62:	bf00      	nop
 8006c64:	40020010 	.word	0x40020010
 8006c68:	40020028 	.word	0x40020028
 8006c6c:	40020040 	.word	0x40020040
 8006c70:	40020058 	.word	0x40020058
 8006c74:	40020070 	.word	0x40020070
 8006c78:	40020088 	.word	0x40020088
 8006c7c:	400200a0 	.word	0x400200a0
 8006c80:	400200b8 	.word	0x400200b8
 8006c84:	40020410 	.word	0x40020410
 8006c88:	40020428 	.word	0x40020428
 8006c8c:	40020440 	.word	0x40020440
 8006c90:	40020458 	.word	0x40020458
 8006c94:	40020470 	.word	0x40020470
 8006c98:	40020488 	.word	0x40020488
 8006c9c:	400204a0 	.word	0x400204a0
 8006ca0:	400204b8 	.word	0x400204b8
 8006ca4:	58025408 	.word	0x58025408
 8006ca8:	5802541c 	.word	0x5802541c
 8006cac:	58025430 	.word	0x58025430
 8006cb0:	58025444 	.word	0x58025444
 8006cb4:	58025458 	.word	0x58025458
 8006cb8:	5802546c 	.word	0x5802546c
 8006cbc:	58025480 	.word	0x58025480
 8006cc0:	58025494 	.word	0x58025494
 8006cc4:	693b      	ldr	r3, [r7, #16]
 8006cc6:	f003 0320 	and.w	r3, r3, #32
 8006cca:	2b00      	cmp	r3, #0
 8006ccc:	d160      	bne.n	8006d90 <HAL_DMA_IRQHandler+0xb34>
 8006cce:	687b      	ldr	r3, [r7, #4]
 8006cd0:	681b      	ldr	r3, [r3, #0]
 8006cd2:	4a7f      	ldr	r2, [pc, #508]	; (8006ed0 <HAL_DMA_IRQHandler+0xc74>)
 8006cd4:	4293      	cmp	r3, r2
 8006cd6:	d04a      	beq.n	8006d6e <HAL_DMA_IRQHandler+0xb12>
 8006cd8:	687b      	ldr	r3, [r7, #4]
 8006cda:	681b      	ldr	r3, [r3, #0]
 8006cdc:	4a7d      	ldr	r2, [pc, #500]	; (8006ed4 <HAL_DMA_IRQHandler+0xc78>)
 8006cde:	4293      	cmp	r3, r2
 8006ce0:	d045      	beq.n	8006d6e <HAL_DMA_IRQHandler+0xb12>
 8006ce2:	687b      	ldr	r3, [r7, #4]
 8006ce4:	681b      	ldr	r3, [r3, #0]
 8006ce6:	4a7c      	ldr	r2, [pc, #496]	; (8006ed8 <HAL_DMA_IRQHandler+0xc7c>)
 8006ce8:	4293      	cmp	r3, r2
 8006cea:	d040      	beq.n	8006d6e <HAL_DMA_IRQHandler+0xb12>
 8006cec:	687b      	ldr	r3, [r7, #4]
 8006cee:	681b      	ldr	r3, [r3, #0]
 8006cf0:	4a7a      	ldr	r2, [pc, #488]	; (8006edc <HAL_DMA_IRQHandler+0xc80>)
 8006cf2:	4293      	cmp	r3, r2
 8006cf4:	d03b      	beq.n	8006d6e <HAL_DMA_IRQHandler+0xb12>
 8006cf6:	687b      	ldr	r3, [r7, #4]
 8006cf8:	681b      	ldr	r3, [r3, #0]
 8006cfa:	4a79      	ldr	r2, [pc, #484]	; (8006ee0 <HAL_DMA_IRQHandler+0xc84>)
 8006cfc:	4293      	cmp	r3, r2
 8006cfe:	d036      	beq.n	8006d6e <HAL_DMA_IRQHandler+0xb12>
 8006d00:	687b      	ldr	r3, [r7, #4]
 8006d02:	681b      	ldr	r3, [r3, #0]
 8006d04:	4a77      	ldr	r2, [pc, #476]	; (8006ee4 <HAL_DMA_IRQHandler+0xc88>)
 8006d06:	4293      	cmp	r3, r2
 8006d08:	d031      	beq.n	8006d6e <HAL_DMA_IRQHandler+0xb12>
 8006d0a:	687b      	ldr	r3, [r7, #4]
 8006d0c:	681b      	ldr	r3, [r3, #0]
 8006d0e:	4a76      	ldr	r2, [pc, #472]	; (8006ee8 <HAL_DMA_IRQHandler+0xc8c>)
 8006d10:	4293      	cmp	r3, r2
 8006d12:	d02c      	beq.n	8006d6e <HAL_DMA_IRQHandler+0xb12>
 8006d14:	687b      	ldr	r3, [r7, #4]
 8006d16:	681b      	ldr	r3, [r3, #0]
 8006d18:	4a74      	ldr	r2, [pc, #464]	; (8006eec <HAL_DMA_IRQHandler+0xc90>)
 8006d1a:	4293      	cmp	r3, r2
 8006d1c:	d027      	beq.n	8006d6e <HAL_DMA_IRQHandler+0xb12>
 8006d1e:	687b      	ldr	r3, [r7, #4]
 8006d20:	681b      	ldr	r3, [r3, #0]
 8006d22:	4a73      	ldr	r2, [pc, #460]	; (8006ef0 <HAL_DMA_IRQHandler+0xc94>)
 8006d24:	4293      	cmp	r3, r2
 8006d26:	d022      	beq.n	8006d6e <HAL_DMA_IRQHandler+0xb12>
 8006d28:	687b      	ldr	r3, [r7, #4]
 8006d2a:	681b      	ldr	r3, [r3, #0]
 8006d2c:	4a71      	ldr	r2, [pc, #452]	; (8006ef4 <HAL_DMA_IRQHandler+0xc98>)
 8006d2e:	4293      	cmp	r3, r2
 8006d30:	d01d      	beq.n	8006d6e <HAL_DMA_IRQHandler+0xb12>
 8006d32:	687b      	ldr	r3, [r7, #4]
 8006d34:	681b      	ldr	r3, [r3, #0]
 8006d36:	4a70      	ldr	r2, [pc, #448]	; (8006ef8 <HAL_DMA_IRQHandler+0xc9c>)
 8006d38:	4293      	cmp	r3, r2
 8006d3a:	d018      	beq.n	8006d6e <HAL_DMA_IRQHandler+0xb12>
 8006d3c:	687b      	ldr	r3, [r7, #4]
 8006d3e:	681b      	ldr	r3, [r3, #0]
 8006d40:	4a6e      	ldr	r2, [pc, #440]	; (8006efc <HAL_DMA_IRQHandler+0xca0>)
 8006d42:	4293      	cmp	r3, r2
 8006d44:	d013      	beq.n	8006d6e <HAL_DMA_IRQHandler+0xb12>
 8006d46:	687b      	ldr	r3, [r7, #4]
 8006d48:	681b      	ldr	r3, [r3, #0]
 8006d4a:	4a6d      	ldr	r2, [pc, #436]	; (8006f00 <HAL_DMA_IRQHandler+0xca4>)
 8006d4c:	4293      	cmp	r3, r2
 8006d4e:	d00e      	beq.n	8006d6e <HAL_DMA_IRQHandler+0xb12>
 8006d50:	687b      	ldr	r3, [r7, #4]
 8006d52:	681b      	ldr	r3, [r3, #0]
 8006d54:	4a6b      	ldr	r2, [pc, #428]	; (8006f04 <HAL_DMA_IRQHandler+0xca8>)
 8006d56:	4293      	cmp	r3, r2
 8006d58:	d009      	beq.n	8006d6e <HAL_DMA_IRQHandler+0xb12>
 8006d5a:	687b      	ldr	r3, [r7, #4]
 8006d5c:	681b      	ldr	r3, [r3, #0]
 8006d5e:	4a6a      	ldr	r2, [pc, #424]	; (8006f08 <HAL_DMA_IRQHandler+0xcac>)
 8006d60:	4293      	cmp	r3, r2
 8006d62:	d004      	beq.n	8006d6e <HAL_DMA_IRQHandler+0xb12>
 8006d64:	687b      	ldr	r3, [r7, #4]
 8006d66:	681b      	ldr	r3, [r3, #0]
 8006d68:	4a68      	ldr	r2, [pc, #416]	; (8006f0c <HAL_DMA_IRQHandler+0xcb0>)
 8006d6a:	4293      	cmp	r3, r2
 8006d6c:	d108      	bne.n	8006d80 <HAL_DMA_IRQHandler+0xb24>
 8006d6e:	687b      	ldr	r3, [r7, #4]
 8006d70:	681b      	ldr	r3, [r3, #0]
 8006d72:	681a      	ldr	r2, [r3, #0]
 8006d74:	687b      	ldr	r3, [r7, #4]
 8006d76:	681b      	ldr	r3, [r3, #0]
 8006d78:	f022 0208 	bic.w	r2, r2, #8
 8006d7c:	601a      	str	r2, [r3, #0]
 8006d7e:	e007      	b.n	8006d90 <HAL_DMA_IRQHandler+0xb34>
 8006d80:	687b      	ldr	r3, [r7, #4]
 8006d82:	681b      	ldr	r3, [r3, #0]
 8006d84:	681a      	ldr	r2, [r3, #0]
 8006d86:	687b      	ldr	r3, [r7, #4]
 8006d88:	681b      	ldr	r3, [r3, #0]
 8006d8a:	f022 0204 	bic.w	r2, r2, #4
 8006d8e:	601a      	str	r2, [r3, #0]
 8006d90:	687b      	ldr	r3, [r7, #4]
 8006d92:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006d94:	2b00      	cmp	r3, #0
 8006d96:	f000 8165 	beq.w	8007064 <HAL_DMA_IRQHandler+0xe08>
 8006d9a:	687b      	ldr	r3, [r7, #4]
 8006d9c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8006d9e:	6878      	ldr	r0, [r7, #4]
 8006da0:	4798      	blx	r3
 8006da2:	e15f      	b.n	8007064 <HAL_DMA_IRQHandler+0xe08>
 8006da4:	687b      	ldr	r3, [r7, #4]
 8006da6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8006da8:	f003 031f 	and.w	r3, r3, #31
 8006dac:	2202      	movs	r2, #2
 8006dae:	409a      	lsls	r2, r3
 8006db0:	697b      	ldr	r3, [r7, #20]
 8006db2:	4013      	ands	r3, r2
 8006db4:	2b00      	cmp	r3, #0
 8006db6:	f000 80c5 	beq.w	8006f44 <HAL_DMA_IRQHandler+0xce8>
 8006dba:	693b      	ldr	r3, [r7, #16]
 8006dbc:	f003 0302 	and.w	r3, r3, #2
 8006dc0:	2b00      	cmp	r3, #0
 8006dc2:	f000 80bf 	beq.w	8006f44 <HAL_DMA_IRQHandler+0xce8>
 8006dc6:	687b      	ldr	r3, [r7, #4]
 8006dc8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8006dca:	f003 031f 	and.w	r3, r3, #31
 8006dce:	2202      	movs	r2, #2
 8006dd0:	409a      	lsls	r2, r3
 8006dd2:	69fb      	ldr	r3, [r7, #28]
 8006dd4:	605a      	str	r2, [r3, #4]
 8006dd6:	693b      	ldr	r3, [r7, #16]
 8006dd8:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8006ddc:	2b00      	cmp	r3, #0
 8006dde:	d018      	beq.n	8006e12 <HAL_DMA_IRQHandler+0xbb6>
 8006de0:	693b      	ldr	r3, [r7, #16]
 8006de2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8006de6:	2b00      	cmp	r3, #0
 8006de8:	d109      	bne.n	8006dfe <HAL_DMA_IRQHandler+0xba2>
 8006dea:	687b      	ldr	r3, [r7, #4]
 8006dec:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006dee:	2b00      	cmp	r3, #0
 8006df0:	f000 813a 	beq.w	8007068 <HAL_DMA_IRQHandler+0xe0c>
 8006df4:	687b      	ldr	r3, [r7, #4]
 8006df6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8006df8:	6878      	ldr	r0, [r7, #4]
 8006dfa:	4798      	blx	r3
 8006dfc:	e134      	b.n	8007068 <HAL_DMA_IRQHandler+0xe0c>
 8006dfe:	687b      	ldr	r3, [r7, #4]
 8006e00:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006e02:	2b00      	cmp	r3, #0
 8006e04:	f000 8130 	beq.w	8007068 <HAL_DMA_IRQHandler+0xe0c>
 8006e08:	687b      	ldr	r3, [r7, #4]
 8006e0a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006e0c:	6878      	ldr	r0, [r7, #4]
 8006e0e:	4798      	blx	r3
 8006e10:	e12a      	b.n	8007068 <HAL_DMA_IRQHandler+0xe0c>
 8006e12:	693b      	ldr	r3, [r7, #16]
 8006e14:	f003 0320 	and.w	r3, r3, #32
 8006e18:	2b00      	cmp	r3, #0
 8006e1a:	f040 8089 	bne.w	8006f30 <HAL_DMA_IRQHandler+0xcd4>
 8006e1e:	687b      	ldr	r3, [r7, #4]
 8006e20:	681b      	ldr	r3, [r3, #0]
 8006e22:	4a2b      	ldr	r2, [pc, #172]	; (8006ed0 <HAL_DMA_IRQHandler+0xc74>)
 8006e24:	4293      	cmp	r3, r2
 8006e26:	d04a      	beq.n	8006ebe <HAL_DMA_IRQHandler+0xc62>
 8006e28:	687b      	ldr	r3, [r7, #4]
 8006e2a:	681b      	ldr	r3, [r3, #0]
 8006e2c:	4a29      	ldr	r2, [pc, #164]	; (8006ed4 <HAL_DMA_IRQHandler+0xc78>)
 8006e2e:	4293      	cmp	r3, r2
 8006e30:	d045      	beq.n	8006ebe <HAL_DMA_IRQHandler+0xc62>
 8006e32:	687b      	ldr	r3, [r7, #4]
 8006e34:	681b      	ldr	r3, [r3, #0]
 8006e36:	4a28      	ldr	r2, [pc, #160]	; (8006ed8 <HAL_DMA_IRQHandler+0xc7c>)
 8006e38:	4293      	cmp	r3, r2
 8006e3a:	d040      	beq.n	8006ebe <HAL_DMA_IRQHandler+0xc62>
 8006e3c:	687b      	ldr	r3, [r7, #4]
 8006e3e:	681b      	ldr	r3, [r3, #0]
 8006e40:	4a26      	ldr	r2, [pc, #152]	; (8006edc <HAL_DMA_IRQHandler+0xc80>)
 8006e42:	4293      	cmp	r3, r2
 8006e44:	d03b      	beq.n	8006ebe <HAL_DMA_IRQHandler+0xc62>
 8006e46:	687b      	ldr	r3, [r7, #4]
 8006e48:	681b      	ldr	r3, [r3, #0]
 8006e4a:	4a25      	ldr	r2, [pc, #148]	; (8006ee0 <HAL_DMA_IRQHandler+0xc84>)
 8006e4c:	4293      	cmp	r3, r2
 8006e4e:	d036      	beq.n	8006ebe <HAL_DMA_IRQHandler+0xc62>
 8006e50:	687b      	ldr	r3, [r7, #4]
 8006e52:	681b      	ldr	r3, [r3, #0]
 8006e54:	4a23      	ldr	r2, [pc, #140]	; (8006ee4 <HAL_DMA_IRQHandler+0xc88>)
 8006e56:	4293      	cmp	r3, r2
 8006e58:	d031      	beq.n	8006ebe <HAL_DMA_IRQHandler+0xc62>
 8006e5a:	687b      	ldr	r3, [r7, #4]
 8006e5c:	681b      	ldr	r3, [r3, #0]
 8006e5e:	4a22      	ldr	r2, [pc, #136]	; (8006ee8 <HAL_DMA_IRQHandler+0xc8c>)
 8006e60:	4293      	cmp	r3, r2
 8006e62:	d02c      	beq.n	8006ebe <HAL_DMA_IRQHandler+0xc62>
 8006e64:	687b      	ldr	r3, [r7, #4]
 8006e66:	681b      	ldr	r3, [r3, #0]
 8006e68:	4a20      	ldr	r2, [pc, #128]	; (8006eec <HAL_DMA_IRQHandler+0xc90>)
 8006e6a:	4293      	cmp	r3, r2
 8006e6c:	d027      	beq.n	8006ebe <HAL_DMA_IRQHandler+0xc62>
 8006e6e:	687b      	ldr	r3, [r7, #4]
 8006e70:	681b      	ldr	r3, [r3, #0]
 8006e72:	4a1f      	ldr	r2, [pc, #124]	; (8006ef0 <HAL_DMA_IRQHandler+0xc94>)
 8006e74:	4293      	cmp	r3, r2
 8006e76:	d022      	beq.n	8006ebe <HAL_DMA_IRQHandler+0xc62>
 8006e78:	687b      	ldr	r3, [r7, #4]
 8006e7a:	681b      	ldr	r3, [r3, #0]
 8006e7c:	4a1d      	ldr	r2, [pc, #116]	; (8006ef4 <HAL_DMA_IRQHandler+0xc98>)
 8006e7e:	4293      	cmp	r3, r2
 8006e80:	d01d      	beq.n	8006ebe <HAL_DMA_IRQHandler+0xc62>
 8006e82:	687b      	ldr	r3, [r7, #4]
 8006e84:	681b      	ldr	r3, [r3, #0]
 8006e86:	4a1c      	ldr	r2, [pc, #112]	; (8006ef8 <HAL_DMA_IRQHandler+0xc9c>)
 8006e88:	4293      	cmp	r3, r2
 8006e8a:	d018      	beq.n	8006ebe <HAL_DMA_IRQHandler+0xc62>
 8006e8c:	687b      	ldr	r3, [r7, #4]
 8006e8e:	681b      	ldr	r3, [r3, #0]
 8006e90:	4a1a      	ldr	r2, [pc, #104]	; (8006efc <HAL_DMA_IRQHandler+0xca0>)
 8006e92:	4293      	cmp	r3, r2
 8006e94:	d013      	beq.n	8006ebe <HAL_DMA_IRQHandler+0xc62>
 8006e96:	687b      	ldr	r3, [r7, #4]
 8006e98:	681b      	ldr	r3, [r3, #0]
 8006e9a:	4a19      	ldr	r2, [pc, #100]	; (8006f00 <HAL_DMA_IRQHandler+0xca4>)
 8006e9c:	4293      	cmp	r3, r2
 8006e9e:	d00e      	beq.n	8006ebe <HAL_DMA_IRQHandler+0xc62>
 8006ea0:	687b      	ldr	r3, [r7, #4]
 8006ea2:	681b      	ldr	r3, [r3, #0]
 8006ea4:	4a17      	ldr	r2, [pc, #92]	; (8006f04 <HAL_DMA_IRQHandler+0xca8>)
 8006ea6:	4293      	cmp	r3, r2
 8006ea8:	d009      	beq.n	8006ebe <HAL_DMA_IRQHandler+0xc62>
 8006eaa:	687b      	ldr	r3, [r7, #4]
 8006eac:	681b      	ldr	r3, [r3, #0]
 8006eae:	4a16      	ldr	r2, [pc, #88]	; (8006f08 <HAL_DMA_IRQHandler+0xcac>)
 8006eb0:	4293      	cmp	r3, r2
 8006eb2:	d004      	beq.n	8006ebe <HAL_DMA_IRQHandler+0xc62>
 8006eb4:	687b      	ldr	r3, [r7, #4]
 8006eb6:	681b      	ldr	r3, [r3, #0]
 8006eb8:	4a14      	ldr	r2, [pc, #80]	; (8006f0c <HAL_DMA_IRQHandler+0xcb0>)
 8006eba:	4293      	cmp	r3, r2
 8006ebc:	d128      	bne.n	8006f10 <HAL_DMA_IRQHandler+0xcb4>
 8006ebe:	687b      	ldr	r3, [r7, #4]
 8006ec0:	681b      	ldr	r3, [r3, #0]
 8006ec2:	681a      	ldr	r2, [r3, #0]
 8006ec4:	687b      	ldr	r3, [r7, #4]
 8006ec6:	681b      	ldr	r3, [r3, #0]
 8006ec8:	f022 0214 	bic.w	r2, r2, #20
 8006ecc:	601a      	str	r2, [r3, #0]
 8006ece:	e027      	b.n	8006f20 <HAL_DMA_IRQHandler+0xcc4>
 8006ed0:	40020010 	.word	0x40020010
 8006ed4:	40020028 	.word	0x40020028
 8006ed8:	40020040 	.word	0x40020040
 8006edc:	40020058 	.word	0x40020058
 8006ee0:	40020070 	.word	0x40020070
 8006ee4:	40020088 	.word	0x40020088
 8006ee8:	400200a0 	.word	0x400200a0
 8006eec:	400200b8 	.word	0x400200b8
 8006ef0:	40020410 	.word	0x40020410
 8006ef4:	40020428 	.word	0x40020428
 8006ef8:	40020440 	.word	0x40020440
 8006efc:	40020458 	.word	0x40020458
 8006f00:	40020470 	.word	0x40020470
 8006f04:	40020488 	.word	0x40020488
 8006f08:	400204a0 	.word	0x400204a0
 8006f0c:	400204b8 	.word	0x400204b8
 8006f10:	687b      	ldr	r3, [r7, #4]
 8006f12:	681b      	ldr	r3, [r3, #0]
 8006f14:	681a      	ldr	r2, [r3, #0]
 8006f16:	687b      	ldr	r3, [r7, #4]
 8006f18:	681b      	ldr	r3, [r3, #0]
 8006f1a:	f022 020a 	bic.w	r2, r2, #10
 8006f1e:	601a      	str	r2, [r3, #0]
 8006f20:	687b      	ldr	r3, [r7, #4]
 8006f22:	2201      	movs	r2, #1
 8006f24:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8006f28:	687b      	ldr	r3, [r7, #4]
 8006f2a:	2200      	movs	r2, #0
 8006f2c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8006f30:	687b      	ldr	r3, [r7, #4]
 8006f32:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006f34:	2b00      	cmp	r3, #0
 8006f36:	f000 8097 	beq.w	8007068 <HAL_DMA_IRQHandler+0xe0c>
 8006f3a:	687b      	ldr	r3, [r7, #4]
 8006f3c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8006f3e:	6878      	ldr	r0, [r7, #4]
 8006f40:	4798      	blx	r3
 8006f42:	e091      	b.n	8007068 <HAL_DMA_IRQHandler+0xe0c>
 8006f44:	687b      	ldr	r3, [r7, #4]
 8006f46:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8006f48:	f003 031f 	and.w	r3, r3, #31
 8006f4c:	2208      	movs	r2, #8
 8006f4e:	409a      	lsls	r2, r3
 8006f50:	697b      	ldr	r3, [r7, #20]
 8006f52:	4013      	ands	r3, r2
 8006f54:	2b00      	cmp	r3, #0
 8006f56:	f000 8088 	beq.w	800706a <HAL_DMA_IRQHandler+0xe0e>
 8006f5a:	693b      	ldr	r3, [r7, #16]
 8006f5c:	f003 0308 	and.w	r3, r3, #8
 8006f60:	2b00      	cmp	r3, #0
 8006f62:	f000 8082 	beq.w	800706a <HAL_DMA_IRQHandler+0xe0e>
 8006f66:	687b      	ldr	r3, [r7, #4]
 8006f68:	681b      	ldr	r3, [r3, #0]
 8006f6a:	4a41      	ldr	r2, [pc, #260]	; (8007070 <HAL_DMA_IRQHandler+0xe14>)
 8006f6c:	4293      	cmp	r3, r2
 8006f6e:	d04a      	beq.n	8007006 <HAL_DMA_IRQHandler+0xdaa>
 8006f70:	687b      	ldr	r3, [r7, #4]
 8006f72:	681b      	ldr	r3, [r3, #0]
 8006f74:	4a3f      	ldr	r2, [pc, #252]	; (8007074 <HAL_DMA_IRQHandler+0xe18>)
 8006f76:	4293      	cmp	r3, r2
 8006f78:	d045      	beq.n	8007006 <HAL_DMA_IRQHandler+0xdaa>
 8006f7a:	687b      	ldr	r3, [r7, #4]
 8006f7c:	681b      	ldr	r3, [r3, #0]
 8006f7e:	4a3e      	ldr	r2, [pc, #248]	; (8007078 <HAL_DMA_IRQHandler+0xe1c>)
 8006f80:	4293      	cmp	r3, r2
 8006f82:	d040      	beq.n	8007006 <HAL_DMA_IRQHandler+0xdaa>
 8006f84:	687b      	ldr	r3, [r7, #4]
 8006f86:	681b      	ldr	r3, [r3, #0]
 8006f88:	4a3c      	ldr	r2, [pc, #240]	; (800707c <HAL_DMA_IRQHandler+0xe20>)
 8006f8a:	4293      	cmp	r3, r2
 8006f8c:	d03b      	beq.n	8007006 <HAL_DMA_IRQHandler+0xdaa>
 8006f8e:	687b      	ldr	r3, [r7, #4]
 8006f90:	681b      	ldr	r3, [r3, #0]
 8006f92:	4a3b      	ldr	r2, [pc, #236]	; (8007080 <HAL_DMA_IRQHandler+0xe24>)
 8006f94:	4293      	cmp	r3, r2
 8006f96:	d036      	beq.n	8007006 <HAL_DMA_IRQHandler+0xdaa>
 8006f98:	687b      	ldr	r3, [r7, #4]
 8006f9a:	681b      	ldr	r3, [r3, #0]
 8006f9c:	4a39      	ldr	r2, [pc, #228]	; (8007084 <HAL_DMA_IRQHandler+0xe28>)
 8006f9e:	4293      	cmp	r3, r2
 8006fa0:	d031      	beq.n	8007006 <HAL_DMA_IRQHandler+0xdaa>
 8006fa2:	687b      	ldr	r3, [r7, #4]
 8006fa4:	681b      	ldr	r3, [r3, #0]
 8006fa6:	4a38      	ldr	r2, [pc, #224]	; (8007088 <HAL_DMA_IRQHandler+0xe2c>)
 8006fa8:	4293      	cmp	r3, r2
 8006faa:	d02c      	beq.n	8007006 <HAL_DMA_IRQHandler+0xdaa>
 8006fac:	687b      	ldr	r3, [r7, #4]
 8006fae:	681b      	ldr	r3, [r3, #0]
 8006fb0:	4a36      	ldr	r2, [pc, #216]	; (800708c <HAL_DMA_IRQHandler+0xe30>)
 8006fb2:	4293      	cmp	r3, r2
 8006fb4:	d027      	beq.n	8007006 <HAL_DMA_IRQHandler+0xdaa>
 8006fb6:	687b      	ldr	r3, [r7, #4]
 8006fb8:	681b      	ldr	r3, [r3, #0]
 8006fba:	4a35      	ldr	r2, [pc, #212]	; (8007090 <HAL_DMA_IRQHandler+0xe34>)
 8006fbc:	4293      	cmp	r3, r2
 8006fbe:	d022      	beq.n	8007006 <HAL_DMA_IRQHandler+0xdaa>
 8006fc0:	687b      	ldr	r3, [r7, #4]
 8006fc2:	681b      	ldr	r3, [r3, #0]
 8006fc4:	4a33      	ldr	r2, [pc, #204]	; (8007094 <HAL_DMA_IRQHandler+0xe38>)
 8006fc6:	4293      	cmp	r3, r2
 8006fc8:	d01d      	beq.n	8007006 <HAL_DMA_IRQHandler+0xdaa>
 8006fca:	687b      	ldr	r3, [r7, #4]
 8006fcc:	681b      	ldr	r3, [r3, #0]
 8006fce:	4a32      	ldr	r2, [pc, #200]	; (8007098 <HAL_DMA_IRQHandler+0xe3c>)
 8006fd0:	4293      	cmp	r3, r2
 8006fd2:	d018      	beq.n	8007006 <HAL_DMA_IRQHandler+0xdaa>
 8006fd4:	687b      	ldr	r3, [r7, #4]
 8006fd6:	681b      	ldr	r3, [r3, #0]
 8006fd8:	4a30      	ldr	r2, [pc, #192]	; (800709c <HAL_DMA_IRQHandler+0xe40>)
 8006fda:	4293      	cmp	r3, r2
 8006fdc:	d013      	beq.n	8007006 <HAL_DMA_IRQHandler+0xdaa>
 8006fde:	687b      	ldr	r3, [r7, #4]
 8006fe0:	681b      	ldr	r3, [r3, #0]
 8006fe2:	4a2f      	ldr	r2, [pc, #188]	; (80070a0 <HAL_DMA_IRQHandler+0xe44>)
 8006fe4:	4293      	cmp	r3, r2
 8006fe6:	d00e      	beq.n	8007006 <HAL_DMA_IRQHandler+0xdaa>
 8006fe8:	687b      	ldr	r3, [r7, #4]
 8006fea:	681b      	ldr	r3, [r3, #0]
 8006fec:	4a2d      	ldr	r2, [pc, #180]	; (80070a4 <HAL_DMA_IRQHandler+0xe48>)
 8006fee:	4293      	cmp	r3, r2
 8006ff0:	d009      	beq.n	8007006 <HAL_DMA_IRQHandler+0xdaa>
 8006ff2:	687b      	ldr	r3, [r7, #4]
 8006ff4:	681b      	ldr	r3, [r3, #0]
 8006ff6:	4a2c      	ldr	r2, [pc, #176]	; (80070a8 <HAL_DMA_IRQHandler+0xe4c>)
 8006ff8:	4293      	cmp	r3, r2
 8006ffa:	d004      	beq.n	8007006 <HAL_DMA_IRQHandler+0xdaa>
 8006ffc:	687b      	ldr	r3, [r7, #4]
 8006ffe:	681b      	ldr	r3, [r3, #0]
 8007000:	4a2a      	ldr	r2, [pc, #168]	; (80070ac <HAL_DMA_IRQHandler+0xe50>)
 8007002:	4293      	cmp	r3, r2
 8007004:	d108      	bne.n	8007018 <HAL_DMA_IRQHandler+0xdbc>
 8007006:	687b      	ldr	r3, [r7, #4]
 8007008:	681b      	ldr	r3, [r3, #0]
 800700a:	681a      	ldr	r2, [r3, #0]
 800700c:	687b      	ldr	r3, [r7, #4]
 800700e:	681b      	ldr	r3, [r3, #0]
 8007010:	f022 021c 	bic.w	r2, r2, #28
 8007014:	601a      	str	r2, [r3, #0]
 8007016:	e007      	b.n	8007028 <HAL_DMA_IRQHandler+0xdcc>
 8007018:	687b      	ldr	r3, [r7, #4]
 800701a:	681b      	ldr	r3, [r3, #0]
 800701c:	681a      	ldr	r2, [r3, #0]
 800701e:	687b      	ldr	r3, [r7, #4]
 8007020:	681b      	ldr	r3, [r3, #0]
 8007022:	f022 020e 	bic.w	r2, r2, #14
 8007026:	601a      	str	r2, [r3, #0]
 8007028:	687b      	ldr	r3, [r7, #4]
 800702a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800702c:	f003 031f 	and.w	r3, r3, #31
 8007030:	2201      	movs	r2, #1
 8007032:	409a      	lsls	r2, r3
 8007034:	69fb      	ldr	r3, [r7, #28]
 8007036:	605a      	str	r2, [r3, #4]
 8007038:	687b      	ldr	r3, [r7, #4]
 800703a:	2201      	movs	r2, #1
 800703c:	655a      	str	r2, [r3, #84]	; 0x54
 800703e:	687b      	ldr	r3, [r7, #4]
 8007040:	2201      	movs	r2, #1
 8007042:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8007046:	687b      	ldr	r3, [r7, #4]
 8007048:	2200      	movs	r2, #0
 800704a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800704e:	687b      	ldr	r3, [r7, #4]
 8007050:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007052:	2b00      	cmp	r3, #0
 8007054:	d009      	beq.n	800706a <HAL_DMA_IRQHandler+0xe0e>
 8007056:	687b      	ldr	r3, [r7, #4]
 8007058:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800705a:	6878      	ldr	r0, [r7, #4]
 800705c:	4798      	blx	r3
 800705e:	e004      	b.n	800706a <HAL_DMA_IRQHandler+0xe0e>
 8007060:	bf00      	nop
 8007062:	e002      	b.n	800706a <HAL_DMA_IRQHandler+0xe0e>
 8007064:	bf00      	nop
 8007066:	e000      	b.n	800706a <HAL_DMA_IRQHandler+0xe0e>
 8007068:	bf00      	nop
 800706a:	3728      	adds	r7, #40	; 0x28
 800706c:	46bd      	mov	sp, r7
 800706e:	bd80      	pop	{r7, pc}
 8007070:	40020010 	.word	0x40020010
 8007074:	40020028 	.word	0x40020028
 8007078:	40020040 	.word	0x40020040
 800707c:	40020058 	.word	0x40020058
 8007080:	40020070 	.word	0x40020070
 8007084:	40020088 	.word	0x40020088
 8007088:	400200a0 	.word	0x400200a0
 800708c:	400200b8 	.word	0x400200b8
 8007090:	40020410 	.word	0x40020410
 8007094:	40020428 	.word	0x40020428
 8007098:	40020440 	.word	0x40020440
 800709c:	40020458 	.word	0x40020458
 80070a0:	40020470 	.word	0x40020470
 80070a4:	40020488 	.word	0x40020488
 80070a8:	400204a0 	.word	0x400204a0
 80070ac:	400204b8 	.word	0x400204b8

080070b0 <DMA_SetConfig>:
 80070b0:	b480      	push	{r7}
 80070b2:	b087      	sub	sp, #28
 80070b4:	af00      	add	r7, sp, #0
 80070b6:	60f8      	str	r0, [r7, #12]
 80070b8:	60b9      	str	r1, [r7, #8]
 80070ba:	607a      	str	r2, [r7, #4]
 80070bc:	603b      	str	r3, [r7, #0]
 80070be:	68fb      	ldr	r3, [r7, #12]
 80070c0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80070c2:	617b      	str	r3, [r7, #20]
 80070c4:	68fb      	ldr	r3, [r7, #12]
 80070c6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80070c8:	613b      	str	r3, [r7, #16]
 80070ca:	68fb      	ldr	r3, [r7, #12]
 80070cc:	681b      	ldr	r3, [r3, #0]
 80070ce:	4a7f      	ldr	r2, [pc, #508]	; (80072cc <DMA_SetConfig+0x21c>)
 80070d0:	4293      	cmp	r3, r2
 80070d2:	d072      	beq.n	80071ba <DMA_SetConfig+0x10a>
 80070d4:	68fb      	ldr	r3, [r7, #12]
 80070d6:	681b      	ldr	r3, [r3, #0]
 80070d8:	4a7d      	ldr	r2, [pc, #500]	; (80072d0 <DMA_SetConfig+0x220>)
 80070da:	4293      	cmp	r3, r2
 80070dc:	d06d      	beq.n	80071ba <DMA_SetConfig+0x10a>
 80070de:	68fb      	ldr	r3, [r7, #12]
 80070e0:	681b      	ldr	r3, [r3, #0]
 80070e2:	4a7c      	ldr	r2, [pc, #496]	; (80072d4 <DMA_SetConfig+0x224>)
 80070e4:	4293      	cmp	r3, r2
 80070e6:	d068      	beq.n	80071ba <DMA_SetConfig+0x10a>
 80070e8:	68fb      	ldr	r3, [r7, #12]
 80070ea:	681b      	ldr	r3, [r3, #0]
 80070ec:	4a7a      	ldr	r2, [pc, #488]	; (80072d8 <DMA_SetConfig+0x228>)
 80070ee:	4293      	cmp	r3, r2
 80070f0:	d063      	beq.n	80071ba <DMA_SetConfig+0x10a>
 80070f2:	68fb      	ldr	r3, [r7, #12]
 80070f4:	681b      	ldr	r3, [r3, #0]
 80070f6:	4a79      	ldr	r2, [pc, #484]	; (80072dc <DMA_SetConfig+0x22c>)
 80070f8:	4293      	cmp	r3, r2
 80070fa:	d05e      	beq.n	80071ba <DMA_SetConfig+0x10a>
 80070fc:	68fb      	ldr	r3, [r7, #12]
 80070fe:	681b      	ldr	r3, [r3, #0]
 8007100:	4a77      	ldr	r2, [pc, #476]	; (80072e0 <DMA_SetConfig+0x230>)
 8007102:	4293      	cmp	r3, r2
 8007104:	d059      	beq.n	80071ba <DMA_SetConfig+0x10a>
 8007106:	68fb      	ldr	r3, [r7, #12]
 8007108:	681b      	ldr	r3, [r3, #0]
 800710a:	4a76      	ldr	r2, [pc, #472]	; (80072e4 <DMA_SetConfig+0x234>)
 800710c:	4293      	cmp	r3, r2
 800710e:	d054      	beq.n	80071ba <DMA_SetConfig+0x10a>
 8007110:	68fb      	ldr	r3, [r7, #12]
 8007112:	681b      	ldr	r3, [r3, #0]
 8007114:	4a74      	ldr	r2, [pc, #464]	; (80072e8 <DMA_SetConfig+0x238>)
 8007116:	4293      	cmp	r3, r2
 8007118:	d04f      	beq.n	80071ba <DMA_SetConfig+0x10a>
 800711a:	68fb      	ldr	r3, [r7, #12]
 800711c:	681b      	ldr	r3, [r3, #0]
 800711e:	4a73      	ldr	r2, [pc, #460]	; (80072ec <DMA_SetConfig+0x23c>)
 8007120:	4293      	cmp	r3, r2
 8007122:	d04a      	beq.n	80071ba <DMA_SetConfig+0x10a>
 8007124:	68fb      	ldr	r3, [r7, #12]
 8007126:	681b      	ldr	r3, [r3, #0]
 8007128:	4a71      	ldr	r2, [pc, #452]	; (80072f0 <DMA_SetConfig+0x240>)
 800712a:	4293      	cmp	r3, r2
 800712c:	d045      	beq.n	80071ba <DMA_SetConfig+0x10a>
 800712e:	68fb      	ldr	r3, [r7, #12]
 8007130:	681b      	ldr	r3, [r3, #0]
 8007132:	4a70      	ldr	r2, [pc, #448]	; (80072f4 <DMA_SetConfig+0x244>)
 8007134:	4293      	cmp	r3, r2
 8007136:	d040      	beq.n	80071ba <DMA_SetConfig+0x10a>
 8007138:	68fb      	ldr	r3, [r7, #12]
 800713a:	681b      	ldr	r3, [r3, #0]
 800713c:	4a6e      	ldr	r2, [pc, #440]	; (80072f8 <DMA_SetConfig+0x248>)
 800713e:	4293      	cmp	r3, r2
 8007140:	d03b      	beq.n	80071ba <DMA_SetConfig+0x10a>
 8007142:	68fb      	ldr	r3, [r7, #12]
 8007144:	681b      	ldr	r3, [r3, #0]
 8007146:	4a6d      	ldr	r2, [pc, #436]	; (80072fc <DMA_SetConfig+0x24c>)
 8007148:	4293      	cmp	r3, r2
 800714a:	d036      	beq.n	80071ba <DMA_SetConfig+0x10a>
 800714c:	68fb      	ldr	r3, [r7, #12]
 800714e:	681b      	ldr	r3, [r3, #0]
 8007150:	4a6b      	ldr	r2, [pc, #428]	; (8007300 <DMA_SetConfig+0x250>)
 8007152:	4293      	cmp	r3, r2
 8007154:	d031      	beq.n	80071ba <DMA_SetConfig+0x10a>
 8007156:	68fb      	ldr	r3, [r7, #12]
 8007158:	681b      	ldr	r3, [r3, #0]
 800715a:	4a6a      	ldr	r2, [pc, #424]	; (8007304 <DMA_SetConfig+0x254>)
 800715c:	4293      	cmp	r3, r2
 800715e:	d02c      	beq.n	80071ba <DMA_SetConfig+0x10a>
 8007160:	68fb      	ldr	r3, [r7, #12]
 8007162:	681b      	ldr	r3, [r3, #0]
 8007164:	4a68      	ldr	r2, [pc, #416]	; (8007308 <DMA_SetConfig+0x258>)
 8007166:	4293      	cmp	r3, r2
 8007168:	d027      	beq.n	80071ba <DMA_SetConfig+0x10a>
 800716a:	68fb      	ldr	r3, [r7, #12]
 800716c:	681b      	ldr	r3, [r3, #0]
 800716e:	4a67      	ldr	r2, [pc, #412]	; (800730c <DMA_SetConfig+0x25c>)
 8007170:	4293      	cmp	r3, r2
 8007172:	d022      	beq.n	80071ba <DMA_SetConfig+0x10a>
 8007174:	68fb      	ldr	r3, [r7, #12]
 8007176:	681b      	ldr	r3, [r3, #0]
 8007178:	4a65      	ldr	r2, [pc, #404]	; (8007310 <DMA_SetConfig+0x260>)
 800717a:	4293      	cmp	r3, r2
 800717c:	d01d      	beq.n	80071ba <DMA_SetConfig+0x10a>
 800717e:	68fb      	ldr	r3, [r7, #12]
 8007180:	681b      	ldr	r3, [r3, #0]
 8007182:	4a64      	ldr	r2, [pc, #400]	; (8007314 <DMA_SetConfig+0x264>)
 8007184:	4293      	cmp	r3, r2
 8007186:	d018      	beq.n	80071ba <DMA_SetConfig+0x10a>
 8007188:	68fb      	ldr	r3, [r7, #12]
 800718a:	681b      	ldr	r3, [r3, #0]
 800718c:	4a62      	ldr	r2, [pc, #392]	; (8007318 <DMA_SetConfig+0x268>)
 800718e:	4293      	cmp	r3, r2
 8007190:	d013      	beq.n	80071ba <DMA_SetConfig+0x10a>
 8007192:	68fb      	ldr	r3, [r7, #12]
 8007194:	681b      	ldr	r3, [r3, #0]
 8007196:	4a61      	ldr	r2, [pc, #388]	; (800731c <DMA_SetConfig+0x26c>)
 8007198:	4293      	cmp	r3, r2
 800719a:	d00e      	beq.n	80071ba <DMA_SetConfig+0x10a>
 800719c:	68fb      	ldr	r3, [r7, #12]
 800719e:	681b      	ldr	r3, [r3, #0]
 80071a0:	4a5f      	ldr	r2, [pc, #380]	; (8007320 <DMA_SetConfig+0x270>)
 80071a2:	4293      	cmp	r3, r2
 80071a4:	d009      	beq.n	80071ba <DMA_SetConfig+0x10a>
 80071a6:	68fb      	ldr	r3, [r7, #12]
 80071a8:	681b      	ldr	r3, [r3, #0]
 80071aa:	4a5e      	ldr	r2, [pc, #376]	; (8007324 <DMA_SetConfig+0x274>)
 80071ac:	4293      	cmp	r3, r2
 80071ae:	d004      	beq.n	80071ba <DMA_SetConfig+0x10a>
 80071b0:	68fb      	ldr	r3, [r7, #12]
 80071b2:	681b      	ldr	r3, [r3, #0]
 80071b4:	4a5c      	ldr	r2, [pc, #368]	; (8007328 <DMA_SetConfig+0x278>)
 80071b6:	4293      	cmp	r3, r2
 80071b8:	d101      	bne.n	80071be <DMA_SetConfig+0x10e>
 80071ba:	2301      	movs	r3, #1
 80071bc:	e000      	b.n	80071c0 <DMA_SetConfig+0x110>
 80071be:	2300      	movs	r3, #0
 80071c0:	2b00      	cmp	r3, #0
 80071c2:	d00d      	beq.n	80071e0 <DMA_SetConfig+0x130>
 80071c4:	68fb      	ldr	r3, [r7, #12]
 80071c6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80071c8:	68fa      	ldr	r2, [r7, #12]
 80071ca:	6e92      	ldr	r2, [r2, #104]	; 0x68
 80071cc:	605a      	str	r2, [r3, #4]
 80071ce:	68fb      	ldr	r3, [r7, #12]
 80071d0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80071d2:	2b00      	cmp	r3, #0
 80071d4:	d004      	beq.n	80071e0 <DMA_SetConfig+0x130>
 80071d6:	68fb      	ldr	r3, [r7, #12]
 80071d8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80071da:	68fa      	ldr	r2, [r7, #12]
 80071dc:	6f52      	ldr	r2, [r2, #116]	; 0x74
 80071de:	605a      	str	r2, [r3, #4]
 80071e0:	68fb      	ldr	r3, [r7, #12]
 80071e2:	681b      	ldr	r3, [r3, #0]
 80071e4:	4a39      	ldr	r2, [pc, #228]	; (80072cc <DMA_SetConfig+0x21c>)
 80071e6:	4293      	cmp	r3, r2
 80071e8:	d04a      	beq.n	8007280 <DMA_SetConfig+0x1d0>
 80071ea:	68fb      	ldr	r3, [r7, #12]
 80071ec:	681b      	ldr	r3, [r3, #0]
 80071ee:	4a38      	ldr	r2, [pc, #224]	; (80072d0 <DMA_SetConfig+0x220>)
 80071f0:	4293      	cmp	r3, r2
 80071f2:	d045      	beq.n	8007280 <DMA_SetConfig+0x1d0>
 80071f4:	68fb      	ldr	r3, [r7, #12]
 80071f6:	681b      	ldr	r3, [r3, #0]
 80071f8:	4a36      	ldr	r2, [pc, #216]	; (80072d4 <DMA_SetConfig+0x224>)
 80071fa:	4293      	cmp	r3, r2
 80071fc:	d040      	beq.n	8007280 <DMA_SetConfig+0x1d0>
 80071fe:	68fb      	ldr	r3, [r7, #12]
 8007200:	681b      	ldr	r3, [r3, #0]
 8007202:	4a35      	ldr	r2, [pc, #212]	; (80072d8 <DMA_SetConfig+0x228>)
 8007204:	4293      	cmp	r3, r2
 8007206:	d03b      	beq.n	8007280 <DMA_SetConfig+0x1d0>
 8007208:	68fb      	ldr	r3, [r7, #12]
 800720a:	681b      	ldr	r3, [r3, #0]
 800720c:	4a33      	ldr	r2, [pc, #204]	; (80072dc <DMA_SetConfig+0x22c>)
 800720e:	4293      	cmp	r3, r2
 8007210:	d036      	beq.n	8007280 <DMA_SetConfig+0x1d0>
 8007212:	68fb      	ldr	r3, [r7, #12]
 8007214:	681b      	ldr	r3, [r3, #0]
 8007216:	4a32      	ldr	r2, [pc, #200]	; (80072e0 <DMA_SetConfig+0x230>)
 8007218:	4293      	cmp	r3, r2
 800721a:	d031      	beq.n	8007280 <DMA_SetConfig+0x1d0>
 800721c:	68fb      	ldr	r3, [r7, #12]
 800721e:	681b      	ldr	r3, [r3, #0]
 8007220:	4a30      	ldr	r2, [pc, #192]	; (80072e4 <DMA_SetConfig+0x234>)
 8007222:	4293      	cmp	r3, r2
 8007224:	d02c      	beq.n	8007280 <DMA_SetConfig+0x1d0>
 8007226:	68fb      	ldr	r3, [r7, #12]
 8007228:	681b      	ldr	r3, [r3, #0]
 800722a:	4a2f      	ldr	r2, [pc, #188]	; (80072e8 <DMA_SetConfig+0x238>)
 800722c:	4293      	cmp	r3, r2
 800722e:	d027      	beq.n	8007280 <DMA_SetConfig+0x1d0>
 8007230:	68fb      	ldr	r3, [r7, #12]
 8007232:	681b      	ldr	r3, [r3, #0]
 8007234:	4a2d      	ldr	r2, [pc, #180]	; (80072ec <DMA_SetConfig+0x23c>)
 8007236:	4293      	cmp	r3, r2
 8007238:	d022      	beq.n	8007280 <DMA_SetConfig+0x1d0>
 800723a:	68fb      	ldr	r3, [r7, #12]
 800723c:	681b      	ldr	r3, [r3, #0]
 800723e:	4a2c      	ldr	r2, [pc, #176]	; (80072f0 <DMA_SetConfig+0x240>)
 8007240:	4293      	cmp	r3, r2
 8007242:	d01d      	beq.n	8007280 <DMA_SetConfig+0x1d0>
 8007244:	68fb      	ldr	r3, [r7, #12]
 8007246:	681b      	ldr	r3, [r3, #0]
 8007248:	4a2a      	ldr	r2, [pc, #168]	; (80072f4 <DMA_SetConfig+0x244>)
 800724a:	4293      	cmp	r3, r2
 800724c:	d018      	beq.n	8007280 <DMA_SetConfig+0x1d0>
 800724e:	68fb      	ldr	r3, [r7, #12]
 8007250:	681b      	ldr	r3, [r3, #0]
 8007252:	4a29      	ldr	r2, [pc, #164]	; (80072f8 <DMA_SetConfig+0x248>)
 8007254:	4293      	cmp	r3, r2
 8007256:	d013      	beq.n	8007280 <DMA_SetConfig+0x1d0>
 8007258:	68fb      	ldr	r3, [r7, #12]
 800725a:	681b      	ldr	r3, [r3, #0]
 800725c:	4a27      	ldr	r2, [pc, #156]	; (80072fc <DMA_SetConfig+0x24c>)
 800725e:	4293      	cmp	r3, r2
 8007260:	d00e      	beq.n	8007280 <DMA_SetConfig+0x1d0>
 8007262:	68fb      	ldr	r3, [r7, #12]
 8007264:	681b      	ldr	r3, [r3, #0]
 8007266:	4a26      	ldr	r2, [pc, #152]	; (8007300 <DMA_SetConfig+0x250>)
 8007268:	4293      	cmp	r3, r2
 800726a:	d009      	beq.n	8007280 <DMA_SetConfig+0x1d0>
 800726c:	68fb      	ldr	r3, [r7, #12]
 800726e:	681b      	ldr	r3, [r3, #0]
 8007270:	4a24      	ldr	r2, [pc, #144]	; (8007304 <DMA_SetConfig+0x254>)
 8007272:	4293      	cmp	r3, r2
 8007274:	d004      	beq.n	8007280 <DMA_SetConfig+0x1d0>
 8007276:	68fb      	ldr	r3, [r7, #12]
 8007278:	681b      	ldr	r3, [r3, #0]
 800727a:	4a23      	ldr	r2, [pc, #140]	; (8007308 <DMA_SetConfig+0x258>)
 800727c:	4293      	cmp	r3, r2
 800727e:	d101      	bne.n	8007284 <DMA_SetConfig+0x1d4>
 8007280:	2301      	movs	r3, #1
 8007282:	e000      	b.n	8007286 <DMA_SetConfig+0x1d6>
 8007284:	2300      	movs	r3, #0
 8007286:	2b00      	cmp	r3, #0
 8007288:	d059      	beq.n	800733e <DMA_SetConfig+0x28e>
 800728a:	68fb      	ldr	r3, [r7, #12]
 800728c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800728e:	f003 031f 	and.w	r3, r3, #31
 8007292:	223f      	movs	r2, #63	; 0x3f
 8007294:	409a      	lsls	r2, r3
 8007296:	697b      	ldr	r3, [r7, #20]
 8007298:	609a      	str	r2, [r3, #8]
 800729a:	68fb      	ldr	r3, [r7, #12]
 800729c:	681b      	ldr	r3, [r3, #0]
 800729e:	681a      	ldr	r2, [r3, #0]
 80072a0:	68fb      	ldr	r3, [r7, #12]
 80072a2:	681b      	ldr	r3, [r3, #0]
 80072a4:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 80072a8:	601a      	str	r2, [r3, #0]
 80072aa:	68fb      	ldr	r3, [r7, #12]
 80072ac:	681b      	ldr	r3, [r3, #0]
 80072ae:	683a      	ldr	r2, [r7, #0]
 80072b0:	605a      	str	r2, [r3, #4]
 80072b2:	68fb      	ldr	r3, [r7, #12]
 80072b4:	689b      	ldr	r3, [r3, #8]
 80072b6:	2b40      	cmp	r3, #64	; 0x40
 80072b8:	d138      	bne.n	800732c <DMA_SetConfig+0x27c>
 80072ba:	68fb      	ldr	r3, [r7, #12]
 80072bc:	681b      	ldr	r3, [r3, #0]
 80072be:	687a      	ldr	r2, [r7, #4]
 80072c0:	609a      	str	r2, [r3, #8]
 80072c2:	68fb      	ldr	r3, [r7, #12]
 80072c4:	681b      	ldr	r3, [r3, #0]
 80072c6:	68ba      	ldr	r2, [r7, #8]
 80072c8:	60da      	str	r2, [r3, #12]
 80072ca:	e086      	b.n	80073da <DMA_SetConfig+0x32a>
 80072cc:	40020010 	.word	0x40020010
 80072d0:	40020028 	.word	0x40020028
 80072d4:	40020040 	.word	0x40020040
 80072d8:	40020058 	.word	0x40020058
 80072dc:	40020070 	.word	0x40020070
 80072e0:	40020088 	.word	0x40020088
 80072e4:	400200a0 	.word	0x400200a0
 80072e8:	400200b8 	.word	0x400200b8
 80072ec:	40020410 	.word	0x40020410
 80072f0:	40020428 	.word	0x40020428
 80072f4:	40020440 	.word	0x40020440
 80072f8:	40020458 	.word	0x40020458
 80072fc:	40020470 	.word	0x40020470
 8007300:	40020488 	.word	0x40020488
 8007304:	400204a0 	.word	0x400204a0
 8007308:	400204b8 	.word	0x400204b8
 800730c:	58025408 	.word	0x58025408
 8007310:	5802541c 	.word	0x5802541c
 8007314:	58025430 	.word	0x58025430
 8007318:	58025444 	.word	0x58025444
 800731c:	58025458 	.word	0x58025458
 8007320:	5802546c 	.word	0x5802546c
 8007324:	58025480 	.word	0x58025480
 8007328:	58025494 	.word	0x58025494
 800732c:	68fb      	ldr	r3, [r7, #12]
 800732e:	681b      	ldr	r3, [r3, #0]
 8007330:	68ba      	ldr	r2, [r7, #8]
 8007332:	609a      	str	r2, [r3, #8]
 8007334:	68fb      	ldr	r3, [r7, #12]
 8007336:	681b      	ldr	r3, [r3, #0]
 8007338:	687a      	ldr	r2, [r7, #4]
 800733a:	60da      	str	r2, [r3, #12]
 800733c:	e04d      	b.n	80073da <DMA_SetConfig+0x32a>
 800733e:	68fb      	ldr	r3, [r7, #12]
 8007340:	681b      	ldr	r3, [r3, #0]
 8007342:	4a29      	ldr	r2, [pc, #164]	; (80073e8 <DMA_SetConfig+0x338>)
 8007344:	4293      	cmp	r3, r2
 8007346:	d022      	beq.n	800738e <DMA_SetConfig+0x2de>
 8007348:	68fb      	ldr	r3, [r7, #12]
 800734a:	681b      	ldr	r3, [r3, #0]
 800734c:	4a27      	ldr	r2, [pc, #156]	; (80073ec <DMA_SetConfig+0x33c>)
 800734e:	4293      	cmp	r3, r2
 8007350:	d01d      	beq.n	800738e <DMA_SetConfig+0x2de>
 8007352:	68fb      	ldr	r3, [r7, #12]
 8007354:	681b      	ldr	r3, [r3, #0]
 8007356:	4a26      	ldr	r2, [pc, #152]	; (80073f0 <DMA_SetConfig+0x340>)
 8007358:	4293      	cmp	r3, r2
 800735a:	d018      	beq.n	800738e <DMA_SetConfig+0x2de>
 800735c:	68fb      	ldr	r3, [r7, #12]
 800735e:	681b      	ldr	r3, [r3, #0]
 8007360:	4a24      	ldr	r2, [pc, #144]	; (80073f4 <DMA_SetConfig+0x344>)
 8007362:	4293      	cmp	r3, r2
 8007364:	d013      	beq.n	800738e <DMA_SetConfig+0x2de>
 8007366:	68fb      	ldr	r3, [r7, #12]
 8007368:	681b      	ldr	r3, [r3, #0]
 800736a:	4a23      	ldr	r2, [pc, #140]	; (80073f8 <DMA_SetConfig+0x348>)
 800736c:	4293      	cmp	r3, r2
 800736e:	d00e      	beq.n	800738e <DMA_SetConfig+0x2de>
 8007370:	68fb      	ldr	r3, [r7, #12]
 8007372:	681b      	ldr	r3, [r3, #0]
 8007374:	4a21      	ldr	r2, [pc, #132]	; (80073fc <DMA_SetConfig+0x34c>)
 8007376:	4293      	cmp	r3, r2
 8007378:	d009      	beq.n	800738e <DMA_SetConfig+0x2de>
 800737a:	68fb      	ldr	r3, [r7, #12]
 800737c:	681b      	ldr	r3, [r3, #0]
 800737e:	4a20      	ldr	r2, [pc, #128]	; (8007400 <DMA_SetConfig+0x350>)
 8007380:	4293      	cmp	r3, r2
 8007382:	d004      	beq.n	800738e <DMA_SetConfig+0x2de>
 8007384:	68fb      	ldr	r3, [r7, #12]
 8007386:	681b      	ldr	r3, [r3, #0]
 8007388:	4a1e      	ldr	r2, [pc, #120]	; (8007404 <DMA_SetConfig+0x354>)
 800738a:	4293      	cmp	r3, r2
 800738c:	d101      	bne.n	8007392 <DMA_SetConfig+0x2e2>
 800738e:	2301      	movs	r3, #1
 8007390:	e000      	b.n	8007394 <DMA_SetConfig+0x2e4>
 8007392:	2300      	movs	r3, #0
 8007394:	2b00      	cmp	r3, #0
 8007396:	d020      	beq.n	80073da <DMA_SetConfig+0x32a>
 8007398:	68fb      	ldr	r3, [r7, #12]
 800739a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800739c:	f003 031f 	and.w	r3, r3, #31
 80073a0:	2201      	movs	r2, #1
 80073a2:	409a      	lsls	r2, r3
 80073a4:	693b      	ldr	r3, [r7, #16]
 80073a6:	605a      	str	r2, [r3, #4]
 80073a8:	68fb      	ldr	r3, [r7, #12]
 80073aa:	681b      	ldr	r3, [r3, #0]
 80073ac:	683a      	ldr	r2, [r7, #0]
 80073ae:	605a      	str	r2, [r3, #4]
 80073b0:	68fb      	ldr	r3, [r7, #12]
 80073b2:	689b      	ldr	r3, [r3, #8]
 80073b4:	2b40      	cmp	r3, #64	; 0x40
 80073b6:	d108      	bne.n	80073ca <DMA_SetConfig+0x31a>
 80073b8:	68fb      	ldr	r3, [r7, #12]
 80073ba:	681b      	ldr	r3, [r3, #0]
 80073bc:	687a      	ldr	r2, [r7, #4]
 80073be:	609a      	str	r2, [r3, #8]
 80073c0:	68fb      	ldr	r3, [r7, #12]
 80073c2:	681b      	ldr	r3, [r3, #0]
 80073c4:	68ba      	ldr	r2, [r7, #8]
 80073c6:	60da      	str	r2, [r3, #12]
 80073c8:	e007      	b.n	80073da <DMA_SetConfig+0x32a>
 80073ca:	68fb      	ldr	r3, [r7, #12]
 80073cc:	681b      	ldr	r3, [r3, #0]
 80073ce:	68ba      	ldr	r2, [r7, #8]
 80073d0:	609a      	str	r2, [r3, #8]
 80073d2:	68fb      	ldr	r3, [r7, #12]
 80073d4:	681b      	ldr	r3, [r3, #0]
 80073d6:	687a      	ldr	r2, [r7, #4]
 80073d8:	60da      	str	r2, [r3, #12]
 80073da:	bf00      	nop
 80073dc:	371c      	adds	r7, #28
 80073de:	46bd      	mov	sp, r7
 80073e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073e4:	4770      	bx	lr
 80073e6:	bf00      	nop
 80073e8:	58025408 	.word	0x58025408
 80073ec:	5802541c 	.word	0x5802541c
 80073f0:	58025430 	.word	0x58025430
 80073f4:	58025444 	.word	0x58025444
 80073f8:	58025458 	.word	0x58025458
 80073fc:	5802546c 	.word	0x5802546c
 8007400:	58025480 	.word	0x58025480
 8007404:	58025494 	.word	0x58025494

08007408 <DMA_CalcBaseAndBitshift>:
 8007408:	b480      	push	{r7}
 800740a:	b085      	sub	sp, #20
 800740c:	af00      	add	r7, sp, #0
 800740e:	6078      	str	r0, [r7, #4]
 8007410:	687b      	ldr	r3, [r7, #4]
 8007412:	681b      	ldr	r3, [r3, #0]
 8007414:	4a42      	ldr	r2, [pc, #264]	; (8007520 <DMA_CalcBaseAndBitshift+0x118>)
 8007416:	4293      	cmp	r3, r2
 8007418:	d04a      	beq.n	80074b0 <DMA_CalcBaseAndBitshift+0xa8>
 800741a:	687b      	ldr	r3, [r7, #4]
 800741c:	681b      	ldr	r3, [r3, #0]
 800741e:	4a41      	ldr	r2, [pc, #260]	; (8007524 <DMA_CalcBaseAndBitshift+0x11c>)
 8007420:	4293      	cmp	r3, r2
 8007422:	d045      	beq.n	80074b0 <DMA_CalcBaseAndBitshift+0xa8>
 8007424:	687b      	ldr	r3, [r7, #4]
 8007426:	681b      	ldr	r3, [r3, #0]
 8007428:	4a3f      	ldr	r2, [pc, #252]	; (8007528 <DMA_CalcBaseAndBitshift+0x120>)
 800742a:	4293      	cmp	r3, r2
 800742c:	d040      	beq.n	80074b0 <DMA_CalcBaseAndBitshift+0xa8>
 800742e:	687b      	ldr	r3, [r7, #4]
 8007430:	681b      	ldr	r3, [r3, #0]
 8007432:	4a3e      	ldr	r2, [pc, #248]	; (800752c <DMA_CalcBaseAndBitshift+0x124>)
 8007434:	4293      	cmp	r3, r2
 8007436:	d03b      	beq.n	80074b0 <DMA_CalcBaseAndBitshift+0xa8>
 8007438:	687b      	ldr	r3, [r7, #4]
 800743a:	681b      	ldr	r3, [r3, #0]
 800743c:	4a3c      	ldr	r2, [pc, #240]	; (8007530 <DMA_CalcBaseAndBitshift+0x128>)
 800743e:	4293      	cmp	r3, r2
 8007440:	d036      	beq.n	80074b0 <DMA_CalcBaseAndBitshift+0xa8>
 8007442:	687b      	ldr	r3, [r7, #4]
 8007444:	681b      	ldr	r3, [r3, #0]
 8007446:	4a3b      	ldr	r2, [pc, #236]	; (8007534 <DMA_CalcBaseAndBitshift+0x12c>)
 8007448:	4293      	cmp	r3, r2
 800744a:	d031      	beq.n	80074b0 <DMA_CalcBaseAndBitshift+0xa8>
 800744c:	687b      	ldr	r3, [r7, #4]
 800744e:	681b      	ldr	r3, [r3, #0]
 8007450:	4a39      	ldr	r2, [pc, #228]	; (8007538 <DMA_CalcBaseAndBitshift+0x130>)
 8007452:	4293      	cmp	r3, r2
 8007454:	d02c      	beq.n	80074b0 <DMA_CalcBaseAndBitshift+0xa8>
 8007456:	687b      	ldr	r3, [r7, #4]
 8007458:	681b      	ldr	r3, [r3, #0]
 800745a:	4a38      	ldr	r2, [pc, #224]	; (800753c <DMA_CalcBaseAndBitshift+0x134>)
 800745c:	4293      	cmp	r3, r2
 800745e:	d027      	beq.n	80074b0 <DMA_CalcBaseAndBitshift+0xa8>
 8007460:	687b      	ldr	r3, [r7, #4]
 8007462:	681b      	ldr	r3, [r3, #0]
 8007464:	4a36      	ldr	r2, [pc, #216]	; (8007540 <DMA_CalcBaseAndBitshift+0x138>)
 8007466:	4293      	cmp	r3, r2
 8007468:	d022      	beq.n	80074b0 <DMA_CalcBaseAndBitshift+0xa8>
 800746a:	687b      	ldr	r3, [r7, #4]
 800746c:	681b      	ldr	r3, [r3, #0]
 800746e:	4a35      	ldr	r2, [pc, #212]	; (8007544 <DMA_CalcBaseAndBitshift+0x13c>)
 8007470:	4293      	cmp	r3, r2
 8007472:	d01d      	beq.n	80074b0 <DMA_CalcBaseAndBitshift+0xa8>
 8007474:	687b      	ldr	r3, [r7, #4]
 8007476:	681b      	ldr	r3, [r3, #0]
 8007478:	4a33      	ldr	r2, [pc, #204]	; (8007548 <DMA_CalcBaseAndBitshift+0x140>)
 800747a:	4293      	cmp	r3, r2
 800747c:	d018      	beq.n	80074b0 <DMA_CalcBaseAndBitshift+0xa8>
 800747e:	687b      	ldr	r3, [r7, #4]
 8007480:	681b      	ldr	r3, [r3, #0]
 8007482:	4a32      	ldr	r2, [pc, #200]	; (800754c <DMA_CalcBaseAndBitshift+0x144>)
 8007484:	4293      	cmp	r3, r2
 8007486:	d013      	beq.n	80074b0 <DMA_CalcBaseAndBitshift+0xa8>
 8007488:	687b      	ldr	r3, [r7, #4]
 800748a:	681b      	ldr	r3, [r3, #0]
 800748c:	4a30      	ldr	r2, [pc, #192]	; (8007550 <DMA_CalcBaseAndBitshift+0x148>)
 800748e:	4293      	cmp	r3, r2
 8007490:	d00e      	beq.n	80074b0 <DMA_CalcBaseAndBitshift+0xa8>
 8007492:	687b      	ldr	r3, [r7, #4]
 8007494:	681b      	ldr	r3, [r3, #0]
 8007496:	4a2f      	ldr	r2, [pc, #188]	; (8007554 <DMA_CalcBaseAndBitshift+0x14c>)
 8007498:	4293      	cmp	r3, r2
 800749a:	d009      	beq.n	80074b0 <DMA_CalcBaseAndBitshift+0xa8>
 800749c:	687b      	ldr	r3, [r7, #4]
 800749e:	681b      	ldr	r3, [r3, #0]
 80074a0:	4a2d      	ldr	r2, [pc, #180]	; (8007558 <DMA_CalcBaseAndBitshift+0x150>)
 80074a2:	4293      	cmp	r3, r2
 80074a4:	d004      	beq.n	80074b0 <DMA_CalcBaseAndBitshift+0xa8>
 80074a6:	687b      	ldr	r3, [r7, #4]
 80074a8:	681b      	ldr	r3, [r3, #0]
 80074aa:	4a2c      	ldr	r2, [pc, #176]	; (800755c <DMA_CalcBaseAndBitshift+0x154>)
 80074ac:	4293      	cmp	r3, r2
 80074ae:	d101      	bne.n	80074b4 <DMA_CalcBaseAndBitshift+0xac>
 80074b0:	2301      	movs	r3, #1
 80074b2:	e000      	b.n	80074b6 <DMA_CalcBaseAndBitshift+0xae>
 80074b4:	2300      	movs	r3, #0
 80074b6:	2b00      	cmp	r3, #0
 80074b8:	d024      	beq.n	8007504 <DMA_CalcBaseAndBitshift+0xfc>
 80074ba:	687b      	ldr	r3, [r7, #4]
 80074bc:	681b      	ldr	r3, [r3, #0]
 80074be:	b2db      	uxtb	r3, r3
 80074c0:	3b10      	subs	r3, #16
 80074c2:	4a27      	ldr	r2, [pc, #156]	; (8007560 <DMA_CalcBaseAndBitshift+0x158>)
 80074c4:	fba2 2303 	umull	r2, r3, r2, r3
 80074c8:	091b      	lsrs	r3, r3, #4
 80074ca:	60fb      	str	r3, [r7, #12]
 80074cc:	68fb      	ldr	r3, [r7, #12]
 80074ce:	f003 0307 	and.w	r3, r3, #7
 80074d2:	4a24      	ldr	r2, [pc, #144]	; (8007564 <DMA_CalcBaseAndBitshift+0x15c>)
 80074d4:	5cd3      	ldrb	r3, [r2, r3]
 80074d6:	461a      	mov	r2, r3
 80074d8:	687b      	ldr	r3, [r7, #4]
 80074da:	65da      	str	r2, [r3, #92]	; 0x5c
 80074dc:	68fb      	ldr	r3, [r7, #12]
 80074de:	2b03      	cmp	r3, #3
 80074e0:	d908      	bls.n	80074f4 <DMA_CalcBaseAndBitshift+0xec>
 80074e2:	687b      	ldr	r3, [r7, #4]
 80074e4:	681b      	ldr	r3, [r3, #0]
 80074e6:	461a      	mov	r2, r3
 80074e8:	4b1f      	ldr	r3, [pc, #124]	; (8007568 <DMA_CalcBaseAndBitshift+0x160>)
 80074ea:	4013      	ands	r3, r2
 80074ec:	1d1a      	adds	r2, r3, #4
 80074ee:	687b      	ldr	r3, [r7, #4]
 80074f0:	659a      	str	r2, [r3, #88]	; 0x58
 80074f2:	e00d      	b.n	8007510 <DMA_CalcBaseAndBitshift+0x108>
 80074f4:	687b      	ldr	r3, [r7, #4]
 80074f6:	681b      	ldr	r3, [r3, #0]
 80074f8:	461a      	mov	r2, r3
 80074fa:	4b1b      	ldr	r3, [pc, #108]	; (8007568 <DMA_CalcBaseAndBitshift+0x160>)
 80074fc:	4013      	ands	r3, r2
 80074fe:	687a      	ldr	r2, [r7, #4]
 8007500:	6593      	str	r3, [r2, #88]	; 0x58
 8007502:	e005      	b.n	8007510 <DMA_CalcBaseAndBitshift+0x108>
 8007504:	687b      	ldr	r3, [r7, #4]
 8007506:	681b      	ldr	r3, [r3, #0]
 8007508:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 800750c:	687b      	ldr	r3, [r7, #4]
 800750e:	659a      	str	r2, [r3, #88]	; 0x58
 8007510:	687b      	ldr	r3, [r7, #4]
 8007512:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007514:	4618      	mov	r0, r3
 8007516:	3714      	adds	r7, #20
 8007518:	46bd      	mov	sp, r7
 800751a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800751e:	4770      	bx	lr
 8007520:	40020010 	.word	0x40020010
 8007524:	40020028 	.word	0x40020028
 8007528:	40020040 	.word	0x40020040
 800752c:	40020058 	.word	0x40020058
 8007530:	40020070 	.word	0x40020070
 8007534:	40020088 	.word	0x40020088
 8007538:	400200a0 	.word	0x400200a0
 800753c:	400200b8 	.word	0x400200b8
 8007540:	40020410 	.word	0x40020410
 8007544:	40020428 	.word	0x40020428
 8007548:	40020440 	.word	0x40020440
 800754c:	40020458 	.word	0x40020458
 8007550:	40020470 	.word	0x40020470
 8007554:	40020488 	.word	0x40020488
 8007558:	400204a0 	.word	0x400204a0
 800755c:	400204b8 	.word	0x400204b8
 8007560:	aaaaaaab 	.word	0xaaaaaaab
 8007564:	0800dffc 	.word	0x0800dffc
 8007568:	fffffc00 	.word	0xfffffc00

0800756c <DMA_CheckFifoParam>:
 800756c:	b480      	push	{r7}
 800756e:	b085      	sub	sp, #20
 8007570:	af00      	add	r7, sp, #0
 8007572:	6078      	str	r0, [r7, #4]
 8007574:	2300      	movs	r3, #0
 8007576:	73fb      	strb	r3, [r7, #15]
 8007578:	687b      	ldr	r3, [r7, #4]
 800757a:	699b      	ldr	r3, [r3, #24]
 800757c:	2b00      	cmp	r3, #0
 800757e:	d120      	bne.n	80075c2 <DMA_CheckFifoParam+0x56>
 8007580:	687b      	ldr	r3, [r7, #4]
 8007582:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007584:	2b03      	cmp	r3, #3
 8007586:	d858      	bhi.n	800763a <DMA_CheckFifoParam+0xce>
 8007588:	a201      	add	r2, pc, #4	; (adr r2, 8007590 <DMA_CheckFifoParam+0x24>)
 800758a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800758e:	bf00      	nop
 8007590:	080075a1 	.word	0x080075a1
 8007594:	080075b3 	.word	0x080075b3
 8007598:	080075a1 	.word	0x080075a1
 800759c:	0800763b 	.word	0x0800763b
 80075a0:	687b      	ldr	r3, [r7, #4]
 80075a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80075a4:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80075a8:	2b00      	cmp	r3, #0
 80075aa:	d048      	beq.n	800763e <DMA_CheckFifoParam+0xd2>
 80075ac:	2301      	movs	r3, #1
 80075ae:	73fb      	strb	r3, [r7, #15]
 80075b0:	e045      	b.n	800763e <DMA_CheckFifoParam+0xd2>
 80075b2:	687b      	ldr	r3, [r7, #4]
 80075b4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80075b6:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 80075ba:	d142      	bne.n	8007642 <DMA_CheckFifoParam+0xd6>
 80075bc:	2301      	movs	r3, #1
 80075be:	73fb      	strb	r3, [r7, #15]
 80075c0:	e03f      	b.n	8007642 <DMA_CheckFifoParam+0xd6>
 80075c2:	687b      	ldr	r3, [r7, #4]
 80075c4:	699b      	ldr	r3, [r3, #24]
 80075c6:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80075ca:	d123      	bne.n	8007614 <DMA_CheckFifoParam+0xa8>
 80075cc:	687b      	ldr	r3, [r7, #4]
 80075ce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80075d0:	2b03      	cmp	r3, #3
 80075d2:	d838      	bhi.n	8007646 <DMA_CheckFifoParam+0xda>
 80075d4:	a201      	add	r2, pc, #4	; (adr r2, 80075dc <DMA_CheckFifoParam+0x70>)
 80075d6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80075da:	bf00      	nop
 80075dc:	080075ed 	.word	0x080075ed
 80075e0:	080075f3 	.word	0x080075f3
 80075e4:	080075ed 	.word	0x080075ed
 80075e8:	08007605 	.word	0x08007605
 80075ec:	2301      	movs	r3, #1
 80075ee:	73fb      	strb	r3, [r7, #15]
 80075f0:	e030      	b.n	8007654 <DMA_CheckFifoParam+0xe8>
 80075f2:	687b      	ldr	r3, [r7, #4]
 80075f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80075f6:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80075fa:	2b00      	cmp	r3, #0
 80075fc:	d025      	beq.n	800764a <DMA_CheckFifoParam+0xde>
 80075fe:	2301      	movs	r3, #1
 8007600:	73fb      	strb	r3, [r7, #15]
 8007602:	e022      	b.n	800764a <DMA_CheckFifoParam+0xde>
 8007604:	687b      	ldr	r3, [r7, #4]
 8007606:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007608:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 800760c:	d11f      	bne.n	800764e <DMA_CheckFifoParam+0xe2>
 800760e:	2301      	movs	r3, #1
 8007610:	73fb      	strb	r3, [r7, #15]
 8007612:	e01c      	b.n	800764e <DMA_CheckFifoParam+0xe2>
 8007614:	687b      	ldr	r3, [r7, #4]
 8007616:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007618:	2b02      	cmp	r3, #2
 800761a:	d902      	bls.n	8007622 <DMA_CheckFifoParam+0xb6>
 800761c:	2b03      	cmp	r3, #3
 800761e:	d003      	beq.n	8007628 <DMA_CheckFifoParam+0xbc>
 8007620:	e018      	b.n	8007654 <DMA_CheckFifoParam+0xe8>
 8007622:	2301      	movs	r3, #1
 8007624:	73fb      	strb	r3, [r7, #15]
 8007626:	e015      	b.n	8007654 <DMA_CheckFifoParam+0xe8>
 8007628:	687b      	ldr	r3, [r7, #4]
 800762a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800762c:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8007630:	2b00      	cmp	r3, #0
 8007632:	d00e      	beq.n	8007652 <DMA_CheckFifoParam+0xe6>
 8007634:	2301      	movs	r3, #1
 8007636:	73fb      	strb	r3, [r7, #15]
 8007638:	e00b      	b.n	8007652 <DMA_CheckFifoParam+0xe6>
 800763a:	bf00      	nop
 800763c:	e00a      	b.n	8007654 <DMA_CheckFifoParam+0xe8>
 800763e:	bf00      	nop
 8007640:	e008      	b.n	8007654 <DMA_CheckFifoParam+0xe8>
 8007642:	bf00      	nop
 8007644:	e006      	b.n	8007654 <DMA_CheckFifoParam+0xe8>
 8007646:	bf00      	nop
 8007648:	e004      	b.n	8007654 <DMA_CheckFifoParam+0xe8>
 800764a:	bf00      	nop
 800764c:	e002      	b.n	8007654 <DMA_CheckFifoParam+0xe8>
 800764e:	bf00      	nop
 8007650:	e000      	b.n	8007654 <DMA_CheckFifoParam+0xe8>
 8007652:	bf00      	nop
 8007654:	7bfb      	ldrb	r3, [r7, #15]
 8007656:	4618      	mov	r0, r3
 8007658:	3714      	adds	r7, #20
 800765a:	46bd      	mov	sp, r7
 800765c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007660:	4770      	bx	lr
 8007662:	bf00      	nop

08007664 <DMA_CalcDMAMUXChannelBaseAndMask>:
 8007664:	b480      	push	{r7}
 8007666:	b085      	sub	sp, #20
 8007668:	af00      	add	r7, sp, #0
 800766a:	6078      	str	r0, [r7, #4]
 800766c:	687b      	ldr	r3, [r7, #4]
 800766e:	681b      	ldr	r3, [r3, #0]
 8007670:	60bb      	str	r3, [r7, #8]
 8007672:	687b      	ldr	r3, [r7, #4]
 8007674:	681b      	ldr	r3, [r3, #0]
 8007676:	4a38      	ldr	r2, [pc, #224]	; (8007758 <DMA_CalcDMAMUXChannelBaseAndMask+0xf4>)
 8007678:	4293      	cmp	r3, r2
 800767a:	d022      	beq.n	80076c2 <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 800767c:	687b      	ldr	r3, [r7, #4]
 800767e:	681b      	ldr	r3, [r3, #0]
 8007680:	4a36      	ldr	r2, [pc, #216]	; (800775c <DMA_CalcDMAMUXChannelBaseAndMask+0xf8>)
 8007682:	4293      	cmp	r3, r2
 8007684:	d01d      	beq.n	80076c2 <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8007686:	687b      	ldr	r3, [r7, #4]
 8007688:	681b      	ldr	r3, [r3, #0]
 800768a:	4a35      	ldr	r2, [pc, #212]	; (8007760 <DMA_CalcDMAMUXChannelBaseAndMask+0xfc>)
 800768c:	4293      	cmp	r3, r2
 800768e:	d018      	beq.n	80076c2 <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 8007690:	687b      	ldr	r3, [r7, #4]
 8007692:	681b      	ldr	r3, [r3, #0]
 8007694:	4a33      	ldr	r2, [pc, #204]	; (8007764 <DMA_CalcDMAMUXChannelBaseAndMask+0x100>)
 8007696:	4293      	cmp	r3, r2
 8007698:	d013      	beq.n	80076c2 <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 800769a:	687b      	ldr	r3, [r7, #4]
 800769c:	681b      	ldr	r3, [r3, #0]
 800769e:	4a32      	ldr	r2, [pc, #200]	; (8007768 <DMA_CalcDMAMUXChannelBaseAndMask+0x104>)
 80076a0:	4293      	cmp	r3, r2
 80076a2:	d00e      	beq.n	80076c2 <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 80076a4:	687b      	ldr	r3, [r7, #4]
 80076a6:	681b      	ldr	r3, [r3, #0]
 80076a8:	4a30      	ldr	r2, [pc, #192]	; (800776c <DMA_CalcDMAMUXChannelBaseAndMask+0x108>)
 80076aa:	4293      	cmp	r3, r2
 80076ac:	d009      	beq.n	80076c2 <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 80076ae:	687b      	ldr	r3, [r7, #4]
 80076b0:	681b      	ldr	r3, [r3, #0]
 80076b2:	4a2f      	ldr	r2, [pc, #188]	; (8007770 <DMA_CalcDMAMUXChannelBaseAndMask+0x10c>)
 80076b4:	4293      	cmp	r3, r2
 80076b6:	d004      	beq.n	80076c2 <DMA_CalcDMAMUXChannelBaseAndMask+0x5e>
 80076b8:	687b      	ldr	r3, [r7, #4]
 80076ba:	681b      	ldr	r3, [r3, #0]
 80076bc:	4a2d      	ldr	r2, [pc, #180]	; (8007774 <DMA_CalcDMAMUXChannelBaseAndMask+0x110>)
 80076be:	4293      	cmp	r3, r2
 80076c0:	d101      	bne.n	80076c6 <DMA_CalcDMAMUXChannelBaseAndMask+0x62>
 80076c2:	2301      	movs	r3, #1
 80076c4:	e000      	b.n	80076c8 <DMA_CalcDMAMUXChannelBaseAndMask+0x64>
 80076c6:	2300      	movs	r3, #0
 80076c8:	2b00      	cmp	r3, #0
 80076ca:	d01a      	beq.n	8007702 <DMA_CalcDMAMUXChannelBaseAndMask+0x9e>
 80076cc:	687b      	ldr	r3, [r7, #4]
 80076ce:	681b      	ldr	r3, [r3, #0]
 80076d0:	b2db      	uxtb	r3, r3
 80076d2:	3b08      	subs	r3, #8
 80076d4:	4a28      	ldr	r2, [pc, #160]	; (8007778 <DMA_CalcDMAMUXChannelBaseAndMask+0x114>)
 80076d6:	fba2 2303 	umull	r2, r3, r2, r3
 80076da:	091b      	lsrs	r3, r3, #4
 80076dc:	60fb      	str	r3, [r7, #12]
 80076de:	68fa      	ldr	r2, [r7, #12]
 80076e0:	4b26      	ldr	r3, [pc, #152]	; (800777c <DMA_CalcDMAMUXChannelBaseAndMask+0x118>)
 80076e2:	4413      	add	r3, r2
 80076e4:	009b      	lsls	r3, r3, #2
 80076e6:	461a      	mov	r2, r3
 80076e8:	687b      	ldr	r3, [r7, #4]
 80076ea:	661a      	str	r2, [r3, #96]	; 0x60
 80076ec:	687b      	ldr	r3, [r7, #4]
 80076ee:	4a24      	ldr	r2, [pc, #144]	; (8007780 <DMA_CalcDMAMUXChannelBaseAndMask+0x11c>)
 80076f0:	665a      	str	r2, [r3, #100]	; 0x64
 80076f2:	68fb      	ldr	r3, [r7, #12]
 80076f4:	f003 031f 	and.w	r3, r3, #31
 80076f8:	2201      	movs	r2, #1
 80076fa:	409a      	lsls	r2, r3
 80076fc:	687b      	ldr	r3, [r7, #4]
 80076fe:	669a      	str	r2, [r3, #104]	; 0x68
 8007700:	e024      	b.n	800774c <DMA_CalcDMAMUXChannelBaseAndMask+0xe8>
 8007702:	687b      	ldr	r3, [r7, #4]
 8007704:	681b      	ldr	r3, [r3, #0]
 8007706:	b2db      	uxtb	r3, r3
 8007708:	3b10      	subs	r3, #16
 800770a:	4a1e      	ldr	r2, [pc, #120]	; (8007784 <DMA_CalcDMAMUXChannelBaseAndMask+0x120>)
 800770c:	fba2 2303 	umull	r2, r3, r2, r3
 8007710:	091b      	lsrs	r3, r3, #4
 8007712:	60fb      	str	r3, [r7, #12]
 8007714:	68bb      	ldr	r3, [r7, #8]
 8007716:	4a1c      	ldr	r2, [pc, #112]	; (8007788 <DMA_CalcDMAMUXChannelBaseAndMask+0x124>)
 8007718:	4293      	cmp	r3, r2
 800771a:	d806      	bhi.n	800772a <DMA_CalcDMAMUXChannelBaseAndMask+0xc6>
 800771c:	68bb      	ldr	r3, [r7, #8]
 800771e:	4a1b      	ldr	r2, [pc, #108]	; (800778c <DMA_CalcDMAMUXChannelBaseAndMask+0x128>)
 8007720:	4293      	cmp	r3, r2
 8007722:	d902      	bls.n	800772a <DMA_CalcDMAMUXChannelBaseAndMask+0xc6>
 8007724:	68fb      	ldr	r3, [r7, #12]
 8007726:	3308      	adds	r3, #8
 8007728:	60fb      	str	r3, [r7, #12]
 800772a:	68fa      	ldr	r2, [r7, #12]
 800772c:	4b18      	ldr	r3, [pc, #96]	; (8007790 <DMA_CalcDMAMUXChannelBaseAndMask+0x12c>)
 800772e:	4413      	add	r3, r2
 8007730:	009b      	lsls	r3, r3, #2
 8007732:	461a      	mov	r2, r3
 8007734:	687b      	ldr	r3, [r7, #4]
 8007736:	661a      	str	r2, [r3, #96]	; 0x60
 8007738:	687b      	ldr	r3, [r7, #4]
 800773a:	4a16      	ldr	r2, [pc, #88]	; (8007794 <DMA_CalcDMAMUXChannelBaseAndMask+0x130>)
 800773c:	665a      	str	r2, [r3, #100]	; 0x64
 800773e:	68fb      	ldr	r3, [r7, #12]
 8007740:	f003 031f 	and.w	r3, r3, #31
 8007744:	2201      	movs	r2, #1
 8007746:	409a      	lsls	r2, r3
 8007748:	687b      	ldr	r3, [r7, #4]
 800774a:	669a      	str	r2, [r3, #104]	; 0x68
 800774c:	bf00      	nop
 800774e:	3714      	adds	r7, #20
 8007750:	46bd      	mov	sp, r7
 8007752:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007756:	4770      	bx	lr
 8007758:	58025408 	.word	0x58025408
 800775c:	5802541c 	.word	0x5802541c
 8007760:	58025430 	.word	0x58025430
 8007764:	58025444 	.word	0x58025444
 8007768:	58025458 	.word	0x58025458
 800776c:	5802546c 	.word	0x5802546c
 8007770:	58025480 	.word	0x58025480
 8007774:	58025494 	.word	0x58025494
 8007778:	cccccccd 	.word	0xcccccccd
 800777c:	16009600 	.word	0x16009600
 8007780:	58025880 	.word	0x58025880
 8007784:	aaaaaaab 	.word	0xaaaaaaab
 8007788:	400204b8 	.word	0x400204b8
 800778c:	4002040f 	.word	0x4002040f
 8007790:	10008200 	.word	0x10008200
 8007794:	40020880 	.word	0x40020880

08007798 <DMA_CalcDMAMUXRequestGenBaseAndMask>:
 8007798:	b480      	push	{r7}
 800779a:	b085      	sub	sp, #20
 800779c:	af00      	add	r7, sp, #0
 800779e:	6078      	str	r0, [r7, #4]
 80077a0:	687b      	ldr	r3, [r7, #4]
 80077a2:	685b      	ldr	r3, [r3, #4]
 80077a4:	b2db      	uxtb	r3, r3
 80077a6:	60fb      	str	r3, [r7, #12]
 80077a8:	68fb      	ldr	r3, [r7, #12]
 80077aa:	2b00      	cmp	r3, #0
 80077ac:	d04a      	beq.n	8007844 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xac>
 80077ae:	68fb      	ldr	r3, [r7, #12]
 80077b0:	2b08      	cmp	r3, #8
 80077b2:	d847      	bhi.n	8007844 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xac>
 80077b4:	687b      	ldr	r3, [r7, #4]
 80077b6:	681b      	ldr	r3, [r3, #0]
 80077b8:	4a25      	ldr	r2, [pc, #148]	; (8007850 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xb8>)
 80077ba:	4293      	cmp	r3, r2
 80077bc:	d022      	beq.n	8007804 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80077be:	687b      	ldr	r3, [r7, #4]
 80077c0:	681b      	ldr	r3, [r3, #0]
 80077c2:	4a24      	ldr	r2, [pc, #144]	; (8007854 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xbc>)
 80077c4:	4293      	cmp	r3, r2
 80077c6:	d01d      	beq.n	8007804 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80077c8:	687b      	ldr	r3, [r7, #4]
 80077ca:	681b      	ldr	r3, [r3, #0]
 80077cc:	4a22      	ldr	r2, [pc, #136]	; (8007858 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc0>)
 80077ce:	4293      	cmp	r3, r2
 80077d0:	d018      	beq.n	8007804 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80077d2:	687b      	ldr	r3, [r7, #4]
 80077d4:	681b      	ldr	r3, [r3, #0]
 80077d6:	4a21      	ldr	r2, [pc, #132]	; (800785c <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc4>)
 80077d8:	4293      	cmp	r3, r2
 80077da:	d013      	beq.n	8007804 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80077dc:	687b      	ldr	r3, [r7, #4]
 80077de:	681b      	ldr	r3, [r3, #0]
 80077e0:	4a1f      	ldr	r2, [pc, #124]	; (8007860 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xc8>)
 80077e2:	4293      	cmp	r3, r2
 80077e4:	d00e      	beq.n	8007804 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80077e6:	687b      	ldr	r3, [r7, #4]
 80077e8:	681b      	ldr	r3, [r3, #0]
 80077ea:	4a1e      	ldr	r2, [pc, #120]	; (8007864 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xcc>)
 80077ec:	4293      	cmp	r3, r2
 80077ee:	d009      	beq.n	8007804 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80077f0:	687b      	ldr	r3, [r7, #4]
 80077f2:	681b      	ldr	r3, [r3, #0]
 80077f4:	4a1c      	ldr	r2, [pc, #112]	; (8007868 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd0>)
 80077f6:	4293      	cmp	r3, r2
 80077f8:	d004      	beq.n	8007804 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x6c>
 80077fa:	687b      	ldr	r3, [r7, #4]
 80077fc:	681b      	ldr	r3, [r3, #0]
 80077fe:	4a1b      	ldr	r2, [pc, #108]	; (800786c <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd4>)
 8007800:	4293      	cmp	r3, r2
 8007802:	d101      	bne.n	8007808 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x70>
 8007804:	2301      	movs	r3, #1
 8007806:	e000      	b.n	800780a <DMA_CalcDMAMUXRequestGenBaseAndMask+0x72>
 8007808:	2300      	movs	r3, #0
 800780a:	2b00      	cmp	r3, #0
 800780c:	d00a      	beq.n	8007824 <DMA_CalcDMAMUXRequestGenBaseAndMask+0x8c>
 800780e:	68fa      	ldr	r2, [r7, #12]
 8007810:	4b17      	ldr	r3, [pc, #92]	; (8007870 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xd8>)
 8007812:	4413      	add	r3, r2
 8007814:	009b      	lsls	r3, r3, #2
 8007816:	461a      	mov	r2, r3
 8007818:	687b      	ldr	r3, [r7, #4]
 800781a:	66da      	str	r2, [r3, #108]	; 0x6c
 800781c:	687b      	ldr	r3, [r7, #4]
 800781e:	4a15      	ldr	r2, [pc, #84]	; (8007874 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xdc>)
 8007820:	671a      	str	r2, [r3, #112]	; 0x70
 8007822:	e009      	b.n	8007838 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xa0>
 8007824:	68fa      	ldr	r2, [r7, #12]
 8007826:	4b14      	ldr	r3, [pc, #80]	; (8007878 <DMA_CalcDMAMUXRequestGenBaseAndMask+0xe0>)
 8007828:	4413      	add	r3, r2
 800782a:	009b      	lsls	r3, r3, #2
 800782c:	461a      	mov	r2, r3
 800782e:	687b      	ldr	r3, [r7, #4]
 8007830:	66da      	str	r2, [r3, #108]	; 0x6c
 8007832:	687b      	ldr	r3, [r7, #4]
 8007834:	4a11      	ldr	r2, [pc, #68]	; (800787c <DMA_CalcDMAMUXRequestGenBaseAndMask+0xe4>)
 8007836:	671a      	str	r2, [r3, #112]	; 0x70
 8007838:	68fb      	ldr	r3, [r7, #12]
 800783a:	3b01      	subs	r3, #1
 800783c:	2201      	movs	r2, #1
 800783e:	409a      	lsls	r2, r3
 8007840:	687b      	ldr	r3, [r7, #4]
 8007842:	675a      	str	r2, [r3, #116]	; 0x74
 8007844:	bf00      	nop
 8007846:	3714      	adds	r7, #20
 8007848:	46bd      	mov	sp, r7
 800784a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800784e:	4770      	bx	lr
 8007850:	58025408 	.word	0x58025408
 8007854:	5802541c 	.word	0x5802541c
 8007858:	58025430 	.word	0x58025430
 800785c:	58025444 	.word	0x58025444
 8007860:	58025458 	.word	0x58025458
 8007864:	5802546c 	.word	0x5802546c
 8007868:	58025480 	.word	0x58025480
 800786c:	58025494 	.word	0x58025494
 8007870:	1600963f 	.word	0x1600963f
 8007874:	58025940 	.word	0x58025940
 8007878:	1000823f 	.word	0x1000823f
 800787c:	40020940 	.word	0x40020940

08007880 <HAL_GPIO_Init>:
 8007880:	b480      	push	{r7}
 8007882:	b089      	sub	sp, #36	; 0x24
 8007884:	af00      	add	r7, sp, #0
 8007886:	6078      	str	r0, [r7, #4]
 8007888:	6039      	str	r1, [r7, #0]
 800788a:	2300      	movs	r3, #0
 800788c:	61fb      	str	r3, [r7, #28]
 800788e:	4b86      	ldr	r3, [pc, #536]	; (8007aa8 <HAL_GPIO_Init+0x228>)
 8007890:	617b      	str	r3, [r7, #20]
 8007892:	e18c      	b.n	8007bae <HAL_GPIO_Init+0x32e>
 8007894:	683b      	ldr	r3, [r7, #0]
 8007896:	681a      	ldr	r2, [r3, #0]
 8007898:	2101      	movs	r1, #1
 800789a:	69fb      	ldr	r3, [r7, #28]
 800789c:	fa01 f303 	lsl.w	r3, r1, r3
 80078a0:	4013      	ands	r3, r2
 80078a2:	613b      	str	r3, [r7, #16]
 80078a4:	693b      	ldr	r3, [r7, #16]
 80078a6:	2b00      	cmp	r3, #0
 80078a8:	f000 817e 	beq.w	8007ba8 <HAL_GPIO_Init+0x328>
 80078ac:	683b      	ldr	r3, [r7, #0]
 80078ae:	685b      	ldr	r3, [r3, #4]
 80078b0:	f003 0303 	and.w	r3, r3, #3
 80078b4:	2b01      	cmp	r3, #1
 80078b6:	d005      	beq.n	80078c4 <HAL_GPIO_Init+0x44>
 80078b8:	683b      	ldr	r3, [r7, #0]
 80078ba:	685b      	ldr	r3, [r3, #4]
 80078bc:	f003 0303 	and.w	r3, r3, #3
 80078c0:	2b02      	cmp	r3, #2
 80078c2:	d130      	bne.n	8007926 <HAL_GPIO_Init+0xa6>
 80078c4:	687b      	ldr	r3, [r7, #4]
 80078c6:	689b      	ldr	r3, [r3, #8]
 80078c8:	61bb      	str	r3, [r7, #24]
 80078ca:	69fb      	ldr	r3, [r7, #28]
 80078cc:	005b      	lsls	r3, r3, #1
 80078ce:	2203      	movs	r2, #3
 80078d0:	fa02 f303 	lsl.w	r3, r2, r3
 80078d4:	43db      	mvns	r3, r3
 80078d6:	69ba      	ldr	r2, [r7, #24]
 80078d8:	4013      	ands	r3, r2
 80078da:	61bb      	str	r3, [r7, #24]
 80078dc:	683b      	ldr	r3, [r7, #0]
 80078de:	68da      	ldr	r2, [r3, #12]
 80078e0:	69fb      	ldr	r3, [r7, #28]
 80078e2:	005b      	lsls	r3, r3, #1
 80078e4:	fa02 f303 	lsl.w	r3, r2, r3
 80078e8:	69ba      	ldr	r2, [r7, #24]
 80078ea:	4313      	orrs	r3, r2
 80078ec:	61bb      	str	r3, [r7, #24]
 80078ee:	687b      	ldr	r3, [r7, #4]
 80078f0:	69ba      	ldr	r2, [r7, #24]
 80078f2:	609a      	str	r2, [r3, #8]
 80078f4:	687b      	ldr	r3, [r7, #4]
 80078f6:	685b      	ldr	r3, [r3, #4]
 80078f8:	61bb      	str	r3, [r7, #24]
 80078fa:	2201      	movs	r2, #1
 80078fc:	69fb      	ldr	r3, [r7, #28]
 80078fe:	fa02 f303 	lsl.w	r3, r2, r3
 8007902:	43db      	mvns	r3, r3
 8007904:	69ba      	ldr	r2, [r7, #24]
 8007906:	4013      	ands	r3, r2
 8007908:	61bb      	str	r3, [r7, #24]
 800790a:	683b      	ldr	r3, [r7, #0]
 800790c:	685b      	ldr	r3, [r3, #4]
 800790e:	091b      	lsrs	r3, r3, #4
 8007910:	f003 0201 	and.w	r2, r3, #1
 8007914:	69fb      	ldr	r3, [r7, #28]
 8007916:	fa02 f303 	lsl.w	r3, r2, r3
 800791a:	69ba      	ldr	r2, [r7, #24]
 800791c:	4313      	orrs	r3, r2
 800791e:	61bb      	str	r3, [r7, #24]
 8007920:	687b      	ldr	r3, [r7, #4]
 8007922:	69ba      	ldr	r2, [r7, #24]
 8007924:	605a      	str	r2, [r3, #4]
 8007926:	683b      	ldr	r3, [r7, #0]
 8007928:	685b      	ldr	r3, [r3, #4]
 800792a:	f003 0303 	and.w	r3, r3, #3
 800792e:	2b03      	cmp	r3, #3
 8007930:	d017      	beq.n	8007962 <HAL_GPIO_Init+0xe2>
 8007932:	687b      	ldr	r3, [r7, #4]
 8007934:	68db      	ldr	r3, [r3, #12]
 8007936:	61bb      	str	r3, [r7, #24]
 8007938:	69fb      	ldr	r3, [r7, #28]
 800793a:	005b      	lsls	r3, r3, #1
 800793c:	2203      	movs	r2, #3
 800793e:	fa02 f303 	lsl.w	r3, r2, r3
 8007942:	43db      	mvns	r3, r3
 8007944:	69ba      	ldr	r2, [r7, #24]
 8007946:	4013      	ands	r3, r2
 8007948:	61bb      	str	r3, [r7, #24]
 800794a:	683b      	ldr	r3, [r7, #0]
 800794c:	689a      	ldr	r2, [r3, #8]
 800794e:	69fb      	ldr	r3, [r7, #28]
 8007950:	005b      	lsls	r3, r3, #1
 8007952:	fa02 f303 	lsl.w	r3, r2, r3
 8007956:	69ba      	ldr	r2, [r7, #24]
 8007958:	4313      	orrs	r3, r2
 800795a:	61bb      	str	r3, [r7, #24]
 800795c:	687b      	ldr	r3, [r7, #4]
 800795e:	69ba      	ldr	r2, [r7, #24]
 8007960:	60da      	str	r2, [r3, #12]
 8007962:	683b      	ldr	r3, [r7, #0]
 8007964:	685b      	ldr	r3, [r3, #4]
 8007966:	f003 0303 	and.w	r3, r3, #3
 800796a:	2b02      	cmp	r3, #2
 800796c:	d123      	bne.n	80079b6 <HAL_GPIO_Init+0x136>
 800796e:	69fb      	ldr	r3, [r7, #28]
 8007970:	08da      	lsrs	r2, r3, #3
 8007972:	687b      	ldr	r3, [r7, #4]
 8007974:	3208      	adds	r2, #8
 8007976:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800797a:	61bb      	str	r3, [r7, #24]
 800797c:	69fb      	ldr	r3, [r7, #28]
 800797e:	f003 0307 	and.w	r3, r3, #7
 8007982:	009b      	lsls	r3, r3, #2
 8007984:	220f      	movs	r2, #15
 8007986:	fa02 f303 	lsl.w	r3, r2, r3
 800798a:	43db      	mvns	r3, r3
 800798c:	69ba      	ldr	r2, [r7, #24]
 800798e:	4013      	ands	r3, r2
 8007990:	61bb      	str	r3, [r7, #24]
 8007992:	683b      	ldr	r3, [r7, #0]
 8007994:	691a      	ldr	r2, [r3, #16]
 8007996:	69fb      	ldr	r3, [r7, #28]
 8007998:	f003 0307 	and.w	r3, r3, #7
 800799c:	009b      	lsls	r3, r3, #2
 800799e:	fa02 f303 	lsl.w	r3, r2, r3
 80079a2:	69ba      	ldr	r2, [r7, #24]
 80079a4:	4313      	orrs	r3, r2
 80079a6:	61bb      	str	r3, [r7, #24]
 80079a8:	69fb      	ldr	r3, [r7, #28]
 80079aa:	08da      	lsrs	r2, r3, #3
 80079ac:	687b      	ldr	r3, [r7, #4]
 80079ae:	3208      	adds	r2, #8
 80079b0:	69b9      	ldr	r1, [r7, #24]
 80079b2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80079b6:	687b      	ldr	r3, [r7, #4]
 80079b8:	681b      	ldr	r3, [r3, #0]
 80079ba:	61bb      	str	r3, [r7, #24]
 80079bc:	69fb      	ldr	r3, [r7, #28]
 80079be:	005b      	lsls	r3, r3, #1
 80079c0:	2203      	movs	r2, #3
 80079c2:	fa02 f303 	lsl.w	r3, r2, r3
 80079c6:	43db      	mvns	r3, r3
 80079c8:	69ba      	ldr	r2, [r7, #24]
 80079ca:	4013      	ands	r3, r2
 80079cc:	61bb      	str	r3, [r7, #24]
 80079ce:	683b      	ldr	r3, [r7, #0]
 80079d0:	685b      	ldr	r3, [r3, #4]
 80079d2:	f003 0203 	and.w	r2, r3, #3
 80079d6:	69fb      	ldr	r3, [r7, #28]
 80079d8:	005b      	lsls	r3, r3, #1
 80079da:	fa02 f303 	lsl.w	r3, r2, r3
 80079de:	69ba      	ldr	r2, [r7, #24]
 80079e0:	4313      	orrs	r3, r2
 80079e2:	61bb      	str	r3, [r7, #24]
 80079e4:	687b      	ldr	r3, [r7, #4]
 80079e6:	69ba      	ldr	r2, [r7, #24]
 80079e8:	601a      	str	r2, [r3, #0]
 80079ea:	683b      	ldr	r3, [r7, #0]
 80079ec:	685b      	ldr	r3, [r3, #4]
 80079ee:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80079f2:	2b00      	cmp	r3, #0
 80079f4:	f000 80d8 	beq.w	8007ba8 <HAL_GPIO_Init+0x328>
 80079f8:	4b2c      	ldr	r3, [pc, #176]	; (8007aac <HAL_GPIO_Init+0x22c>)
 80079fa:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 80079fe:	4a2b      	ldr	r2, [pc, #172]	; (8007aac <HAL_GPIO_Init+0x22c>)
 8007a00:	f043 0302 	orr.w	r3, r3, #2
 8007a04:	f8c2 30f4 	str.w	r3, [r2, #244]	; 0xf4
 8007a08:	4b28      	ldr	r3, [pc, #160]	; (8007aac <HAL_GPIO_Init+0x22c>)
 8007a0a:	f8d3 30f4 	ldr.w	r3, [r3, #244]	; 0xf4
 8007a0e:	f003 0302 	and.w	r3, r3, #2
 8007a12:	60fb      	str	r3, [r7, #12]
 8007a14:	68fb      	ldr	r3, [r7, #12]
 8007a16:	4a26      	ldr	r2, [pc, #152]	; (8007ab0 <HAL_GPIO_Init+0x230>)
 8007a18:	69fb      	ldr	r3, [r7, #28]
 8007a1a:	089b      	lsrs	r3, r3, #2
 8007a1c:	3302      	adds	r3, #2
 8007a1e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8007a22:	61bb      	str	r3, [r7, #24]
 8007a24:	69fb      	ldr	r3, [r7, #28]
 8007a26:	f003 0303 	and.w	r3, r3, #3
 8007a2a:	009b      	lsls	r3, r3, #2
 8007a2c:	220f      	movs	r2, #15
 8007a2e:	fa02 f303 	lsl.w	r3, r2, r3
 8007a32:	43db      	mvns	r3, r3
 8007a34:	69ba      	ldr	r2, [r7, #24]
 8007a36:	4013      	ands	r3, r2
 8007a38:	61bb      	str	r3, [r7, #24]
 8007a3a:	687b      	ldr	r3, [r7, #4]
 8007a3c:	4a1d      	ldr	r2, [pc, #116]	; (8007ab4 <HAL_GPIO_Init+0x234>)
 8007a3e:	4293      	cmp	r3, r2
 8007a40:	d04a      	beq.n	8007ad8 <HAL_GPIO_Init+0x258>
 8007a42:	687b      	ldr	r3, [r7, #4]
 8007a44:	4a1c      	ldr	r2, [pc, #112]	; (8007ab8 <HAL_GPIO_Init+0x238>)
 8007a46:	4293      	cmp	r3, r2
 8007a48:	d02b      	beq.n	8007aa2 <HAL_GPIO_Init+0x222>
 8007a4a:	687b      	ldr	r3, [r7, #4]
 8007a4c:	4a1b      	ldr	r2, [pc, #108]	; (8007abc <HAL_GPIO_Init+0x23c>)
 8007a4e:	4293      	cmp	r3, r2
 8007a50:	d025      	beq.n	8007a9e <HAL_GPIO_Init+0x21e>
 8007a52:	687b      	ldr	r3, [r7, #4]
 8007a54:	4a1a      	ldr	r2, [pc, #104]	; (8007ac0 <HAL_GPIO_Init+0x240>)
 8007a56:	4293      	cmp	r3, r2
 8007a58:	d01f      	beq.n	8007a9a <HAL_GPIO_Init+0x21a>
 8007a5a:	687b      	ldr	r3, [r7, #4]
 8007a5c:	4a19      	ldr	r2, [pc, #100]	; (8007ac4 <HAL_GPIO_Init+0x244>)
 8007a5e:	4293      	cmp	r3, r2
 8007a60:	d019      	beq.n	8007a96 <HAL_GPIO_Init+0x216>
 8007a62:	687b      	ldr	r3, [r7, #4]
 8007a64:	4a18      	ldr	r2, [pc, #96]	; (8007ac8 <HAL_GPIO_Init+0x248>)
 8007a66:	4293      	cmp	r3, r2
 8007a68:	d013      	beq.n	8007a92 <HAL_GPIO_Init+0x212>
 8007a6a:	687b      	ldr	r3, [r7, #4]
 8007a6c:	4a17      	ldr	r2, [pc, #92]	; (8007acc <HAL_GPIO_Init+0x24c>)
 8007a6e:	4293      	cmp	r3, r2
 8007a70:	d00d      	beq.n	8007a8e <HAL_GPIO_Init+0x20e>
 8007a72:	687b      	ldr	r3, [r7, #4]
 8007a74:	4a16      	ldr	r2, [pc, #88]	; (8007ad0 <HAL_GPIO_Init+0x250>)
 8007a76:	4293      	cmp	r3, r2
 8007a78:	d007      	beq.n	8007a8a <HAL_GPIO_Init+0x20a>
 8007a7a:	687b      	ldr	r3, [r7, #4]
 8007a7c:	4a15      	ldr	r2, [pc, #84]	; (8007ad4 <HAL_GPIO_Init+0x254>)
 8007a7e:	4293      	cmp	r3, r2
 8007a80:	d101      	bne.n	8007a86 <HAL_GPIO_Init+0x206>
 8007a82:	2309      	movs	r3, #9
 8007a84:	e029      	b.n	8007ada <HAL_GPIO_Init+0x25a>
 8007a86:	230a      	movs	r3, #10
 8007a88:	e027      	b.n	8007ada <HAL_GPIO_Init+0x25a>
 8007a8a:	2307      	movs	r3, #7
 8007a8c:	e025      	b.n	8007ada <HAL_GPIO_Init+0x25a>
 8007a8e:	2306      	movs	r3, #6
 8007a90:	e023      	b.n	8007ada <HAL_GPIO_Init+0x25a>
 8007a92:	2305      	movs	r3, #5
 8007a94:	e021      	b.n	8007ada <HAL_GPIO_Init+0x25a>
 8007a96:	2304      	movs	r3, #4
 8007a98:	e01f      	b.n	8007ada <HAL_GPIO_Init+0x25a>
 8007a9a:	2303      	movs	r3, #3
 8007a9c:	e01d      	b.n	8007ada <HAL_GPIO_Init+0x25a>
 8007a9e:	2302      	movs	r3, #2
 8007aa0:	e01b      	b.n	8007ada <HAL_GPIO_Init+0x25a>
 8007aa2:	2301      	movs	r3, #1
 8007aa4:	e019      	b.n	8007ada <HAL_GPIO_Init+0x25a>
 8007aa6:	bf00      	nop
 8007aa8:	58000080 	.word	0x58000080
 8007aac:	58024400 	.word	0x58024400
 8007ab0:	58000400 	.word	0x58000400
 8007ab4:	58020000 	.word	0x58020000
 8007ab8:	58020400 	.word	0x58020400
 8007abc:	58020800 	.word	0x58020800
 8007ac0:	58020c00 	.word	0x58020c00
 8007ac4:	58021000 	.word	0x58021000
 8007ac8:	58021400 	.word	0x58021400
 8007acc:	58021800 	.word	0x58021800
 8007ad0:	58021c00 	.word	0x58021c00
 8007ad4:	58022400 	.word	0x58022400
 8007ad8:	2300      	movs	r3, #0
 8007ada:	69fa      	ldr	r2, [r7, #28]
 8007adc:	f002 0203 	and.w	r2, r2, #3
 8007ae0:	0092      	lsls	r2, r2, #2
 8007ae2:	4093      	lsls	r3, r2
 8007ae4:	69ba      	ldr	r2, [r7, #24]
 8007ae6:	4313      	orrs	r3, r2
 8007ae8:	61bb      	str	r3, [r7, #24]
 8007aea:	4938      	ldr	r1, [pc, #224]	; (8007bcc <HAL_GPIO_Init+0x34c>)
 8007aec:	69fb      	ldr	r3, [r7, #28]
 8007aee:	089b      	lsrs	r3, r3, #2
 8007af0:	3302      	adds	r3, #2
 8007af2:	69ba      	ldr	r2, [r7, #24]
 8007af4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8007af8:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8007afc:	681b      	ldr	r3, [r3, #0]
 8007afe:	61bb      	str	r3, [r7, #24]
 8007b00:	693b      	ldr	r3, [r7, #16]
 8007b02:	43db      	mvns	r3, r3
 8007b04:	69ba      	ldr	r2, [r7, #24]
 8007b06:	4013      	ands	r3, r2
 8007b08:	61bb      	str	r3, [r7, #24]
 8007b0a:	683b      	ldr	r3, [r7, #0]
 8007b0c:	685b      	ldr	r3, [r3, #4]
 8007b0e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8007b12:	2b00      	cmp	r3, #0
 8007b14:	d003      	beq.n	8007b1e <HAL_GPIO_Init+0x29e>
 8007b16:	69ba      	ldr	r2, [r7, #24]
 8007b18:	693b      	ldr	r3, [r7, #16]
 8007b1a:	4313      	orrs	r3, r2
 8007b1c:	61bb      	str	r3, [r7, #24]
 8007b1e:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8007b22:	69bb      	ldr	r3, [r7, #24]
 8007b24:	6013      	str	r3, [r2, #0]
 8007b26:	f04f 43b0 	mov.w	r3, #1476395008	; 0x58000000
 8007b2a:	685b      	ldr	r3, [r3, #4]
 8007b2c:	61bb      	str	r3, [r7, #24]
 8007b2e:	693b      	ldr	r3, [r7, #16]
 8007b30:	43db      	mvns	r3, r3
 8007b32:	69ba      	ldr	r2, [r7, #24]
 8007b34:	4013      	ands	r3, r2
 8007b36:	61bb      	str	r3, [r7, #24]
 8007b38:	683b      	ldr	r3, [r7, #0]
 8007b3a:	685b      	ldr	r3, [r3, #4]
 8007b3c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8007b40:	2b00      	cmp	r3, #0
 8007b42:	d003      	beq.n	8007b4c <HAL_GPIO_Init+0x2cc>
 8007b44:	69ba      	ldr	r2, [r7, #24]
 8007b46:	693b      	ldr	r3, [r7, #16]
 8007b48:	4313      	orrs	r3, r2
 8007b4a:	61bb      	str	r3, [r7, #24]
 8007b4c:	f04f 42b0 	mov.w	r2, #1476395008	; 0x58000000
 8007b50:	69bb      	ldr	r3, [r7, #24]
 8007b52:	6053      	str	r3, [r2, #4]
 8007b54:	697b      	ldr	r3, [r7, #20]
 8007b56:	685b      	ldr	r3, [r3, #4]
 8007b58:	61bb      	str	r3, [r7, #24]
 8007b5a:	693b      	ldr	r3, [r7, #16]
 8007b5c:	43db      	mvns	r3, r3
 8007b5e:	69ba      	ldr	r2, [r7, #24]
 8007b60:	4013      	ands	r3, r2
 8007b62:	61bb      	str	r3, [r7, #24]
 8007b64:	683b      	ldr	r3, [r7, #0]
 8007b66:	685b      	ldr	r3, [r3, #4]
 8007b68:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007b6c:	2b00      	cmp	r3, #0
 8007b6e:	d003      	beq.n	8007b78 <HAL_GPIO_Init+0x2f8>
 8007b70:	69ba      	ldr	r2, [r7, #24]
 8007b72:	693b      	ldr	r3, [r7, #16]
 8007b74:	4313      	orrs	r3, r2
 8007b76:	61bb      	str	r3, [r7, #24]
 8007b78:	697b      	ldr	r3, [r7, #20]
 8007b7a:	69ba      	ldr	r2, [r7, #24]
 8007b7c:	605a      	str	r2, [r3, #4]
 8007b7e:	697b      	ldr	r3, [r7, #20]
 8007b80:	681b      	ldr	r3, [r3, #0]
 8007b82:	61bb      	str	r3, [r7, #24]
 8007b84:	693b      	ldr	r3, [r7, #16]
 8007b86:	43db      	mvns	r3, r3
 8007b88:	69ba      	ldr	r2, [r7, #24]
 8007b8a:	4013      	ands	r3, r2
 8007b8c:	61bb      	str	r3, [r7, #24]
 8007b8e:	683b      	ldr	r3, [r7, #0]
 8007b90:	685b      	ldr	r3, [r3, #4]
 8007b92:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8007b96:	2b00      	cmp	r3, #0
 8007b98:	d003      	beq.n	8007ba2 <HAL_GPIO_Init+0x322>
 8007b9a:	69ba      	ldr	r2, [r7, #24]
 8007b9c:	693b      	ldr	r3, [r7, #16]
 8007b9e:	4313      	orrs	r3, r2
 8007ba0:	61bb      	str	r3, [r7, #24]
 8007ba2:	697b      	ldr	r3, [r7, #20]
 8007ba4:	69ba      	ldr	r2, [r7, #24]
 8007ba6:	601a      	str	r2, [r3, #0]
 8007ba8:	69fb      	ldr	r3, [r7, #28]
 8007baa:	3301      	adds	r3, #1
 8007bac:	61fb      	str	r3, [r7, #28]
 8007bae:	683b      	ldr	r3, [r7, #0]
 8007bb0:	681a      	ldr	r2, [r3, #0]
 8007bb2:	69fb      	ldr	r3, [r7, #28]
 8007bb4:	fa22 f303 	lsr.w	r3, r2, r3
 8007bb8:	2b00      	cmp	r3, #0
 8007bba:	f47f ae6b 	bne.w	8007894 <HAL_GPIO_Init+0x14>
 8007bbe:	bf00      	nop
 8007bc0:	bf00      	nop
 8007bc2:	3724      	adds	r7, #36	; 0x24
 8007bc4:	46bd      	mov	sp, r7
 8007bc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007bca:	4770      	bx	lr
 8007bcc:	58000400 	.word	0x58000400

08007bd0 <HAL_GPIO_WritePin>:
 8007bd0:	b480      	push	{r7}
 8007bd2:	b083      	sub	sp, #12
 8007bd4:	af00      	add	r7, sp, #0
 8007bd6:	6078      	str	r0, [r7, #4]
 8007bd8:	460b      	mov	r3, r1
 8007bda:	807b      	strh	r3, [r7, #2]
 8007bdc:	4613      	mov	r3, r2
 8007bde:	707b      	strb	r3, [r7, #1]
 8007be0:	787b      	ldrb	r3, [r7, #1]
 8007be2:	2b00      	cmp	r3, #0
 8007be4:	d003      	beq.n	8007bee <HAL_GPIO_WritePin+0x1e>
 8007be6:	887a      	ldrh	r2, [r7, #2]
 8007be8:	687b      	ldr	r3, [r7, #4]
 8007bea:	619a      	str	r2, [r3, #24]
 8007bec:	e003      	b.n	8007bf6 <HAL_GPIO_WritePin+0x26>
 8007bee:	887b      	ldrh	r3, [r7, #2]
 8007bf0:	041a      	lsls	r2, r3, #16
 8007bf2:	687b      	ldr	r3, [r7, #4]
 8007bf4:	619a      	str	r2, [r3, #24]
 8007bf6:	bf00      	nop
 8007bf8:	370c      	adds	r7, #12
 8007bfa:	46bd      	mov	sp, r7
 8007bfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c00:	4770      	bx	lr
	...

08007c04 <HAL_PWREx_ConfigSupply>:
 8007c04:	b580      	push	{r7, lr}
 8007c06:	b084      	sub	sp, #16
 8007c08:	af00      	add	r7, sp, #0
 8007c0a:	6078      	str	r0, [r7, #4]
 8007c0c:	4b19      	ldr	r3, [pc, #100]	; (8007c74 <HAL_PWREx_ConfigSupply+0x70>)
 8007c0e:	68db      	ldr	r3, [r3, #12]
 8007c10:	f003 0304 	and.w	r3, r3, #4
 8007c14:	2b04      	cmp	r3, #4
 8007c16:	d00a      	beq.n	8007c2e <HAL_PWREx_ConfigSupply+0x2a>
 8007c18:	4b16      	ldr	r3, [pc, #88]	; (8007c74 <HAL_PWREx_ConfigSupply+0x70>)
 8007c1a:	68db      	ldr	r3, [r3, #12]
 8007c1c:	f003 0307 	and.w	r3, r3, #7
 8007c20:	687a      	ldr	r2, [r7, #4]
 8007c22:	429a      	cmp	r2, r3
 8007c24:	d001      	beq.n	8007c2a <HAL_PWREx_ConfigSupply+0x26>
 8007c26:	2301      	movs	r3, #1
 8007c28:	e01f      	b.n	8007c6a <HAL_PWREx_ConfigSupply+0x66>
 8007c2a:	2300      	movs	r3, #0
 8007c2c:	e01d      	b.n	8007c6a <HAL_PWREx_ConfigSupply+0x66>
 8007c2e:	4b11      	ldr	r3, [pc, #68]	; (8007c74 <HAL_PWREx_ConfigSupply+0x70>)
 8007c30:	68db      	ldr	r3, [r3, #12]
 8007c32:	f023 0207 	bic.w	r2, r3, #7
 8007c36:	490f      	ldr	r1, [pc, #60]	; (8007c74 <HAL_PWREx_ConfigSupply+0x70>)
 8007c38:	687b      	ldr	r3, [r7, #4]
 8007c3a:	4313      	orrs	r3, r2
 8007c3c:	60cb      	str	r3, [r1, #12]
 8007c3e:	f7fc fec9 	bl	80049d4 <HAL_GetTick>
 8007c42:	60f8      	str	r0, [r7, #12]
 8007c44:	e009      	b.n	8007c5a <HAL_PWREx_ConfigSupply+0x56>
 8007c46:	f7fc fec5 	bl	80049d4 <HAL_GetTick>
 8007c4a:	4602      	mov	r2, r0
 8007c4c:	68fb      	ldr	r3, [r7, #12]
 8007c4e:	1ad3      	subs	r3, r2, r3
 8007c50:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8007c54:	d901      	bls.n	8007c5a <HAL_PWREx_ConfigSupply+0x56>
 8007c56:	2301      	movs	r3, #1
 8007c58:	e007      	b.n	8007c6a <HAL_PWREx_ConfigSupply+0x66>
 8007c5a:	4b06      	ldr	r3, [pc, #24]	; (8007c74 <HAL_PWREx_ConfigSupply+0x70>)
 8007c5c:	685b      	ldr	r3, [r3, #4]
 8007c5e:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8007c62:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8007c66:	d1ee      	bne.n	8007c46 <HAL_PWREx_ConfigSupply+0x42>
 8007c68:	2300      	movs	r3, #0
 8007c6a:	4618      	mov	r0, r3
 8007c6c:	3710      	adds	r7, #16
 8007c6e:	46bd      	mov	sp, r7
 8007c70:	bd80      	pop	{r7, pc}
 8007c72:	bf00      	nop
 8007c74:	58024800 	.word	0x58024800

08007c78 <HAL_RCC_OscConfig>:
 8007c78:	b580      	push	{r7, lr}
 8007c7a:	b08c      	sub	sp, #48	; 0x30
 8007c7c:	af00      	add	r7, sp, #0
 8007c7e:	6078      	str	r0, [r7, #4]
 8007c80:	687b      	ldr	r3, [r7, #4]
 8007c82:	2b00      	cmp	r3, #0
 8007c84:	d101      	bne.n	8007c8a <HAL_RCC_OscConfig+0x12>
 8007c86:	2301      	movs	r3, #1
 8007c88:	e39d      	b.n	80083c6 <HAL_RCC_OscConfig+0x74e>
 8007c8a:	687b      	ldr	r3, [r7, #4]
 8007c8c:	681b      	ldr	r3, [r3, #0]
 8007c8e:	f003 0301 	and.w	r3, r3, #1
 8007c92:	2b00      	cmp	r3, #0
 8007c94:	f000 8087 	beq.w	8007da6 <HAL_RCC_OscConfig+0x12e>
 8007c98:	4b88      	ldr	r3, [pc, #544]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007c9a:	691b      	ldr	r3, [r3, #16]
 8007c9c:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8007ca0:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007ca2:	4b86      	ldr	r3, [pc, #536]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007ca4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007ca6:	62bb      	str	r3, [r7, #40]	; 0x28
 8007ca8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007caa:	2b10      	cmp	r3, #16
 8007cac:	d007      	beq.n	8007cbe <HAL_RCC_OscConfig+0x46>
 8007cae:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007cb0:	2b18      	cmp	r3, #24
 8007cb2:	d110      	bne.n	8007cd6 <HAL_RCC_OscConfig+0x5e>
 8007cb4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007cb6:	f003 0303 	and.w	r3, r3, #3
 8007cba:	2b02      	cmp	r3, #2
 8007cbc:	d10b      	bne.n	8007cd6 <HAL_RCC_OscConfig+0x5e>
 8007cbe:	4b7f      	ldr	r3, [pc, #508]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007cc0:	681b      	ldr	r3, [r3, #0]
 8007cc2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007cc6:	2b00      	cmp	r3, #0
 8007cc8:	d06c      	beq.n	8007da4 <HAL_RCC_OscConfig+0x12c>
 8007cca:	687b      	ldr	r3, [r7, #4]
 8007ccc:	685b      	ldr	r3, [r3, #4]
 8007cce:	2b00      	cmp	r3, #0
 8007cd0:	d168      	bne.n	8007da4 <HAL_RCC_OscConfig+0x12c>
 8007cd2:	2301      	movs	r3, #1
 8007cd4:	e377      	b.n	80083c6 <HAL_RCC_OscConfig+0x74e>
 8007cd6:	687b      	ldr	r3, [r7, #4]
 8007cd8:	685b      	ldr	r3, [r3, #4]
 8007cda:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8007cde:	d106      	bne.n	8007cee <HAL_RCC_OscConfig+0x76>
 8007ce0:	4b76      	ldr	r3, [pc, #472]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007ce2:	681b      	ldr	r3, [r3, #0]
 8007ce4:	4a75      	ldr	r2, [pc, #468]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007ce6:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007cea:	6013      	str	r3, [r2, #0]
 8007cec:	e02e      	b.n	8007d4c <HAL_RCC_OscConfig+0xd4>
 8007cee:	687b      	ldr	r3, [r7, #4]
 8007cf0:	685b      	ldr	r3, [r3, #4]
 8007cf2:	2b00      	cmp	r3, #0
 8007cf4:	d10c      	bne.n	8007d10 <HAL_RCC_OscConfig+0x98>
 8007cf6:	4b71      	ldr	r3, [pc, #452]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007cf8:	681b      	ldr	r3, [r3, #0]
 8007cfa:	4a70      	ldr	r2, [pc, #448]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007cfc:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007d00:	6013      	str	r3, [r2, #0]
 8007d02:	4b6e      	ldr	r3, [pc, #440]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007d04:	681b      	ldr	r3, [r3, #0]
 8007d06:	4a6d      	ldr	r2, [pc, #436]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007d08:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8007d0c:	6013      	str	r3, [r2, #0]
 8007d0e:	e01d      	b.n	8007d4c <HAL_RCC_OscConfig+0xd4>
 8007d10:	687b      	ldr	r3, [r7, #4]
 8007d12:	685b      	ldr	r3, [r3, #4]
 8007d14:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8007d18:	d10c      	bne.n	8007d34 <HAL_RCC_OscConfig+0xbc>
 8007d1a:	4b68      	ldr	r3, [pc, #416]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007d1c:	681b      	ldr	r3, [r3, #0]
 8007d1e:	4a67      	ldr	r2, [pc, #412]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007d20:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8007d24:	6013      	str	r3, [r2, #0]
 8007d26:	4b65      	ldr	r3, [pc, #404]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007d28:	681b      	ldr	r3, [r3, #0]
 8007d2a:	4a64      	ldr	r2, [pc, #400]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007d2c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007d30:	6013      	str	r3, [r2, #0]
 8007d32:	e00b      	b.n	8007d4c <HAL_RCC_OscConfig+0xd4>
 8007d34:	4b61      	ldr	r3, [pc, #388]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007d36:	681b      	ldr	r3, [r3, #0]
 8007d38:	4a60      	ldr	r2, [pc, #384]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007d3a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007d3e:	6013      	str	r3, [r2, #0]
 8007d40:	4b5e      	ldr	r3, [pc, #376]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007d42:	681b      	ldr	r3, [r3, #0]
 8007d44:	4a5d      	ldr	r2, [pc, #372]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007d46:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8007d4a:	6013      	str	r3, [r2, #0]
 8007d4c:	687b      	ldr	r3, [r7, #4]
 8007d4e:	685b      	ldr	r3, [r3, #4]
 8007d50:	2b00      	cmp	r3, #0
 8007d52:	d013      	beq.n	8007d7c <HAL_RCC_OscConfig+0x104>
 8007d54:	f7fc fe3e 	bl	80049d4 <HAL_GetTick>
 8007d58:	6278      	str	r0, [r7, #36]	; 0x24
 8007d5a:	e008      	b.n	8007d6e <HAL_RCC_OscConfig+0xf6>
 8007d5c:	f7fc fe3a 	bl	80049d4 <HAL_GetTick>
 8007d60:	4602      	mov	r2, r0
 8007d62:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007d64:	1ad3      	subs	r3, r2, r3
 8007d66:	2b64      	cmp	r3, #100	; 0x64
 8007d68:	d901      	bls.n	8007d6e <HAL_RCC_OscConfig+0xf6>
 8007d6a:	2303      	movs	r3, #3
 8007d6c:	e32b      	b.n	80083c6 <HAL_RCC_OscConfig+0x74e>
 8007d6e:	4b53      	ldr	r3, [pc, #332]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007d70:	681b      	ldr	r3, [r3, #0]
 8007d72:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007d76:	2b00      	cmp	r3, #0
 8007d78:	d0f0      	beq.n	8007d5c <HAL_RCC_OscConfig+0xe4>
 8007d7a:	e014      	b.n	8007da6 <HAL_RCC_OscConfig+0x12e>
 8007d7c:	f7fc fe2a 	bl	80049d4 <HAL_GetTick>
 8007d80:	6278      	str	r0, [r7, #36]	; 0x24
 8007d82:	e008      	b.n	8007d96 <HAL_RCC_OscConfig+0x11e>
 8007d84:	f7fc fe26 	bl	80049d4 <HAL_GetTick>
 8007d88:	4602      	mov	r2, r0
 8007d8a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007d8c:	1ad3      	subs	r3, r2, r3
 8007d8e:	2b64      	cmp	r3, #100	; 0x64
 8007d90:	d901      	bls.n	8007d96 <HAL_RCC_OscConfig+0x11e>
 8007d92:	2303      	movs	r3, #3
 8007d94:	e317      	b.n	80083c6 <HAL_RCC_OscConfig+0x74e>
 8007d96:	4b49      	ldr	r3, [pc, #292]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007d98:	681b      	ldr	r3, [r3, #0]
 8007d9a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007d9e:	2b00      	cmp	r3, #0
 8007da0:	d1f0      	bne.n	8007d84 <HAL_RCC_OscConfig+0x10c>
 8007da2:	e000      	b.n	8007da6 <HAL_RCC_OscConfig+0x12e>
 8007da4:	bf00      	nop
 8007da6:	687b      	ldr	r3, [r7, #4]
 8007da8:	681b      	ldr	r3, [r3, #0]
 8007daa:	f003 0302 	and.w	r3, r3, #2
 8007dae:	2b00      	cmp	r3, #0
 8007db0:	f000 808c 	beq.w	8007ecc <HAL_RCC_OscConfig+0x254>
 8007db4:	4b41      	ldr	r3, [pc, #260]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007db6:	691b      	ldr	r3, [r3, #16]
 8007db8:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8007dbc:	623b      	str	r3, [r7, #32]
 8007dbe:	4b3f      	ldr	r3, [pc, #252]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007dc0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007dc2:	61fb      	str	r3, [r7, #28]
 8007dc4:	6a3b      	ldr	r3, [r7, #32]
 8007dc6:	2b00      	cmp	r3, #0
 8007dc8:	d007      	beq.n	8007dda <HAL_RCC_OscConfig+0x162>
 8007dca:	6a3b      	ldr	r3, [r7, #32]
 8007dcc:	2b18      	cmp	r3, #24
 8007dce:	d137      	bne.n	8007e40 <HAL_RCC_OscConfig+0x1c8>
 8007dd0:	69fb      	ldr	r3, [r7, #28]
 8007dd2:	f003 0303 	and.w	r3, r3, #3
 8007dd6:	2b00      	cmp	r3, #0
 8007dd8:	d132      	bne.n	8007e40 <HAL_RCC_OscConfig+0x1c8>
 8007dda:	4b38      	ldr	r3, [pc, #224]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007ddc:	681b      	ldr	r3, [r3, #0]
 8007dde:	f003 0304 	and.w	r3, r3, #4
 8007de2:	2b00      	cmp	r3, #0
 8007de4:	d005      	beq.n	8007df2 <HAL_RCC_OscConfig+0x17a>
 8007de6:	687b      	ldr	r3, [r7, #4]
 8007de8:	68db      	ldr	r3, [r3, #12]
 8007dea:	2b00      	cmp	r3, #0
 8007dec:	d101      	bne.n	8007df2 <HAL_RCC_OscConfig+0x17a>
 8007dee:	2301      	movs	r3, #1
 8007df0:	e2e9      	b.n	80083c6 <HAL_RCC_OscConfig+0x74e>
 8007df2:	4b32      	ldr	r3, [pc, #200]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007df4:	681b      	ldr	r3, [r3, #0]
 8007df6:	f023 0219 	bic.w	r2, r3, #25
 8007dfa:	687b      	ldr	r3, [r7, #4]
 8007dfc:	68db      	ldr	r3, [r3, #12]
 8007dfe:	492f      	ldr	r1, [pc, #188]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007e00:	4313      	orrs	r3, r2
 8007e02:	600b      	str	r3, [r1, #0]
 8007e04:	f7fc fde6 	bl	80049d4 <HAL_GetTick>
 8007e08:	6278      	str	r0, [r7, #36]	; 0x24
 8007e0a:	e008      	b.n	8007e1e <HAL_RCC_OscConfig+0x1a6>
 8007e0c:	f7fc fde2 	bl	80049d4 <HAL_GetTick>
 8007e10:	4602      	mov	r2, r0
 8007e12:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007e14:	1ad3      	subs	r3, r2, r3
 8007e16:	2b02      	cmp	r3, #2
 8007e18:	d901      	bls.n	8007e1e <HAL_RCC_OscConfig+0x1a6>
 8007e1a:	2303      	movs	r3, #3
 8007e1c:	e2d3      	b.n	80083c6 <HAL_RCC_OscConfig+0x74e>
 8007e1e:	4b27      	ldr	r3, [pc, #156]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007e20:	681b      	ldr	r3, [r3, #0]
 8007e22:	f003 0304 	and.w	r3, r3, #4
 8007e26:	2b00      	cmp	r3, #0
 8007e28:	d0f0      	beq.n	8007e0c <HAL_RCC_OscConfig+0x194>
 8007e2a:	4b24      	ldr	r3, [pc, #144]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007e2c:	685b      	ldr	r3, [r3, #4]
 8007e2e:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 8007e32:	687b      	ldr	r3, [r7, #4]
 8007e34:	691b      	ldr	r3, [r3, #16]
 8007e36:	061b      	lsls	r3, r3, #24
 8007e38:	4920      	ldr	r1, [pc, #128]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007e3a:	4313      	orrs	r3, r2
 8007e3c:	604b      	str	r3, [r1, #4]
 8007e3e:	e045      	b.n	8007ecc <HAL_RCC_OscConfig+0x254>
 8007e40:	687b      	ldr	r3, [r7, #4]
 8007e42:	68db      	ldr	r3, [r3, #12]
 8007e44:	2b00      	cmp	r3, #0
 8007e46:	d026      	beq.n	8007e96 <HAL_RCC_OscConfig+0x21e>
 8007e48:	4b1c      	ldr	r3, [pc, #112]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007e4a:	681b      	ldr	r3, [r3, #0]
 8007e4c:	f023 0219 	bic.w	r2, r3, #25
 8007e50:	687b      	ldr	r3, [r7, #4]
 8007e52:	68db      	ldr	r3, [r3, #12]
 8007e54:	4919      	ldr	r1, [pc, #100]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007e56:	4313      	orrs	r3, r2
 8007e58:	600b      	str	r3, [r1, #0]
 8007e5a:	f7fc fdbb 	bl	80049d4 <HAL_GetTick>
 8007e5e:	6278      	str	r0, [r7, #36]	; 0x24
 8007e60:	e008      	b.n	8007e74 <HAL_RCC_OscConfig+0x1fc>
 8007e62:	f7fc fdb7 	bl	80049d4 <HAL_GetTick>
 8007e66:	4602      	mov	r2, r0
 8007e68:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007e6a:	1ad3      	subs	r3, r2, r3
 8007e6c:	2b02      	cmp	r3, #2
 8007e6e:	d901      	bls.n	8007e74 <HAL_RCC_OscConfig+0x1fc>
 8007e70:	2303      	movs	r3, #3
 8007e72:	e2a8      	b.n	80083c6 <HAL_RCC_OscConfig+0x74e>
 8007e74:	4b11      	ldr	r3, [pc, #68]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007e76:	681b      	ldr	r3, [r3, #0]
 8007e78:	f003 0304 	and.w	r3, r3, #4
 8007e7c:	2b00      	cmp	r3, #0
 8007e7e:	d0f0      	beq.n	8007e62 <HAL_RCC_OscConfig+0x1ea>
 8007e80:	4b0e      	ldr	r3, [pc, #56]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007e82:	685b      	ldr	r3, [r3, #4]
 8007e84:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 8007e88:	687b      	ldr	r3, [r7, #4]
 8007e8a:	691b      	ldr	r3, [r3, #16]
 8007e8c:	061b      	lsls	r3, r3, #24
 8007e8e:	490b      	ldr	r1, [pc, #44]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007e90:	4313      	orrs	r3, r2
 8007e92:	604b      	str	r3, [r1, #4]
 8007e94:	e01a      	b.n	8007ecc <HAL_RCC_OscConfig+0x254>
 8007e96:	4b09      	ldr	r3, [pc, #36]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007e98:	681b      	ldr	r3, [r3, #0]
 8007e9a:	4a08      	ldr	r2, [pc, #32]	; (8007ebc <HAL_RCC_OscConfig+0x244>)
 8007e9c:	f023 0301 	bic.w	r3, r3, #1
 8007ea0:	6013      	str	r3, [r2, #0]
 8007ea2:	f7fc fd97 	bl	80049d4 <HAL_GetTick>
 8007ea6:	6278      	str	r0, [r7, #36]	; 0x24
 8007ea8:	e00a      	b.n	8007ec0 <HAL_RCC_OscConfig+0x248>
 8007eaa:	f7fc fd93 	bl	80049d4 <HAL_GetTick>
 8007eae:	4602      	mov	r2, r0
 8007eb0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007eb2:	1ad3      	subs	r3, r2, r3
 8007eb4:	2b02      	cmp	r3, #2
 8007eb6:	d903      	bls.n	8007ec0 <HAL_RCC_OscConfig+0x248>
 8007eb8:	2303      	movs	r3, #3
 8007eba:	e284      	b.n	80083c6 <HAL_RCC_OscConfig+0x74e>
 8007ebc:	58024400 	.word	0x58024400
 8007ec0:	4b96      	ldr	r3, [pc, #600]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 8007ec2:	681b      	ldr	r3, [r3, #0]
 8007ec4:	f003 0304 	and.w	r3, r3, #4
 8007ec8:	2b00      	cmp	r3, #0
 8007eca:	d1ee      	bne.n	8007eaa <HAL_RCC_OscConfig+0x232>
 8007ecc:	687b      	ldr	r3, [r7, #4]
 8007ece:	681b      	ldr	r3, [r3, #0]
 8007ed0:	f003 0310 	and.w	r3, r3, #16
 8007ed4:	2b00      	cmp	r3, #0
 8007ed6:	d06a      	beq.n	8007fae <HAL_RCC_OscConfig+0x336>
 8007ed8:	4b90      	ldr	r3, [pc, #576]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 8007eda:	691b      	ldr	r3, [r3, #16]
 8007edc:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8007ee0:	61bb      	str	r3, [r7, #24]
 8007ee2:	4b8e      	ldr	r3, [pc, #568]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 8007ee4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007ee6:	617b      	str	r3, [r7, #20]
 8007ee8:	69bb      	ldr	r3, [r7, #24]
 8007eea:	2b08      	cmp	r3, #8
 8007eec:	d007      	beq.n	8007efe <HAL_RCC_OscConfig+0x286>
 8007eee:	69bb      	ldr	r3, [r7, #24]
 8007ef0:	2b18      	cmp	r3, #24
 8007ef2:	d11b      	bne.n	8007f2c <HAL_RCC_OscConfig+0x2b4>
 8007ef4:	697b      	ldr	r3, [r7, #20]
 8007ef6:	f003 0303 	and.w	r3, r3, #3
 8007efa:	2b01      	cmp	r3, #1
 8007efc:	d116      	bne.n	8007f2c <HAL_RCC_OscConfig+0x2b4>
 8007efe:	4b87      	ldr	r3, [pc, #540]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 8007f00:	681b      	ldr	r3, [r3, #0]
 8007f02:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007f06:	2b00      	cmp	r3, #0
 8007f08:	d005      	beq.n	8007f16 <HAL_RCC_OscConfig+0x29e>
 8007f0a:	687b      	ldr	r3, [r7, #4]
 8007f0c:	69db      	ldr	r3, [r3, #28]
 8007f0e:	2b80      	cmp	r3, #128	; 0x80
 8007f10:	d001      	beq.n	8007f16 <HAL_RCC_OscConfig+0x29e>
 8007f12:	2301      	movs	r3, #1
 8007f14:	e257      	b.n	80083c6 <HAL_RCC_OscConfig+0x74e>
 8007f16:	4b81      	ldr	r3, [pc, #516]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 8007f18:	68db      	ldr	r3, [r3, #12]
 8007f1a:	f023 527c 	bic.w	r2, r3, #1056964608	; 0x3f000000
 8007f1e:	687b      	ldr	r3, [r7, #4]
 8007f20:	6a1b      	ldr	r3, [r3, #32]
 8007f22:	061b      	lsls	r3, r3, #24
 8007f24:	497d      	ldr	r1, [pc, #500]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 8007f26:	4313      	orrs	r3, r2
 8007f28:	60cb      	str	r3, [r1, #12]
 8007f2a:	e040      	b.n	8007fae <HAL_RCC_OscConfig+0x336>
 8007f2c:	687b      	ldr	r3, [r7, #4]
 8007f2e:	69db      	ldr	r3, [r3, #28]
 8007f30:	2b00      	cmp	r3, #0
 8007f32:	d023      	beq.n	8007f7c <HAL_RCC_OscConfig+0x304>
 8007f34:	4b79      	ldr	r3, [pc, #484]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 8007f36:	681b      	ldr	r3, [r3, #0]
 8007f38:	4a78      	ldr	r2, [pc, #480]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 8007f3a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8007f3e:	6013      	str	r3, [r2, #0]
 8007f40:	f7fc fd48 	bl	80049d4 <HAL_GetTick>
 8007f44:	6278      	str	r0, [r7, #36]	; 0x24
 8007f46:	e008      	b.n	8007f5a <HAL_RCC_OscConfig+0x2e2>
 8007f48:	f7fc fd44 	bl	80049d4 <HAL_GetTick>
 8007f4c:	4602      	mov	r2, r0
 8007f4e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007f50:	1ad3      	subs	r3, r2, r3
 8007f52:	2b02      	cmp	r3, #2
 8007f54:	d901      	bls.n	8007f5a <HAL_RCC_OscConfig+0x2e2>
 8007f56:	2303      	movs	r3, #3
 8007f58:	e235      	b.n	80083c6 <HAL_RCC_OscConfig+0x74e>
 8007f5a:	4b70      	ldr	r3, [pc, #448]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 8007f5c:	681b      	ldr	r3, [r3, #0]
 8007f5e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007f62:	2b00      	cmp	r3, #0
 8007f64:	d0f0      	beq.n	8007f48 <HAL_RCC_OscConfig+0x2d0>
 8007f66:	4b6d      	ldr	r3, [pc, #436]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 8007f68:	68db      	ldr	r3, [r3, #12]
 8007f6a:	f023 527c 	bic.w	r2, r3, #1056964608	; 0x3f000000
 8007f6e:	687b      	ldr	r3, [r7, #4]
 8007f70:	6a1b      	ldr	r3, [r3, #32]
 8007f72:	061b      	lsls	r3, r3, #24
 8007f74:	4969      	ldr	r1, [pc, #420]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 8007f76:	4313      	orrs	r3, r2
 8007f78:	60cb      	str	r3, [r1, #12]
 8007f7a:	e018      	b.n	8007fae <HAL_RCC_OscConfig+0x336>
 8007f7c:	4b67      	ldr	r3, [pc, #412]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 8007f7e:	681b      	ldr	r3, [r3, #0]
 8007f80:	4a66      	ldr	r2, [pc, #408]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 8007f82:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8007f86:	6013      	str	r3, [r2, #0]
 8007f88:	f7fc fd24 	bl	80049d4 <HAL_GetTick>
 8007f8c:	6278      	str	r0, [r7, #36]	; 0x24
 8007f8e:	e008      	b.n	8007fa2 <HAL_RCC_OscConfig+0x32a>
 8007f90:	f7fc fd20 	bl	80049d4 <HAL_GetTick>
 8007f94:	4602      	mov	r2, r0
 8007f96:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007f98:	1ad3      	subs	r3, r2, r3
 8007f9a:	2b02      	cmp	r3, #2
 8007f9c:	d901      	bls.n	8007fa2 <HAL_RCC_OscConfig+0x32a>
 8007f9e:	2303      	movs	r3, #3
 8007fa0:	e211      	b.n	80083c6 <HAL_RCC_OscConfig+0x74e>
 8007fa2:	4b5e      	ldr	r3, [pc, #376]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 8007fa4:	681b      	ldr	r3, [r3, #0]
 8007fa6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8007faa:	2b00      	cmp	r3, #0
 8007fac:	d1f0      	bne.n	8007f90 <HAL_RCC_OscConfig+0x318>
 8007fae:	687b      	ldr	r3, [r7, #4]
 8007fb0:	681b      	ldr	r3, [r3, #0]
 8007fb2:	f003 0308 	and.w	r3, r3, #8
 8007fb6:	2b00      	cmp	r3, #0
 8007fb8:	d036      	beq.n	8008028 <HAL_RCC_OscConfig+0x3b0>
 8007fba:	687b      	ldr	r3, [r7, #4]
 8007fbc:	695b      	ldr	r3, [r3, #20]
 8007fbe:	2b00      	cmp	r3, #0
 8007fc0:	d019      	beq.n	8007ff6 <HAL_RCC_OscConfig+0x37e>
 8007fc2:	4b56      	ldr	r3, [pc, #344]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 8007fc4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8007fc6:	4a55      	ldr	r2, [pc, #340]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 8007fc8:	f043 0301 	orr.w	r3, r3, #1
 8007fcc:	6753      	str	r3, [r2, #116]	; 0x74
 8007fce:	f7fc fd01 	bl	80049d4 <HAL_GetTick>
 8007fd2:	6278      	str	r0, [r7, #36]	; 0x24
 8007fd4:	e008      	b.n	8007fe8 <HAL_RCC_OscConfig+0x370>
 8007fd6:	f7fc fcfd 	bl	80049d4 <HAL_GetTick>
 8007fda:	4602      	mov	r2, r0
 8007fdc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007fde:	1ad3      	subs	r3, r2, r3
 8007fe0:	2b02      	cmp	r3, #2
 8007fe2:	d901      	bls.n	8007fe8 <HAL_RCC_OscConfig+0x370>
 8007fe4:	2303      	movs	r3, #3
 8007fe6:	e1ee      	b.n	80083c6 <HAL_RCC_OscConfig+0x74e>
 8007fe8:	4b4c      	ldr	r3, [pc, #304]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 8007fea:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8007fec:	f003 0302 	and.w	r3, r3, #2
 8007ff0:	2b00      	cmp	r3, #0
 8007ff2:	d0f0      	beq.n	8007fd6 <HAL_RCC_OscConfig+0x35e>
 8007ff4:	e018      	b.n	8008028 <HAL_RCC_OscConfig+0x3b0>
 8007ff6:	4b49      	ldr	r3, [pc, #292]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 8007ff8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8007ffa:	4a48      	ldr	r2, [pc, #288]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 8007ffc:	f023 0301 	bic.w	r3, r3, #1
 8008000:	6753      	str	r3, [r2, #116]	; 0x74
 8008002:	f7fc fce7 	bl	80049d4 <HAL_GetTick>
 8008006:	6278      	str	r0, [r7, #36]	; 0x24
 8008008:	e008      	b.n	800801c <HAL_RCC_OscConfig+0x3a4>
 800800a:	f7fc fce3 	bl	80049d4 <HAL_GetTick>
 800800e:	4602      	mov	r2, r0
 8008010:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008012:	1ad3      	subs	r3, r2, r3
 8008014:	2b02      	cmp	r3, #2
 8008016:	d901      	bls.n	800801c <HAL_RCC_OscConfig+0x3a4>
 8008018:	2303      	movs	r3, #3
 800801a:	e1d4      	b.n	80083c6 <HAL_RCC_OscConfig+0x74e>
 800801c:	4b3f      	ldr	r3, [pc, #252]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 800801e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8008020:	f003 0302 	and.w	r3, r3, #2
 8008024:	2b00      	cmp	r3, #0
 8008026:	d1f0      	bne.n	800800a <HAL_RCC_OscConfig+0x392>
 8008028:	687b      	ldr	r3, [r7, #4]
 800802a:	681b      	ldr	r3, [r3, #0]
 800802c:	f003 0320 	and.w	r3, r3, #32
 8008030:	2b00      	cmp	r3, #0
 8008032:	d036      	beq.n	80080a2 <HAL_RCC_OscConfig+0x42a>
 8008034:	687b      	ldr	r3, [r7, #4]
 8008036:	699b      	ldr	r3, [r3, #24]
 8008038:	2b00      	cmp	r3, #0
 800803a:	d019      	beq.n	8008070 <HAL_RCC_OscConfig+0x3f8>
 800803c:	4b37      	ldr	r3, [pc, #220]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 800803e:	681b      	ldr	r3, [r3, #0]
 8008040:	4a36      	ldr	r2, [pc, #216]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 8008042:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8008046:	6013      	str	r3, [r2, #0]
 8008048:	f7fc fcc4 	bl	80049d4 <HAL_GetTick>
 800804c:	6278      	str	r0, [r7, #36]	; 0x24
 800804e:	e008      	b.n	8008062 <HAL_RCC_OscConfig+0x3ea>
 8008050:	f7fc fcc0 	bl	80049d4 <HAL_GetTick>
 8008054:	4602      	mov	r2, r0
 8008056:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008058:	1ad3      	subs	r3, r2, r3
 800805a:	2b02      	cmp	r3, #2
 800805c:	d901      	bls.n	8008062 <HAL_RCC_OscConfig+0x3ea>
 800805e:	2303      	movs	r3, #3
 8008060:	e1b1      	b.n	80083c6 <HAL_RCC_OscConfig+0x74e>
 8008062:	4b2e      	ldr	r3, [pc, #184]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 8008064:	681b      	ldr	r3, [r3, #0]
 8008066:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800806a:	2b00      	cmp	r3, #0
 800806c:	d0f0      	beq.n	8008050 <HAL_RCC_OscConfig+0x3d8>
 800806e:	e018      	b.n	80080a2 <HAL_RCC_OscConfig+0x42a>
 8008070:	4b2a      	ldr	r3, [pc, #168]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 8008072:	681b      	ldr	r3, [r3, #0]
 8008074:	4a29      	ldr	r2, [pc, #164]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 8008076:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800807a:	6013      	str	r3, [r2, #0]
 800807c:	f7fc fcaa 	bl	80049d4 <HAL_GetTick>
 8008080:	6278      	str	r0, [r7, #36]	; 0x24
 8008082:	e008      	b.n	8008096 <HAL_RCC_OscConfig+0x41e>
 8008084:	f7fc fca6 	bl	80049d4 <HAL_GetTick>
 8008088:	4602      	mov	r2, r0
 800808a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800808c:	1ad3      	subs	r3, r2, r3
 800808e:	2b02      	cmp	r3, #2
 8008090:	d901      	bls.n	8008096 <HAL_RCC_OscConfig+0x41e>
 8008092:	2303      	movs	r3, #3
 8008094:	e197      	b.n	80083c6 <HAL_RCC_OscConfig+0x74e>
 8008096:	4b21      	ldr	r3, [pc, #132]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 8008098:	681b      	ldr	r3, [r3, #0]
 800809a:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800809e:	2b00      	cmp	r3, #0
 80080a0:	d1f0      	bne.n	8008084 <HAL_RCC_OscConfig+0x40c>
 80080a2:	687b      	ldr	r3, [r7, #4]
 80080a4:	681b      	ldr	r3, [r3, #0]
 80080a6:	f003 0304 	and.w	r3, r3, #4
 80080aa:	2b00      	cmp	r3, #0
 80080ac:	f000 8086 	beq.w	80081bc <HAL_RCC_OscConfig+0x544>
 80080b0:	4b1b      	ldr	r3, [pc, #108]	; (8008120 <HAL_RCC_OscConfig+0x4a8>)
 80080b2:	681b      	ldr	r3, [r3, #0]
 80080b4:	4a1a      	ldr	r2, [pc, #104]	; (8008120 <HAL_RCC_OscConfig+0x4a8>)
 80080b6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80080ba:	6013      	str	r3, [r2, #0]
 80080bc:	f7fc fc8a 	bl	80049d4 <HAL_GetTick>
 80080c0:	6278      	str	r0, [r7, #36]	; 0x24
 80080c2:	e008      	b.n	80080d6 <HAL_RCC_OscConfig+0x45e>
 80080c4:	f7fc fc86 	bl	80049d4 <HAL_GetTick>
 80080c8:	4602      	mov	r2, r0
 80080ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80080cc:	1ad3      	subs	r3, r2, r3
 80080ce:	2b64      	cmp	r3, #100	; 0x64
 80080d0:	d901      	bls.n	80080d6 <HAL_RCC_OscConfig+0x45e>
 80080d2:	2303      	movs	r3, #3
 80080d4:	e177      	b.n	80083c6 <HAL_RCC_OscConfig+0x74e>
 80080d6:	4b12      	ldr	r3, [pc, #72]	; (8008120 <HAL_RCC_OscConfig+0x4a8>)
 80080d8:	681b      	ldr	r3, [r3, #0]
 80080da:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80080de:	2b00      	cmp	r3, #0
 80080e0:	d0f0      	beq.n	80080c4 <HAL_RCC_OscConfig+0x44c>
 80080e2:	687b      	ldr	r3, [r7, #4]
 80080e4:	689b      	ldr	r3, [r3, #8]
 80080e6:	2b01      	cmp	r3, #1
 80080e8:	d106      	bne.n	80080f8 <HAL_RCC_OscConfig+0x480>
 80080ea:	4b0c      	ldr	r3, [pc, #48]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 80080ec:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80080ee:	4a0b      	ldr	r2, [pc, #44]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 80080f0:	f043 0301 	orr.w	r3, r3, #1
 80080f4:	6713      	str	r3, [r2, #112]	; 0x70
 80080f6:	e032      	b.n	800815e <HAL_RCC_OscConfig+0x4e6>
 80080f8:	687b      	ldr	r3, [r7, #4]
 80080fa:	689b      	ldr	r3, [r3, #8]
 80080fc:	2b00      	cmp	r3, #0
 80080fe:	d111      	bne.n	8008124 <HAL_RCC_OscConfig+0x4ac>
 8008100:	4b06      	ldr	r3, [pc, #24]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 8008102:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008104:	4a05      	ldr	r2, [pc, #20]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 8008106:	f023 0301 	bic.w	r3, r3, #1
 800810a:	6713      	str	r3, [r2, #112]	; 0x70
 800810c:	4b03      	ldr	r3, [pc, #12]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 800810e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008110:	4a02      	ldr	r2, [pc, #8]	; (800811c <HAL_RCC_OscConfig+0x4a4>)
 8008112:	f023 0304 	bic.w	r3, r3, #4
 8008116:	6713      	str	r3, [r2, #112]	; 0x70
 8008118:	e021      	b.n	800815e <HAL_RCC_OscConfig+0x4e6>
 800811a:	bf00      	nop
 800811c:	58024400 	.word	0x58024400
 8008120:	58024800 	.word	0x58024800
 8008124:	687b      	ldr	r3, [r7, #4]
 8008126:	689b      	ldr	r3, [r3, #8]
 8008128:	2b05      	cmp	r3, #5
 800812a:	d10c      	bne.n	8008146 <HAL_RCC_OscConfig+0x4ce>
 800812c:	4b83      	ldr	r3, [pc, #524]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 800812e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008130:	4a82      	ldr	r2, [pc, #520]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 8008132:	f043 0304 	orr.w	r3, r3, #4
 8008136:	6713      	str	r3, [r2, #112]	; 0x70
 8008138:	4b80      	ldr	r3, [pc, #512]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 800813a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800813c:	4a7f      	ldr	r2, [pc, #508]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 800813e:	f043 0301 	orr.w	r3, r3, #1
 8008142:	6713      	str	r3, [r2, #112]	; 0x70
 8008144:	e00b      	b.n	800815e <HAL_RCC_OscConfig+0x4e6>
 8008146:	4b7d      	ldr	r3, [pc, #500]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 8008148:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800814a:	4a7c      	ldr	r2, [pc, #496]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 800814c:	f023 0301 	bic.w	r3, r3, #1
 8008150:	6713      	str	r3, [r2, #112]	; 0x70
 8008152:	4b7a      	ldr	r3, [pc, #488]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 8008154:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008156:	4a79      	ldr	r2, [pc, #484]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 8008158:	f023 0304 	bic.w	r3, r3, #4
 800815c:	6713      	str	r3, [r2, #112]	; 0x70
 800815e:	687b      	ldr	r3, [r7, #4]
 8008160:	689b      	ldr	r3, [r3, #8]
 8008162:	2b00      	cmp	r3, #0
 8008164:	d015      	beq.n	8008192 <HAL_RCC_OscConfig+0x51a>
 8008166:	f7fc fc35 	bl	80049d4 <HAL_GetTick>
 800816a:	6278      	str	r0, [r7, #36]	; 0x24
 800816c:	e00a      	b.n	8008184 <HAL_RCC_OscConfig+0x50c>
 800816e:	f7fc fc31 	bl	80049d4 <HAL_GetTick>
 8008172:	4602      	mov	r2, r0
 8008174:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008176:	1ad3      	subs	r3, r2, r3
 8008178:	f241 3288 	movw	r2, #5000	; 0x1388
 800817c:	4293      	cmp	r3, r2
 800817e:	d901      	bls.n	8008184 <HAL_RCC_OscConfig+0x50c>
 8008180:	2303      	movs	r3, #3
 8008182:	e120      	b.n	80083c6 <HAL_RCC_OscConfig+0x74e>
 8008184:	4b6d      	ldr	r3, [pc, #436]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 8008186:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8008188:	f003 0302 	and.w	r3, r3, #2
 800818c:	2b00      	cmp	r3, #0
 800818e:	d0ee      	beq.n	800816e <HAL_RCC_OscConfig+0x4f6>
 8008190:	e014      	b.n	80081bc <HAL_RCC_OscConfig+0x544>
 8008192:	f7fc fc1f 	bl	80049d4 <HAL_GetTick>
 8008196:	6278      	str	r0, [r7, #36]	; 0x24
 8008198:	e00a      	b.n	80081b0 <HAL_RCC_OscConfig+0x538>
 800819a:	f7fc fc1b 	bl	80049d4 <HAL_GetTick>
 800819e:	4602      	mov	r2, r0
 80081a0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80081a2:	1ad3      	subs	r3, r2, r3
 80081a4:	f241 3288 	movw	r2, #5000	; 0x1388
 80081a8:	4293      	cmp	r3, r2
 80081aa:	d901      	bls.n	80081b0 <HAL_RCC_OscConfig+0x538>
 80081ac:	2303      	movs	r3, #3
 80081ae:	e10a      	b.n	80083c6 <HAL_RCC_OscConfig+0x74e>
 80081b0:	4b62      	ldr	r3, [pc, #392]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 80081b2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80081b4:	f003 0302 	and.w	r3, r3, #2
 80081b8:	2b00      	cmp	r3, #0
 80081ba:	d1ee      	bne.n	800819a <HAL_RCC_OscConfig+0x522>
 80081bc:	687b      	ldr	r3, [r7, #4]
 80081be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80081c0:	2b00      	cmp	r3, #0
 80081c2:	f000 80ff 	beq.w	80083c4 <HAL_RCC_OscConfig+0x74c>
 80081c6:	4b5d      	ldr	r3, [pc, #372]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 80081c8:	691b      	ldr	r3, [r3, #16]
 80081ca:	f003 0338 	and.w	r3, r3, #56	; 0x38
 80081ce:	2b18      	cmp	r3, #24
 80081d0:	f000 80ba 	beq.w	8008348 <HAL_RCC_OscConfig+0x6d0>
 80081d4:	687b      	ldr	r3, [r7, #4]
 80081d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80081d8:	2b02      	cmp	r3, #2
 80081da:	f040 8095 	bne.w	8008308 <HAL_RCC_OscConfig+0x690>
 80081de:	4b57      	ldr	r3, [pc, #348]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 80081e0:	681b      	ldr	r3, [r3, #0]
 80081e2:	4a56      	ldr	r2, [pc, #344]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 80081e4:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 80081e8:	6013      	str	r3, [r2, #0]
 80081ea:	f7fc fbf3 	bl	80049d4 <HAL_GetTick>
 80081ee:	6278      	str	r0, [r7, #36]	; 0x24
 80081f0:	e008      	b.n	8008204 <HAL_RCC_OscConfig+0x58c>
 80081f2:	f7fc fbef 	bl	80049d4 <HAL_GetTick>
 80081f6:	4602      	mov	r2, r0
 80081f8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80081fa:	1ad3      	subs	r3, r2, r3
 80081fc:	2b02      	cmp	r3, #2
 80081fe:	d901      	bls.n	8008204 <HAL_RCC_OscConfig+0x58c>
 8008200:	2303      	movs	r3, #3
 8008202:	e0e0      	b.n	80083c6 <HAL_RCC_OscConfig+0x74e>
 8008204:	4b4d      	ldr	r3, [pc, #308]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 8008206:	681b      	ldr	r3, [r3, #0]
 8008208:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800820c:	2b00      	cmp	r3, #0
 800820e:	d1f0      	bne.n	80081f2 <HAL_RCC_OscConfig+0x57a>
 8008210:	4b4a      	ldr	r3, [pc, #296]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 8008212:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8008214:	4b4a      	ldr	r3, [pc, #296]	; (8008340 <HAL_RCC_OscConfig+0x6c8>)
 8008216:	4013      	ands	r3, r2
 8008218:	687a      	ldr	r2, [r7, #4]
 800821a:	6a91      	ldr	r1, [r2, #40]	; 0x28
 800821c:	687a      	ldr	r2, [r7, #4]
 800821e:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8008220:	0112      	lsls	r2, r2, #4
 8008222:	430a      	orrs	r2, r1
 8008224:	4945      	ldr	r1, [pc, #276]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 8008226:	4313      	orrs	r3, r2
 8008228:	628b      	str	r3, [r1, #40]	; 0x28
 800822a:	687b      	ldr	r3, [r7, #4]
 800822c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800822e:	3b01      	subs	r3, #1
 8008230:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8008234:	687b      	ldr	r3, [r7, #4]
 8008236:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008238:	3b01      	subs	r3, #1
 800823a:	025b      	lsls	r3, r3, #9
 800823c:	b29b      	uxth	r3, r3
 800823e:	431a      	orrs	r2, r3
 8008240:	687b      	ldr	r3, [r7, #4]
 8008242:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008244:	3b01      	subs	r3, #1
 8008246:	041b      	lsls	r3, r3, #16
 8008248:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 800824c:	431a      	orrs	r2, r3
 800824e:	687b      	ldr	r3, [r7, #4]
 8008250:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008252:	3b01      	subs	r3, #1
 8008254:	061b      	lsls	r3, r3, #24
 8008256:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 800825a:	4938      	ldr	r1, [pc, #224]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 800825c:	4313      	orrs	r3, r2
 800825e:	630b      	str	r3, [r1, #48]	; 0x30
 8008260:	4b36      	ldr	r3, [pc, #216]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 8008262:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008264:	4a35      	ldr	r2, [pc, #212]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 8008266:	f023 0301 	bic.w	r3, r3, #1
 800826a:	62d3      	str	r3, [r2, #44]	; 0x2c
 800826c:	4b33      	ldr	r3, [pc, #204]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 800826e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8008270:	4b34      	ldr	r3, [pc, #208]	; (8008344 <HAL_RCC_OscConfig+0x6cc>)
 8008272:	4013      	ands	r3, r2
 8008274:	687a      	ldr	r2, [r7, #4]
 8008276:	6c92      	ldr	r2, [r2, #72]	; 0x48
 8008278:	00d2      	lsls	r2, r2, #3
 800827a:	4930      	ldr	r1, [pc, #192]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 800827c:	4313      	orrs	r3, r2
 800827e:	634b      	str	r3, [r1, #52]	; 0x34
 8008280:	4b2e      	ldr	r3, [pc, #184]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 8008282:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008284:	f023 020c 	bic.w	r2, r3, #12
 8008288:	687b      	ldr	r3, [r7, #4]
 800828a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800828c:	492b      	ldr	r1, [pc, #172]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 800828e:	4313      	orrs	r3, r2
 8008290:	62cb      	str	r3, [r1, #44]	; 0x2c
 8008292:	4b2a      	ldr	r3, [pc, #168]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 8008294:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008296:	f023 0202 	bic.w	r2, r3, #2
 800829a:	687b      	ldr	r3, [r7, #4]
 800829c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800829e:	4927      	ldr	r1, [pc, #156]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 80082a0:	4313      	orrs	r3, r2
 80082a2:	62cb      	str	r3, [r1, #44]	; 0x2c
 80082a4:	4b25      	ldr	r3, [pc, #148]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 80082a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80082a8:	4a24      	ldr	r2, [pc, #144]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 80082aa:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80082ae:	62d3      	str	r3, [r2, #44]	; 0x2c
 80082b0:	4b22      	ldr	r3, [pc, #136]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 80082b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80082b4:	4a21      	ldr	r2, [pc, #132]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 80082b6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80082ba:	62d3      	str	r3, [r2, #44]	; 0x2c
 80082bc:	4b1f      	ldr	r3, [pc, #124]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 80082be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80082c0:	4a1e      	ldr	r2, [pc, #120]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 80082c2:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80082c6:	62d3      	str	r3, [r2, #44]	; 0x2c
 80082c8:	4b1c      	ldr	r3, [pc, #112]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 80082ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80082cc:	4a1b      	ldr	r2, [pc, #108]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 80082ce:	f043 0301 	orr.w	r3, r3, #1
 80082d2:	62d3      	str	r3, [r2, #44]	; 0x2c
 80082d4:	4b19      	ldr	r3, [pc, #100]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 80082d6:	681b      	ldr	r3, [r3, #0]
 80082d8:	4a18      	ldr	r2, [pc, #96]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 80082da:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80082de:	6013      	str	r3, [r2, #0]
 80082e0:	f7fc fb78 	bl	80049d4 <HAL_GetTick>
 80082e4:	6278      	str	r0, [r7, #36]	; 0x24
 80082e6:	e008      	b.n	80082fa <HAL_RCC_OscConfig+0x682>
 80082e8:	f7fc fb74 	bl	80049d4 <HAL_GetTick>
 80082ec:	4602      	mov	r2, r0
 80082ee:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80082f0:	1ad3      	subs	r3, r2, r3
 80082f2:	2b02      	cmp	r3, #2
 80082f4:	d901      	bls.n	80082fa <HAL_RCC_OscConfig+0x682>
 80082f6:	2303      	movs	r3, #3
 80082f8:	e065      	b.n	80083c6 <HAL_RCC_OscConfig+0x74e>
 80082fa:	4b10      	ldr	r3, [pc, #64]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 80082fc:	681b      	ldr	r3, [r3, #0]
 80082fe:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008302:	2b00      	cmp	r3, #0
 8008304:	d0f0      	beq.n	80082e8 <HAL_RCC_OscConfig+0x670>
 8008306:	e05d      	b.n	80083c4 <HAL_RCC_OscConfig+0x74c>
 8008308:	4b0c      	ldr	r3, [pc, #48]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 800830a:	681b      	ldr	r3, [r3, #0]
 800830c:	4a0b      	ldr	r2, [pc, #44]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 800830e:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8008312:	6013      	str	r3, [r2, #0]
 8008314:	f7fc fb5e 	bl	80049d4 <HAL_GetTick>
 8008318:	6278      	str	r0, [r7, #36]	; 0x24
 800831a:	e008      	b.n	800832e <HAL_RCC_OscConfig+0x6b6>
 800831c:	f7fc fb5a 	bl	80049d4 <HAL_GetTick>
 8008320:	4602      	mov	r2, r0
 8008322:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008324:	1ad3      	subs	r3, r2, r3
 8008326:	2b02      	cmp	r3, #2
 8008328:	d901      	bls.n	800832e <HAL_RCC_OscConfig+0x6b6>
 800832a:	2303      	movs	r3, #3
 800832c:	e04b      	b.n	80083c6 <HAL_RCC_OscConfig+0x74e>
 800832e:	4b03      	ldr	r3, [pc, #12]	; (800833c <HAL_RCC_OscConfig+0x6c4>)
 8008330:	681b      	ldr	r3, [r3, #0]
 8008332:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008336:	2b00      	cmp	r3, #0
 8008338:	d1f0      	bne.n	800831c <HAL_RCC_OscConfig+0x6a4>
 800833a:	e043      	b.n	80083c4 <HAL_RCC_OscConfig+0x74c>
 800833c:	58024400 	.word	0x58024400
 8008340:	fffffc0c 	.word	0xfffffc0c
 8008344:	ffff0007 	.word	0xffff0007
 8008348:	4b21      	ldr	r3, [pc, #132]	; (80083d0 <HAL_RCC_OscConfig+0x758>)
 800834a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800834c:	613b      	str	r3, [r7, #16]
 800834e:	4b20      	ldr	r3, [pc, #128]	; (80083d0 <HAL_RCC_OscConfig+0x758>)
 8008350:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008352:	60fb      	str	r3, [r7, #12]
 8008354:	687b      	ldr	r3, [r7, #4]
 8008356:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008358:	2b01      	cmp	r3, #1
 800835a:	d031      	beq.n	80083c0 <HAL_RCC_OscConfig+0x748>
 800835c:	693b      	ldr	r3, [r7, #16]
 800835e:	f003 0203 	and.w	r2, r3, #3
 8008362:	687b      	ldr	r3, [r7, #4]
 8008364:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008366:	429a      	cmp	r2, r3
 8008368:	d12a      	bne.n	80083c0 <HAL_RCC_OscConfig+0x748>
 800836a:	693b      	ldr	r3, [r7, #16]
 800836c:	091b      	lsrs	r3, r3, #4
 800836e:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8008372:	687b      	ldr	r3, [r7, #4]
 8008374:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008376:	429a      	cmp	r2, r3
 8008378:	d122      	bne.n	80083c0 <HAL_RCC_OscConfig+0x748>
 800837a:	68fb      	ldr	r3, [r7, #12]
 800837c:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8008380:	687b      	ldr	r3, [r7, #4]
 8008382:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008384:	3b01      	subs	r3, #1
 8008386:	429a      	cmp	r2, r3
 8008388:	d11a      	bne.n	80083c0 <HAL_RCC_OscConfig+0x748>
 800838a:	68fb      	ldr	r3, [r7, #12]
 800838c:	0a5b      	lsrs	r3, r3, #9
 800838e:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 8008392:	687b      	ldr	r3, [r7, #4]
 8008394:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008396:	3b01      	subs	r3, #1
 8008398:	429a      	cmp	r2, r3
 800839a:	d111      	bne.n	80083c0 <HAL_RCC_OscConfig+0x748>
 800839c:	68fb      	ldr	r3, [r7, #12]
 800839e:	0c1b      	lsrs	r3, r3, #16
 80083a0:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 80083a4:	687b      	ldr	r3, [r7, #4]
 80083a6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80083a8:	3b01      	subs	r3, #1
 80083aa:	429a      	cmp	r2, r3
 80083ac:	d108      	bne.n	80083c0 <HAL_RCC_OscConfig+0x748>
 80083ae:	68fb      	ldr	r3, [r7, #12]
 80083b0:	0e1b      	lsrs	r3, r3, #24
 80083b2:	f003 027f 	and.w	r2, r3, #127	; 0x7f
 80083b6:	687b      	ldr	r3, [r7, #4]
 80083b8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80083ba:	3b01      	subs	r3, #1
 80083bc:	429a      	cmp	r2, r3
 80083be:	d001      	beq.n	80083c4 <HAL_RCC_OscConfig+0x74c>
 80083c0:	2301      	movs	r3, #1
 80083c2:	e000      	b.n	80083c6 <HAL_RCC_OscConfig+0x74e>
 80083c4:	2300      	movs	r3, #0
 80083c6:	4618      	mov	r0, r3
 80083c8:	3730      	adds	r7, #48	; 0x30
 80083ca:	46bd      	mov	sp, r7
 80083cc:	bd80      	pop	{r7, pc}
 80083ce:	bf00      	nop
 80083d0:	58024400 	.word	0x58024400

080083d4 <HAL_RCC_ClockConfig>:
 80083d4:	b580      	push	{r7, lr}
 80083d6:	b086      	sub	sp, #24
 80083d8:	af00      	add	r7, sp, #0
 80083da:	6078      	str	r0, [r7, #4]
 80083dc:	6039      	str	r1, [r7, #0]
 80083de:	687b      	ldr	r3, [r7, #4]
 80083e0:	2b00      	cmp	r3, #0
 80083e2:	d101      	bne.n	80083e8 <HAL_RCC_ClockConfig+0x14>
 80083e4:	2301      	movs	r3, #1
 80083e6:	e19c      	b.n	8008722 <HAL_RCC_ClockConfig+0x34e>
 80083e8:	4b8a      	ldr	r3, [pc, #552]	; (8008614 <HAL_RCC_ClockConfig+0x240>)
 80083ea:	681b      	ldr	r3, [r3, #0]
 80083ec:	f003 030f 	and.w	r3, r3, #15
 80083f0:	683a      	ldr	r2, [r7, #0]
 80083f2:	429a      	cmp	r2, r3
 80083f4:	d910      	bls.n	8008418 <HAL_RCC_ClockConfig+0x44>
 80083f6:	4b87      	ldr	r3, [pc, #540]	; (8008614 <HAL_RCC_ClockConfig+0x240>)
 80083f8:	681b      	ldr	r3, [r3, #0]
 80083fa:	f023 020f 	bic.w	r2, r3, #15
 80083fe:	4985      	ldr	r1, [pc, #532]	; (8008614 <HAL_RCC_ClockConfig+0x240>)
 8008400:	683b      	ldr	r3, [r7, #0]
 8008402:	4313      	orrs	r3, r2
 8008404:	600b      	str	r3, [r1, #0]
 8008406:	4b83      	ldr	r3, [pc, #524]	; (8008614 <HAL_RCC_ClockConfig+0x240>)
 8008408:	681b      	ldr	r3, [r3, #0]
 800840a:	f003 030f 	and.w	r3, r3, #15
 800840e:	683a      	ldr	r2, [r7, #0]
 8008410:	429a      	cmp	r2, r3
 8008412:	d001      	beq.n	8008418 <HAL_RCC_ClockConfig+0x44>
 8008414:	2301      	movs	r3, #1
 8008416:	e184      	b.n	8008722 <HAL_RCC_ClockConfig+0x34e>
 8008418:	687b      	ldr	r3, [r7, #4]
 800841a:	681b      	ldr	r3, [r3, #0]
 800841c:	f003 0304 	and.w	r3, r3, #4
 8008420:	2b00      	cmp	r3, #0
 8008422:	d010      	beq.n	8008446 <HAL_RCC_ClockConfig+0x72>
 8008424:	687b      	ldr	r3, [r7, #4]
 8008426:	691a      	ldr	r2, [r3, #16]
 8008428:	4b7b      	ldr	r3, [pc, #492]	; (8008618 <HAL_RCC_ClockConfig+0x244>)
 800842a:	699b      	ldr	r3, [r3, #24]
 800842c:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8008430:	429a      	cmp	r2, r3
 8008432:	d908      	bls.n	8008446 <HAL_RCC_ClockConfig+0x72>
 8008434:	4b78      	ldr	r3, [pc, #480]	; (8008618 <HAL_RCC_ClockConfig+0x244>)
 8008436:	699b      	ldr	r3, [r3, #24]
 8008438:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 800843c:	687b      	ldr	r3, [r7, #4]
 800843e:	691b      	ldr	r3, [r3, #16]
 8008440:	4975      	ldr	r1, [pc, #468]	; (8008618 <HAL_RCC_ClockConfig+0x244>)
 8008442:	4313      	orrs	r3, r2
 8008444:	618b      	str	r3, [r1, #24]
 8008446:	687b      	ldr	r3, [r7, #4]
 8008448:	681b      	ldr	r3, [r3, #0]
 800844a:	f003 0308 	and.w	r3, r3, #8
 800844e:	2b00      	cmp	r3, #0
 8008450:	d010      	beq.n	8008474 <HAL_RCC_ClockConfig+0xa0>
 8008452:	687b      	ldr	r3, [r7, #4]
 8008454:	695a      	ldr	r2, [r3, #20]
 8008456:	4b70      	ldr	r3, [pc, #448]	; (8008618 <HAL_RCC_ClockConfig+0x244>)
 8008458:	69db      	ldr	r3, [r3, #28]
 800845a:	f003 0370 	and.w	r3, r3, #112	; 0x70
 800845e:	429a      	cmp	r2, r3
 8008460:	d908      	bls.n	8008474 <HAL_RCC_ClockConfig+0xa0>
 8008462:	4b6d      	ldr	r3, [pc, #436]	; (8008618 <HAL_RCC_ClockConfig+0x244>)
 8008464:	69db      	ldr	r3, [r3, #28]
 8008466:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 800846a:	687b      	ldr	r3, [r7, #4]
 800846c:	695b      	ldr	r3, [r3, #20]
 800846e:	496a      	ldr	r1, [pc, #424]	; (8008618 <HAL_RCC_ClockConfig+0x244>)
 8008470:	4313      	orrs	r3, r2
 8008472:	61cb      	str	r3, [r1, #28]
 8008474:	687b      	ldr	r3, [r7, #4]
 8008476:	681b      	ldr	r3, [r3, #0]
 8008478:	f003 0310 	and.w	r3, r3, #16
 800847c:	2b00      	cmp	r3, #0
 800847e:	d010      	beq.n	80084a2 <HAL_RCC_ClockConfig+0xce>
 8008480:	687b      	ldr	r3, [r7, #4]
 8008482:	699a      	ldr	r2, [r3, #24]
 8008484:	4b64      	ldr	r3, [pc, #400]	; (8008618 <HAL_RCC_ClockConfig+0x244>)
 8008486:	69db      	ldr	r3, [r3, #28]
 8008488:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800848c:	429a      	cmp	r2, r3
 800848e:	d908      	bls.n	80084a2 <HAL_RCC_ClockConfig+0xce>
 8008490:	4b61      	ldr	r3, [pc, #388]	; (8008618 <HAL_RCC_ClockConfig+0x244>)
 8008492:	69db      	ldr	r3, [r3, #28]
 8008494:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8008498:	687b      	ldr	r3, [r7, #4]
 800849a:	699b      	ldr	r3, [r3, #24]
 800849c:	495e      	ldr	r1, [pc, #376]	; (8008618 <HAL_RCC_ClockConfig+0x244>)
 800849e:	4313      	orrs	r3, r2
 80084a0:	61cb      	str	r3, [r1, #28]
 80084a2:	687b      	ldr	r3, [r7, #4]
 80084a4:	681b      	ldr	r3, [r3, #0]
 80084a6:	f003 0320 	and.w	r3, r3, #32
 80084aa:	2b00      	cmp	r3, #0
 80084ac:	d010      	beq.n	80084d0 <HAL_RCC_ClockConfig+0xfc>
 80084ae:	687b      	ldr	r3, [r7, #4]
 80084b0:	69da      	ldr	r2, [r3, #28]
 80084b2:	4b59      	ldr	r3, [pc, #356]	; (8008618 <HAL_RCC_ClockConfig+0x244>)
 80084b4:	6a1b      	ldr	r3, [r3, #32]
 80084b6:	f003 0370 	and.w	r3, r3, #112	; 0x70
 80084ba:	429a      	cmp	r2, r3
 80084bc:	d908      	bls.n	80084d0 <HAL_RCC_ClockConfig+0xfc>
 80084be:	4b56      	ldr	r3, [pc, #344]	; (8008618 <HAL_RCC_ClockConfig+0x244>)
 80084c0:	6a1b      	ldr	r3, [r3, #32]
 80084c2:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 80084c6:	687b      	ldr	r3, [r7, #4]
 80084c8:	69db      	ldr	r3, [r3, #28]
 80084ca:	4953      	ldr	r1, [pc, #332]	; (8008618 <HAL_RCC_ClockConfig+0x244>)
 80084cc:	4313      	orrs	r3, r2
 80084ce:	620b      	str	r3, [r1, #32]
 80084d0:	687b      	ldr	r3, [r7, #4]
 80084d2:	681b      	ldr	r3, [r3, #0]
 80084d4:	f003 0302 	and.w	r3, r3, #2
 80084d8:	2b00      	cmp	r3, #0
 80084da:	d010      	beq.n	80084fe <HAL_RCC_ClockConfig+0x12a>
 80084dc:	687b      	ldr	r3, [r7, #4]
 80084de:	68da      	ldr	r2, [r3, #12]
 80084e0:	4b4d      	ldr	r3, [pc, #308]	; (8008618 <HAL_RCC_ClockConfig+0x244>)
 80084e2:	699b      	ldr	r3, [r3, #24]
 80084e4:	f003 030f 	and.w	r3, r3, #15
 80084e8:	429a      	cmp	r2, r3
 80084ea:	d908      	bls.n	80084fe <HAL_RCC_ClockConfig+0x12a>
 80084ec:	4b4a      	ldr	r3, [pc, #296]	; (8008618 <HAL_RCC_ClockConfig+0x244>)
 80084ee:	699b      	ldr	r3, [r3, #24]
 80084f0:	f023 020f 	bic.w	r2, r3, #15
 80084f4:	687b      	ldr	r3, [r7, #4]
 80084f6:	68db      	ldr	r3, [r3, #12]
 80084f8:	4947      	ldr	r1, [pc, #284]	; (8008618 <HAL_RCC_ClockConfig+0x244>)
 80084fa:	4313      	orrs	r3, r2
 80084fc:	618b      	str	r3, [r1, #24]
 80084fe:	687b      	ldr	r3, [r7, #4]
 8008500:	681b      	ldr	r3, [r3, #0]
 8008502:	f003 0301 	and.w	r3, r3, #1
 8008506:	2b00      	cmp	r3, #0
 8008508:	d055      	beq.n	80085b6 <HAL_RCC_ClockConfig+0x1e2>
 800850a:	4b43      	ldr	r3, [pc, #268]	; (8008618 <HAL_RCC_ClockConfig+0x244>)
 800850c:	699b      	ldr	r3, [r3, #24]
 800850e:	f423 6270 	bic.w	r2, r3, #3840	; 0xf00
 8008512:	687b      	ldr	r3, [r7, #4]
 8008514:	689b      	ldr	r3, [r3, #8]
 8008516:	4940      	ldr	r1, [pc, #256]	; (8008618 <HAL_RCC_ClockConfig+0x244>)
 8008518:	4313      	orrs	r3, r2
 800851a:	618b      	str	r3, [r1, #24]
 800851c:	687b      	ldr	r3, [r7, #4]
 800851e:	685b      	ldr	r3, [r3, #4]
 8008520:	2b02      	cmp	r3, #2
 8008522:	d107      	bne.n	8008534 <HAL_RCC_ClockConfig+0x160>
 8008524:	4b3c      	ldr	r3, [pc, #240]	; (8008618 <HAL_RCC_ClockConfig+0x244>)
 8008526:	681b      	ldr	r3, [r3, #0]
 8008528:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800852c:	2b00      	cmp	r3, #0
 800852e:	d121      	bne.n	8008574 <HAL_RCC_ClockConfig+0x1a0>
 8008530:	2301      	movs	r3, #1
 8008532:	e0f6      	b.n	8008722 <HAL_RCC_ClockConfig+0x34e>
 8008534:	687b      	ldr	r3, [r7, #4]
 8008536:	685b      	ldr	r3, [r3, #4]
 8008538:	2b03      	cmp	r3, #3
 800853a:	d107      	bne.n	800854c <HAL_RCC_ClockConfig+0x178>
 800853c:	4b36      	ldr	r3, [pc, #216]	; (8008618 <HAL_RCC_ClockConfig+0x244>)
 800853e:	681b      	ldr	r3, [r3, #0]
 8008540:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008544:	2b00      	cmp	r3, #0
 8008546:	d115      	bne.n	8008574 <HAL_RCC_ClockConfig+0x1a0>
 8008548:	2301      	movs	r3, #1
 800854a:	e0ea      	b.n	8008722 <HAL_RCC_ClockConfig+0x34e>
 800854c:	687b      	ldr	r3, [r7, #4]
 800854e:	685b      	ldr	r3, [r3, #4]
 8008550:	2b01      	cmp	r3, #1
 8008552:	d107      	bne.n	8008564 <HAL_RCC_ClockConfig+0x190>
 8008554:	4b30      	ldr	r3, [pc, #192]	; (8008618 <HAL_RCC_ClockConfig+0x244>)
 8008556:	681b      	ldr	r3, [r3, #0]
 8008558:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800855c:	2b00      	cmp	r3, #0
 800855e:	d109      	bne.n	8008574 <HAL_RCC_ClockConfig+0x1a0>
 8008560:	2301      	movs	r3, #1
 8008562:	e0de      	b.n	8008722 <HAL_RCC_ClockConfig+0x34e>
 8008564:	4b2c      	ldr	r3, [pc, #176]	; (8008618 <HAL_RCC_ClockConfig+0x244>)
 8008566:	681b      	ldr	r3, [r3, #0]
 8008568:	f003 0304 	and.w	r3, r3, #4
 800856c:	2b00      	cmp	r3, #0
 800856e:	d101      	bne.n	8008574 <HAL_RCC_ClockConfig+0x1a0>
 8008570:	2301      	movs	r3, #1
 8008572:	e0d6      	b.n	8008722 <HAL_RCC_ClockConfig+0x34e>
 8008574:	4b28      	ldr	r3, [pc, #160]	; (8008618 <HAL_RCC_ClockConfig+0x244>)
 8008576:	691b      	ldr	r3, [r3, #16]
 8008578:	f023 0207 	bic.w	r2, r3, #7
 800857c:	687b      	ldr	r3, [r7, #4]
 800857e:	685b      	ldr	r3, [r3, #4]
 8008580:	4925      	ldr	r1, [pc, #148]	; (8008618 <HAL_RCC_ClockConfig+0x244>)
 8008582:	4313      	orrs	r3, r2
 8008584:	610b      	str	r3, [r1, #16]
 8008586:	f7fc fa25 	bl	80049d4 <HAL_GetTick>
 800858a:	6178      	str	r0, [r7, #20]
 800858c:	e00a      	b.n	80085a4 <HAL_RCC_ClockConfig+0x1d0>
 800858e:	f7fc fa21 	bl	80049d4 <HAL_GetTick>
 8008592:	4602      	mov	r2, r0
 8008594:	697b      	ldr	r3, [r7, #20]
 8008596:	1ad3      	subs	r3, r2, r3
 8008598:	f241 3288 	movw	r2, #5000	; 0x1388
 800859c:	4293      	cmp	r3, r2
 800859e:	d901      	bls.n	80085a4 <HAL_RCC_ClockConfig+0x1d0>
 80085a0:	2303      	movs	r3, #3
 80085a2:	e0be      	b.n	8008722 <HAL_RCC_ClockConfig+0x34e>
 80085a4:	4b1c      	ldr	r3, [pc, #112]	; (8008618 <HAL_RCC_ClockConfig+0x244>)
 80085a6:	691b      	ldr	r3, [r3, #16]
 80085a8:	f003 0238 	and.w	r2, r3, #56	; 0x38
 80085ac:	687b      	ldr	r3, [r7, #4]
 80085ae:	685b      	ldr	r3, [r3, #4]
 80085b0:	00db      	lsls	r3, r3, #3
 80085b2:	429a      	cmp	r2, r3
 80085b4:	d1eb      	bne.n	800858e <HAL_RCC_ClockConfig+0x1ba>
 80085b6:	687b      	ldr	r3, [r7, #4]
 80085b8:	681b      	ldr	r3, [r3, #0]
 80085ba:	f003 0302 	and.w	r3, r3, #2
 80085be:	2b00      	cmp	r3, #0
 80085c0:	d010      	beq.n	80085e4 <HAL_RCC_ClockConfig+0x210>
 80085c2:	687b      	ldr	r3, [r7, #4]
 80085c4:	68da      	ldr	r2, [r3, #12]
 80085c6:	4b14      	ldr	r3, [pc, #80]	; (8008618 <HAL_RCC_ClockConfig+0x244>)
 80085c8:	699b      	ldr	r3, [r3, #24]
 80085ca:	f003 030f 	and.w	r3, r3, #15
 80085ce:	429a      	cmp	r2, r3
 80085d0:	d208      	bcs.n	80085e4 <HAL_RCC_ClockConfig+0x210>
 80085d2:	4b11      	ldr	r3, [pc, #68]	; (8008618 <HAL_RCC_ClockConfig+0x244>)
 80085d4:	699b      	ldr	r3, [r3, #24]
 80085d6:	f023 020f 	bic.w	r2, r3, #15
 80085da:	687b      	ldr	r3, [r7, #4]
 80085dc:	68db      	ldr	r3, [r3, #12]
 80085de:	490e      	ldr	r1, [pc, #56]	; (8008618 <HAL_RCC_ClockConfig+0x244>)
 80085e0:	4313      	orrs	r3, r2
 80085e2:	618b      	str	r3, [r1, #24]
 80085e4:	4b0b      	ldr	r3, [pc, #44]	; (8008614 <HAL_RCC_ClockConfig+0x240>)
 80085e6:	681b      	ldr	r3, [r3, #0]
 80085e8:	f003 030f 	and.w	r3, r3, #15
 80085ec:	683a      	ldr	r2, [r7, #0]
 80085ee:	429a      	cmp	r2, r3
 80085f0:	d214      	bcs.n	800861c <HAL_RCC_ClockConfig+0x248>
 80085f2:	4b08      	ldr	r3, [pc, #32]	; (8008614 <HAL_RCC_ClockConfig+0x240>)
 80085f4:	681b      	ldr	r3, [r3, #0]
 80085f6:	f023 020f 	bic.w	r2, r3, #15
 80085fa:	4906      	ldr	r1, [pc, #24]	; (8008614 <HAL_RCC_ClockConfig+0x240>)
 80085fc:	683b      	ldr	r3, [r7, #0]
 80085fe:	4313      	orrs	r3, r2
 8008600:	600b      	str	r3, [r1, #0]
 8008602:	4b04      	ldr	r3, [pc, #16]	; (8008614 <HAL_RCC_ClockConfig+0x240>)
 8008604:	681b      	ldr	r3, [r3, #0]
 8008606:	f003 030f 	and.w	r3, r3, #15
 800860a:	683a      	ldr	r2, [r7, #0]
 800860c:	429a      	cmp	r2, r3
 800860e:	d005      	beq.n	800861c <HAL_RCC_ClockConfig+0x248>
 8008610:	2301      	movs	r3, #1
 8008612:	e086      	b.n	8008722 <HAL_RCC_ClockConfig+0x34e>
 8008614:	52002000 	.word	0x52002000
 8008618:	58024400 	.word	0x58024400
 800861c:	687b      	ldr	r3, [r7, #4]
 800861e:	681b      	ldr	r3, [r3, #0]
 8008620:	f003 0304 	and.w	r3, r3, #4
 8008624:	2b00      	cmp	r3, #0
 8008626:	d010      	beq.n	800864a <HAL_RCC_ClockConfig+0x276>
 8008628:	687b      	ldr	r3, [r7, #4]
 800862a:	691a      	ldr	r2, [r3, #16]
 800862c:	4b3f      	ldr	r3, [pc, #252]	; (800872c <HAL_RCC_ClockConfig+0x358>)
 800862e:	699b      	ldr	r3, [r3, #24]
 8008630:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8008634:	429a      	cmp	r2, r3
 8008636:	d208      	bcs.n	800864a <HAL_RCC_ClockConfig+0x276>
 8008638:	4b3c      	ldr	r3, [pc, #240]	; (800872c <HAL_RCC_ClockConfig+0x358>)
 800863a:	699b      	ldr	r3, [r3, #24]
 800863c:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 8008640:	687b      	ldr	r3, [r7, #4]
 8008642:	691b      	ldr	r3, [r3, #16]
 8008644:	4939      	ldr	r1, [pc, #228]	; (800872c <HAL_RCC_ClockConfig+0x358>)
 8008646:	4313      	orrs	r3, r2
 8008648:	618b      	str	r3, [r1, #24]
 800864a:	687b      	ldr	r3, [r7, #4]
 800864c:	681b      	ldr	r3, [r3, #0]
 800864e:	f003 0308 	and.w	r3, r3, #8
 8008652:	2b00      	cmp	r3, #0
 8008654:	d010      	beq.n	8008678 <HAL_RCC_ClockConfig+0x2a4>
 8008656:	687b      	ldr	r3, [r7, #4]
 8008658:	695a      	ldr	r2, [r3, #20]
 800865a:	4b34      	ldr	r3, [pc, #208]	; (800872c <HAL_RCC_ClockConfig+0x358>)
 800865c:	69db      	ldr	r3, [r3, #28]
 800865e:	f003 0370 	and.w	r3, r3, #112	; 0x70
 8008662:	429a      	cmp	r2, r3
 8008664:	d208      	bcs.n	8008678 <HAL_RCC_ClockConfig+0x2a4>
 8008666:	4b31      	ldr	r3, [pc, #196]	; (800872c <HAL_RCC_ClockConfig+0x358>)
 8008668:	69db      	ldr	r3, [r3, #28]
 800866a:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 800866e:	687b      	ldr	r3, [r7, #4]
 8008670:	695b      	ldr	r3, [r3, #20]
 8008672:	492e      	ldr	r1, [pc, #184]	; (800872c <HAL_RCC_ClockConfig+0x358>)
 8008674:	4313      	orrs	r3, r2
 8008676:	61cb      	str	r3, [r1, #28]
 8008678:	687b      	ldr	r3, [r7, #4]
 800867a:	681b      	ldr	r3, [r3, #0]
 800867c:	f003 0310 	and.w	r3, r3, #16
 8008680:	2b00      	cmp	r3, #0
 8008682:	d010      	beq.n	80086a6 <HAL_RCC_ClockConfig+0x2d2>
 8008684:	687b      	ldr	r3, [r7, #4]
 8008686:	699a      	ldr	r2, [r3, #24]
 8008688:	4b28      	ldr	r3, [pc, #160]	; (800872c <HAL_RCC_ClockConfig+0x358>)
 800868a:	69db      	ldr	r3, [r3, #28]
 800868c:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8008690:	429a      	cmp	r2, r3
 8008692:	d208      	bcs.n	80086a6 <HAL_RCC_ClockConfig+0x2d2>
 8008694:	4b25      	ldr	r3, [pc, #148]	; (800872c <HAL_RCC_ClockConfig+0x358>)
 8008696:	69db      	ldr	r3, [r3, #28]
 8008698:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 800869c:	687b      	ldr	r3, [r7, #4]
 800869e:	699b      	ldr	r3, [r3, #24]
 80086a0:	4922      	ldr	r1, [pc, #136]	; (800872c <HAL_RCC_ClockConfig+0x358>)
 80086a2:	4313      	orrs	r3, r2
 80086a4:	61cb      	str	r3, [r1, #28]
 80086a6:	687b      	ldr	r3, [r7, #4]
 80086a8:	681b      	ldr	r3, [r3, #0]
 80086aa:	f003 0320 	and.w	r3, r3, #32
 80086ae:	2b00      	cmp	r3, #0
 80086b0:	d010      	beq.n	80086d4 <HAL_RCC_ClockConfig+0x300>
 80086b2:	687b      	ldr	r3, [r7, #4]
 80086b4:	69da      	ldr	r2, [r3, #28]
 80086b6:	4b1d      	ldr	r3, [pc, #116]	; (800872c <HAL_RCC_ClockConfig+0x358>)
 80086b8:	6a1b      	ldr	r3, [r3, #32]
 80086ba:	f003 0370 	and.w	r3, r3, #112	; 0x70
 80086be:	429a      	cmp	r2, r3
 80086c0:	d208      	bcs.n	80086d4 <HAL_RCC_ClockConfig+0x300>
 80086c2:	4b1a      	ldr	r3, [pc, #104]	; (800872c <HAL_RCC_ClockConfig+0x358>)
 80086c4:	6a1b      	ldr	r3, [r3, #32]
 80086c6:	f023 0270 	bic.w	r2, r3, #112	; 0x70
 80086ca:	687b      	ldr	r3, [r7, #4]
 80086cc:	69db      	ldr	r3, [r3, #28]
 80086ce:	4917      	ldr	r1, [pc, #92]	; (800872c <HAL_RCC_ClockConfig+0x358>)
 80086d0:	4313      	orrs	r3, r2
 80086d2:	620b      	str	r3, [r1, #32]
 80086d4:	f000 f834 	bl	8008740 <HAL_RCC_GetSysClockFreq>
 80086d8:	4602      	mov	r2, r0
 80086da:	4b14      	ldr	r3, [pc, #80]	; (800872c <HAL_RCC_ClockConfig+0x358>)
 80086dc:	699b      	ldr	r3, [r3, #24]
 80086de:	0a1b      	lsrs	r3, r3, #8
 80086e0:	f003 030f 	and.w	r3, r3, #15
 80086e4:	4912      	ldr	r1, [pc, #72]	; (8008730 <HAL_RCC_ClockConfig+0x35c>)
 80086e6:	5ccb      	ldrb	r3, [r1, r3]
 80086e8:	f003 031f 	and.w	r3, r3, #31
 80086ec:	fa22 f303 	lsr.w	r3, r2, r3
 80086f0:	613b      	str	r3, [r7, #16]
 80086f2:	4b0e      	ldr	r3, [pc, #56]	; (800872c <HAL_RCC_ClockConfig+0x358>)
 80086f4:	699b      	ldr	r3, [r3, #24]
 80086f6:	f003 030f 	and.w	r3, r3, #15
 80086fa:	4a0d      	ldr	r2, [pc, #52]	; (8008730 <HAL_RCC_ClockConfig+0x35c>)
 80086fc:	5cd3      	ldrb	r3, [r2, r3]
 80086fe:	f003 031f 	and.w	r3, r3, #31
 8008702:	693a      	ldr	r2, [r7, #16]
 8008704:	fa22 f303 	lsr.w	r3, r2, r3
 8008708:	4a0a      	ldr	r2, [pc, #40]	; (8008734 <HAL_RCC_ClockConfig+0x360>)
 800870a:	6013      	str	r3, [r2, #0]
 800870c:	4a0a      	ldr	r2, [pc, #40]	; (8008738 <HAL_RCC_ClockConfig+0x364>)
 800870e:	693b      	ldr	r3, [r7, #16]
 8008710:	6013      	str	r3, [r2, #0]
 8008712:	4b0a      	ldr	r3, [pc, #40]	; (800873c <HAL_RCC_ClockConfig+0x368>)
 8008714:	681b      	ldr	r3, [r3, #0]
 8008716:	4618      	mov	r0, r3
 8008718:	f7fc f912 	bl	8004940 <HAL_InitTick>
 800871c:	4603      	mov	r3, r0
 800871e:	73fb      	strb	r3, [r7, #15]
 8008720:	7bfb      	ldrb	r3, [r7, #15]
 8008722:	4618      	mov	r0, r3
 8008724:	3718      	adds	r7, #24
 8008726:	46bd      	mov	sp, r7
 8008728:	bd80      	pop	{r7, pc}
 800872a:	bf00      	nop
 800872c:	58024400 	.word	0x58024400
 8008730:	0800dfec 	.word	0x0800dfec
 8008734:	24000008 	.word	0x24000008
 8008738:	24000004 	.word	0x24000004
 800873c:	2400000c 	.word	0x2400000c

08008740 <HAL_RCC_GetSysClockFreq>:
 8008740:	b480      	push	{r7}
 8008742:	b089      	sub	sp, #36	; 0x24
 8008744:	af00      	add	r7, sp, #0
 8008746:	4bb3      	ldr	r3, [pc, #716]	; (8008a14 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8008748:	691b      	ldr	r3, [r3, #16]
 800874a:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800874e:	2b18      	cmp	r3, #24
 8008750:	f200 8155 	bhi.w	80089fe <HAL_RCC_GetSysClockFreq+0x2be>
 8008754:	a201      	add	r2, pc, #4	; (adr r2, 800875c <HAL_RCC_GetSysClockFreq+0x1c>)
 8008756:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800875a:	bf00      	nop
 800875c:	080087c1 	.word	0x080087c1
 8008760:	080089ff 	.word	0x080089ff
 8008764:	080089ff 	.word	0x080089ff
 8008768:	080089ff 	.word	0x080089ff
 800876c:	080089ff 	.word	0x080089ff
 8008770:	080089ff 	.word	0x080089ff
 8008774:	080089ff 	.word	0x080089ff
 8008778:	080089ff 	.word	0x080089ff
 800877c:	080087e7 	.word	0x080087e7
 8008780:	080089ff 	.word	0x080089ff
 8008784:	080089ff 	.word	0x080089ff
 8008788:	080089ff 	.word	0x080089ff
 800878c:	080089ff 	.word	0x080089ff
 8008790:	080089ff 	.word	0x080089ff
 8008794:	080089ff 	.word	0x080089ff
 8008798:	080089ff 	.word	0x080089ff
 800879c:	080087ed 	.word	0x080087ed
 80087a0:	080089ff 	.word	0x080089ff
 80087a4:	080089ff 	.word	0x080089ff
 80087a8:	080089ff 	.word	0x080089ff
 80087ac:	080089ff 	.word	0x080089ff
 80087b0:	080089ff 	.word	0x080089ff
 80087b4:	080089ff 	.word	0x080089ff
 80087b8:	080089ff 	.word	0x080089ff
 80087bc:	080087f3 	.word	0x080087f3
 80087c0:	4b94      	ldr	r3, [pc, #592]	; (8008a14 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80087c2:	681b      	ldr	r3, [r3, #0]
 80087c4:	f003 0320 	and.w	r3, r3, #32
 80087c8:	2b00      	cmp	r3, #0
 80087ca:	d009      	beq.n	80087e0 <HAL_RCC_GetSysClockFreq+0xa0>
 80087cc:	4b91      	ldr	r3, [pc, #580]	; (8008a14 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80087ce:	681b      	ldr	r3, [r3, #0]
 80087d0:	08db      	lsrs	r3, r3, #3
 80087d2:	f003 0303 	and.w	r3, r3, #3
 80087d6:	4a90      	ldr	r2, [pc, #576]	; (8008a18 <HAL_RCC_GetSysClockFreq+0x2d8>)
 80087d8:	fa22 f303 	lsr.w	r3, r2, r3
 80087dc:	61bb      	str	r3, [r7, #24]
 80087de:	e111      	b.n	8008a04 <HAL_RCC_GetSysClockFreq+0x2c4>
 80087e0:	4b8d      	ldr	r3, [pc, #564]	; (8008a18 <HAL_RCC_GetSysClockFreq+0x2d8>)
 80087e2:	61bb      	str	r3, [r7, #24]
 80087e4:	e10e      	b.n	8008a04 <HAL_RCC_GetSysClockFreq+0x2c4>
 80087e6:	4b8d      	ldr	r3, [pc, #564]	; (8008a1c <HAL_RCC_GetSysClockFreq+0x2dc>)
 80087e8:	61bb      	str	r3, [r7, #24]
 80087ea:	e10b      	b.n	8008a04 <HAL_RCC_GetSysClockFreq+0x2c4>
 80087ec:	4b8c      	ldr	r3, [pc, #560]	; (8008a20 <HAL_RCC_GetSysClockFreq+0x2e0>)
 80087ee:	61bb      	str	r3, [r7, #24]
 80087f0:	e108      	b.n	8008a04 <HAL_RCC_GetSysClockFreq+0x2c4>
 80087f2:	4b88      	ldr	r3, [pc, #544]	; (8008a14 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80087f4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80087f6:	f003 0303 	and.w	r3, r3, #3
 80087fa:	617b      	str	r3, [r7, #20]
 80087fc:	4b85      	ldr	r3, [pc, #532]	; (8008a14 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80087fe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8008800:	091b      	lsrs	r3, r3, #4
 8008802:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8008806:	613b      	str	r3, [r7, #16]
 8008808:	4b82      	ldr	r3, [pc, #520]	; (8008a14 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800880a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800880c:	f003 0301 	and.w	r3, r3, #1
 8008810:	60fb      	str	r3, [r7, #12]
 8008812:	4b80      	ldr	r3, [pc, #512]	; (8008a14 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8008814:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8008816:	08db      	lsrs	r3, r3, #3
 8008818:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800881c:	68fa      	ldr	r2, [r7, #12]
 800881e:	fb02 f303 	mul.w	r3, r2, r3
 8008822:	ee07 3a90 	vmov	s15, r3
 8008826:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800882a:	edc7 7a02 	vstr	s15, [r7, #8]
 800882e:	693b      	ldr	r3, [r7, #16]
 8008830:	2b00      	cmp	r3, #0
 8008832:	f000 80e1 	beq.w	80089f8 <HAL_RCC_GetSysClockFreq+0x2b8>
 8008836:	697b      	ldr	r3, [r7, #20]
 8008838:	2b02      	cmp	r3, #2
 800883a:	f000 8083 	beq.w	8008944 <HAL_RCC_GetSysClockFreq+0x204>
 800883e:	697b      	ldr	r3, [r7, #20]
 8008840:	2b02      	cmp	r3, #2
 8008842:	f200 80a1 	bhi.w	8008988 <HAL_RCC_GetSysClockFreq+0x248>
 8008846:	697b      	ldr	r3, [r7, #20]
 8008848:	2b00      	cmp	r3, #0
 800884a:	d003      	beq.n	8008854 <HAL_RCC_GetSysClockFreq+0x114>
 800884c:	697b      	ldr	r3, [r7, #20]
 800884e:	2b01      	cmp	r3, #1
 8008850:	d056      	beq.n	8008900 <HAL_RCC_GetSysClockFreq+0x1c0>
 8008852:	e099      	b.n	8008988 <HAL_RCC_GetSysClockFreq+0x248>
 8008854:	4b6f      	ldr	r3, [pc, #444]	; (8008a14 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8008856:	681b      	ldr	r3, [r3, #0]
 8008858:	f003 0320 	and.w	r3, r3, #32
 800885c:	2b00      	cmp	r3, #0
 800885e:	d02d      	beq.n	80088bc <HAL_RCC_GetSysClockFreq+0x17c>
 8008860:	4b6c      	ldr	r3, [pc, #432]	; (8008a14 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8008862:	681b      	ldr	r3, [r3, #0]
 8008864:	08db      	lsrs	r3, r3, #3
 8008866:	f003 0303 	and.w	r3, r3, #3
 800886a:	4a6b      	ldr	r2, [pc, #428]	; (8008a18 <HAL_RCC_GetSysClockFreq+0x2d8>)
 800886c:	fa22 f303 	lsr.w	r3, r2, r3
 8008870:	607b      	str	r3, [r7, #4]
 8008872:	687b      	ldr	r3, [r7, #4]
 8008874:	ee07 3a90 	vmov	s15, r3
 8008878:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800887c:	693b      	ldr	r3, [r7, #16]
 800887e:	ee07 3a90 	vmov	s15, r3
 8008882:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008886:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800888a:	4b62      	ldr	r3, [pc, #392]	; (8008a14 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800888c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800888e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008892:	ee07 3a90 	vmov	s15, r3
 8008896:	eef8 6a67 	vcvt.f32.u32	s13, s15
 800889a:	ed97 6a02 	vldr	s12, [r7, #8]
 800889e:	eddf 5a61 	vldr	s11, [pc, #388]	; 8008a24 <HAL_RCC_GetSysClockFreq+0x2e4>
 80088a2:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80088a6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80088aa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80088ae:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80088b2:	ee67 7a27 	vmul.f32	s15, s14, s15
 80088b6:	edc7 7a07 	vstr	s15, [r7, #28]
 80088ba:	e087      	b.n	80089cc <HAL_RCC_GetSysClockFreq+0x28c>
 80088bc:	693b      	ldr	r3, [r7, #16]
 80088be:	ee07 3a90 	vmov	s15, r3
 80088c2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80088c6:	eddf 6a58 	vldr	s13, [pc, #352]	; 8008a28 <HAL_RCC_GetSysClockFreq+0x2e8>
 80088ca:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80088ce:	4b51      	ldr	r3, [pc, #324]	; (8008a14 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80088d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80088d2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80088d6:	ee07 3a90 	vmov	s15, r3
 80088da:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80088de:	ed97 6a02 	vldr	s12, [r7, #8]
 80088e2:	eddf 5a50 	vldr	s11, [pc, #320]	; 8008a24 <HAL_RCC_GetSysClockFreq+0x2e4>
 80088e6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80088ea:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80088ee:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80088f2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80088f6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80088fa:	edc7 7a07 	vstr	s15, [r7, #28]
 80088fe:	e065      	b.n	80089cc <HAL_RCC_GetSysClockFreq+0x28c>
 8008900:	693b      	ldr	r3, [r7, #16]
 8008902:	ee07 3a90 	vmov	s15, r3
 8008906:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800890a:	eddf 6a48 	vldr	s13, [pc, #288]	; 8008a2c <HAL_RCC_GetSysClockFreq+0x2ec>
 800890e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8008912:	4b40      	ldr	r3, [pc, #256]	; (8008a14 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8008914:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8008916:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800891a:	ee07 3a90 	vmov	s15, r3
 800891e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8008922:	ed97 6a02 	vldr	s12, [r7, #8]
 8008926:	eddf 5a3f 	vldr	s11, [pc, #252]	; 8008a24 <HAL_RCC_GetSysClockFreq+0x2e4>
 800892a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 800892e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8008932:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8008936:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800893a:	ee67 7a27 	vmul.f32	s15, s14, s15
 800893e:	edc7 7a07 	vstr	s15, [r7, #28]
 8008942:	e043      	b.n	80089cc <HAL_RCC_GetSysClockFreq+0x28c>
 8008944:	693b      	ldr	r3, [r7, #16]
 8008946:	ee07 3a90 	vmov	s15, r3
 800894a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800894e:	eddf 6a38 	vldr	s13, [pc, #224]	; 8008a30 <HAL_RCC_GetSysClockFreq+0x2f0>
 8008952:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8008956:	4b2f      	ldr	r3, [pc, #188]	; (8008a14 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8008958:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800895a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 800895e:	ee07 3a90 	vmov	s15, r3
 8008962:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8008966:	ed97 6a02 	vldr	s12, [r7, #8]
 800896a:	eddf 5a2e 	vldr	s11, [pc, #184]	; 8008a24 <HAL_RCC_GetSysClockFreq+0x2e4>
 800896e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8008972:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8008976:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800897a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800897e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8008982:	edc7 7a07 	vstr	s15, [r7, #28]
 8008986:	e021      	b.n	80089cc <HAL_RCC_GetSysClockFreq+0x28c>
 8008988:	693b      	ldr	r3, [r7, #16]
 800898a:	ee07 3a90 	vmov	s15, r3
 800898e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8008992:	eddf 6a26 	vldr	s13, [pc, #152]	; 8008a2c <HAL_RCC_GetSysClockFreq+0x2ec>
 8008996:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 800899a:	4b1e      	ldr	r3, [pc, #120]	; (8008a14 <HAL_RCC_GetSysClockFreq+0x2d4>)
 800899c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800899e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80089a2:	ee07 3a90 	vmov	s15, r3
 80089a6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80089aa:	ed97 6a02 	vldr	s12, [r7, #8]
 80089ae:	eddf 5a1d 	vldr	s11, [pc, #116]	; 8008a24 <HAL_RCC_GetSysClockFreq+0x2e4>
 80089b2:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80089b6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80089ba:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80089be:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80089c2:	ee67 7a27 	vmul.f32	s15, s14, s15
 80089c6:	edc7 7a07 	vstr	s15, [r7, #28]
 80089ca:	bf00      	nop
 80089cc:	4b11      	ldr	r3, [pc, #68]	; (8008a14 <HAL_RCC_GetSysClockFreq+0x2d4>)
 80089ce:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80089d0:	0a5b      	lsrs	r3, r3, #9
 80089d2:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80089d6:	3301      	adds	r3, #1
 80089d8:	603b      	str	r3, [r7, #0]
 80089da:	683b      	ldr	r3, [r7, #0]
 80089dc:	ee07 3a90 	vmov	s15, r3
 80089e0:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 80089e4:	edd7 6a07 	vldr	s13, [r7, #28]
 80089e8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80089ec:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80089f0:	ee17 3a90 	vmov	r3, s15
 80089f4:	61bb      	str	r3, [r7, #24]
 80089f6:	e005      	b.n	8008a04 <HAL_RCC_GetSysClockFreq+0x2c4>
 80089f8:	2300      	movs	r3, #0
 80089fa:	61bb      	str	r3, [r7, #24]
 80089fc:	e002      	b.n	8008a04 <HAL_RCC_GetSysClockFreq+0x2c4>
 80089fe:	4b07      	ldr	r3, [pc, #28]	; (8008a1c <HAL_RCC_GetSysClockFreq+0x2dc>)
 8008a00:	61bb      	str	r3, [r7, #24]
 8008a02:	bf00      	nop
 8008a04:	69bb      	ldr	r3, [r7, #24]
 8008a06:	4618      	mov	r0, r3
 8008a08:	3724      	adds	r7, #36	; 0x24
 8008a0a:	46bd      	mov	sp, r7
 8008a0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008a10:	4770      	bx	lr
 8008a12:	bf00      	nop
 8008a14:	58024400 	.word	0x58024400
 8008a18:	03d09000 	.word	0x03d09000
 8008a1c:	003d0900 	.word	0x003d0900
 8008a20:	007a1200 	.word	0x007a1200
 8008a24:	46000000 	.word	0x46000000
 8008a28:	4c742400 	.word	0x4c742400
 8008a2c:	4a742400 	.word	0x4a742400
 8008a30:	4af42400 	.word	0x4af42400

08008a34 <HAL_RCC_GetHCLKFreq>:
 8008a34:	b580      	push	{r7, lr}
 8008a36:	b082      	sub	sp, #8
 8008a38:	af00      	add	r7, sp, #0
 8008a3a:	f7ff fe81 	bl	8008740 <HAL_RCC_GetSysClockFreq>
 8008a3e:	4602      	mov	r2, r0
 8008a40:	4b10      	ldr	r3, [pc, #64]	; (8008a84 <HAL_RCC_GetHCLKFreq+0x50>)
 8008a42:	699b      	ldr	r3, [r3, #24]
 8008a44:	0a1b      	lsrs	r3, r3, #8
 8008a46:	f003 030f 	and.w	r3, r3, #15
 8008a4a:	490f      	ldr	r1, [pc, #60]	; (8008a88 <HAL_RCC_GetHCLKFreq+0x54>)
 8008a4c:	5ccb      	ldrb	r3, [r1, r3]
 8008a4e:	f003 031f 	and.w	r3, r3, #31
 8008a52:	fa22 f303 	lsr.w	r3, r2, r3
 8008a56:	607b      	str	r3, [r7, #4]
 8008a58:	4b0a      	ldr	r3, [pc, #40]	; (8008a84 <HAL_RCC_GetHCLKFreq+0x50>)
 8008a5a:	699b      	ldr	r3, [r3, #24]
 8008a5c:	f003 030f 	and.w	r3, r3, #15
 8008a60:	4a09      	ldr	r2, [pc, #36]	; (8008a88 <HAL_RCC_GetHCLKFreq+0x54>)
 8008a62:	5cd3      	ldrb	r3, [r2, r3]
 8008a64:	f003 031f 	and.w	r3, r3, #31
 8008a68:	687a      	ldr	r2, [r7, #4]
 8008a6a:	fa22 f303 	lsr.w	r3, r2, r3
 8008a6e:	4a07      	ldr	r2, [pc, #28]	; (8008a8c <HAL_RCC_GetHCLKFreq+0x58>)
 8008a70:	6013      	str	r3, [r2, #0]
 8008a72:	4a07      	ldr	r2, [pc, #28]	; (8008a90 <HAL_RCC_GetHCLKFreq+0x5c>)
 8008a74:	687b      	ldr	r3, [r7, #4]
 8008a76:	6013      	str	r3, [r2, #0]
 8008a78:	4b04      	ldr	r3, [pc, #16]	; (8008a8c <HAL_RCC_GetHCLKFreq+0x58>)
 8008a7a:	681b      	ldr	r3, [r3, #0]
 8008a7c:	4618      	mov	r0, r3
 8008a7e:	3708      	adds	r7, #8
 8008a80:	46bd      	mov	sp, r7
 8008a82:	bd80      	pop	{r7, pc}
 8008a84:	58024400 	.word	0x58024400
 8008a88:	0800dfec 	.word	0x0800dfec
 8008a8c:	24000008 	.word	0x24000008
 8008a90:	24000004 	.word	0x24000004

08008a94 <HAL_RCC_GetPCLK1Freq>:
 8008a94:	b580      	push	{r7, lr}
 8008a96:	af00      	add	r7, sp, #0
 8008a98:	f7ff ffcc 	bl	8008a34 <HAL_RCC_GetHCLKFreq>
 8008a9c:	4602      	mov	r2, r0
 8008a9e:	4b06      	ldr	r3, [pc, #24]	; (8008ab8 <HAL_RCC_GetPCLK1Freq+0x24>)
 8008aa0:	69db      	ldr	r3, [r3, #28]
 8008aa2:	091b      	lsrs	r3, r3, #4
 8008aa4:	f003 0307 	and.w	r3, r3, #7
 8008aa8:	4904      	ldr	r1, [pc, #16]	; (8008abc <HAL_RCC_GetPCLK1Freq+0x28>)
 8008aaa:	5ccb      	ldrb	r3, [r1, r3]
 8008aac:	f003 031f 	and.w	r3, r3, #31
 8008ab0:	fa22 f303 	lsr.w	r3, r2, r3
 8008ab4:	4618      	mov	r0, r3
 8008ab6:	bd80      	pop	{r7, pc}
 8008ab8:	58024400 	.word	0x58024400
 8008abc:	0800dfec 	.word	0x0800dfec

08008ac0 <HAL_RCC_GetPCLK2Freq>:
 8008ac0:	b580      	push	{r7, lr}
 8008ac2:	af00      	add	r7, sp, #0
 8008ac4:	f7ff ffb6 	bl	8008a34 <HAL_RCC_GetHCLKFreq>
 8008ac8:	4602      	mov	r2, r0
 8008aca:	4b06      	ldr	r3, [pc, #24]	; (8008ae4 <HAL_RCC_GetPCLK2Freq+0x24>)
 8008acc:	69db      	ldr	r3, [r3, #28]
 8008ace:	0a1b      	lsrs	r3, r3, #8
 8008ad0:	f003 0307 	and.w	r3, r3, #7
 8008ad4:	4904      	ldr	r1, [pc, #16]	; (8008ae8 <HAL_RCC_GetPCLK2Freq+0x28>)
 8008ad6:	5ccb      	ldrb	r3, [r1, r3]
 8008ad8:	f003 031f 	and.w	r3, r3, #31
 8008adc:	fa22 f303 	lsr.w	r3, r2, r3
 8008ae0:	4618      	mov	r0, r3
 8008ae2:	bd80      	pop	{r7, pc}
 8008ae4:	58024400 	.word	0x58024400
 8008ae8:	0800dfec 	.word	0x0800dfec

08008aec <HAL_RCCEx_PeriphCLKConfig>:
 8008aec:	b580      	push	{r7, lr}
 8008aee:	b086      	sub	sp, #24
 8008af0:	af00      	add	r7, sp, #0
 8008af2:	6078      	str	r0, [r7, #4]
 8008af4:	2300      	movs	r3, #0
 8008af6:	75fb      	strb	r3, [r7, #23]
 8008af8:	2300      	movs	r3, #0
 8008afa:	75bb      	strb	r3, [r7, #22]
 8008afc:	687b      	ldr	r3, [r7, #4]
 8008afe:	681b      	ldr	r3, [r3, #0]
 8008b00:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8008b04:	2b00      	cmp	r3, #0
 8008b06:	d03f      	beq.n	8008b88 <HAL_RCCEx_PeriphCLKConfig+0x9c>
 8008b08:	687b      	ldr	r3, [r7, #4]
 8008b0a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8008b0c:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8008b10:	d02a      	beq.n	8008b68 <HAL_RCCEx_PeriphCLKConfig+0x7c>
 8008b12:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 8008b16:	d824      	bhi.n	8008b62 <HAL_RCCEx_PeriphCLKConfig+0x76>
 8008b18:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8008b1c:	d018      	beq.n	8008b50 <HAL_RCCEx_PeriphCLKConfig+0x64>
 8008b1e:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8008b22:	d81e      	bhi.n	8008b62 <HAL_RCCEx_PeriphCLKConfig+0x76>
 8008b24:	2b00      	cmp	r3, #0
 8008b26:	d003      	beq.n	8008b30 <HAL_RCCEx_PeriphCLKConfig+0x44>
 8008b28:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 8008b2c:	d007      	beq.n	8008b3e <HAL_RCCEx_PeriphCLKConfig+0x52>
 8008b2e:	e018      	b.n	8008b62 <HAL_RCCEx_PeriphCLKConfig+0x76>
 8008b30:	4ba4      	ldr	r3, [pc, #656]	; (8008dc4 <HAL_RCCEx_PeriphCLKConfig+0x2d8>)
 8008b32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008b34:	4aa3      	ldr	r2, [pc, #652]	; (8008dc4 <HAL_RCCEx_PeriphCLKConfig+0x2d8>)
 8008b36:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008b3a:	62d3      	str	r3, [r2, #44]	; 0x2c
 8008b3c:	e015      	b.n	8008b6a <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8008b3e:	687b      	ldr	r3, [r7, #4]
 8008b40:	3304      	adds	r3, #4
 8008b42:	2102      	movs	r1, #2
 8008b44:	4618      	mov	r0, r3
 8008b46:	f001 f989 	bl	8009e5c <RCCEx_PLL2_Config>
 8008b4a:	4603      	mov	r3, r0
 8008b4c:	75fb      	strb	r3, [r7, #23]
 8008b4e:	e00c      	b.n	8008b6a <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8008b50:	687b      	ldr	r3, [r7, #4]
 8008b52:	3324      	adds	r3, #36	; 0x24
 8008b54:	2102      	movs	r1, #2
 8008b56:	4618      	mov	r0, r3
 8008b58:	f001 fa32 	bl	8009fc0 <RCCEx_PLL3_Config>
 8008b5c:	4603      	mov	r3, r0
 8008b5e:	75fb      	strb	r3, [r7, #23]
 8008b60:	e003      	b.n	8008b6a <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8008b62:	2301      	movs	r3, #1
 8008b64:	75fb      	strb	r3, [r7, #23]
 8008b66:	e000      	b.n	8008b6a <HAL_RCCEx_PeriphCLKConfig+0x7e>
 8008b68:	bf00      	nop
 8008b6a:	7dfb      	ldrb	r3, [r7, #23]
 8008b6c:	2b00      	cmp	r3, #0
 8008b6e:	d109      	bne.n	8008b84 <HAL_RCCEx_PeriphCLKConfig+0x98>
 8008b70:	4b94      	ldr	r3, [pc, #592]	; (8008dc4 <HAL_RCCEx_PeriphCLKConfig+0x2d8>)
 8008b72:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008b74:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8008b78:	687b      	ldr	r3, [r7, #4]
 8008b7a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8008b7c:	4991      	ldr	r1, [pc, #580]	; (8008dc4 <HAL_RCCEx_PeriphCLKConfig+0x2d8>)
 8008b7e:	4313      	orrs	r3, r2
 8008b80:	650b      	str	r3, [r1, #80]	; 0x50
 8008b82:	e001      	b.n	8008b88 <HAL_RCCEx_PeriphCLKConfig+0x9c>
 8008b84:	7dfb      	ldrb	r3, [r7, #23]
 8008b86:	75bb      	strb	r3, [r7, #22]
 8008b88:	687b      	ldr	r3, [r7, #4]
 8008b8a:	681b      	ldr	r3, [r3, #0]
 8008b8c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008b90:	2b00      	cmp	r3, #0
 8008b92:	d03d      	beq.n	8008c10 <HAL_RCCEx_PeriphCLKConfig+0x124>
 8008b94:	687b      	ldr	r3, [r7, #4]
 8008b96:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008b98:	2b04      	cmp	r3, #4
 8008b9a:	d826      	bhi.n	8008bea <HAL_RCCEx_PeriphCLKConfig+0xfe>
 8008b9c:	a201      	add	r2, pc, #4	; (adr r2, 8008ba4 <HAL_RCCEx_PeriphCLKConfig+0xb8>)
 8008b9e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008ba2:	bf00      	nop
 8008ba4:	08008bb9 	.word	0x08008bb9
 8008ba8:	08008bc7 	.word	0x08008bc7
 8008bac:	08008bd9 	.word	0x08008bd9
 8008bb0:	08008bf1 	.word	0x08008bf1
 8008bb4:	08008bf1 	.word	0x08008bf1
 8008bb8:	4b82      	ldr	r3, [pc, #520]	; (8008dc4 <HAL_RCCEx_PeriphCLKConfig+0x2d8>)
 8008bba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008bbc:	4a81      	ldr	r2, [pc, #516]	; (8008dc4 <HAL_RCCEx_PeriphCLKConfig+0x2d8>)
 8008bbe:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008bc2:	62d3      	str	r3, [r2, #44]	; 0x2c
 8008bc4:	e015      	b.n	8008bf2 <HAL_RCCEx_PeriphCLKConfig+0x106>
 8008bc6:	687b      	ldr	r3, [r7, #4]
 8008bc8:	3304      	adds	r3, #4
 8008bca:	2100      	movs	r1, #0
 8008bcc:	4618      	mov	r0, r3
 8008bce:	f001 f945 	bl	8009e5c <RCCEx_PLL2_Config>
 8008bd2:	4603      	mov	r3, r0
 8008bd4:	75fb      	strb	r3, [r7, #23]
 8008bd6:	e00c      	b.n	8008bf2 <HAL_RCCEx_PeriphCLKConfig+0x106>
 8008bd8:	687b      	ldr	r3, [r7, #4]
 8008bda:	3324      	adds	r3, #36	; 0x24
 8008bdc:	2100      	movs	r1, #0
 8008bde:	4618      	mov	r0, r3
 8008be0:	f001 f9ee 	bl	8009fc0 <RCCEx_PLL3_Config>
 8008be4:	4603      	mov	r3, r0
 8008be6:	75fb      	strb	r3, [r7, #23]
 8008be8:	e003      	b.n	8008bf2 <HAL_RCCEx_PeriphCLKConfig+0x106>
 8008bea:	2301      	movs	r3, #1
 8008bec:	75fb      	strb	r3, [r7, #23]
 8008bee:	e000      	b.n	8008bf2 <HAL_RCCEx_PeriphCLKConfig+0x106>
 8008bf0:	bf00      	nop
 8008bf2:	7dfb      	ldrb	r3, [r7, #23]
 8008bf4:	2b00      	cmp	r3, #0
 8008bf6:	d109      	bne.n	8008c0c <HAL_RCCEx_PeriphCLKConfig+0x120>
 8008bf8:	4b72      	ldr	r3, [pc, #456]	; (8008dc4 <HAL_RCCEx_PeriphCLKConfig+0x2d8>)
 8008bfa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008bfc:	f023 0207 	bic.w	r2, r3, #7
 8008c00:	687b      	ldr	r3, [r7, #4]
 8008c02:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008c04:	496f      	ldr	r1, [pc, #444]	; (8008dc4 <HAL_RCCEx_PeriphCLKConfig+0x2d8>)
 8008c06:	4313      	orrs	r3, r2
 8008c08:	650b      	str	r3, [r1, #80]	; 0x50
 8008c0a:	e001      	b.n	8008c10 <HAL_RCCEx_PeriphCLKConfig+0x124>
 8008c0c:	7dfb      	ldrb	r3, [r7, #23]
 8008c0e:	75bb      	strb	r3, [r7, #22]
 8008c10:	687b      	ldr	r3, [r7, #4]
 8008c12:	681b      	ldr	r3, [r3, #0]
 8008c14:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8008c18:	2b00      	cmp	r3, #0
 8008c1a:	d051      	beq.n	8008cc0 <HAL_RCCEx_PeriphCLKConfig+0x1d4>
 8008c1c:	687b      	ldr	r3, [r7, #4]
 8008c1e:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8008c22:	f5b3 0f20 	cmp.w	r3, #10485760	; 0xa00000
 8008c26:	d036      	beq.n	8008c96 <HAL_RCCEx_PeriphCLKConfig+0x1aa>
 8008c28:	f5b3 0f20 	cmp.w	r3, #10485760	; 0xa00000
 8008c2c:	d830      	bhi.n	8008c90 <HAL_RCCEx_PeriphCLKConfig+0x1a4>
 8008c2e:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8008c32:	d032      	beq.n	8008c9a <HAL_RCCEx_PeriphCLKConfig+0x1ae>
 8008c34:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8008c38:	d82a      	bhi.n	8008c90 <HAL_RCCEx_PeriphCLKConfig+0x1a4>
 8008c3a:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 8008c3e:	d02e      	beq.n	8008c9e <HAL_RCCEx_PeriphCLKConfig+0x1b2>
 8008c40:	f5b3 0fc0 	cmp.w	r3, #6291456	; 0x600000
 8008c44:	d824      	bhi.n	8008c90 <HAL_RCCEx_PeriphCLKConfig+0x1a4>
 8008c46:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8008c4a:	d018      	beq.n	8008c7e <HAL_RCCEx_PeriphCLKConfig+0x192>
 8008c4c:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8008c50:	d81e      	bhi.n	8008c90 <HAL_RCCEx_PeriphCLKConfig+0x1a4>
 8008c52:	2b00      	cmp	r3, #0
 8008c54:	d003      	beq.n	8008c5e <HAL_RCCEx_PeriphCLKConfig+0x172>
 8008c56:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 8008c5a:	d007      	beq.n	8008c6c <HAL_RCCEx_PeriphCLKConfig+0x180>
 8008c5c:	e018      	b.n	8008c90 <HAL_RCCEx_PeriphCLKConfig+0x1a4>
 8008c5e:	4b59      	ldr	r3, [pc, #356]	; (8008dc4 <HAL_RCCEx_PeriphCLKConfig+0x2d8>)
 8008c60:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008c62:	4a58      	ldr	r2, [pc, #352]	; (8008dc4 <HAL_RCCEx_PeriphCLKConfig+0x2d8>)
 8008c64:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008c68:	62d3      	str	r3, [r2, #44]	; 0x2c
 8008c6a:	e019      	b.n	8008ca0 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 8008c6c:	687b      	ldr	r3, [r7, #4]
 8008c6e:	3304      	adds	r3, #4
 8008c70:	2100      	movs	r1, #0
 8008c72:	4618      	mov	r0, r3
 8008c74:	f001 f8f2 	bl	8009e5c <RCCEx_PLL2_Config>
 8008c78:	4603      	mov	r3, r0
 8008c7a:	75fb      	strb	r3, [r7, #23]
 8008c7c:	e010      	b.n	8008ca0 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 8008c7e:	687b      	ldr	r3, [r7, #4]
 8008c80:	3324      	adds	r3, #36	; 0x24
 8008c82:	2100      	movs	r1, #0
 8008c84:	4618      	mov	r0, r3
 8008c86:	f001 f99b 	bl	8009fc0 <RCCEx_PLL3_Config>
 8008c8a:	4603      	mov	r3, r0
 8008c8c:	75fb      	strb	r3, [r7, #23]
 8008c8e:	e007      	b.n	8008ca0 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 8008c90:	2301      	movs	r3, #1
 8008c92:	75fb      	strb	r3, [r7, #23]
 8008c94:	e004      	b.n	8008ca0 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 8008c96:	bf00      	nop
 8008c98:	e002      	b.n	8008ca0 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 8008c9a:	bf00      	nop
 8008c9c:	e000      	b.n	8008ca0 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
 8008c9e:	bf00      	nop
 8008ca0:	7dfb      	ldrb	r3, [r7, #23]
 8008ca2:	2b00      	cmp	r3, #0
 8008ca4:	d10a      	bne.n	8008cbc <HAL_RCCEx_PeriphCLKConfig+0x1d0>
 8008ca6:	4b47      	ldr	r3, [pc, #284]	; (8008dc4 <HAL_RCCEx_PeriphCLKConfig+0x2d8>)
 8008ca8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008caa:	f423 0260 	bic.w	r2, r3, #14680064	; 0xe00000
 8008cae:	687b      	ldr	r3, [r7, #4]
 8008cb0:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8008cb4:	4943      	ldr	r1, [pc, #268]	; (8008dc4 <HAL_RCCEx_PeriphCLKConfig+0x2d8>)
 8008cb6:	4313      	orrs	r3, r2
 8008cb8:	658b      	str	r3, [r1, #88]	; 0x58
 8008cba:	e001      	b.n	8008cc0 <HAL_RCCEx_PeriphCLKConfig+0x1d4>
 8008cbc:	7dfb      	ldrb	r3, [r7, #23]
 8008cbe:	75bb      	strb	r3, [r7, #22]
 8008cc0:	687b      	ldr	r3, [r7, #4]
 8008cc2:	681b      	ldr	r3, [r3, #0]
 8008cc4:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8008cc8:	2b00      	cmp	r3, #0
 8008cca:	d051      	beq.n	8008d70 <HAL_RCCEx_PeriphCLKConfig+0x284>
 8008ccc:	687b      	ldr	r3, [r7, #4]
 8008cce:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8008cd2:	f1b3 6fa0 	cmp.w	r3, #83886080	; 0x5000000
 8008cd6:	d036      	beq.n	8008d46 <HAL_RCCEx_PeriphCLKConfig+0x25a>
 8008cd8:	f1b3 6fa0 	cmp.w	r3, #83886080	; 0x5000000
 8008cdc:	d830      	bhi.n	8008d40 <HAL_RCCEx_PeriphCLKConfig+0x254>
 8008cde:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8008ce2:	d032      	beq.n	8008d4a <HAL_RCCEx_PeriphCLKConfig+0x25e>
 8008ce4:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 8008ce8:	d82a      	bhi.n	8008d40 <HAL_RCCEx_PeriphCLKConfig+0x254>
 8008cea:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 8008cee:	d02e      	beq.n	8008d4e <HAL_RCCEx_PeriphCLKConfig+0x262>
 8008cf0:	f1b3 7f40 	cmp.w	r3, #50331648	; 0x3000000
 8008cf4:	d824      	bhi.n	8008d40 <HAL_RCCEx_PeriphCLKConfig+0x254>
 8008cf6:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8008cfa:	d018      	beq.n	8008d2e <HAL_RCCEx_PeriphCLKConfig+0x242>
 8008cfc:	f1b3 7f00 	cmp.w	r3, #33554432	; 0x2000000
 8008d00:	d81e      	bhi.n	8008d40 <HAL_RCCEx_PeriphCLKConfig+0x254>
 8008d02:	2b00      	cmp	r3, #0
 8008d04:	d003      	beq.n	8008d0e <HAL_RCCEx_PeriphCLKConfig+0x222>
 8008d06:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8008d0a:	d007      	beq.n	8008d1c <HAL_RCCEx_PeriphCLKConfig+0x230>
 8008d0c:	e018      	b.n	8008d40 <HAL_RCCEx_PeriphCLKConfig+0x254>
 8008d0e:	4b2d      	ldr	r3, [pc, #180]	; (8008dc4 <HAL_RCCEx_PeriphCLKConfig+0x2d8>)
 8008d10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008d12:	4a2c      	ldr	r2, [pc, #176]	; (8008dc4 <HAL_RCCEx_PeriphCLKConfig+0x2d8>)
 8008d14:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008d18:	62d3      	str	r3, [r2, #44]	; 0x2c
 8008d1a:	e019      	b.n	8008d50 <HAL_RCCEx_PeriphCLKConfig+0x264>
 8008d1c:	687b      	ldr	r3, [r7, #4]
 8008d1e:	3304      	adds	r3, #4
 8008d20:	2100      	movs	r1, #0
 8008d22:	4618      	mov	r0, r3
 8008d24:	f001 f89a 	bl	8009e5c <RCCEx_PLL2_Config>
 8008d28:	4603      	mov	r3, r0
 8008d2a:	75fb      	strb	r3, [r7, #23]
 8008d2c:	e010      	b.n	8008d50 <HAL_RCCEx_PeriphCLKConfig+0x264>
 8008d2e:	687b      	ldr	r3, [r7, #4]
 8008d30:	3324      	adds	r3, #36	; 0x24
 8008d32:	2100      	movs	r1, #0
 8008d34:	4618      	mov	r0, r3
 8008d36:	f001 f943 	bl	8009fc0 <RCCEx_PLL3_Config>
 8008d3a:	4603      	mov	r3, r0
 8008d3c:	75fb      	strb	r3, [r7, #23]
 8008d3e:	e007      	b.n	8008d50 <HAL_RCCEx_PeriphCLKConfig+0x264>
 8008d40:	2301      	movs	r3, #1
 8008d42:	75fb      	strb	r3, [r7, #23]
 8008d44:	e004      	b.n	8008d50 <HAL_RCCEx_PeriphCLKConfig+0x264>
 8008d46:	bf00      	nop
 8008d48:	e002      	b.n	8008d50 <HAL_RCCEx_PeriphCLKConfig+0x264>
 8008d4a:	bf00      	nop
 8008d4c:	e000      	b.n	8008d50 <HAL_RCCEx_PeriphCLKConfig+0x264>
 8008d4e:	bf00      	nop
 8008d50:	7dfb      	ldrb	r3, [r7, #23]
 8008d52:	2b00      	cmp	r3, #0
 8008d54:	d10a      	bne.n	8008d6c <HAL_RCCEx_PeriphCLKConfig+0x280>
 8008d56:	4b1b      	ldr	r3, [pc, #108]	; (8008dc4 <HAL_RCCEx_PeriphCLKConfig+0x2d8>)
 8008d58:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008d5a:	f023 62e0 	bic.w	r2, r3, #117440512	; 0x7000000
 8008d5e:	687b      	ldr	r3, [r7, #4]
 8008d60:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8008d64:	4917      	ldr	r1, [pc, #92]	; (8008dc4 <HAL_RCCEx_PeriphCLKConfig+0x2d8>)
 8008d66:	4313      	orrs	r3, r2
 8008d68:	658b      	str	r3, [r1, #88]	; 0x58
 8008d6a:	e001      	b.n	8008d70 <HAL_RCCEx_PeriphCLKConfig+0x284>
 8008d6c:	7dfb      	ldrb	r3, [r7, #23]
 8008d6e:	75bb      	strb	r3, [r7, #22]
 8008d70:	687b      	ldr	r3, [r7, #4]
 8008d72:	681b      	ldr	r3, [r3, #0]
 8008d74:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8008d78:	2b00      	cmp	r3, #0
 8008d7a:	d035      	beq.n	8008de8 <HAL_RCCEx_PeriphCLKConfig+0x2fc>
 8008d7c:	687b      	ldr	r3, [r7, #4]
 8008d7e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008d80:	2b30      	cmp	r3, #48	; 0x30
 8008d82:	d01c      	beq.n	8008dbe <HAL_RCCEx_PeriphCLKConfig+0x2d2>
 8008d84:	2b30      	cmp	r3, #48	; 0x30
 8008d86:	d817      	bhi.n	8008db8 <HAL_RCCEx_PeriphCLKConfig+0x2cc>
 8008d88:	2b20      	cmp	r3, #32
 8008d8a:	d00c      	beq.n	8008da6 <HAL_RCCEx_PeriphCLKConfig+0x2ba>
 8008d8c:	2b20      	cmp	r3, #32
 8008d8e:	d813      	bhi.n	8008db8 <HAL_RCCEx_PeriphCLKConfig+0x2cc>
 8008d90:	2b00      	cmp	r3, #0
 8008d92:	d019      	beq.n	8008dc8 <HAL_RCCEx_PeriphCLKConfig+0x2dc>
 8008d94:	2b10      	cmp	r3, #16
 8008d96:	d10f      	bne.n	8008db8 <HAL_RCCEx_PeriphCLKConfig+0x2cc>
 8008d98:	4b0a      	ldr	r3, [pc, #40]	; (8008dc4 <HAL_RCCEx_PeriphCLKConfig+0x2d8>)
 8008d9a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008d9c:	4a09      	ldr	r2, [pc, #36]	; (8008dc4 <HAL_RCCEx_PeriphCLKConfig+0x2d8>)
 8008d9e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008da2:	62d3      	str	r3, [r2, #44]	; 0x2c
 8008da4:	e011      	b.n	8008dca <HAL_RCCEx_PeriphCLKConfig+0x2de>
 8008da6:	687b      	ldr	r3, [r7, #4]
 8008da8:	3304      	adds	r3, #4
 8008daa:	2102      	movs	r1, #2
 8008dac:	4618      	mov	r0, r3
 8008dae:	f001 f855 	bl	8009e5c <RCCEx_PLL2_Config>
 8008db2:	4603      	mov	r3, r0
 8008db4:	75fb      	strb	r3, [r7, #23]
 8008db6:	e008      	b.n	8008dca <HAL_RCCEx_PeriphCLKConfig+0x2de>
 8008db8:	2301      	movs	r3, #1
 8008dba:	75fb      	strb	r3, [r7, #23]
 8008dbc:	e005      	b.n	8008dca <HAL_RCCEx_PeriphCLKConfig+0x2de>
 8008dbe:	bf00      	nop
 8008dc0:	e003      	b.n	8008dca <HAL_RCCEx_PeriphCLKConfig+0x2de>
 8008dc2:	bf00      	nop
 8008dc4:	58024400 	.word	0x58024400
 8008dc8:	bf00      	nop
 8008dca:	7dfb      	ldrb	r3, [r7, #23]
 8008dcc:	2b00      	cmp	r3, #0
 8008dce:	d109      	bne.n	8008de4 <HAL_RCCEx_PeriphCLKConfig+0x2f8>
 8008dd0:	4ba3      	ldr	r3, [pc, #652]	; (8009060 <HAL_RCCEx_PeriphCLKConfig+0x574>)
 8008dd2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8008dd4:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 8008dd8:	687b      	ldr	r3, [r7, #4]
 8008dda:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8008ddc:	49a0      	ldr	r1, [pc, #640]	; (8009060 <HAL_RCCEx_PeriphCLKConfig+0x574>)
 8008dde:	4313      	orrs	r3, r2
 8008de0:	64cb      	str	r3, [r1, #76]	; 0x4c
 8008de2:	e001      	b.n	8008de8 <HAL_RCCEx_PeriphCLKConfig+0x2fc>
 8008de4:	7dfb      	ldrb	r3, [r7, #23]
 8008de6:	75bb      	strb	r3, [r7, #22]
 8008de8:	687b      	ldr	r3, [r7, #4]
 8008dea:	681b      	ldr	r3, [r3, #0]
 8008dec:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8008df0:	2b00      	cmp	r3, #0
 8008df2:	d047      	beq.n	8008e84 <HAL_RCCEx_PeriphCLKConfig+0x398>
 8008df4:	687b      	ldr	r3, [r7, #4]
 8008df6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008df8:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8008dfc:	d030      	beq.n	8008e60 <HAL_RCCEx_PeriphCLKConfig+0x374>
 8008dfe:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8008e02:	d82a      	bhi.n	8008e5a <HAL_RCCEx_PeriphCLKConfig+0x36e>
 8008e04:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8008e08:	d02c      	beq.n	8008e64 <HAL_RCCEx_PeriphCLKConfig+0x378>
 8008e0a:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 8008e0e:	d824      	bhi.n	8008e5a <HAL_RCCEx_PeriphCLKConfig+0x36e>
 8008e10:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008e14:	d018      	beq.n	8008e48 <HAL_RCCEx_PeriphCLKConfig+0x35c>
 8008e16:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8008e1a:	d81e      	bhi.n	8008e5a <HAL_RCCEx_PeriphCLKConfig+0x36e>
 8008e1c:	2b00      	cmp	r3, #0
 8008e1e:	d003      	beq.n	8008e28 <HAL_RCCEx_PeriphCLKConfig+0x33c>
 8008e20:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8008e24:	d007      	beq.n	8008e36 <HAL_RCCEx_PeriphCLKConfig+0x34a>
 8008e26:	e018      	b.n	8008e5a <HAL_RCCEx_PeriphCLKConfig+0x36e>
 8008e28:	4b8d      	ldr	r3, [pc, #564]	; (8009060 <HAL_RCCEx_PeriphCLKConfig+0x574>)
 8008e2a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008e2c:	4a8c      	ldr	r2, [pc, #560]	; (8009060 <HAL_RCCEx_PeriphCLKConfig+0x574>)
 8008e2e:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008e32:	62d3      	str	r3, [r2, #44]	; 0x2c
 8008e34:	e017      	b.n	8008e66 <HAL_RCCEx_PeriphCLKConfig+0x37a>
 8008e36:	687b      	ldr	r3, [r7, #4]
 8008e38:	3304      	adds	r3, #4
 8008e3a:	2100      	movs	r1, #0
 8008e3c:	4618      	mov	r0, r3
 8008e3e:	f001 f80d 	bl	8009e5c <RCCEx_PLL2_Config>
 8008e42:	4603      	mov	r3, r0
 8008e44:	75fb      	strb	r3, [r7, #23]
 8008e46:	e00e      	b.n	8008e66 <HAL_RCCEx_PeriphCLKConfig+0x37a>
 8008e48:	687b      	ldr	r3, [r7, #4]
 8008e4a:	3324      	adds	r3, #36	; 0x24
 8008e4c:	2100      	movs	r1, #0
 8008e4e:	4618      	mov	r0, r3
 8008e50:	f001 f8b6 	bl	8009fc0 <RCCEx_PLL3_Config>
 8008e54:	4603      	mov	r3, r0
 8008e56:	75fb      	strb	r3, [r7, #23]
 8008e58:	e005      	b.n	8008e66 <HAL_RCCEx_PeriphCLKConfig+0x37a>
 8008e5a:	2301      	movs	r3, #1
 8008e5c:	75fb      	strb	r3, [r7, #23]
 8008e5e:	e002      	b.n	8008e66 <HAL_RCCEx_PeriphCLKConfig+0x37a>
 8008e60:	bf00      	nop
 8008e62:	e000      	b.n	8008e66 <HAL_RCCEx_PeriphCLKConfig+0x37a>
 8008e64:	bf00      	nop
 8008e66:	7dfb      	ldrb	r3, [r7, #23]
 8008e68:	2b00      	cmp	r3, #0
 8008e6a:	d109      	bne.n	8008e80 <HAL_RCCEx_PeriphCLKConfig+0x394>
 8008e6c:	4b7c      	ldr	r3, [pc, #496]	; (8009060 <HAL_RCCEx_PeriphCLKConfig+0x574>)
 8008e6e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008e70:	f423 42e0 	bic.w	r2, r3, #28672	; 0x7000
 8008e74:	687b      	ldr	r3, [r7, #4]
 8008e76:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008e78:	4979      	ldr	r1, [pc, #484]	; (8009060 <HAL_RCCEx_PeriphCLKConfig+0x574>)
 8008e7a:	4313      	orrs	r3, r2
 8008e7c:	650b      	str	r3, [r1, #80]	; 0x50
 8008e7e:	e001      	b.n	8008e84 <HAL_RCCEx_PeriphCLKConfig+0x398>
 8008e80:	7dfb      	ldrb	r3, [r7, #23]
 8008e82:	75bb      	strb	r3, [r7, #22]
 8008e84:	687b      	ldr	r3, [r7, #4]
 8008e86:	681b      	ldr	r3, [r3, #0]
 8008e88:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8008e8c:	2b00      	cmp	r3, #0
 8008e8e:	d049      	beq.n	8008f24 <HAL_RCCEx_PeriphCLKConfig+0x438>
 8008e90:	687b      	ldr	r3, [r7, #4]
 8008e92:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008e94:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8008e98:	d02e      	beq.n	8008ef8 <HAL_RCCEx_PeriphCLKConfig+0x40c>
 8008e9a:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8008e9e:	d828      	bhi.n	8008ef2 <HAL_RCCEx_PeriphCLKConfig+0x406>
 8008ea0:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 8008ea4:	d02a      	beq.n	8008efc <HAL_RCCEx_PeriphCLKConfig+0x410>
 8008ea6:	f5b3 2f80 	cmp.w	r3, #262144	; 0x40000
 8008eaa:	d822      	bhi.n	8008ef2 <HAL_RCCEx_PeriphCLKConfig+0x406>
 8008eac:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8008eb0:	d026      	beq.n	8008f00 <HAL_RCCEx_PeriphCLKConfig+0x414>
 8008eb2:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8008eb6:	d81c      	bhi.n	8008ef2 <HAL_RCCEx_PeriphCLKConfig+0x406>
 8008eb8:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8008ebc:	d010      	beq.n	8008ee0 <HAL_RCCEx_PeriphCLKConfig+0x3f4>
 8008ebe:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8008ec2:	d816      	bhi.n	8008ef2 <HAL_RCCEx_PeriphCLKConfig+0x406>
 8008ec4:	2b00      	cmp	r3, #0
 8008ec6:	d01d      	beq.n	8008f04 <HAL_RCCEx_PeriphCLKConfig+0x418>
 8008ec8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8008ecc:	d111      	bne.n	8008ef2 <HAL_RCCEx_PeriphCLKConfig+0x406>
 8008ece:	687b      	ldr	r3, [r7, #4]
 8008ed0:	3304      	adds	r3, #4
 8008ed2:	2101      	movs	r1, #1
 8008ed4:	4618      	mov	r0, r3
 8008ed6:	f000 ffc1 	bl	8009e5c <RCCEx_PLL2_Config>
 8008eda:	4603      	mov	r3, r0
 8008edc:	75fb      	strb	r3, [r7, #23]
 8008ede:	e012      	b.n	8008f06 <HAL_RCCEx_PeriphCLKConfig+0x41a>
 8008ee0:	687b      	ldr	r3, [r7, #4]
 8008ee2:	3324      	adds	r3, #36	; 0x24
 8008ee4:	2101      	movs	r1, #1
 8008ee6:	4618      	mov	r0, r3
 8008ee8:	f001 f86a 	bl	8009fc0 <RCCEx_PLL3_Config>
 8008eec:	4603      	mov	r3, r0
 8008eee:	75fb      	strb	r3, [r7, #23]
 8008ef0:	e009      	b.n	8008f06 <HAL_RCCEx_PeriphCLKConfig+0x41a>
 8008ef2:	2301      	movs	r3, #1
 8008ef4:	75fb      	strb	r3, [r7, #23]
 8008ef6:	e006      	b.n	8008f06 <HAL_RCCEx_PeriphCLKConfig+0x41a>
 8008ef8:	bf00      	nop
 8008efa:	e004      	b.n	8008f06 <HAL_RCCEx_PeriphCLKConfig+0x41a>
 8008efc:	bf00      	nop
 8008efe:	e002      	b.n	8008f06 <HAL_RCCEx_PeriphCLKConfig+0x41a>
 8008f00:	bf00      	nop
 8008f02:	e000      	b.n	8008f06 <HAL_RCCEx_PeriphCLKConfig+0x41a>
 8008f04:	bf00      	nop
 8008f06:	7dfb      	ldrb	r3, [r7, #23]
 8008f08:	2b00      	cmp	r3, #0
 8008f0a:	d109      	bne.n	8008f20 <HAL_RCCEx_PeriphCLKConfig+0x434>
 8008f0c:	4b54      	ldr	r3, [pc, #336]	; (8009060 <HAL_RCCEx_PeriphCLKConfig+0x574>)
 8008f0e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008f10:	f423 22e0 	bic.w	r2, r3, #458752	; 0x70000
 8008f14:	687b      	ldr	r3, [r7, #4]
 8008f16:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008f18:	4951      	ldr	r1, [pc, #324]	; (8009060 <HAL_RCCEx_PeriphCLKConfig+0x574>)
 8008f1a:	4313      	orrs	r3, r2
 8008f1c:	650b      	str	r3, [r1, #80]	; 0x50
 8008f1e:	e001      	b.n	8008f24 <HAL_RCCEx_PeriphCLKConfig+0x438>
 8008f20:	7dfb      	ldrb	r3, [r7, #23]
 8008f22:	75bb      	strb	r3, [r7, #22]
 8008f24:	687b      	ldr	r3, [r7, #4]
 8008f26:	681b      	ldr	r3, [r3, #0]
 8008f28:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8008f2c:	2b00      	cmp	r3, #0
 8008f2e:	d04b      	beq.n	8008fc8 <HAL_RCCEx_PeriphCLKConfig+0x4dc>
 8008f30:	687b      	ldr	r3, [r7, #4]
 8008f32:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8008f36:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8008f3a:	d02e      	beq.n	8008f9a <HAL_RCCEx_PeriphCLKConfig+0x4ae>
 8008f3c:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8008f40:	d828      	bhi.n	8008f94 <HAL_RCCEx_PeriphCLKConfig+0x4a8>
 8008f42:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008f46:	d02a      	beq.n	8008f9e <HAL_RCCEx_PeriphCLKConfig+0x4b2>
 8008f48:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008f4c:	d822      	bhi.n	8008f94 <HAL_RCCEx_PeriphCLKConfig+0x4a8>
 8008f4e:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8008f52:	d026      	beq.n	8008fa2 <HAL_RCCEx_PeriphCLKConfig+0x4b6>
 8008f54:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8008f58:	d81c      	bhi.n	8008f94 <HAL_RCCEx_PeriphCLKConfig+0x4a8>
 8008f5a:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008f5e:	d010      	beq.n	8008f82 <HAL_RCCEx_PeriphCLKConfig+0x496>
 8008f60:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008f64:	d816      	bhi.n	8008f94 <HAL_RCCEx_PeriphCLKConfig+0x4a8>
 8008f66:	2b00      	cmp	r3, #0
 8008f68:	d01d      	beq.n	8008fa6 <HAL_RCCEx_PeriphCLKConfig+0x4ba>
 8008f6a:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8008f6e:	d111      	bne.n	8008f94 <HAL_RCCEx_PeriphCLKConfig+0x4a8>
 8008f70:	687b      	ldr	r3, [r7, #4]
 8008f72:	3304      	adds	r3, #4
 8008f74:	2101      	movs	r1, #1
 8008f76:	4618      	mov	r0, r3
 8008f78:	f000 ff70 	bl	8009e5c <RCCEx_PLL2_Config>
 8008f7c:	4603      	mov	r3, r0
 8008f7e:	75fb      	strb	r3, [r7, #23]
 8008f80:	e012      	b.n	8008fa8 <HAL_RCCEx_PeriphCLKConfig+0x4bc>
 8008f82:	687b      	ldr	r3, [r7, #4]
 8008f84:	3324      	adds	r3, #36	; 0x24
 8008f86:	2101      	movs	r1, #1
 8008f88:	4618      	mov	r0, r3
 8008f8a:	f001 f819 	bl	8009fc0 <RCCEx_PLL3_Config>
 8008f8e:	4603      	mov	r3, r0
 8008f90:	75fb      	strb	r3, [r7, #23]
 8008f92:	e009      	b.n	8008fa8 <HAL_RCCEx_PeriphCLKConfig+0x4bc>
 8008f94:	2301      	movs	r3, #1
 8008f96:	75fb      	strb	r3, [r7, #23]
 8008f98:	e006      	b.n	8008fa8 <HAL_RCCEx_PeriphCLKConfig+0x4bc>
 8008f9a:	bf00      	nop
 8008f9c:	e004      	b.n	8008fa8 <HAL_RCCEx_PeriphCLKConfig+0x4bc>
 8008f9e:	bf00      	nop
 8008fa0:	e002      	b.n	8008fa8 <HAL_RCCEx_PeriphCLKConfig+0x4bc>
 8008fa2:	bf00      	nop
 8008fa4:	e000      	b.n	8008fa8 <HAL_RCCEx_PeriphCLKConfig+0x4bc>
 8008fa6:	bf00      	nop
 8008fa8:	7dfb      	ldrb	r3, [r7, #23]
 8008faa:	2b00      	cmp	r3, #0
 8008fac:	d10a      	bne.n	8008fc4 <HAL_RCCEx_PeriphCLKConfig+0x4d8>
 8008fae:	4b2c      	ldr	r3, [pc, #176]	; (8009060 <HAL_RCCEx_PeriphCLKConfig+0x574>)
 8008fb0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008fb2:	f023 42e0 	bic.w	r2, r3, #1879048192	; 0x70000000
 8008fb6:	687b      	ldr	r3, [r7, #4]
 8008fb8:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8008fbc:	4928      	ldr	r1, [pc, #160]	; (8009060 <HAL_RCCEx_PeriphCLKConfig+0x574>)
 8008fbe:	4313      	orrs	r3, r2
 8008fc0:	658b      	str	r3, [r1, #88]	; 0x58
 8008fc2:	e001      	b.n	8008fc8 <HAL_RCCEx_PeriphCLKConfig+0x4dc>
 8008fc4:	7dfb      	ldrb	r3, [r7, #23]
 8008fc6:	75bb      	strb	r3, [r7, #22]
 8008fc8:	687b      	ldr	r3, [r7, #4]
 8008fca:	681b      	ldr	r3, [r3, #0]
 8008fcc:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8008fd0:	2b00      	cmp	r3, #0
 8008fd2:	d02f      	beq.n	8009034 <HAL_RCCEx_PeriphCLKConfig+0x548>
 8008fd4:	687b      	ldr	r3, [r7, #4]
 8008fd6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8008fd8:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008fdc:	d00e      	beq.n	8008ffc <HAL_RCCEx_PeriphCLKConfig+0x510>
 8008fde:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8008fe2:	d814      	bhi.n	800900e <HAL_RCCEx_PeriphCLKConfig+0x522>
 8008fe4:	2b00      	cmp	r3, #0
 8008fe6:	d015      	beq.n	8009014 <HAL_RCCEx_PeriphCLKConfig+0x528>
 8008fe8:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8008fec:	d10f      	bne.n	800900e <HAL_RCCEx_PeriphCLKConfig+0x522>
 8008fee:	4b1c      	ldr	r3, [pc, #112]	; (8009060 <HAL_RCCEx_PeriphCLKConfig+0x574>)
 8008ff0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008ff2:	4a1b      	ldr	r2, [pc, #108]	; (8009060 <HAL_RCCEx_PeriphCLKConfig+0x574>)
 8008ff4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008ff8:	62d3      	str	r3, [r2, #44]	; 0x2c
 8008ffa:	e00c      	b.n	8009016 <HAL_RCCEx_PeriphCLKConfig+0x52a>
 8008ffc:	687b      	ldr	r3, [r7, #4]
 8008ffe:	3304      	adds	r3, #4
 8009000:	2101      	movs	r1, #1
 8009002:	4618      	mov	r0, r3
 8009004:	f000 ff2a 	bl	8009e5c <RCCEx_PLL2_Config>
 8009008:	4603      	mov	r3, r0
 800900a:	75fb      	strb	r3, [r7, #23]
 800900c:	e003      	b.n	8009016 <HAL_RCCEx_PeriphCLKConfig+0x52a>
 800900e:	2301      	movs	r3, #1
 8009010:	75fb      	strb	r3, [r7, #23]
 8009012:	e000      	b.n	8009016 <HAL_RCCEx_PeriphCLKConfig+0x52a>
 8009014:	bf00      	nop
 8009016:	7dfb      	ldrb	r3, [r7, #23]
 8009018:	2b00      	cmp	r3, #0
 800901a:	d109      	bne.n	8009030 <HAL_RCCEx_PeriphCLKConfig+0x544>
 800901c:	4b10      	ldr	r3, [pc, #64]	; (8009060 <HAL_RCCEx_PeriphCLKConfig+0x574>)
 800901e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009020:	f023 5240 	bic.w	r2, r3, #805306368	; 0x30000000
 8009024:	687b      	ldr	r3, [r7, #4]
 8009026:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8009028:	490d      	ldr	r1, [pc, #52]	; (8009060 <HAL_RCCEx_PeriphCLKConfig+0x574>)
 800902a:	4313      	orrs	r3, r2
 800902c:	650b      	str	r3, [r1, #80]	; 0x50
 800902e:	e001      	b.n	8009034 <HAL_RCCEx_PeriphCLKConfig+0x548>
 8009030:	7dfb      	ldrb	r3, [r7, #23]
 8009032:	75bb      	strb	r3, [r7, #22]
 8009034:	687b      	ldr	r3, [r7, #4]
 8009036:	681b      	ldr	r3, [r3, #0]
 8009038:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800903c:	2b00      	cmp	r3, #0
 800903e:	d034      	beq.n	80090aa <HAL_RCCEx_PeriphCLKConfig+0x5be>
 8009040:	687b      	ldr	r3, [r7, #4]
 8009042:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009044:	2b03      	cmp	r3, #3
 8009046:	d81d      	bhi.n	8009084 <HAL_RCCEx_PeriphCLKConfig+0x598>
 8009048:	a201      	add	r2, pc, #4	; (adr r2, 8009050 <HAL_RCCEx_PeriphCLKConfig+0x564>)
 800904a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800904e:	bf00      	nop
 8009050:	0800908b 	.word	0x0800908b
 8009054:	08009065 	.word	0x08009065
 8009058:	08009073 	.word	0x08009073
 800905c:	0800908b 	.word	0x0800908b
 8009060:	58024400 	.word	0x58024400
 8009064:	4bb1      	ldr	r3, [pc, #708]	; (800932c <HAL_RCCEx_PeriphCLKConfig+0x840>)
 8009066:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009068:	4ab0      	ldr	r2, [pc, #704]	; (800932c <HAL_RCCEx_PeriphCLKConfig+0x840>)
 800906a:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800906e:	62d3      	str	r3, [r2, #44]	; 0x2c
 8009070:	e00c      	b.n	800908c <HAL_RCCEx_PeriphCLKConfig+0x5a0>
 8009072:	687b      	ldr	r3, [r7, #4]
 8009074:	3304      	adds	r3, #4
 8009076:	2102      	movs	r1, #2
 8009078:	4618      	mov	r0, r3
 800907a:	f000 feef 	bl	8009e5c <RCCEx_PLL2_Config>
 800907e:	4603      	mov	r3, r0
 8009080:	75fb      	strb	r3, [r7, #23]
 8009082:	e003      	b.n	800908c <HAL_RCCEx_PeriphCLKConfig+0x5a0>
 8009084:	2301      	movs	r3, #1
 8009086:	75fb      	strb	r3, [r7, #23]
 8009088:	e000      	b.n	800908c <HAL_RCCEx_PeriphCLKConfig+0x5a0>
 800908a:	bf00      	nop
 800908c:	7dfb      	ldrb	r3, [r7, #23]
 800908e:	2b00      	cmp	r3, #0
 8009090:	d109      	bne.n	80090a6 <HAL_RCCEx_PeriphCLKConfig+0x5ba>
 8009092:	4ba6      	ldr	r3, [pc, #664]	; (800932c <HAL_RCCEx_PeriphCLKConfig+0x840>)
 8009094:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009096:	f023 0203 	bic.w	r2, r3, #3
 800909a:	687b      	ldr	r3, [r7, #4]
 800909c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800909e:	49a3      	ldr	r1, [pc, #652]	; (800932c <HAL_RCCEx_PeriphCLKConfig+0x840>)
 80090a0:	4313      	orrs	r3, r2
 80090a2:	64cb      	str	r3, [r1, #76]	; 0x4c
 80090a4:	e001      	b.n	80090aa <HAL_RCCEx_PeriphCLKConfig+0x5be>
 80090a6:	7dfb      	ldrb	r3, [r7, #23]
 80090a8:	75bb      	strb	r3, [r7, #22]
 80090aa:	687b      	ldr	r3, [r7, #4]
 80090ac:	681b      	ldr	r3, [r3, #0]
 80090ae:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 80090b2:	2b00      	cmp	r3, #0
 80090b4:	f000 8086 	beq.w	80091c4 <HAL_RCCEx_PeriphCLKConfig+0x6d8>
 80090b8:	4b9d      	ldr	r3, [pc, #628]	; (8009330 <HAL_RCCEx_PeriphCLKConfig+0x844>)
 80090ba:	681b      	ldr	r3, [r3, #0]
 80090bc:	4a9c      	ldr	r2, [pc, #624]	; (8009330 <HAL_RCCEx_PeriphCLKConfig+0x844>)
 80090be:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80090c2:	6013      	str	r3, [r2, #0]
 80090c4:	f7fb fc86 	bl	80049d4 <HAL_GetTick>
 80090c8:	6138      	str	r0, [r7, #16]
 80090ca:	e009      	b.n	80090e0 <HAL_RCCEx_PeriphCLKConfig+0x5f4>
 80090cc:	f7fb fc82 	bl	80049d4 <HAL_GetTick>
 80090d0:	4602      	mov	r2, r0
 80090d2:	693b      	ldr	r3, [r7, #16]
 80090d4:	1ad3      	subs	r3, r2, r3
 80090d6:	2b64      	cmp	r3, #100	; 0x64
 80090d8:	d902      	bls.n	80090e0 <HAL_RCCEx_PeriphCLKConfig+0x5f4>
 80090da:	2303      	movs	r3, #3
 80090dc:	75fb      	strb	r3, [r7, #23]
 80090de:	e005      	b.n	80090ec <HAL_RCCEx_PeriphCLKConfig+0x600>
 80090e0:	4b93      	ldr	r3, [pc, #588]	; (8009330 <HAL_RCCEx_PeriphCLKConfig+0x844>)
 80090e2:	681b      	ldr	r3, [r3, #0]
 80090e4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80090e8:	2b00      	cmp	r3, #0
 80090ea:	d0ef      	beq.n	80090cc <HAL_RCCEx_PeriphCLKConfig+0x5e0>
 80090ec:	7dfb      	ldrb	r3, [r7, #23]
 80090ee:	2b00      	cmp	r3, #0
 80090f0:	d166      	bne.n	80091c0 <HAL_RCCEx_PeriphCLKConfig+0x6d4>
 80090f2:	4b8e      	ldr	r3, [pc, #568]	; (800932c <HAL_RCCEx_PeriphCLKConfig+0x840>)
 80090f4:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80090f6:	687b      	ldr	r3, [r7, #4]
 80090f8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 80090fc:	4053      	eors	r3, r2
 80090fe:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8009102:	2b00      	cmp	r3, #0
 8009104:	d013      	beq.n	800912e <HAL_RCCEx_PeriphCLKConfig+0x642>
 8009106:	4b89      	ldr	r3, [pc, #548]	; (800932c <HAL_RCCEx_PeriphCLKConfig+0x840>)
 8009108:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800910a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800910e:	60fb      	str	r3, [r7, #12]
 8009110:	4b86      	ldr	r3, [pc, #536]	; (800932c <HAL_RCCEx_PeriphCLKConfig+0x840>)
 8009112:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009114:	4a85      	ldr	r2, [pc, #532]	; (800932c <HAL_RCCEx_PeriphCLKConfig+0x840>)
 8009116:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800911a:	6713      	str	r3, [r2, #112]	; 0x70
 800911c:	4b83      	ldr	r3, [pc, #524]	; (800932c <HAL_RCCEx_PeriphCLKConfig+0x840>)
 800911e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009120:	4a82      	ldr	r2, [pc, #520]	; (800932c <HAL_RCCEx_PeriphCLKConfig+0x840>)
 8009122:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8009126:	6713      	str	r3, [r2, #112]	; 0x70
 8009128:	4a80      	ldr	r2, [pc, #512]	; (800932c <HAL_RCCEx_PeriphCLKConfig+0x840>)
 800912a:	68fb      	ldr	r3, [r7, #12]
 800912c:	6713      	str	r3, [r2, #112]	; 0x70
 800912e:	687b      	ldr	r3, [r7, #4]
 8009130:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8009134:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009138:	d115      	bne.n	8009166 <HAL_RCCEx_PeriphCLKConfig+0x67a>
 800913a:	f7fb fc4b 	bl	80049d4 <HAL_GetTick>
 800913e:	6138      	str	r0, [r7, #16]
 8009140:	e00b      	b.n	800915a <HAL_RCCEx_PeriphCLKConfig+0x66e>
 8009142:	f7fb fc47 	bl	80049d4 <HAL_GetTick>
 8009146:	4602      	mov	r2, r0
 8009148:	693b      	ldr	r3, [r7, #16]
 800914a:	1ad3      	subs	r3, r2, r3
 800914c:	f241 3288 	movw	r2, #5000	; 0x1388
 8009150:	4293      	cmp	r3, r2
 8009152:	d902      	bls.n	800915a <HAL_RCCEx_PeriphCLKConfig+0x66e>
 8009154:	2303      	movs	r3, #3
 8009156:	75fb      	strb	r3, [r7, #23]
 8009158:	e005      	b.n	8009166 <HAL_RCCEx_PeriphCLKConfig+0x67a>
 800915a:	4b74      	ldr	r3, [pc, #464]	; (800932c <HAL_RCCEx_PeriphCLKConfig+0x840>)
 800915c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800915e:	f003 0302 	and.w	r3, r3, #2
 8009162:	2b00      	cmp	r3, #0
 8009164:	d0ed      	beq.n	8009142 <HAL_RCCEx_PeriphCLKConfig+0x656>
 8009166:	7dfb      	ldrb	r3, [r7, #23]
 8009168:	2b00      	cmp	r3, #0
 800916a:	d126      	bne.n	80091ba <HAL_RCCEx_PeriphCLKConfig+0x6ce>
 800916c:	687b      	ldr	r3, [r7, #4]
 800916e:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8009172:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8009176:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800917a:	d10d      	bne.n	8009198 <HAL_RCCEx_PeriphCLKConfig+0x6ac>
 800917c:	4b6b      	ldr	r3, [pc, #428]	; (800932c <HAL_RCCEx_PeriphCLKConfig+0x840>)
 800917e:	691b      	ldr	r3, [r3, #16]
 8009180:	f423 527c 	bic.w	r2, r3, #16128	; 0x3f00
 8009184:	687b      	ldr	r3, [r7, #4]
 8009186:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800918a:	0919      	lsrs	r1, r3, #4
 800918c:	4b69      	ldr	r3, [pc, #420]	; (8009334 <HAL_RCCEx_PeriphCLKConfig+0x848>)
 800918e:	400b      	ands	r3, r1
 8009190:	4966      	ldr	r1, [pc, #408]	; (800932c <HAL_RCCEx_PeriphCLKConfig+0x840>)
 8009192:	4313      	orrs	r3, r2
 8009194:	610b      	str	r3, [r1, #16]
 8009196:	e005      	b.n	80091a4 <HAL_RCCEx_PeriphCLKConfig+0x6b8>
 8009198:	4b64      	ldr	r3, [pc, #400]	; (800932c <HAL_RCCEx_PeriphCLKConfig+0x840>)
 800919a:	691b      	ldr	r3, [r3, #16]
 800919c:	4a63      	ldr	r2, [pc, #396]	; (800932c <HAL_RCCEx_PeriphCLKConfig+0x840>)
 800919e:	f423 537c 	bic.w	r3, r3, #16128	; 0x3f00
 80091a2:	6113      	str	r3, [r2, #16]
 80091a4:	4b61      	ldr	r3, [pc, #388]	; (800932c <HAL_RCCEx_PeriphCLKConfig+0x840>)
 80091a6:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 80091a8:	687b      	ldr	r3, [r7, #4]
 80091aa:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 80091ae:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80091b2:	495e      	ldr	r1, [pc, #376]	; (800932c <HAL_RCCEx_PeriphCLKConfig+0x840>)
 80091b4:	4313      	orrs	r3, r2
 80091b6:	670b      	str	r3, [r1, #112]	; 0x70
 80091b8:	e004      	b.n	80091c4 <HAL_RCCEx_PeriphCLKConfig+0x6d8>
 80091ba:	7dfb      	ldrb	r3, [r7, #23]
 80091bc:	75bb      	strb	r3, [r7, #22]
 80091be:	e001      	b.n	80091c4 <HAL_RCCEx_PeriphCLKConfig+0x6d8>
 80091c0:	7dfb      	ldrb	r3, [r7, #23]
 80091c2:	75bb      	strb	r3, [r7, #22]
 80091c4:	687b      	ldr	r3, [r7, #4]
 80091c6:	681b      	ldr	r3, [r3, #0]
 80091c8:	f003 0301 	and.w	r3, r3, #1
 80091cc:	2b00      	cmp	r3, #0
 80091ce:	d07e      	beq.n	80092ce <HAL_RCCEx_PeriphCLKConfig+0x7e2>
 80091d0:	687b      	ldr	r3, [r7, #4]
 80091d2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80091d4:	2b28      	cmp	r3, #40	; 0x28
 80091d6:	d867      	bhi.n	80092a8 <HAL_RCCEx_PeriphCLKConfig+0x7bc>
 80091d8:	a201      	add	r2, pc, #4	; (adr r2, 80091e0 <HAL_RCCEx_PeriphCLKConfig+0x6f4>)
 80091da:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80091de:	bf00      	nop
 80091e0:	080092af 	.word	0x080092af
 80091e4:	080092a9 	.word	0x080092a9
 80091e8:	080092a9 	.word	0x080092a9
 80091ec:	080092a9 	.word	0x080092a9
 80091f0:	080092a9 	.word	0x080092a9
 80091f4:	080092a9 	.word	0x080092a9
 80091f8:	080092a9 	.word	0x080092a9
 80091fc:	080092a9 	.word	0x080092a9
 8009200:	08009285 	.word	0x08009285
 8009204:	080092a9 	.word	0x080092a9
 8009208:	080092a9 	.word	0x080092a9
 800920c:	080092a9 	.word	0x080092a9
 8009210:	080092a9 	.word	0x080092a9
 8009214:	080092a9 	.word	0x080092a9
 8009218:	080092a9 	.word	0x080092a9
 800921c:	080092a9 	.word	0x080092a9
 8009220:	08009297 	.word	0x08009297
 8009224:	080092a9 	.word	0x080092a9
 8009228:	080092a9 	.word	0x080092a9
 800922c:	080092a9 	.word	0x080092a9
 8009230:	080092a9 	.word	0x080092a9
 8009234:	080092a9 	.word	0x080092a9
 8009238:	080092a9 	.word	0x080092a9
 800923c:	080092a9 	.word	0x080092a9
 8009240:	080092af 	.word	0x080092af
 8009244:	080092a9 	.word	0x080092a9
 8009248:	080092a9 	.word	0x080092a9
 800924c:	080092a9 	.word	0x080092a9
 8009250:	080092a9 	.word	0x080092a9
 8009254:	080092a9 	.word	0x080092a9
 8009258:	080092a9 	.word	0x080092a9
 800925c:	080092a9 	.word	0x080092a9
 8009260:	080092af 	.word	0x080092af
 8009264:	080092a9 	.word	0x080092a9
 8009268:	080092a9 	.word	0x080092a9
 800926c:	080092a9 	.word	0x080092a9
 8009270:	080092a9 	.word	0x080092a9
 8009274:	080092a9 	.word	0x080092a9
 8009278:	080092a9 	.word	0x080092a9
 800927c:	080092a9 	.word	0x080092a9
 8009280:	080092af 	.word	0x080092af
 8009284:	687b      	ldr	r3, [r7, #4]
 8009286:	3304      	adds	r3, #4
 8009288:	2101      	movs	r1, #1
 800928a:	4618      	mov	r0, r3
 800928c:	f000 fde6 	bl	8009e5c <RCCEx_PLL2_Config>
 8009290:	4603      	mov	r3, r0
 8009292:	75fb      	strb	r3, [r7, #23]
 8009294:	e00c      	b.n	80092b0 <HAL_RCCEx_PeriphCLKConfig+0x7c4>
 8009296:	687b      	ldr	r3, [r7, #4]
 8009298:	3324      	adds	r3, #36	; 0x24
 800929a:	2101      	movs	r1, #1
 800929c:	4618      	mov	r0, r3
 800929e:	f000 fe8f 	bl	8009fc0 <RCCEx_PLL3_Config>
 80092a2:	4603      	mov	r3, r0
 80092a4:	75fb      	strb	r3, [r7, #23]
 80092a6:	e003      	b.n	80092b0 <HAL_RCCEx_PeriphCLKConfig+0x7c4>
 80092a8:	2301      	movs	r3, #1
 80092aa:	75fb      	strb	r3, [r7, #23]
 80092ac:	e000      	b.n	80092b0 <HAL_RCCEx_PeriphCLKConfig+0x7c4>
 80092ae:	bf00      	nop
 80092b0:	7dfb      	ldrb	r3, [r7, #23]
 80092b2:	2b00      	cmp	r3, #0
 80092b4:	d109      	bne.n	80092ca <HAL_RCCEx_PeriphCLKConfig+0x7de>
 80092b6:	4b1d      	ldr	r3, [pc, #116]	; (800932c <HAL_RCCEx_PeriphCLKConfig+0x840>)
 80092b8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80092ba:	f023 0238 	bic.w	r2, r3, #56	; 0x38
 80092be:	687b      	ldr	r3, [r7, #4]
 80092c0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80092c2:	491a      	ldr	r1, [pc, #104]	; (800932c <HAL_RCCEx_PeriphCLKConfig+0x840>)
 80092c4:	4313      	orrs	r3, r2
 80092c6:	654b      	str	r3, [r1, #84]	; 0x54
 80092c8:	e001      	b.n	80092ce <HAL_RCCEx_PeriphCLKConfig+0x7e2>
 80092ca:	7dfb      	ldrb	r3, [r7, #23]
 80092cc:	75bb      	strb	r3, [r7, #22]
 80092ce:	687b      	ldr	r3, [r7, #4]
 80092d0:	681b      	ldr	r3, [r3, #0]
 80092d2:	f003 0302 	and.w	r3, r3, #2
 80092d6:	2b00      	cmp	r3, #0
 80092d8:	d03e      	beq.n	8009358 <HAL_RCCEx_PeriphCLKConfig+0x86c>
 80092da:	687b      	ldr	r3, [r7, #4]
 80092dc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80092de:	2b05      	cmp	r3, #5
 80092e0:	d820      	bhi.n	8009324 <HAL_RCCEx_PeriphCLKConfig+0x838>
 80092e2:	a201      	add	r2, pc, #4	; (adr r2, 80092e8 <HAL_RCCEx_PeriphCLKConfig+0x7fc>)
 80092e4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80092e8:	08009339 	.word	0x08009339
 80092ec:	08009301 	.word	0x08009301
 80092f0:	08009313 	.word	0x08009313
 80092f4:	08009339 	.word	0x08009339
 80092f8:	08009339 	.word	0x08009339
 80092fc:	08009339 	.word	0x08009339
 8009300:	687b      	ldr	r3, [r7, #4]
 8009302:	3304      	adds	r3, #4
 8009304:	2101      	movs	r1, #1
 8009306:	4618      	mov	r0, r3
 8009308:	f000 fda8 	bl	8009e5c <RCCEx_PLL2_Config>
 800930c:	4603      	mov	r3, r0
 800930e:	75fb      	strb	r3, [r7, #23]
 8009310:	e013      	b.n	800933a <HAL_RCCEx_PeriphCLKConfig+0x84e>
 8009312:	687b      	ldr	r3, [r7, #4]
 8009314:	3324      	adds	r3, #36	; 0x24
 8009316:	2101      	movs	r1, #1
 8009318:	4618      	mov	r0, r3
 800931a:	f000 fe51 	bl	8009fc0 <RCCEx_PLL3_Config>
 800931e:	4603      	mov	r3, r0
 8009320:	75fb      	strb	r3, [r7, #23]
 8009322:	e00a      	b.n	800933a <HAL_RCCEx_PeriphCLKConfig+0x84e>
 8009324:	2301      	movs	r3, #1
 8009326:	75fb      	strb	r3, [r7, #23]
 8009328:	e007      	b.n	800933a <HAL_RCCEx_PeriphCLKConfig+0x84e>
 800932a:	bf00      	nop
 800932c:	58024400 	.word	0x58024400
 8009330:	58024800 	.word	0x58024800
 8009334:	00ffffcf 	.word	0x00ffffcf
 8009338:	bf00      	nop
 800933a:	7dfb      	ldrb	r3, [r7, #23]
 800933c:	2b00      	cmp	r3, #0
 800933e:	d109      	bne.n	8009354 <HAL_RCCEx_PeriphCLKConfig+0x868>
 8009340:	4b9f      	ldr	r3, [pc, #636]	; (80095c0 <HAL_RCCEx_PeriphCLKConfig+0xad4>)
 8009342:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009344:	f023 0207 	bic.w	r2, r3, #7
 8009348:	687b      	ldr	r3, [r7, #4]
 800934a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800934c:	499c      	ldr	r1, [pc, #624]	; (80095c0 <HAL_RCCEx_PeriphCLKConfig+0xad4>)
 800934e:	4313      	orrs	r3, r2
 8009350:	654b      	str	r3, [r1, #84]	; 0x54
 8009352:	e001      	b.n	8009358 <HAL_RCCEx_PeriphCLKConfig+0x86c>
 8009354:	7dfb      	ldrb	r3, [r7, #23]
 8009356:	75bb      	strb	r3, [r7, #22]
 8009358:	687b      	ldr	r3, [r7, #4]
 800935a:	681b      	ldr	r3, [r3, #0]
 800935c:	f003 0304 	and.w	r3, r3, #4
 8009360:	2b00      	cmp	r3, #0
 8009362:	d039      	beq.n	80093d8 <HAL_RCCEx_PeriphCLKConfig+0x8ec>
 8009364:	687b      	ldr	r3, [r7, #4]
 8009366:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800936a:	2b05      	cmp	r3, #5
 800936c:	d820      	bhi.n	80093b0 <HAL_RCCEx_PeriphCLKConfig+0x8c4>
 800936e:	a201      	add	r2, pc, #4	; (adr r2, 8009374 <HAL_RCCEx_PeriphCLKConfig+0x888>)
 8009370:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8009374:	080093b7 	.word	0x080093b7
 8009378:	0800938d 	.word	0x0800938d
 800937c:	0800939f 	.word	0x0800939f
 8009380:	080093b7 	.word	0x080093b7
 8009384:	080093b7 	.word	0x080093b7
 8009388:	080093b7 	.word	0x080093b7
 800938c:	687b      	ldr	r3, [r7, #4]
 800938e:	3304      	adds	r3, #4
 8009390:	2101      	movs	r1, #1
 8009392:	4618      	mov	r0, r3
 8009394:	f000 fd62 	bl	8009e5c <RCCEx_PLL2_Config>
 8009398:	4603      	mov	r3, r0
 800939a:	75fb      	strb	r3, [r7, #23]
 800939c:	e00c      	b.n	80093b8 <HAL_RCCEx_PeriphCLKConfig+0x8cc>
 800939e:	687b      	ldr	r3, [r7, #4]
 80093a0:	3324      	adds	r3, #36	; 0x24
 80093a2:	2101      	movs	r1, #1
 80093a4:	4618      	mov	r0, r3
 80093a6:	f000 fe0b 	bl	8009fc0 <RCCEx_PLL3_Config>
 80093aa:	4603      	mov	r3, r0
 80093ac:	75fb      	strb	r3, [r7, #23]
 80093ae:	e003      	b.n	80093b8 <HAL_RCCEx_PeriphCLKConfig+0x8cc>
 80093b0:	2301      	movs	r3, #1
 80093b2:	75fb      	strb	r3, [r7, #23]
 80093b4:	e000      	b.n	80093b8 <HAL_RCCEx_PeriphCLKConfig+0x8cc>
 80093b6:	bf00      	nop
 80093b8:	7dfb      	ldrb	r3, [r7, #23]
 80093ba:	2b00      	cmp	r3, #0
 80093bc:	d10a      	bne.n	80093d4 <HAL_RCCEx_PeriphCLKConfig+0x8e8>
 80093be:	4b80      	ldr	r3, [pc, #512]	; (80095c0 <HAL_RCCEx_PeriphCLKConfig+0xad4>)
 80093c0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80093c2:	f023 0207 	bic.w	r2, r3, #7
 80093c6:	687b      	ldr	r3, [r7, #4]
 80093c8:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80093cc:	497c      	ldr	r1, [pc, #496]	; (80095c0 <HAL_RCCEx_PeriphCLKConfig+0xad4>)
 80093ce:	4313      	orrs	r3, r2
 80093d0:	658b      	str	r3, [r1, #88]	; 0x58
 80093d2:	e001      	b.n	80093d8 <HAL_RCCEx_PeriphCLKConfig+0x8ec>
 80093d4:	7dfb      	ldrb	r3, [r7, #23]
 80093d6:	75bb      	strb	r3, [r7, #22]
 80093d8:	687b      	ldr	r3, [r7, #4]
 80093da:	681b      	ldr	r3, [r3, #0]
 80093dc:	f003 0320 	and.w	r3, r3, #32
 80093e0:	2b00      	cmp	r3, #0
 80093e2:	d04b      	beq.n	800947c <HAL_RCCEx_PeriphCLKConfig+0x990>
 80093e4:	687b      	ldr	r3, [r7, #4]
 80093e6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80093ea:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 80093ee:	d02e      	beq.n	800944e <HAL_RCCEx_PeriphCLKConfig+0x962>
 80093f0:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 80093f4:	d828      	bhi.n	8009448 <HAL_RCCEx_PeriphCLKConfig+0x95c>
 80093f6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80093fa:	d02a      	beq.n	8009452 <HAL_RCCEx_PeriphCLKConfig+0x966>
 80093fc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009400:	d822      	bhi.n	8009448 <HAL_RCCEx_PeriphCLKConfig+0x95c>
 8009402:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 8009406:	d026      	beq.n	8009456 <HAL_RCCEx_PeriphCLKConfig+0x96a>
 8009408:	f1b3 5f40 	cmp.w	r3, #805306368	; 0x30000000
 800940c:	d81c      	bhi.n	8009448 <HAL_RCCEx_PeriphCLKConfig+0x95c>
 800940e:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009412:	d010      	beq.n	8009436 <HAL_RCCEx_PeriphCLKConfig+0x94a>
 8009414:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8009418:	d816      	bhi.n	8009448 <HAL_RCCEx_PeriphCLKConfig+0x95c>
 800941a:	2b00      	cmp	r3, #0
 800941c:	d01d      	beq.n	800945a <HAL_RCCEx_PeriphCLKConfig+0x96e>
 800941e:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 8009422:	d111      	bne.n	8009448 <HAL_RCCEx_PeriphCLKConfig+0x95c>
 8009424:	687b      	ldr	r3, [r7, #4]
 8009426:	3304      	adds	r3, #4
 8009428:	2100      	movs	r1, #0
 800942a:	4618      	mov	r0, r3
 800942c:	f000 fd16 	bl	8009e5c <RCCEx_PLL2_Config>
 8009430:	4603      	mov	r3, r0
 8009432:	75fb      	strb	r3, [r7, #23]
 8009434:	e012      	b.n	800945c <HAL_RCCEx_PeriphCLKConfig+0x970>
 8009436:	687b      	ldr	r3, [r7, #4]
 8009438:	3324      	adds	r3, #36	; 0x24
 800943a:	2102      	movs	r1, #2
 800943c:	4618      	mov	r0, r3
 800943e:	f000 fdbf 	bl	8009fc0 <RCCEx_PLL3_Config>
 8009442:	4603      	mov	r3, r0
 8009444:	75fb      	strb	r3, [r7, #23]
 8009446:	e009      	b.n	800945c <HAL_RCCEx_PeriphCLKConfig+0x970>
 8009448:	2301      	movs	r3, #1
 800944a:	75fb      	strb	r3, [r7, #23]
 800944c:	e006      	b.n	800945c <HAL_RCCEx_PeriphCLKConfig+0x970>
 800944e:	bf00      	nop
 8009450:	e004      	b.n	800945c <HAL_RCCEx_PeriphCLKConfig+0x970>
 8009452:	bf00      	nop
 8009454:	e002      	b.n	800945c <HAL_RCCEx_PeriphCLKConfig+0x970>
 8009456:	bf00      	nop
 8009458:	e000      	b.n	800945c <HAL_RCCEx_PeriphCLKConfig+0x970>
 800945a:	bf00      	nop
 800945c:	7dfb      	ldrb	r3, [r7, #23]
 800945e:	2b00      	cmp	r3, #0
 8009460:	d10a      	bne.n	8009478 <HAL_RCCEx_PeriphCLKConfig+0x98c>
 8009462:	4b57      	ldr	r3, [pc, #348]	; (80095c0 <HAL_RCCEx_PeriphCLKConfig+0xad4>)
 8009464:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8009466:	f023 42e0 	bic.w	r2, r3, #1879048192	; 0x70000000
 800946a:	687b      	ldr	r3, [r7, #4]
 800946c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8009470:	4953      	ldr	r1, [pc, #332]	; (80095c0 <HAL_RCCEx_PeriphCLKConfig+0xad4>)
 8009472:	4313      	orrs	r3, r2
 8009474:	654b      	str	r3, [r1, #84]	; 0x54
 8009476:	e001      	b.n	800947c <HAL_RCCEx_PeriphCLKConfig+0x990>
 8009478:	7dfb      	ldrb	r3, [r7, #23]
 800947a:	75bb      	strb	r3, [r7, #22]
 800947c:	687b      	ldr	r3, [r7, #4]
 800947e:	681b      	ldr	r3, [r3, #0]
 8009480:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8009484:	2b00      	cmp	r3, #0
 8009486:	d04b      	beq.n	8009520 <HAL_RCCEx_PeriphCLKConfig+0xa34>
 8009488:	687b      	ldr	r3, [r7, #4]
 800948a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800948e:	f5b3 5fa0 	cmp.w	r3, #5120	; 0x1400
 8009492:	d02e      	beq.n	80094f2 <HAL_RCCEx_PeriphCLKConfig+0xa06>
 8009494:	f5b3 5fa0 	cmp.w	r3, #5120	; 0x1400
 8009498:	d828      	bhi.n	80094ec <HAL_RCCEx_PeriphCLKConfig+0xa00>
 800949a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800949e:	d02a      	beq.n	80094f6 <HAL_RCCEx_PeriphCLKConfig+0xa0a>
 80094a0:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80094a4:	d822      	bhi.n	80094ec <HAL_RCCEx_PeriphCLKConfig+0xa00>
 80094a6:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 80094aa:	d026      	beq.n	80094fa <HAL_RCCEx_PeriphCLKConfig+0xa0e>
 80094ac:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 80094b0:	d81c      	bhi.n	80094ec <HAL_RCCEx_PeriphCLKConfig+0xa00>
 80094b2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80094b6:	d010      	beq.n	80094da <HAL_RCCEx_PeriphCLKConfig+0x9ee>
 80094b8:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 80094bc:	d816      	bhi.n	80094ec <HAL_RCCEx_PeriphCLKConfig+0xa00>
 80094be:	2b00      	cmp	r3, #0
 80094c0:	d01d      	beq.n	80094fe <HAL_RCCEx_PeriphCLKConfig+0xa12>
 80094c2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80094c6:	d111      	bne.n	80094ec <HAL_RCCEx_PeriphCLKConfig+0xa00>
 80094c8:	687b      	ldr	r3, [r7, #4]
 80094ca:	3304      	adds	r3, #4
 80094cc:	2100      	movs	r1, #0
 80094ce:	4618      	mov	r0, r3
 80094d0:	f000 fcc4 	bl	8009e5c <RCCEx_PLL2_Config>
 80094d4:	4603      	mov	r3, r0
 80094d6:	75fb      	strb	r3, [r7, #23]
 80094d8:	e012      	b.n	8009500 <HAL_RCCEx_PeriphCLKConfig+0xa14>
 80094da:	687b      	ldr	r3, [r7, #4]
 80094dc:	3324      	adds	r3, #36	; 0x24
 80094de:	2102      	movs	r1, #2
 80094e0:	4618      	mov	r0, r3
 80094e2:	f000 fd6d 	bl	8009fc0 <RCCEx_PLL3_Config>
 80094e6:	4603      	mov	r3, r0
 80094e8:	75fb      	strb	r3, [r7, #23]
 80094ea:	e009      	b.n	8009500 <HAL_RCCEx_PeriphCLKConfig+0xa14>
 80094ec:	2301      	movs	r3, #1
 80094ee:	75fb      	strb	r3, [r7, #23]
 80094f0:	e006      	b.n	8009500 <HAL_RCCEx_PeriphCLKConfig+0xa14>
 80094f2:	bf00      	nop
 80094f4:	e004      	b.n	8009500 <HAL_RCCEx_PeriphCLKConfig+0xa14>
 80094f6:	bf00      	nop
 80094f8:	e002      	b.n	8009500 <HAL_RCCEx_PeriphCLKConfig+0xa14>
 80094fa:	bf00      	nop
 80094fc:	e000      	b.n	8009500 <HAL_RCCEx_PeriphCLKConfig+0xa14>
 80094fe:	bf00      	nop
 8009500:	7dfb      	ldrb	r3, [r7, #23]
 8009502:	2b00      	cmp	r3, #0
 8009504:	d10a      	bne.n	800951c <HAL_RCCEx_PeriphCLKConfig+0xa30>
 8009506:	4b2e      	ldr	r3, [pc, #184]	; (80095c0 <HAL_RCCEx_PeriphCLKConfig+0xad4>)
 8009508:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800950a:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 800950e:	687b      	ldr	r3, [r7, #4]
 8009510:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8009514:	492a      	ldr	r1, [pc, #168]	; (80095c0 <HAL_RCCEx_PeriphCLKConfig+0xad4>)
 8009516:	4313      	orrs	r3, r2
 8009518:	658b      	str	r3, [r1, #88]	; 0x58
 800951a:	e001      	b.n	8009520 <HAL_RCCEx_PeriphCLKConfig+0xa34>
 800951c:	7dfb      	ldrb	r3, [r7, #23]
 800951e:	75bb      	strb	r3, [r7, #22]
 8009520:	687b      	ldr	r3, [r7, #4]
 8009522:	681b      	ldr	r3, [r3, #0]
 8009524:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8009528:	2b00      	cmp	r3, #0
 800952a:	d04d      	beq.n	80095c8 <HAL_RCCEx_PeriphCLKConfig+0xadc>
 800952c:	687b      	ldr	r3, [r7, #4]
 800952e:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8009532:	f5b3 4f20 	cmp.w	r3, #40960	; 0xa000
 8009536:	d02e      	beq.n	8009596 <HAL_RCCEx_PeriphCLKConfig+0xaaa>
 8009538:	f5b3 4f20 	cmp.w	r3, #40960	; 0xa000
 800953c:	d828      	bhi.n	8009590 <HAL_RCCEx_PeriphCLKConfig+0xaa4>
 800953e:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8009542:	d02a      	beq.n	800959a <HAL_RCCEx_PeriphCLKConfig+0xaae>
 8009544:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8009548:	d822      	bhi.n	8009590 <HAL_RCCEx_PeriphCLKConfig+0xaa4>
 800954a:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 800954e:	d026      	beq.n	800959e <HAL_RCCEx_PeriphCLKConfig+0xab2>
 8009550:	f5b3 4fc0 	cmp.w	r3, #24576	; 0x6000
 8009554:	d81c      	bhi.n	8009590 <HAL_RCCEx_PeriphCLKConfig+0xaa4>
 8009556:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800955a:	d010      	beq.n	800957e <HAL_RCCEx_PeriphCLKConfig+0xa92>
 800955c:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8009560:	d816      	bhi.n	8009590 <HAL_RCCEx_PeriphCLKConfig+0xaa4>
 8009562:	2b00      	cmp	r3, #0
 8009564:	d01d      	beq.n	80095a2 <HAL_RCCEx_PeriphCLKConfig+0xab6>
 8009566:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800956a:	d111      	bne.n	8009590 <HAL_RCCEx_PeriphCLKConfig+0xaa4>
 800956c:	687b      	ldr	r3, [r7, #4]
 800956e:	3304      	adds	r3, #4
 8009570:	2100      	movs	r1, #0
 8009572:	4618      	mov	r0, r3
 8009574:	f000 fc72 	bl	8009e5c <RCCEx_PLL2_Config>
 8009578:	4603      	mov	r3, r0
 800957a:	75fb      	strb	r3, [r7, #23]
 800957c:	e012      	b.n	80095a4 <HAL_RCCEx_PeriphCLKConfig+0xab8>
 800957e:	687b      	ldr	r3, [r7, #4]
 8009580:	3324      	adds	r3, #36	; 0x24
 8009582:	2102      	movs	r1, #2
 8009584:	4618      	mov	r0, r3
 8009586:	f000 fd1b 	bl	8009fc0 <RCCEx_PLL3_Config>
 800958a:	4603      	mov	r3, r0
 800958c:	75fb      	strb	r3, [r7, #23]
 800958e:	e009      	b.n	80095a4 <HAL_RCCEx_PeriphCLKConfig+0xab8>
 8009590:	2301      	movs	r3, #1
 8009592:	75fb      	strb	r3, [r7, #23]
 8009594:	e006      	b.n	80095a4 <HAL_RCCEx_PeriphCLKConfig+0xab8>
 8009596:	bf00      	nop
 8009598:	e004      	b.n	80095a4 <HAL_RCCEx_PeriphCLKConfig+0xab8>
 800959a:	bf00      	nop
 800959c:	e002      	b.n	80095a4 <HAL_RCCEx_PeriphCLKConfig+0xab8>
 800959e:	bf00      	nop
 80095a0:	e000      	b.n	80095a4 <HAL_RCCEx_PeriphCLKConfig+0xab8>
 80095a2:	bf00      	nop
 80095a4:	7dfb      	ldrb	r3, [r7, #23]
 80095a6:	2b00      	cmp	r3, #0
 80095a8:	d10c      	bne.n	80095c4 <HAL_RCCEx_PeriphCLKConfig+0xad8>
 80095aa:	4b05      	ldr	r3, [pc, #20]	; (80095c0 <HAL_RCCEx_PeriphCLKConfig+0xad4>)
 80095ac:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80095ae:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80095b2:	687b      	ldr	r3, [r7, #4]
 80095b4:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80095b8:	4901      	ldr	r1, [pc, #4]	; (80095c0 <HAL_RCCEx_PeriphCLKConfig+0xad4>)
 80095ba:	4313      	orrs	r3, r2
 80095bc:	658b      	str	r3, [r1, #88]	; 0x58
 80095be:	e003      	b.n	80095c8 <HAL_RCCEx_PeriphCLKConfig+0xadc>
 80095c0:	58024400 	.word	0x58024400
 80095c4:	7dfb      	ldrb	r3, [r7, #23]
 80095c6:	75bb      	strb	r3, [r7, #22]
 80095c8:	687b      	ldr	r3, [r7, #4]
 80095ca:	681b      	ldr	r3, [r3, #0]
 80095cc:	f003 0308 	and.w	r3, r3, #8
 80095d0:	2b00      	cmp	r3, #0
 80095d2:	d018      	beq.n	8009606 <HAL_RCCEx_PeriphCLKConfig+0xb1a>
 80095d4:	687b      	ldr	r3, [r7, #4]
 80095d6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 80095d8:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80095dc:	d10a      	bne.n	80095f4 <HAL_RCCEx_PeriphCLKConfig+0xb08>
 80095de:	687b      	ldr	r3, [r7, #4]
 80095e0:	3324      	adds	r3, #36	; 0x24
 80095e2:	2102      	movs	r1, #2
 80095e4:	4618      	mov	r0, r3
 80095e6:	f000 fceb 	bl	8009fc0 <RCCEx_PLL3_Config>
 80095ea:	4603      	mov	r3, r0
 80095ec:	2b00      	cmp	r3, #0
 80095ee:	d001      	beq.n	80095f4 <HAL_RCCEx_PeriphCLKConfig+0xb08>
 80095f0:	2301      	movs	r3, #1
 80095f2:	75bb      	strb	r3, [r7, #22]
 80095f4:	4b8a      	ldr	r3, [pc, #552]	; (8009820 <HAL_RCCEx_PeriphCLKConfig+0xd34>)
 80095f6:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80095f8:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 80095fc:	687b      	ldr	r3, [r7, #4]
 80095fe:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8009600:	4987      	ldr	r1, [pc, #540]	; (8009820 <HAL_RCCEx_PeriphCLKConfig+0xd34>)
 8009602:	4313      	orrs	r3, r2
 8009604:	654b      	str	r3, [r1, #84]	; 0x54
 8009606:	687b      	ldr	r3, [r7, #4]
 8009608:	681b      	ldr	r3, [r3, #0]
 800960a:	f003 0310 	and.w	r3, r3, #16
 800960e:	2b00      	cmp	r3, #0
 8009610:	d01a      	beq.n	8009648 <HAL_RCCEx_PeriphCLKConfig+0xb5c>
 8009612:	687b      	ldr	r3, [r7, #4]
 8009614:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009618:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800961c:	d10a      	bne.n	8009634 <HAL_RCCEx_PeriphCLKConfig+0xb48>
 800961e:	687b      	ldr	r3, [r7, #4]
 8009620:	3324      	adds	r3, #36	; 0x24
 8009622:	2102      	movs	r1, #2
 8009624:	4618      	mov	r0, r3
 8009626:	f000 fccb 	bl	8009fc0 <RCCEx_PLL3_Config>
 800962a:	4603      	mov	r3, r0
 800962c:	2b00      	cmp	r3, #0
 800962e:	d001      	beq.n	8009634 <HAL_RCCEx_PeriphCLKConfig+0xb48>
 8009630:	2301      	movs	r3, #1
 8009632:	75bb      	strb	r3, [r7, #22]
 8009634:	4b7a      	ldr	r3, [pc, #488]	; (8009820 <HAL_RCCEx_PeriphCLKConfig+0xd34>)
 8009636:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009638:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800963c:	687b      	ldr	r3, [r7, #4]
 800963e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009642:	4977      	ldr	r1, [pc, #476]	; (8009820 <HAL_RCCEx_PeriphCLKConfig+0xd34>)
 8009644:	4313      	orrs	r3, r2
 8009646:	658b      	str	r3, [r1, #88]	; 0x58
 8009648:	687b      	ldr	r3, [r7, #4]
 800964a:	681b      	ldr	r3, [r3, #0]
 800964c:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8009650:	2b00      	cmp	r3, #0
 8009652:	d034      	beq.n	80096be <HAL_RCCEx_PeriphCLKConfig+0xbd2>
 8009654:	687b      	ldr	r3, [r7, #4]
 8009656:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800965a:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 800965e:	d01d      	beq.n	800969c <HAL_RCCEx_PeriphCLKConfig+0xbb0>
 8009660:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8009664:	d817      	bhi.n	8009696 <HAL_RCCEx_PeriphCLKConfig+0xbaa>
 8009666:	2b00      	cmp	r3, #0
 8009668:	d003      	beq.n	8009672 <HAL_RCCEx_PeriphCLKConfig+0xb86>
 800966a:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800966e:	d009      	beq.n	8009684 <HAL_RCCEx_PeriphCLKConfig+0xb98>
 8009670:	e011      	b.n	8009696 <HAL_RCCEx_PeriphCLKConfig+0xbaa>
 8009672:	687b      	ldr	r3, [r7, #4]
 8009674:	3304      	adds	r3, #4
 8009676:	2100      	movs	r1, #0
 8009678:	4618      	mov	r0, r3
 800967a:	f000 fbef 	bl	8009e5c <RCCEx_PLL2_Config>
 800967e:	4603      	mov	r3, r0
 8009680:	75fb      	strb	r3, [r7, #23]
 8009682:	e00c      	b.n	800969e <HAL_RCCEx_PeriphCLKConfig+0xbb2>
 8009684:	687b      	ldr	r3, [r7, #4]
 8009686:	3324      	adds	r3, #36	; 0x24
 8009688:	2102      	movs	r1, #2
 800968a:	4618      	mov	r0, r3
 800968c:	f000 fc98 	bl	8009fc0 <RCCEx_PLL3_Config>
 8009690:	4603      	mov	r3, r0
 8009692:	75fb      	strb	r3, [r7, #23]
 8009694:	e003      	b.n	800969e <HAL_RCCEx_PeriphCLKConfig+0xbb2>
 8009696:	2301      	movs	r3, #1
 8009698:	75fb      	strb	r3, [r7, #23]
 800969a:	e000      	b.n	800969e <HAL_RCCEx_PeriphCLKConfig+0xbb2>
 800969c:	bf00      	nop
 800969e:	7dfb      	ldrb	r3, [r7, #23]
 80096a0:	2b00      	cmp	r3, #0
 80096a2:	d10a      	bne.n	80096ba <HAL_RCCEx_PeriphCLKConfig+0xbce>
 80096a4:	4b5e      	ldr	r3, [pc, #376]	; (8009820 <HAL_RCCEx_PeriphCLKConfig+0xd34>)
 80096a6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80096a8:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 80096ac:	687b      	ldr	r3, [r7, #4]
 80096ae:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 80096b2:	495b      	ldr	r1, [pc, #364]	; (8009820 <HAL_RCCEx_PeriphCLKConfig+0xd34>)
 80096b4:	4313      	orrs	r3, r2
 80096b6:	658b      	str	r3, [r1, #88]	; 0x58
 80096b8:	e001      	b.n	80096be <HAL_RCCEx_PeriphCLKConfig+0xbd2>
 80096ba:	7dfb      	ldrb	r3, [r7, #23]
 80096bc:	75bb      	strb	r3, [r7, #22]
 80096be:	687b      	ldr	r3, [r7, #4]
 80096c0:	681b      	ldr	r3, [r3, #0]
 80096c2:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 80096c6:	2b00      	cmp	r3, #0
 80096c8:	d033      	beq.n	8009732 <HAL_RCCEx_PeriphCLKConfig+0xc46>
 80096ca:	687b      	ldr	r3, [r7, #4]
 80096cc:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 80096d0:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 80096d4:	d01c      	beq.n	8009710 <HAL_RCCEx_PeriphCLKConfig+0xc24>
 80096d6:	f5b3 1f40 	cmp.w	r3, #3145728	; 0x300000
 80096da:	d816      	bhi.n	800970a <HAL_RCCEx_PeriphCLKConfig+0xc1e>
 80096dc:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 80096e0:	d003      	beq.n	80096ea <HAL_RCCEx_PeriphCLKConfig+0xbfe>
 80096e2:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 80096e6:	d007      	beq.n	80096f8 <HAL_RCCEx_PeriphCLKConfig+0xc0c>
 80096e8:	e00f      	b.n	800970a <HAL_RCCEx_PeriphCLKConfig+0xc1e>
 80096ea:	4b4d      	ldr	r3, [pc, #308]	; (8009820 <HAL_RCCEx_PeriphCLKConfig+0xd34>)
 80096ec:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80096ee:	4a4c      	ldr	r2, [pc, #304]	; (8009820 <HAL_RCCEx_PeriphCLKConfig+0xd34>)
 80096f0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80096f4:	62d3      	str	r3, [r2, #44]	; 0x2c
 80096f6:	e00c      	b.n	8009712 <HAL_RCCEx_PeriphCLKConfig+0xc26>
 80096f8:	687b      	ldr	r3, [r7, #4]
 80096fa:	3324      	adds	r3, #36	; 0x24
 80096fc:	2101      	movs	r1, #1
 80096fe:	4618      	mov	r0, r3
 8009700:	f000 fc5e 	bl	8009fc0 <RCCEx_PLL3_Config>
 8009704:	4603      	mov	r3, r0
 8009706:	75fb      	strb	r3, [r7, #23]
 8009708:	e003      	b.n	8009712 <HAL_RCCEx_PeriphCLKConfig+0xc26>
 800970a:	2301      	movs	r3, #1
 800970c:	75fb      	strb	r3, [r7, #23]
 800970e:	e000      	b.n	8009712 <HAL_RCCEx_PeriphCLKConfig+0xc26>
 8009710:	bf00      	nop
 8009712:	7dfb      	ldrb	r3, [r7, #23]
 8009714:	2b00      	cmp	r3, #0
 8009716:	d10a      	bne.n	800972e <HAL_RCCEx_PeriphCLKConfig+0xc42>
 8009718:	4b41      	ldr	r3, [pc, #260]	; (8009820 <HAL_RCCEx_PeriphCLKConfig+0xd34>)
 800971a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800971c:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 8009720:	687b      	ldr	r3, [r7, #4]
 8009722:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8009726:	493e      	ldr	r1, [pc, #248]	; (8009820 <HAL_RCCEx_PeriphCLKConfig+0xd34>)
 8009728:	4313      	orrs	r3, r2
 800972a:	654b      	str	r3, [r1, #84]	; 0x54
 800972c:	e001      	b.n	8009732 <HAL_RCCEx_PeriphCLKConfig+0xc46>
 800972e:	7dfb      	ldrb	r3, [r7, #23]
 8009730:	75bb      	strb	r3, [r7, #22]
 8009732:	687b      	ldr	r3, [r7, #4]
 8009734:	681b      	ldr	r3, [r3, #0]
 8009736:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800973a:	2b00      	cmp	r3, #0
 800973c:	d029      	beq.n	8009792 <HAL_RCCEx_PeriphCLKConfig+0xca6>
 800973e:	687b      	ldr	r3, [r7, #4]
 8009740:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009742:	2b00      	cmp	r3, #0
 8009744:	d003      	beq.n	800974e <HAL_RCCEx_PeriphCLKConfig+0xc62>
 8009746:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800974a:	d007      	beq.n	800975c <HAL_RCCEx_PeriphCLKConfig+0xc70>
 800974c:	e00f      	b.n	800976e <HAL_RCCEx_PeriphCLKConfig+0xc82>
 800974e:	4b34      	ldr	r3, [pc, #208]	; (8009820 <HAL_RCCEx_PeriphCLKConfig+0xd34>)
 8009750:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009752:	4a33      	ldr	r2, [pc, #204]	; (8009820 <HAL_RCCEx_PeriphCLKConfig+0xd34>)
 8009754:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8009758:	62d3      	str	r3, [r2, #44]	; 0x2c
 800975a:	e00b      	b.n	8009774 <HAL_RCCEx_PeriphCLKConfig+0xc88>
 800975c:	687b      	ldr	r3, [r7, #4]
 800975e:	3304      	adds	r3, #4
 8009760:	2102      	movs	r1, #2
 8009762:	4618      	mov	r0, r3
 8009764:	f000 fb7a 	bl	8009e5c <RCCEx_PLL2_Config>
 8009768:	4603      	mov	r3, r0
 800976a:	75fb      	strb	r3, [r7, #23]
 800976c:	e002      	b.n	8009774 <HAL_RCCEx_PeriphCLKConfig+0xc88>
 800976e:	2301      	movs	r3, #1
 8009770:	75fb      	strb	r3, [r7, #23]
 8009772:	bf00      	nop
 8009774:	7dfb      	ldrb	r3, [r7, #23]
 8009776:	2b00      	cmp	r3, #0
 8009778:	d109      	bne.n	800978e <HAL_RCCEx_PeriphCLKConfig+0xca2>
 800977a:	4b29      	ldr	r3, [pc, #164]	; (8009820 <HAL_RCCEx_PeriphCLKConfig+0xd34>)
 800977c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800977e:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 8009782:	687b      	ldr	r3, [r7, #4]
 8009784:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009786:	4926      	ldr	r1, [pc, #152]	; (8009820 <HAL_RCCEx_PeriphCLKConfig+0xd34>)
 8009788:	4313      	orrs	r3, r2
 800978a:	64cb      	str	r3, [r1, #76]	; 0x4c
 800978c:	e001      	b.n	8009792 <HAL_RCCEx_PeriphCLKConfig+0xca6>
 800978e:	7dfb      	ldrb	r3, [r7, #23]
 8009790:	75bb      	strb	r3, [r7, #22]
 8009792:	687b      	ldr	r3, [r7, #4]
 8009794:	681b      	ldr	r3, [r3, #0]
 8009796:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800979a:	2b00      	cmp	r3, #0
 800979c:	d00a      	beq.n	80097b4 <HAL_RCCEx_PeriphCLKConfig+0xcc8>
 800979e:	687b      	ldr	r3, [r7, #4]
 80097a0:	3324      	adds	r3, #36	; 0x24
 80097a2:	2102      	movs	r1, #2
 80097a4:	4618      	mov	r0, r3
 80097a6:	f000 fc0b 	bl	8009fc0 <RCCEx_PLL3_Config>
 80097aa:	4603      	mov	r3, r0
 80097ac:	2b00      	cmp	r3, #0
 80097ae:	d001      	beq.n	80097b4 <HAL_RCCEx_PeriphCLKConfig+0xcc8>
 80097b0:	2301      	movs	r3, #1
 80097b2:	75bb      	strb	r3, [r7, #22]
 80097b4:	687b      	ldr	r3, [r7, #4]
 80097b6:	681b      	ldr	r3, [r3, #0]
 80097b8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80097bc:	2b00      	cmp	r3, #0
 80097be:	d033      	beq.n	8009828 <HAL_RCCEx_PeriphCLKConfig+0xd3c>
 80097c0:	687b      	ldr	r3, [r7, #4]
 80097c2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80097c4:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80097c8:	d017      	beq.n	80097fa <HAL_RCCEx_PeriphCLKConfig+0xd0e>
 80097ca:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80097ce:	d811      	bhi.n	80097f4 <HAL_RCCEx_PeriphCLKConfig+0xd08>
 80097d0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80097d4:	d013      	beq.n	80097fe <HAL_RCCEx_PeriphCLKConfig+0xd12>
 80097d6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80097da:	d80b      	bhi.n	80097f4 <HAL_RCCEx_PeriphCLKConfig+0xd08>
 80097dc:	2b00      	cmp	r3, #0
 80097de:	d010      	beq.n	8009802 <HAL_RCCEx_PeriphCLKConfig+0xd16>
 80097e0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80097e4:	d106      	bne.n	80097f4 <HAL_RCCEx_PeriphCLKConfig+0xd08>
 80097e6:	4b0e      	ldr	r3, [pc, #56]	; (8009820 <HAL_RCCEx_PeriphCLKConfig+0xd34>)
 80097e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80097ea:	4a0d      	ldr	r2, [pc, #52]	; (8009820 <HAL_RCCEx_PeriphCLKConfig+0xd34>)
 80097ec:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80097f0:	62d3      	str	r3, [r2, #44]	; 0x2c
 80097f2:	e007      	b.n	8009804 <HAL_RCCEx_PeriphCLKConfig+0xd18>
 80097f4:	2301      	movs	r3, #1
 80097f6:	75fb      	strb	r3, [r7, #23]
 80097f8:	e004      	b.n	8009804 <HAL_RCCEx_PeriphCLKConfig+0xd18>
 80097fa:	bf00      	nop
 80097fc:	e002      	b.n	8009804 <HAL_RCCEx_PeriphCLKConfig+0xd18>
 80097fe:	bf00      	nop
 8009800:	e000      	b.n	8009804 <HAL_RCCEx_PeriphCLKConfig+0xd18>
 8009802:	bf00      	nop
 8009804:	7dfb      	ldrb	r3, [r7, #23]
 8009806:	2b00      	cmp	r3, #0
 8009808:	d10c      	bne.n	8009824 <HAL_RCCEx_PeriphCLKConfig+0xd38>
 800980a:	4b05      	ldr	r3, [pc, #20]	; (8009820 <HAL_RCCEx_PeriphCLKConfig+0xd34>)
 800980c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800980e:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8009812:	687b      	ldr	r3, [r7, #4]
 8009814:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 8009816:	4902      	ldr	r1, [pc, #8]	; (8009820 <HAL_RCCEx_PeriphCLKConfig+0xd34>)
 8009818:	4313      	orrs	r3, r2
 800981a:	654b      	str	r3, [r1, #84]	; 0x54
 800981c:	e004      	b.n	8009828 <HAL_RCCEx_PeriphCLKConfig+0xd3c>
 800981e:	bf00      	nop
 8009820:	58024400 	.word	0x58024400
 8009824:	7dfb      	ldrb	r3, [r7, #23]
 8009826:	75bb      	strb	r3, [r7, #22]
 8009828:	687b      	ldr	r3, [r7, #4]
 800982a:	681b      	ldr	r3, [r3, #0]
 800982c:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8009830:	2b00      	cmp	r3, #0
 8009832:	d008      	beq.n	8009846 <HAL_RCCEx_PeriphCLKConfig+0xd5a>
 8009834:	4b29      	ldr	r3, [pc, #164]	; (80098dc <HAL_RCCEx_PeriphCLKConfig+0xdf0>)
 8009836:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009838:	f023 4200 	bic.w	r2, r3, #2147483648	; 0x80000000
 800983c:	687b      	ldr	r3, [r7, #4]
 800983e:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8009840:	4926      	ldr	r1, [pc, #152]	; (80098dc <HAL_RCCEx_PeriphCLKConfig+0xdf0>)
 8009842:	4313      	orrs	r3, r2
 8009844:	650b      	str	r3, [r1, #80]	; 0x50
 8009846:	687b      	ldr	r3, [r7, #4]
 8009848:	681b      	ldr	r3, [r3, #0]
 800984a:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800984e:	2b00      	cmp	r3, #0
 8009850:	d008      	beq.n	8009864 <HAL_RCCEx_PeriphCLKConfig+0xd78>
 8009852:	4b22      	ldr	r3, [pc, #136]	; (80098dc <HAL_RCCEx_PeriphCLKConfig+0xdf0>)
 8009854:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8009856:	f023 7280 	bic.w	r2, r3, #16777216	; 0x1000000
 800985a:	687b      	ldr	r3, [r7, #4]
 800985c:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800985e:	491f      	ldr	r1, [pc, #124]	; (80098dc <HAL_RCCEx_PeriphCLKConfig+0xdf0>)
 8009860:	4313      	orrs	r3, r2
 8009862:	650b      	str	r3, [r1, #80]	; 0x50
 8009864:	687b      	ldr	r3, [r7, #4]
 8009866:	681b      	ldr	r3, [r3, #0]
 8009868:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 800986c:	2b00      	cmp	r3, #0
 800986e:	d00d      	beq.n	800988c <HAL_RCCEx_PeriphCLKConfig+0xda0>
 8009870:	4b1a      	ldr	r3, [pc, #104]	; (80098dc <HAL_RCCEx_PeriphCLKConfig+0xdf0>)
 8009872:	691b      	ldr	r3, [r3, #16]
 8009874:	4a19      	ldr	r2, [pc, #100]	; (80098dc <HAL_RCCEx_PeriphCLKConfig+0xdf0>)
 8009876:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 800987a:	6113      	str	r3, [r2, #16]
 800987c:	4b17      	ldr	r3, [pc, #92]	; (80098dc <HAL_RCCEx_PeriphCLKConfig+0xdf0>)
 800987e:	691a      	ldr	r2, [r3, #16]
 8009880:	687b      	ldr	r3, [r7, #4]
 8009882:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8009886:	4915      	ldr	r1, [pc, #84]	; (80098dc <HAL_RCCEx_PeriphCLKConfig+0xdf0>)
 8009888:	4313      	orrs	r3, r2
 800988a:	610b      	str	r3, [r1, #16]
 800988c:	687b      	ldr	r3, [r7, #4]
 800988e:	681b      	ldr	r3, [r3, #0]
 8009890:	2b00      	cmp	r3, #0
 8009892:	da08      	bge.n	80098a6 <HAL_RCCEx_PeriphCLKConfig+0xdba>
 8009894:	4b11      	ldr	r3, [pc, #68]	; (80098dc <HAL_RCCEx_PeriphCLKConfig+0xdf0>)
 8009896:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8009898:	f023 5240 	bic.w	r2, r3, #805306368	; 0x30000000
 800989c:	687b      	ldr	r3, [r7, #4]
 800989e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80098a0:	490e      	ldr	r1, [pc, #56]	; (80098dc <HAL_RCCEx_PeriphCLKConfig+0xdf0>)
 80098a2:	4313      	orrs	r3, r2
 80098a4:	64cb      	str	r3, [r1, #76]	; 0x4c
 80098a6:	687b      	ldr	r3, [r7, #4]
 80098a8:	681b      	ldr	r3, [r3, #0]
 80098aa:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80098ae:	2b00      	cmp	r3, #0
 80098b0:	d009      	beq.n	80098c6 <HAL_RCCEx_PeriphCLKConfig+0xdda>
 80098b2:	4b0a      	ldr	r3, [pc, #40]	; (80098dc <HAL_RCCEx_PeriphCLKConfig+0xdf0>)
 80098b4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80098b6:	f423 0240 	bic.w	r2, r3, #12582912	; 0xc00000
 80098ba:	687b      	ldr	r3, [r7, #4]
 80098bc:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80098c0:	4906      	ldr	r1, [pc, #24]	; (80098dc <HAL_RCCEx_PeriphCLKConfig+0xdf0>)
 80098c2:	4313      	orrs	r3, r2
 80098c4:	654b      	str	r3, [r1, #84]	; 0x54
 80098c6:	7dbb      	ldrb	r3, [r7, #22]
 80098c8:	2b00      	cmp	r3, #0
 80098ca:	d101      	bne.n	80098d0 <HAL_RCCEx_PeriphCLKConfig+0xde4>
 80098cc:	2300      	movs	r3, #0
 80098ce:	e000      	b.n	80098d2 <HAL_RCCEx_PeriphCLKConfig+0xde6>
 80098d0:	2301      	movs	r3, #1
 80098d2:	4618      	mov	r0, r3
 80098d4:	3718      	adds	r7, #24
 80098d6:	46bd      	mov	sp, r7
 80098d8:	bd80      	pop	{r7, pc}
 80098da:	bf00      	nop
 80098dc:	58024400 	.word	0x58024400

080098e0 <HAL_RCCEx_GetD3PCLK1Freq>:
 80098e0:	b580      	push	{r7, lr}
 80098e2:	af00      	add	r7, sp, #0
 80098e4:	f7ff f8a6 	bl	8008a34 <HAL_RCC_GetHCLKFreq>
 80098e8:	4602      	mov	r2, r0
 80098ea:	4b06      	ldr	r3, [pc, #24]	; (8009904 <HAL_RCCEx_GetD3PCLK1Freq+0x24>)
 80098ec:	6a1b      	ldr	r3, [r3, #32]
 80098ee:	091b      	lsrs	r3, r3, #4
 80098f0:	f003 0307 	and.w	r3, r3, #7
 80098f4:	4904      	ldr	r1, [pc, #16]	; (8009908 <HAL_RCCEx_GetD3PCLK1Freq+0x28>)
 80098f6:	5ccb      	ldrb	r3, [r1, r3]
 80098f8:	f003 031f 	and.w	r3, r3, #31
 80098fc:	fa22 f303 	lsr.w	r3, r2, r3
 8009900:	4618      	mov	r0, r3
 8009902:	bd80      	pop	{r7, pc}
 8009904:	58024400 	.word	0x58024400
 8009908:	0800dfec 	.word	0x0800dfec

0800990c <HAL_RCCEx_GetPLL2ClockFreq>:
 800990c:	b480      	push	{r7}
 800990e:	b089      	sub	sp, #36	; 0x24
 8009910:	af00      	add	r7, sp, #0
 8009912:	6078      	str	r0, [r7, #4]
 8009914:	4ba1      	ldr	r3, [pc, #644]	; (8009b9c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009916:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009918:	f003 0303 	and.w	r3, r3, #3
 800991c:	61bb      	str	r3, [r7, #24]
 800991e:	4b9f      	ldr	r3, [pc, #636]	; (8009b9c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009920:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009922:	0b1b      	lsrs	r3, r3, #12
 8009924:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8009928:	617b      	str	r3, [r7, #20]
 800992a:	4b9c      	ldr	r3, [pc, #624]	; (8009b9c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800992c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800992e:	091b      	lsrs	r3, r3, #4
 8009930:	f003 0301 	and.w	r3, r3, #1
 8009934:	613b      	str	r3, [r7, #16]
 8009936:	4b99      	ldr	r3, [pc, #612]	; (8009b9c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009938:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800993a:	08db      	lsrs	r3, r3, #3
 800993c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8009940:	693a      	ldr	r2, [r7, #16]
 8009942:	fb02 f303 	mul.w	r3, r2, r3
 8009946:	ee07 3a90 	vmov	s15, r3
 800994a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800994e:	edc7 7a03 	vstr	s15, [r7, #12]
 8009952:	697b      	ldr	r3, [r7, #20]
 8009954:	2b00      	cmp	r3, #0
 8009956:	f000 8111 	beq.w	8009b7c <HAL_RCCEx_GetPLL2ClockFreq+0x270>
 800995a:	69bb      	ldr	r3, [r7, #24]
 800995c:	2b02      	cmp	r3, #2
 800995e:	f000 8083 	beq.w	8009a68 <HAL_RCCEx_GetPLL2ClockFreq+0x15c>
 8009962:	69bb      	ldr	r3, [r7, #24]
 8009964:	2b02      	cmp	r3, #2
 8009966:	f200 80a1 	bhi.w	8009aac <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
 800996a:	69bb      	ldr	r3, [r7, #24]
 800996c:	2b00      	cmp	r3, #0
 800996e:	d003      	beq.n	8009978 <HAL_RCCEx_GetPLL2ClockFreq+0x6c>
 8009970:	69bb      	ldr	r3, [r7, #24]
 8009972:	2b01      	cmp	r3, #1
 8009974:	d056      	beq.n	8009a24 <HAL_RCCEx_GetPLL2ClockFreq+0x118>
 8009976:	e099      	b.n	8009aac <HAL_RCCEx_GetPLL2ClockFreq+0x1a0>
 8009978:	4b88      	ldr	r3, [pc, #544]	; (8009b9c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 800997a:	681b      	ldr	r3, [r3, #0]
 800997c:	f003 0320 	and.w	r3, r3, #32
 8009980:	2b00      	cmp	r3, #0
 8009982:	d02d      	beq.n	80099e0 <HAL_RCCEx_GetPLL2ClockFreq+0xd4>
 8009984:	4b85      	ldr	r3, [pc, #532]	; (8009b9c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009986:	681b      	ldr	r3, [r3, #0]
 8009988:	08db      	lsrs	r3, r3, #3
 800998a:	f003 0303 	and.w	r3, r3, #3
 800998e:	4a84      	ldr	r2, [pc, #528]	; (8009ba0 <HAL_RCCEx_GetPLL2ClockFreq+0x294>)
 8009990:	fa22 f303 	lsr.w	r3, r2, r3
 8009994:	60bb      	str	r3, [r7, #8]
 8009996:	68bb      	ldr	r3, [r7, #8]
 8009998:	ee07 3a90 	vmov	s15, r3
 800999c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80099a0:	697b      	ldr	r3, [r7, #20]
 80099a2:	ee07 3a90 	vmov	s15, r3
 80099a6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80099aa:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80099ae:	4b7b      	ldr	r3, [pc, #492]	; (8009b9c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 80099b0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80099b2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80099b6:	ee07 3a90 	vmov	s15, r3
 80099ba:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80099be:	ed97 6a03 	vldr	s12, [r7, #12]
 80099c2:	eddf 5a78 	vldr	s11, [pc, #480]	; 8009ba4 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 80099c6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 80099ca:	ee76 7aa7 	vadd.f32	s15, s13, s15
 80099ce:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80099d2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80099d6:	ee67 7a27 	vmul.f32	s15, s14, s15
 80099da:	edc7 7a07 	vstr	s15, [r7, #28]
 80099de:	e087      	b.n	8009af0 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 80099e0:	697b      	ldr	r3, [r7, #20]
 80099e2:	ee07 3a90 	vmov	s15, r3
 80099e6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80099ea:	eddf 6a6f 	vldr	s13, [pc, #444]	; 8009ba8 <HAL_RCCEx_GetPLL2ClockFreq+0x29c>
 80099ee:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80099f2:	4b6a      	ldr	r3, [pc, #424]	; (8009b9c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 80099f4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80099f6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80099fa:	ee07 3a90 	vmov	s15, r3
 80099fe:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009a02:	ed97 6a03 	vldr	s12, [r7, #12]
 8009a06:	eddf 5a67 	vldr	s11, [pc, #412]	; 8009ba4 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009a0a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009a0e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009a12:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009a16:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009a1a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009a1e:	edc7 7a07 	vstr	s15, [r7, #28]
 8009a22:	e065      	b.n	8009af0 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 8009a24:	697b      	ldr	r3, [r7, #20]
 8009a26:	ee07 3a90 	vmov	s15, r3
 8009a2a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009a2e:	eddf 6a5f 	vldr	s13, [pc, #380]	; 8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 8009a32:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009a36:	4b59      	ldr	r3, [pc, #356]	; (8009b9c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009a38:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009a3a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009a3e:	ee07 3a90 	vmov	s15, r3
 8009a42:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009a46:	ed97 6a03 	vldr	s12, [r7, #12]
 8009a4a:	eddf 5a56 	vldr	s11, [pc, #344]	; 8009ba4 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009a4e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009a52:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009a56:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009a5a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009a5e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009a62:	edc7 7a07 	vstr	s15, [r7, #28]
 8009a66:	e043      	b.n	8009af0 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 8009a68:	697b      	ldr	r3, [r7, #20]
 8009a6a:	ee07 3a90 	vmov	s15, r3
 8009a6e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009a72:	eddf 6a4f 	vldr	s13, [pc, #316]	; 8009bb0 <HAL_RCCEx_GetPLL2ClockFreq+0x2a4>
 8009a76:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009a7a:	4b48      	ldr	r3, [pc, #288]	; (8009b9c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009a7c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009a7e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009a82:	ee07 3a90 	vmov	s15, r3
 8009a86:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009a8a:	ed97 6a03 	vldr	s12, [r7, #12]
 8009a8e:	eddf 5a45 	vldr	s11, [pc, #276]	; 8009ba4 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009a92:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009a96:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009a9a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009a9e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009aa2:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009aa6:	edc7 7a07 	vstr	s15, [r7, #28]
 8009aaa:	e021      	b.n	8009af0 <HAL_RCCEx_GetPLL2ClockFreq+0x1e4>
 8009aac:	697b      	ldr	r3, [r7, #20]
 8009aae:	ee07 3a90 	vmov	s15, r3
 8009ab2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009ab6:	eddf 6a3d 	vldr	s13, [pc, #244]	; 8009bac <HAL_RCCEx_GetPLL2ClockFreq+0x2a0>
 8009aba:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009abe:	4b37      	ldr	r3, [pc, #220]	; (8009b9c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009ac0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009ac2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009ac6:	ee07 3a90 	vmov	s15, r3
 8009aca:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009ace:	ed97 6a03 	vldr	s12, [r7, #12]
 8009ad2:	eddf 5a34 	vldr	s11, [pc, #208]	; 8009ba4 <HAL_RCCEx_GetPLL2ClockFreq+0x298>
 8009ad6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009ada:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009ade:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009ae2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009ae6:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009aea:	edc7 7a07 	vstr	s15, [r7, #28]
 8009aee:	bf00      	nop
 8009af0:	4b2a      	ldr	r3, [pc, #168]	; (8009b9c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009af2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009af4:	0a5b      	lsrs	r3, r3, #9
 8009af6:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009afa:	ee07 3a90 	vmov	s15, r3
 8009afe:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009b02:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8009b06:	ee37 7a87 	vadd.f32	s14, s15, s14
 8009b0a:	edd7 6a07 	vldr	s13, [r7, #28]
 8009b0e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8009b12:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8009b16:	ee17 2a90 	vmov	r2, s15
 8009b1a:	687b      	ldr	r3, [r7, #4]
 8009b1c:	601a      	str	r2, [r3, #0]
 8009b1e:	4b1f      	ldr	r3, [pc, #124]	; (8009b9c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009b20:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009b22:	0c1b      	lsrs	r3, r3, #16
 8009b24:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009b28:	ee07 3a90 	vmov	s15, r3
 8009b2c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009b30:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8009b34:	ee37 7a87 	vadd.f32	s14, s15, s14
 8009b38:	edd7 6a07 	vldr	s13, [r7, #28]
 8009b3c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8009b40:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8009b44:	ee17 2a90 	vmov	r2, s15
 8009b48:	687b      	ldr	r3, [r7, #4]
 8009b4a:	605a      	str	r2, [r3, #4]
 8009b4c:	4b13      	ldr	r3, [pc, #76]	; (8009b9c <HAL_RCCEx_GetPLL2ClockFreq+0x290>)
 8009b4e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009b50:	0e1b      	lsrs	r3, r3, #24
 8009b52:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009b56:	ee07 3a90 	vmov	s15, r3
 8009b5a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009b5e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8009b62:	ee37 7a87 	vadd.f32	s14, s15, s14
 8009b66:	edd7 6a07 	vldr	s13, [r7, #28]
 8009b6a:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8009b6e:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8009b72:	ee17 2a90 	vmov	r2, s15
 8009b76:	687b      	ldr	r3, [r7, #4]
 8009b78:	609a      	str	r2, [r3, #8]
 8009b7a:	e008      	b.n	8009b8e <HAL_RCCEx_GetPLL2ClockFreq+0x282>
 8009b7c:	687b      	ldr	r3, [r7, #4]
 8009b7e:	2200      	movs	r2, #0
 8009b80:	601a      	str	r2, [r3, #0]
 8009b82:	687b      	ldr	r3, [r7, #4]
 8009b84:	2200      	movs	r2, #0
 8009b86:	605a      	str	r2, [r3, #4]
 8009b88:	687b      	ldr	r3, [r7, #4]
 8009b8a:	2200      	movs	r2, #0
 8009b8c:	609a      	str	r2, [r3, #8]
 8009b8e:	bf00      	nop
 8009b90:	3724      	adds	r7, #36	; 0x24
 8009b92:	46bd      	mov	sp, r7
 8009b94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b98:	4770      	bx	lr
 8009b9a:	bf00      	nop
 8009b9c:	58024400 	.word	0x58024400
 8009ba0:	03d09000 	.word	0x03d09000
 8009ba4:	46000000 	.word	0x46000000
 8009ba8:	4c742400 	.word	0x4c742400
 8009bac:	4a742400 	.word	0x4a742400
 8009bb0:	4af42400 	.word	0x4af42400

08009bb4 <HAL_RCCEx_GetPLL3ClockFreq>:
 8009bb4:	b480      	push	{r7}
 8009bb6:	b089      	sub	sp, #36	; 0x24
 8009bb8:	af00      	add	r7, sp, #0
 8009bba:	6078      	str	r0, [r7, #4]
 8009bbc:	4ba1      	ldr	r3, [pc, #644]	; (8009e44 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009bbe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009bc0:	f003 0303 	and.w	r3, r3, #3
 8009bc4:	61bb      	str	r3, [r7, #24]
 8009bc6:	4b9f      	ldr	r3, [pc, #636]	; (8009e44 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009bc8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009bca:	0d1b      	lsrs	r3, r3, #20
 8009bcc:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8009bd0:	617b      	str	r3, [r7, #20]
 8009bd2:	4b9c      	ldr	r3, [pc, #624]	; (8009e44 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009bd4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009bd6:	0a1b      	lsrs	r3, r3, #8
 8009bd8:	f003 0301 	and.w	r3, r3, #1
 8009bdc:	613b      	str	r3, [r7, #16]
 8009bde:	4b99      	ldr	r3, [pc, #612]	; (8009e44 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009be0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009be2:	08db      	lsrs	r3, r3, #3
 8009be4:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8009be8:	693a      	ldr	r2, [r7, #16]
 8009bea:	fb02 f303 	mul.w	r3, r2, r3
 8009bee:	ee07 3a90 	vmov	s15, r3
 8009bf2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009bf6:	edc7 7a03 	vstr	s15, [r7, #12]
 8009bfa:	697b      	ldr	r3, [r7, #20]
 8009bfc:	2b00      	cmp	r3, #0
 8009bfe:	f000 8111 	beq.w	8009e24 <HAL_RCCEx_GetPLL3ClockFreq+0x270>
 8009c02:	69bb      	ldr	r3, [r7, #24]
 8009c04:	2b02      	cmp	r3, #2
 8009c06:	f000 8083 	beq.w	8009d10 <HAL_RCCEx_GetPLL3ClockFreq+0x15c>
 8009c0a:	69bb      	ldr	r3, [r7, #24]
 8009c0c:	2b02      	cmp	r3, #2
 8009c0e:	f200 80a1 	bhi.w	8009d54 <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
 8009c12:	69bb      	ldr	r3, [r7, #24]
 8009c14:	2b00      	cmp	r3, #0
 8009c16:	d003      	beq.n	8009c20 <HAL_RCCEx_GetPLL3ClockFreq+0x6c>
 8009c18:	69bb      	ldr	r3, [r7, #24]
 8009c1a:	2b01      	cmp	r3, #1
 8009c1c:	d056      	beq.n	8009ccc <HAL_RCCEx_GetPLL3ClockFreq+0x118>
 8009c1e:	e099      	b.n	8009d54 <HAL_RCCEx_GetPLL3ClockFreq+0x1a0>
 8009c20:	4b88      	ldr	r3, [pc, #544]	; (8009e44 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009c22:	681b      	ldr	r3, [r3, #0]
 8009c24:	f003 0320 	and.w	r3, r3, #32
 8009c28:	2b00      	cmp	r3, #0
 8009c2a:	d02d      	beq.n	8009c88 <HAL_RCCEx_GetPLL3ClockFreq+0xd4>
 8009c2c:	4b85      	ldr	r3, [pc, #532]	; (8009e44 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009c2e:	681b      	ldr	r3, [r3, #0]
 8009c30:	08db      	lsrs	r3, r3, #3
 8009c32:	f003 0303 	and.w	r3, r3, #3
 8009c36:	4a84      	ldr	r2, [pc, #528]	; (8009e48 <HAL_RCCEx_GetPLL3ClockFreq+0x294>)
 8009c38:	fa22 f303 	lsr.w	r3, r2, r3
 8009c3c:	60bb      	str	r3, [r7, #8]
 8009c3e:	68bb      	ldr	r3, [r7, #8]
 8009c40:	ee07 3a90 	vmov	s15, r3
 8009c44:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009c48:	697b      	ldr	r3, [r7, #20]
 8009c4a:	ee07 3a90 	vmov	s15, r3
 8009c4e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009c52:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009c56:	4b7b      	ldr	r3, [pc, #492]	; (8009e44 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009c58:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009c5a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009c5e:	ee07 3a90 	vmov	s15, r3
 8009c62:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009c66:	ed97 6a03 	vldr	s12, [r7, #12]
 8009c6a:	eddf 5a78 	vldr	s11, [pc, #480]	; 8009e4c <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8009c6e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009c72:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009c76:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009c7a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009c7e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009c82:	edc7 7a07 	vstr	s15, [r7, #28]
 8009c86:	e087      	b.n	8009d98 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 8009c88:	697b      	ldr	r3, [r7, #20]
 8009c8a:	ee07 3a90 	vmov	s15, r3
 8009c8e:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009c92:	eddf 6a6f 	vldr	s13, [pc, #444]	; 8009e50 <HAL_RCCEx_GetPLL3ClockFreq+0x29c>
 8009c96:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009c9a:	4b6a      	ldr	r3, [pc, #424]	; (8009e44 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009c9c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009c9e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009ca2:	ee07 3a90 	vmov	s15, r3
 8009ca6:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009caa:	ed97 6a03 	vldr	s12, [r7, #12]
 8009cae:	eddf 5a67 	vldr	s11, [pc, #412]	; 8009e4c <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8009cb2:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009cb6:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009cba:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009cbe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009cc2:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009cc6:	edc7 7a07 	vstr	s15, [r7, #28]
 8009cca:	e065      	b.n	8009d98 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 8009ccc:	697b      	ldr	r3, [r7, #20]
 8009cce:	ee07 3a90 	vmov	s15, r3
 8009cd2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009cd6:	eddf 6a5f 	vldr	s13, [pc, #380]	; 8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 8009cda:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009cde:	4b59      	ldr	r3, [pc, #356]	; (8009e44 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009ce0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009ce2:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009ce6:	ee07 3a90 	vmov	s15, r3
 8009cea:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009cee:	ed97 6a03 	vldr	s12, [r7, #12]
 8009cf2:	eddf 5a56 	vldr	s11, [pc, #344]	; 8009e4c <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8009cf6:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009cfa:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009cfe:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009d02:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009d06:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009d0a:	edc7 7a07 	vstr	s15, [r7, #28]
 8009d0e:	e043      	b.n	8009d98 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 8009d10:	697b      	ldr	r3, [r7, #20]
 8009d12:	ee07 3a90 	vmov	s15, r3
 8009d16:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009d1a:	eddf 6a4f 	vldr	s13, [pc, #316]	; 8009e58 <HAL_RCCEx_GetPLL3ClockFreq+0x2a4>
 8009d1e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009d22:	4b48      	ldr	r3, [pc, #288]	; (8009e44 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009d24:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009d26:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009d2a:	ee07 3a90 	vmov	s15, r3
 8009d2e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009d32:	ed97 6a03 	vldr	s12, [r7, #12]
 8009d36:	eddf 5a45 	vldr	s11, [pc, #276]	; 8009e4c <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8009d3a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009d3e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009d42:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009d46:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009d4a:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009d4e:	edc7 7a07 	vstr	s15, [r7, #28]
 8009d52:	e021      	b.n	8009d98 <HAL_RCCEx_GetPLL3ClockFreq+0x1e4>
 8009d54:	697b      	ldr	r3, [r7, #20]
 8009d56:	ee07 3a90 	vmov	s15, r3
 8009d5a:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009d5e:	eddf 6a3d 	vldr	s13, [pc, #244]	; 8009e54 <HAL_RCCEx_GetPLL3ClockFreq+0x2a0>
 8009d62:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009d66:	4b37      	ldr	r3, [pc, #220]	; (8009e44 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009d68:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009d6a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8009d6e:	ee07 3a90 	vmov	s15, r3
 8009d72:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8009d76:	ed97 6a03 	vldr	s12, [r7, #12]
 8009d7a:	eddf 5a34 	vldr	s11, [pc, #208]	; 8009e4c <HAL_RCCEx_GetPLL3ClockFreq+0x298>
 8009d7e:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8009d82:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8009d86:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8009d8a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8009d8e:	ee67 7a27 	vmul.f32	s15, s14, s15
 8009d92:	edc7 7a07 	vstr	s15, [r7, #28]
 8009d96:	bf00      	nop
 8009d98:	4b2a      	ldr	r3, [pc, #168]	; (8009e44 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009d9a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009d9c:	0a5b      	lsrs	r3, r3, #9
 8009d9e:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009da2:	ee07 3a90 	vmov	s15, r3
 8009da6:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009daa:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8009dae:	ee37 7a87 	vadd.f32	s14, s15, s14
 8009db2:	edd7 6a07 	vldr	s13, [r7, #28]
 8009db6:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8009dba:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8009dbe:	ee17 2a90 	vmov	r2, s15
 8009dc2:	687b      	ldr	r3, [r7, #4]
 8009dc4:	601a      	str	r2, [r3, #0]
 8009dc6:	4b1f      	ldr	r3, [pc, #124]	; (8009e44 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009dc8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009dca:	0c1b      	lsrs	r3, r3, #16
 8009dcc:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009dd0:	ee07 3a90 	vmov	s15, r3
 8009dd4:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009dd8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8009ddc:	ee37 7a87 	vadd.f32	s14, s15, s14
 8009de0:	edd7 6a07 	vldr	s13, [r7, #28]
 8009de4:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8009de8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8009dec:	ee17 2a90 	vmov	r2, s15
 8009df0:	687b      	ldr	r3, [r7, #4]
 8009df2:	605a      	str	r2, [r3, #4]
 8009df4:	4b13      	ldr	r3, [pc, #76]	; (8009e44 <HAL_RCCEx_GetPLL3ClockFreq+0x290>)
 8009df6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009df8:	0e1b      	lsrs	r3, r3, #24
 8009dfa:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009dfe:	ee07 3a90 	vmov	s15, r3
 8009e02:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009e06:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8009e0a:	ee37 7a87 	vadd.f32	s14, s15, s14
 8009e0e:	edd7 6a07 	vldr	s13, [r7, #28]
 8009e12:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8009e16:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8009e1a:	ee17 2a90 	vmov	r2, s15
 8009e1e:	687b      	ldr	r3, [r7, #4]
 8009e20:	609a      	str	r2, [r3, #8]
 8009e22:	e008      	b.n	8009e36 <HAL_RCCEx_GetPLL3ClockFreq+0x282>
 8009e24:	687b      	ldr	r3, [r7, #4]
 8009e26:	2200      	movs	r2, #0
 8009e28:	601a      	str	r2, [r3, #0]
 8009e2a:	687b      	ldr	r3, [r7, #4]
 8009e2c:	2200      	movs	r2, #0
 8009e2e:	605a      	str	r2, [r3, #4]
 8009e30:	687b      	ldr	r3, [r7, #4]
 8009e32:	2200      	movs	r2, #0
 8009e34:	609a      	str	r2, [r3, #8]
 8009e36:	bf00      	nop
 8009e38:	3724      	adds	r7, #36	; 0x24
 8009e3a:	46bd      	mov	sp, r7
 8009e3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e40:	4770      	bx	lr
 8009e42:	bf00      	nop
 8009e44:	58024400 	.word	0x58024400
 8009e48:	03d09000 	.word	0x03d09000
 8009e4c:	46000000 	.word	0x46000000
 8009e50:	4c742400 	.word	0x4c742400
 8009e54:	4a742400 	.word	0x4a742400
 8009e58:	4af42400 	.word	0x4af42400

08009e5c <RCCEx_PLL2_Config>:
 8009e5c:	b580      	push	{r7, lr}
 8009e5e:	b084      	sub	sp, #16
 8009e60:	af00      	add	r7, sp, #0
 8009e62:	6078      	str	r0, [r7, #4]
 8009e64:	6039      	str	r1, [r7, #0]
 8009e66:	2300      	movs	r3, #0
 8009e68:	73fb      	strb	r3, [r7, #15]
 8009e6a:	4b53      	ldr	r3, [pc, #332]	; (8009fb8 <RCCEx_PLL2_Config+0x15c>)
 8009e6c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009e6e:	f003 0303 	and.w	r3, r3, #3
 8009e72:	2b03      	cmp	r3, #3
 8009e74:	d101      	bne.n	8009e7a <RCCEx_PLL2_Config+0x1e>
 8009e76:	2301      	movs	r3, #1
 8009e78:	e099      	b.n	8009fae <RCCEx_PLL2_Config+0x152>
 8009e7a:	4b4f      	ldr	r3, [pc, #316]	; (8009fb8 <RCCEx_PLL2_Config+0x15c>)
 8009e7c:	681b      	ldr	r3, [r3, #0]
 8009e7e:	4a4e      	ldr	r2, [pc, #312]	; (8009fb8 <RCCEx_PLL2_Config+0x15c>)
 8009e80:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8009e84:	6013      	str	r3, [r2, #0]
 8009e86:	f7fa fda5 	bl	80049d4 <HAL_GetTick>
 8009e8a:	60b8      	str	r0, [r7, #8]
 8009e8c:	e008      	b.n	8009ea0 <RCCEx_PLL2_Config+0x44>
 8009e8e:	f7fa fda1 	bl	80049d4 <HAL_GetTick>
 8009e92:	4602      	mov	r2, r0
 8009e94:	68bb      	ldr	r3, [r7, #8]
 8009e96:	1ad3      	subs	r3, r2, r3
 8009e98:	2b02      	cmp	r3, #2
 8009e9a:	d901      	bls.n	8009ea0 <RCCEx_PLL2_Config+0x44>
 8009e9c:	2303      	movs	r3, #3
 8009e9e:	e086      	b.n	8009fae <RCCEx_PLL2_Config+0x152>
 8009ea0:	4b45      	ldr	r3, [pc, #276]	; (8009fb8 <RCCEx_PLL2_Config+0x15c>)
 8009ea2:	681b      	ldr	r3, [r3, #0]
 8009ea4:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8009ea8:	2b00      	cmp	r3, #0
 8009eaa:	d1f0      	bne.n	8009e8e <RCCEx_PLL2_Config+0x32>
 8009eac:	4b42      	ldr	r3, [pc, #264]	; (8009fb8 <RCCEx_PLL2_Config+0x15c>)
 8009eae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009eb0:	f423 327c 	bic.w	r2, r3, #258048	; 0x3f000
 8009eb4:	687b      	ldr	r3, [r7, #4]
 8009eb6:	681b      	ldr	r3, [r3, #0]
 8009eb8:	031b      	lsls	r3, r3, #12
 8009eba:	493f      	ldr	r1, [pc, #252]	; (8009fb8 <RCCEx_PLL2_Config+0x15c>)
 8009ebc:	4313      	orrs	r3, r2
 8009ebe:	628b      	str	r3, [r1, #40]	; 0x28
 8009ec0:	687b      	ldr	r3, [r7, #4]
 8009ec2:	685b      	ldr	r3, [r3, #4]
 8009ec4:	3b01      	subs	r3, #1
 8009ec6:	f3c3 0208 	ubfx	r2, r3, #0, #9
 8009eca:	687b      	ldr	r3, [r7, #4]
 8009ecc:	689b      	ldr	r3, [r3, #8]
 8009ece:	3b01      	subs	r3, #1
 8009ed0:	025b      	lsls	r3, r3, #9
 8009ed2:	b29b      	uxth	r3, r3
 8009ed4:	431a      	orrs	r2, r3
 8009ed6:	687b      	ldr	r3, [r7, #4]
 8009ed8:	68db      	ldr	r3, [r3, #12]
 8009eda:	3b01      	subs	r3, #1
 8009edc:	041b      	lsls	r3, r3, #16
 8009ede:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 8009ee2:	431a      	orrs	r2, r3
 8009ee4:	687b      	ldr	r3, [r7, #4]
 8009ee6:	691b      	ldr	r3, [r3, #16]
 8009ee8:	3b01      	subs	r3, #1
 8009eea:	061b      	lsls	r3, r3, #24
 8009eec:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 8009ef0:	4931      	ldr	r1, [pc, #196]	; (8009fb8 <RCCEx_PLL2_Config+0x15c>)
 8009ef2:	4313      	orrs	r3, r2
 8009ef4:	638b      	str	r3, [r1, #56]	; 0x38
 8009ef6:	4b30      	ldr	r3, [pc, #192]	; (8009fb8 <RCCEx_PLL2_Config+0x15c>)
 8009ef8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009efa:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 8009efe:	687b      	ldr	r3, [r7, #4]
 8009f00:	695b      	ldr	r3, [r3, #20]
 8009f02:	492d      	ldr	r1, [pc, #180]	; (8009fb8 <RCCEx_PLL2_Config+0x15c>)
 8009f04:	4313      	orrs	r3, r2
 8009f06:	62cb      	str	r3, [r1, #44]	; 0x2c
 8009f08:	4b2b      	ldr	r3, [pc, #172]	; (8009fb8 <RCCEx_PLL2_Config+0x15c>)
 8009f0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009f0c:	f023 0220 	bic.w	r2, r3, #32
 8009f10:	687b      	ldr	r3, [r7, #4]
 8009f12:	699b      	ldr	r3, [r3, #24]
 8009f14:	4928      	ldr	r1, [pc, #160]	; (8009fb8 <RCCEx_PLL2_Config+0x15c>)
 8009f16:	4313      	orrs	r3, r2
 8009f18:	62cb      	str	r3, [r1, #44]	; 0x2c
 8009f1a:	4b27      	ldr	r3, [pc, #156]	; (8009fb8 <RCCEx_PLL2_Config+0x15c>)
 8009f1c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009f1e:	4a26      	ldr	r2, [pc, #152]	; (8009fb8 <RCCEx_PLL2_Config+0x15c>)
 8009f20:	f023 0310 	bic.w	r3, r3, #16
 8009f24:	62d3      	str	r3, [r2, #44]	; 0x2c
 8009f26:	4b24      	ldr	r3, [pc, #144]	; (8009fb8 <RCCEx_PLL2_Config+0x15c>)
 8009f28:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8009f2a:	4b24      	ldr	r3, [pc, #144]	; (8009fbc <RCCEx_PLL2_Config+0x160>)
 8009f2c:	4013      	ands	r3, r2
 8009f2e:	687a      	ldr	r2, [r7, #4]
 8009f30:	69d2      	ldr	r2, [r2, #28]
 8009f32:	00d2      	lsls	r2, r2, #3
 8009f34:	4920      	ldr	r1, [pc, #128]	; (8009fb8 <RCCEx_PLL2_Config+0x15c>)
 8009f36:	4313      	orrs	r3, r2
 8009f38:	63cb      	str	r3, [r1, #60]	; 0x3c
 8009f3a:	4b1f      	ldr	r3, [pc, #124]	; (8009fb8 <RCCEx_PLL2_Config+0x15c>)
 8009f3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009f3e:	4a1e      	ldr	r2, [pc, #120]	; (8009fb8 <RCCEx_PLL2_Config+0x15c>)
 8009f40:	f043 0310 	orr.w	r3, r3, #16
 8009f44:	62d3      	str	r3, [r2, #44]	; 0x2c
 8009f46:	683b      	ldr	r3, [r7, #0]
 8009f48:	2b00      	cmp	r3, #0
 8009f4a:	d106      	bne.n	8009f5a <RCCEx_PLL2_Config+0xfe>
 8009f4c:	4b1a      	ldr	r3, [pc, #104]	; (8009fb8 <RCCEx_PLL2_Config+0x15c>)
 8009f4e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009f50:	4a19      	ldr	r2, [pc, #100]	; (8009fb8 <RCCEx_PLL2_Config+0x15c>)
 8009f52:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8009f56:	62d3      	str	r3, [r2, #44]	; 0x2c
 8009f58:	e00f      	b.n	8009f7a <RCCEx_PLL2_Config+0x11e>
 8009f5a:	683b      	ldr	r3, [r7, #0]
 8009f5c:	2b01      	cmp	r3, #1
 8009f5e:	d106      	bne.n	8009f6e <RCCEx_PLL2_Config+0x112>
 8009f60:	4b15      	ldr	r3, [pc, #84]	; (8009fb8 <RCCEx_PLL2_Config+0x15c>)
 8009f62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009f64:	4a14      	ldr	r2, [pc, #80]	; (8009fb8 <RCCEx_PLL2_Config+0x15c>)
 8009f66:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8009f6a:	62d3      	str	r3, [r2, #44]	; 0x2c
 8009f6c:	e005      	b.n	8009f7a <RCCEx_PLL2_Config+0x11e>
 8009f6e:	4b12      	ldr	r3, [pc, #72]	; (8009fb8 <RCCEx_PLL2_Config+0x15c>)
 8009f70:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009f72:	4a11      	ldr	r2, [pc, #68]	; (8009fb8 <RCCEx_PLL2_Config+0x15c>)
 8009f74:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8009f78:	62d3      	str	r3, [r2, #44]	; 0x2c
 8009f7a:	4b0f      	ldr	r3, [pc, #60]	; (8009fb8 <RCCEx_PLL2_Config+0x15c>)
 8009f7c:	681b      	ldr	r3, [r3, #0]
 8009f7e:	4a0e      	ldr	r2, [pc, #56]	; (8009fb8 <RCCEx_PLL2_Config+0x15c>)
 8009f80:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8009f84:	6013      	str	r3, [r2, #0]
 8009f86:	f7fa fd25 	bl	80049d4 <HAL_GetTick>
 8009f8a:	60b8      	str	r0, [r7, #8]
 8009f8c:	e008      	b.n	8009fa0 <RCCEx_PLL2_Config+0x144>
 8009f8e:	f7fa fd21 	bl	80049d4 <HAL_GetTick>
 8009f92:	4602      	mov	r2, r0
 8009f94:	68bb      	ldr	r3, [r7, #8]
 8009f96:	1ad3      	subs	r3, r2, r3
 8009f98:	2b02      	cmp	r3, #2
 8009f9a:	d901      	bls.n	8009fa0 <RCCEx_PLL2_Config+0x144>
 8009f9c:	2303      	movs	r3, #3
 8009f9e:	e006      	b.n	8009fae <RCCEx_PLL2_Config+0x152>
 8009fa0:	4b05      	ldr	r3, [pc, #20]	; (8009fb8 <RCCEx_PLL2_Config+0x15c>)
 8009fa2:	681b      	ldr	r3, [r3, #0]
 8009fa4:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8009fa8:	2b00      	cmp	r3, #0
 8009faa:	d0f0      	beq.n	8009f8e <RCCEx_PLL2_Config+0x132>
 8009fac:	7bfb      	ldrb	r3, [r7, #15]
 8009fae:	4618      	mov	r0, r3
 8009fb0:	3710      	adds	r7, #16
 8009fb2:	46bd      	mov	sp, r7
 8009fb4:	bd80      	pop	{r7, pc}
 8009fb6:	bf00      	nop
 8009fb8:	58024400 	.word	0x58024400
 8009fbc:	ffff0007 	.word	0xffff0007

08009fc0 <RCCEx_PLL3_Config>:
 8009fc0:	b580      	push	{r7, lr}
 8009fc2:	b084      	sub	sp, #16
 8009fc4:	af00      	add	r7, sp, #0
 8009fc6:	6078      	str	r0, [r7, #4]
 8009fc8:	6039      	str	r1, [r7, #0]
 8009fca:	2300      	movs	r3, #0
 8009fcc:	73fb      	strb	r3, [r7, #15]
 8009fce:	4b53      	ldr	r3, [pc, #332]	; (800a11c <RCCEx_PLL3_Config+0x15c>)
 8009fd0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009fd2:	f003 0303 	and.w	r3, r3, #3
 8009fd6:	2b03      	cmp	r3, #3
 8009fd8:	d101      	bne.n	8009fde <RCCEx_PLL3_Config+0x1e>
 8009fda:	2301      	movs	r3, #1
 8009fdc:	e099      	b.n	800a112 <RCCEx_PLL3_Config+0x152>
 8009fde:	4b4f      	ldr	r3, [pc, #316]	; (800a11c <RCCEx_PLL3_Config+0x15c>)
 8009fe0:	681b      	ldr	r3, [r3, #0]
 8009fe2:	4a4e      	ldr	r2, [pc, #312]	; (800a11c <RCCEx_PLL3_Config+0x15c>)
 8009fe4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8009fe8:	6013      	str	r3, [r2, #0]
 8009fea:	f7fa fcf3 	bl	80049d4 <HAL_GetTick>
 8009fee:	60b8      	str	r0, [r7, #8]
 8009ff0:	e008      	b.n	800a004 <RCCEx_PLL3_Config+0x44>
 8009ff2:	f7fa fcef 	bl	80049d4 <HAL_GetTick>
 8009ff6:	4602      	mov	r2, r0
 8009ff8:	68bb      	ldr	r3, [r7, #8]
 8009ffa:	1ad3      	subs	r3, r2, r3
 8009ffc:	2b02      	cmp	r3, #2
 8009ffe:	d901      	bls.n	800a004 <RCCEx_PLL3_Config+0x44>
 800a000:	2303      	movs	r3, #3
 800a002:	e086      	b.n	800a112 <RCCEx_PLL3_Config+0x152>
 800a004:	4b45      	ldr	r3, [pc, #276]	; (800a11c <RCCEx_PLL3_Config+0x15c>)
 800a006:	681b      	ldr	r3, [r3, #0]
 800a008:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800a00c:	2b00      	cmp	r3, #0
 800a00e:	d1f0      	bne.n	8009ff2 <RCCEx_PLL3_Config+0x32>
 800a010:	4b42      	ldr	r3, [pc, #264]	; (800a11c <RCCEx_PLL3_Config+0x15c>)
 800a012:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a014:	f023 727c 	bic.w	r2, r3, #66060288	; 0x3f00000
 800a018:	687b      	ldr	r3, [r7, #4]
 800a01a:	681b      	ldr	r3, [r3, #0]
 800a01c:	051b      	lsls	r3, r3, #20
 800a01e:	493f      	ldr	r1, [pc, #252]	; (800a11c <RCCEx_PLL3_Config+0x15c>)
 800a020:	4313      	orrs	r3, r2
 800a022:	628b      	str	r3, [r1, #40]	; 0x28
 800a024:	687b      	ldr	r3, [r7, #4]
 800a026:	685b      	ldr	r3, [r3, #4]
 800a028:	3b01      	subs	r3, #1
 800a02a:	f3c3 0208 	ubfx	r2, r3, #0, #9
 800a02e:	687b      	ldr	r3, [r7, #4]
 800a030:	689b      	ldr	r3, [r3, #8]
 800a032:	3b01      	subs	r3, #1
 800a034:	025b      	lsls	r3, r3, #9
 800a036:	b29b      	uxth	r3, r3
 800a038:	431a      	orrs	r2, r3
 800a03a:	687b      	ldr	r3, [r7, #4]
 800a03c:	68db      	ldr	r3, [r3, #12]
 800a03e:	3b01      	subs	r3, #1
 800a040:	041b      	lsls	r3, r3, #16
 800a042:	f403 03fe 	and.w	r3, r3, #8323072	; 0x7f0000
 800a046:	431a      	orrs	r2, r3
 800a048:	687b      	ldr	r3, [r7, #4]
 800a04a:	691b      	ldr	r3, [r3, #16]
 800a04c:	3b01      	subs	r3, #1
 800a04e:	061b      	lsls	r3, r3, #24
 800a050:	f003 43fe 	and.w	r3, r3, #2130706432	; 0x7f000000
 800a054:	4931      	ldr	r1, [pc, #196]	; (800a11c <RCCEx_PLL3_Config+0x15c>)
 800a056:	4313      	orrs	r3, r2
 800a058:	640b      	str	r3, [r1, #64]	; 0x40
 800a05a:	4b30      	ldr	r3, [pc, #192]	; (800a11c <RCCEx_PLL3_Config+0x15c>)
 800a05c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a05e:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 800a062:	687b      	ldr	r3, [r7, #4]
 800a064:	695b      	ldr	r3, [r3, #20]
 800a066:	492d      	ldr	r1, [pc, #180]	; (800a11c <RCCEx_PLL3_Config+0x15c>)
 800a068:	4313      	orrs	r3, r2
 800a06a:	62cb      	str	r3, [r1, #44]	; 0x2c
 800a06c:	4b2b      	ldr	r3, [pc, #172]	; (800a11c <RCCEx_PLL3_Config+0x15c>)
 800a06e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a070:	f423 7200 	bic.w	r2, r3, #512	; 0x200
 800a074:	687b      	ldr	r3, [r7, #4]
 800a076:	699b      	ldr	r3, [r3, #24]
 800a078:	4928      	ldr	r1, [pc, #160]	; (800a11c <RCCEx_PLL3_Config+0x15c>)
 800a07a:	4313      	orrs	r3, r2
 800a07c:	62cb      	str	r3, [r1, #44]	; 0x2c
 800a07e:	4b27      	ldr	r3, [pc, #156]	; (800a11c <RCCEx_PLL3_Config+0x15c>)
 800a080:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a082:	4a26      	ldr	r2, [pc, #152]	; (800a11c <RCCEx_PLL3_Config+0x15c>)
 800a084:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800a088:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a08a:	4b24      	ldr	r3, [pc, #144]	; (800a11c <RCCEx_PLL3_Config+0x15c>)
 800a08c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800a08e:	4b24      	ldr	r3, [pc, #144]	; (800a120 <RCCEx_PLL3_Config+0x160>)
 800a090:	4013      	ands	r3, r2
 800a092:	687a      	ldr	r2, [r7, #4]
 800a094:	69d2      	ldr	r2, [r2, #28]
 800a096:	00d2      	lsls	r2, r2, #3
 800a098:	4920      	ldr	r1, [pc, #128]	; (800a11c <RCCEx_PLL3_Config+0x15c>)
 800a09a:	4313      	orrs	r3, r2
 800a09c:	644b      	str	r3, [r1, #68]	; 0x44
 800a09e:	4b1f      	ldr	r3, [pc, #124]	; (800a11c <RCCEx_PLL3_Config+0x15c>)
 800a0a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a0a2:	4a1e      	ldr	r2, [pc, #120]	; (800a11c <RCCEx_PLL3_Config+0x15c>)
 800a0a4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a0a8:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a0aa:	683b      	ldr	r3, [r7, #0]
 800a0ac:	2b00      	cmp	r3, #0
 800a0ae:	d106      	bne.n	800a0be <RCCEx_PLL3_Config+0xfe>
 800a0b0:	4b1a      	ldr	r3, [pc, #104]	; (800a11c <RCCEx_PLL3_Config+0x15c>)
 800a0b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a0b4:	4a19      	ldr	r2, [pc, #100]	; (800a11c <RCCEx_PLL3_Config+0x15c>)
 800a0b6:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
 800a0ba:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a0bc:	e00f      	b.n	800a0de <RCCEx_PLL3_Config+0x11e>
 800a0be:	683b      	ldr	r3, [r7, #0]
 800a0c0:	2b01      	cmp	r3, #1
 800a0c2:	d106      	bne.n	800a0d2 <RCCEx_PLL3_Config+0x112>
 800a0c4:	4b15      	ldr	r3, [pc, #84]	; (800a11c <RCCEx_PLL3_Config+0x15c>)
 800a0c6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a0c8:	4a14      	ldr	r2, [pc, #80]	; (800a11c <RCCEx_PLL3_Config+0x15c>)
 800a0ca:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 800a0ce:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a0d0:	e005      	b.n	800a0de <RCCEx_PLL3_Config+0x11e>
 800a0d2:	4b12      	ldr	r3, [pc, #72]	; (800a11c <RCCEx_PLL3_Config+0x15c>)
 800a0d4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a0d6:	4a11      	ldr	r2, [pc, #68]	; (800a11c <RCCEx_PLL3_Config+0x15c>)
 800a0d8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800a0dc:	62d3      	str	r3, [r2, #44]	; 0x2c
 800a0de:	4b0f      	ldr	r3, [pc, #60]	; (800a11c <RCCEx_PLL3_Config+0x15c>)
 800a0e0:	681b      	ldr	r3, [r3, #0]
 800a0e2:	4a0e      	ldr	r2, [pc, #56]	; (800a11c <RCCEx_PLL3_Config+0x15c>)
 800a0e4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800a0e8:	6013      	str	r3, [r2, #0]
 800a0ea:	f7fa fc73 	bl	80049d4 <HAL_GetTick>
 800a0ee:	60b8      	str	r0, [r7, #8]
 800a0f0:	e008      	b.n	800a104 <RCCEx_PLL3_Config+0x144>
 800a0f2:	f7fa fc6f 	bl	80049d4 <HAL_GetTick>
 800a0f6:	4602      	mov	r2, r0
 800a0f8:	68bb      	ldr	r3, [r7, #8]
 800a0fa:	1ad3      	subs	r3, r2, r3
 800a0fc:	2b02      	cmp	r3, #2
 800a0fe:	d901      	bls.n	800a104 <RCCEx_PLL3_Config+0x144>
 800a100:	2303      	movs	r3, #3
 800a102:	e006      	b.n	800a112 <RCCEx_PLL3_Config+0x152>
 800a104:	4b05      	ldr	r3, [pc, #20]	; (800a11c <RCCEx_PLL3_Config+0x15c>)
 800a106:	681b      	ldr	r3, [r3, #0]
 800a108:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800a10c:	2b00      	cmp	r3, #0
 800a10e:	d0f0      	beq.n	800a0f2 <RCCEx_PLL3_Config+0x132>
 800a110:	7bfb      	ldrb	r3, [r7, #15]
 800a112:	4618      	mov	r0, r3
 800a114:	3710      	adds	r7, #16
 800a116:	46bd      	mov	sp, r7
 800a118:	bd80      	pop	{r7, pc}
 800a11a:	bf00      	nop
 800a11c:	58024400 	.word	0x58024400
 800a120:	ffff0007 	.word	0xffff0007

0800a124 <HAL_TIM_Base_Init>:
 800a124:	b580      	push	{r7, lr}
 800a126:	b082      	sub	sp, #8
 800a128:	af00      	add	r7, sp, #0
 800a12a:	6078      	str	r0, [r7, #4]
 800a12c:	687b      	ldr	r3, [r7, #4]
 800a12e:	2b00      	cmp	r3, #0
 800a130:	d101      	bne.n	800a136 <HAL_TIM_Base_Init+0x12>
 800a132:	2301      	movs	r3, #1
 800a134:	e049      	b.n	800a1ca <HAL_TIM_Base_Init+0xa6>
 800a136:	687b      	ldr	r3, [r7, #4]
 800a138:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a13c:	b2db      	uxtb	r3, r3
 800a13e:	2b00      	cmp	r3, #0
 800a140:	d106      	bne.n	800a150 <HAL_TIM_Base_Init+0x2c>
 800a142:	687b      	ldr	r3, [r7, #4]
 800a144:	2200      	movs	r2, #0
 800a146:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a14a:	6878      	ldr	r0, [r7, #4]
 800a14c:	f7f9 ffa2 	bl	8004094 <HAL_TIM_Base_MspInit>
 800a150:	687b      	ldr	r3, [r7, #4]
 800a152:	2202      	movs	r2, #2
 800a154:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a158:	687b      	ldr	r3, [r7, #4]
 800a15a:	681a      	ldr	r2, [r3, #0]
 800a15c:	687b      	ldr	r3, [r7, #4]
 800a15e:	3304      	adds	r3, #4
 800a160:	4619      	mov	r1, r3
 800a162:	4610      	mov	r0, r2
 800a164:	f000 fe0c 	bl	800ad80 <TIM_Base_SetConfig>
 800a168:	687b      	ldr	r3, [r7, #4]
 800a16a:	2201      	movs	r2, #1
 800a16c:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 800a170:	687b      	ldr	r3, [r7, #4]
 800a172:	2201      	movs	r2, #1
 800a174:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a178:	687b      	ldr	r3, [r7, #4]
 800a17a:	2201      	movs	r2, #1
 800a17c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a180:	687b      	ldr	r3, [r7, #4]
 800a182:	2201      	movs	r2, #1
 800a184:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a188:	687b      	ldr	r3, [r7, #4]
 800a18a:	2201      	movs	r2, #1
 800a18c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a190:	687b      	ldr	r3, [r7, #4]
 800a192:	2201      	movs	r2, #1
 800a194:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a198:	687b      	ldr	r3, [r7, #4]
 800a19a:	2201      	movs	r2, #1
 800a19c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a1a0:	687b      	ldr	r3, [r7, #4]
 800a1a2:	2201      	movs	r2, #1
 800a1a4:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a1a8:	687b      	ldr	r3, [r7, #4]
 800a1aa:	2201      	movs	r2, #1
 800a1ac:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a1b0:	687b      	ldr	r3, [r7, #4]
 800a1b2:	2201      	movs	r2, #1
 800a1b4:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800a1b8:	687b      	ldr	r3, [r7, #4]
 800a1ba:	2201      	movs	r2, #1
 800a1bc:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 800a1c0:	687b      	ldr	r3, [r7, #4]
 800a1c2:	2201      	movs	r2, #1
 800a1c4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a1c8:	2300      	movs	r3, #0
 800a1ca:	4618      	mov	r0, r3
 800a1cc:	3708      	adds	r7, #8
 800a1ce:	46bd      	mov	sp, r7
 800a1d0:	bd80      	pop	{r7, pc}
	...

0800a1d4 <HAL_TIM_Base_Start_IT>:
 800a1d4:	b480      	push	{r7}
 800a1d6:	b085      	sub	sp, #20
 800a1d8:	af00      	add	r7, sp, #0
 800a1da:	6078      	str	r0, [r7, #4]
 800a1dc:	687b      	ldr	r3, [r7, #4]
 800a1de:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a1e2:	b2db      	uxtb	r3, r3
 800a1e4:	2b01      	cmp	r3, #1
 800a1e6:	d001      	beq.n	800a1ec <HAL_TIM_Base_Start_IT+0x18>
 800a1e8:	2301      	movs	r3, #1
 800a1ea:	e05e      	b.n	800a2aa <HAL_TIM_Base_Start_IT+0xd6>
 800a1ec:	687b      	ldr	r3, [r7, #4]
 800a1ee:	2202      	movs	r2, #2
 800a1f0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a1f4:	687b      	ldr	r3, [r7, #4]
 800a1f6:	681b      	ldr	r3, [r3, #0]
 800a1f8:	68da      	ldr	r2, [r3, #12]
 800a1fa:	687b      	ldr	r3, [r7, #4]
 800a1fc:	681b      	ldr	r3, [r3, #0]
 800a1fe:	f042 0201 	orr.w	r2, r2, #1
 800a202:	60da      	str	r2, [r3, #12]
 800a204:	687b      	ldr	r3, [r7, #4]
 800a206:	681b      	ldr	r3, [r3, #0]
 800a208:	4a2b      	ldr	r2, [pc, #172]	; (800a2b8 <HAL_TIM_Base_Start_IT+0xe4>)
 800a20a:	4293      	cmp	r3, r2
 800a20c:	d02c      	beq.n	800a268 <HAL_TIM_Base_Start_IT+0x94>
 800a20e:	687b      	ldr	r3, [r7, #4]
 800a210:	681b      	ldr	r3, [r3, #0]
 800a212:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a216:	d027      	beq.n	800a268 <HAL_TIM_Base_Start_IT+0x94>
 800a218:	687b      	ldr	r3, [r7, #4]
 800a21a:	681b      	ldr	r3, [r3, #0]
 800a21c:	4a27      	ldr	r2, [pc, #156]	; (800a2bc <HAL_TIM_Base_Start_IT+0xe8>)
 800a21e:	4293      	cmp	r3, r2
 800a220:	d022      	beq.n	800a268 <HAL_TIM_Base_Start_IT+0x94>
 800a222:	687b      	ldr	r3, [r7, #4]
 800a224:	681b      	ldr	r3, [r3, #0]
 800a226:	4a26      	ldr	r2, [pc, #152]	; (800a2c0 <HAL_TIM_Base_Start_IT+0xec>)
 800a228:	4293      	cmp	r3, r2
 800a22a:	d01d      	beq.n	800a268 <HAL_TIM_Base_Start_IT+0x94>
 800a22c:	687b      	ldr	r3, [r7, #4]
 800a22e:	681b      	ldr	r3, [r3, #0]
 800a230:	4a24      	ldr	r2, [pc, #144]	; (800a2c4 <HAL_TIM_Base_Start_IT+0xf0>)
 800a232:	4293      	cmp	r3, r2
 800a234:	d018      	beq.n	800a268 <HAL_TIM_Base_Start_IT+0x94>
 800a236:	687b      	ldr	r3, [r7, #4]
 800a238:	681b      	ldr	r3, [r3, #0]
 800a23a:	4a23      	ldr	r2, [pc, #140]	; (800a2c8 <HAL_TIM_Base_Start_IT+0xf4>)
 800a23c:	4293      	cmp	r3, r2
 800a23e:	d013      	beq.n	800a268 <HAL_TIM_Base_Start_IT+0x94>
 800a240:	687b      	ldr	r3, [r7, #4]
 800a242:	681b      	ldr	r3, [r3, #0]
 800a244:	4a21      	ldr	r2, [pc, #132]	; (800a2cc <HAL_TIM_Base_Start_IT+0xf8>)
 800a246:	4293      	cmp	r3, r2
 800a248:	d00e      	beq.n	800a268 <HAL_TIM_Base_Start_IT+0x94>
 800a24a:	687b      	ldr	r3, [r7, #4]
 800a24c:	681b      	ldr	r3, [r3, #0]
 800a24e:	4a20      	ldr	r2, [pc, #128]	; (800a2d0 <HAL_TIM_Base_Start_IT+0xfc>)
 800a250:	4293      	cmp	r3, r2
 800a252:	d009      	beq.n	800a268 <HAL_TIM_Base_Start_IT+0x94>
 800a254:	687b      	ldr	r3, [r7, #4]
 800a256:	681b      	ldr	r3, [r3, #0]
 800a258:	4a1e      	ldr	r2, [pc, #120]	; (800a2d4 <HAL_TIM_Base_Start_IT+0x100>)
 800a25a:	4293      	cmp	r3, r2
 800a25c:	d004      	beq.n	800a268 <HAL_TIM_Base_Start_IT+0x94>
 800a25e:	687b      	ldr	r3, [r7, #4]
 800a260:	681b      	ldr	r3, [r3, #0]
 800a262:	4a1d      	ldr	r2, [pc, #116]	; (800a2d8 <HAL_TIM_Base_Start_IT+0x104>)
 800a264:	4293      	cmp	r3, r2
 800a266:	d115      	bne.n	800a294 <HAL_TIM_Base_Start_IT+0xc0>
 800a268:	687b      	ldr	r3, [r7, #4]
 800a26a:	681b      	ldr	r3, [r3, #0]
 800a26c:	689a      	ldr	r2, [r3, #8]
 800a26e:	4b1b      	ldr	r3, [pc, #108]	; (800a2dc <HAL_TIM_Base_Start_IT+0x108>)
 800a270:	4013      	ands	r3, r2
 800a272:	60fb      	str	r3, [r7, #12]
 800a274:	68fb      	ldr	r3, [r7, #12]
 800a276:	2b06      	cmp	r3, #6
 800a278:	d015      	beq.n	800a2a6 <HAL_TIM_Base_Start_IT+0xd2>
 800a27a:	68fb      	ldr	r3, [r7, #12]
 800a27c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800a280:	d011      	beq.n	800a2a6 <HAL_TIM_Base_Start_IT+0xd2>
 800a282:	687b      	ldr	r3, [r7, #4]
 800a284:	681b      	ldr	r3, [r3, #0]
 800a286:	681a      	ldr	r2, [r3, #0]
 800a288:	687b      	ldr	r3, [r7, #4]
 800a28a:	681b      	ldr	r3, [r3, #0]
 800a28c:	f042 0201 	orr.w	r2, r2, #1
 800a290:	601a      	str	r2, [r3, #0]
 800a292:	e008      	b.n	800a2a6 <HAL_TIM_Base_Start_IT+0xd2>
 800a294:	687b      	ldr	r3, [r7, #4]
 800a296:	681b      	ldr	r3, [r3, #0]
 800a298:	681a      	ldr	r2, [r3, #0]
 800a29a:	687b      	ldr	r3, [r7, #4]
 800a29c:	681b      	ldr	r3, [r3, #0]
 800a29e:	f042 0201 	orr.w	r2, r2, #1
 800a2a2:	601a      	str	r2, [r3, #0]
 800a2a4:	e000      	b.n	800a2a8 <HAL_TIM_Base_Start_IT+0xd4>
 800a2a6:	bf00      	nop
 800a2a8:	2300      	movs	r3, #0
 800a2aa:	4618      	mov	r0, r3
 800a2ac:	3714      	adds	r7, #20
 800a2ae:	46bd      	mov	sp, r7
 800a2b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a2b4:	4770      	bx	lr
 800a2b6:	bf00      	nop
 800a2b8:	40010000 	.word	0x40010000
 800a2bc:	40000400 	.word	0x40000400
 800a2c0:	40000800 	.word	0x40000800
 800a2c4:	40000c00 	.word	0x40000c00
 800a2c8:	40010400 	.word	0x40010400
 800a2cc:	40001800 	.word	0x40001800
 800a2d0:	40014000 	.word	0x40014000
 800a2d4:	4000e000 	.word	0x4000e000
 800a2d8:	4000e400 	.word	0x4000e400
 800a2dc:	00010007 	.word	0x00010007

0800a2e0 <HAL_TIM_PWM_Init>:
 800a2e0:	b580      	push	{r7, lr}
 800a2e2:	b082      	sub	sp, #8
 800a2e4:	af00      	add	r7, sp, #0
 800a2e6:	6078      	str	r0, [r7, #4]
 800a2e8:	687b      	ldr	r3, [r7, #4]
 800a2ea:	2b00      	cmp	r3, #0
 800a2ec:	d101      	bne.n	800a2f2 <HAL_TIM_PWM_Init+0x12>
 800a2ee:	2301      	movs	r3, #1
 800a2f0:	e049      	b.n	800a386 <HAL_TIM_PWM_Init+0xa6>
 800a2f2:	687b      	ldr	r3, [r7, #4]
 800a2f4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a2f8:	b2db      	uxtb	r3, r3
 800a2fa:	2b00      	cmp	r3, #0
 800a2fc:	d106      	bne.n	800a30c <HAL_TIM_PWM_Init+0x2c>
 800a2fe:	687b      	ldr	r3, [r7, #4]
 800a300:	2200      	movs	r2, #0
 800a302:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a306:	6878      	ldr	r0, [r7, #4]
 800a308:	f7f9 fe7c 	bl	8004004 <HAL_TIM_PWM_MspInit>
 800a30c:	687b      	ldr	r3, [r7, #4]
 800a30e:	2202      	movs	r2, #2
 800a310:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a314:	687b      	ldr	r3, [r7, #4]
 800a316:	681a      	ldr	r2, [r3, #0]
 800a318:	687b      	ldr	r3, [r7, #4]
 800a31a:	3304      	adds	r3, #4
 800a31c:	4619      	mov	r1, r3
 800a31e:	4610      	mov	r0, r2
 800a320:	f000 fd2e 	bl	800ad80 <TIM_Base_SetConfig>
 800a324:	687b      	ldr	r3, [r7, #4]
 800a326:	2201      	movs	r2, #1
 800a328:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 800a32c:	687b      	ldr	r3, [r7, #4]
 800a32e:	2201      	movs	r2, #1
 800a330:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a334:	687b      	ldr	r3, [r7, #4]
 800a336:	2201      	movs	r2, #1
 800a338:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a33c:	687b      	ldr	r3, [r7, #4]
 800a33e:	2201      	movs	r2, #1
 800a340:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a344:	687b      	ldr	r3, [r7, #4]
 800a346:	2201      	movs	r2, #1
 800a348:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a34c:	687b      	ldr	r3, [r7, #4]
 800a34e:	2201      	movs	r2, #1
 800a350:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a354:	687b      	ldr	r3, [r7, #4]
 800a356:	2201      	movs	r2, #1
 800a358:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a35c:	687b      	ldr	r3, [r7, #4]
 800a35e:	2201      	movs	r2, #1
 800a360:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a364:	687b      	ldr	r3, [r7, #4]
 800a366:	2201      	movs	r2, #1
 800a368:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a36c:	687b      	ldr	r3, [r7, #4]
 800a36e:	2201      	movs	r2, #1
 800a370:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800a374:	687b      	ldr	r3, [r7, #4]
 800a376:	2201      	movs	r2, #1
 800a378:	f883 2047 	strb.w	r2, [r3, #71]	; 0x47
 800a37c:	687b      	ldr	r3, [r7, #4]
 800a37e:	2201      	movs	r2, #1
 800a380:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a384:	2300      	movs	r3, #0
 800a386:	4618      	mov	r0, r3
 800a388:	3708      	adds	r7, #8
 800a38a:	46bd      	mov	sp, r7
 800a38c:	bd80      	pop	{r7, pc}
	...

0800a390 <HAL_TIM_PWM_Start_IT>:
 800a390:	b580      	push	{r7, lr}
 800a392:	b084      	sub	sp, #16
 800a394:	af00      	add	r7, sp, #0
 800a396:	6078      	str	r0, [r7, #4]
 800a398:	6039      	str	r1, [r7, #0]
 800a39a:	2300      	movs	r3, #0
 800a39c:	73fb      	strb	r3, [r7, #15]
 800a39e:	683b      	ldr	r3, [r7, #0]
 800a3a0:	2b00      	cmp	r3, #0
 800a3a2:	d109      	bne.n	800a3b8 <HAL_TIM_PWM_Start_IT+0x28>
 800a3a4:	687b      	ldr	r3, [r7, #4]
 800a3a6:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800a3aa:	b2db      	uxtb	r3, r3
 800a3ac:	2b01      	cmp	r3, #1
 800a3ae:	bf14      	ite	ne
 800a3b0:	2301      	movne	r3, #1
 800a3b2:	2300      	moveq	r3, #0
 800a3b4:	b2db      	uxtb	r3, r3
 800a3b6:	e03c      	b.n	800a432 <HAL_TIM_PWM_Start_IT+0xa2>
 800a3b8:	683b      	ldr	r3, [r7, #0]
 800a3ba:	2b04      	cmp	r3, #4
 800a3bc:	d109      	bne.n	800a3d2 <HAL_TIM_PWM_Start_IT+0x42>
 800a3be:	687b      	ldr	r3, [r7, #4]
 800a3c0:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800a3c4:	b2db      	uxtb	r3, r3
 800a3c6:	2b01      	cmp	r3, #1
 800a3c8:	bf14      	ite	ne
 800a3ca:	2301      	movne	r3, #1
 800a3cc:	2300      	moveq	r3, #0
 800a3ce:	b2db      	uxtb	r3, r3
 800a3d0:	e02f      	b.n	800a432 <HAL_TIM_PWM_Start_IT+0xa2>
 800a3d2:	683b      	ldr	r3, [r7, #0]
 800a3d4:	2b08      	cmp	r3, #8
 800a3d6:	d109      	bne.n	800a3ec <HAL_TIM_PWM_Start_IT+0x5c>
 800a3d8:	687b      	ldr	r3, [r7, #4]
 800a3da:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800a3de:	b2db      	uxtb	r3, r3
 800a3e0:	2b01      	cmp	r3, #1
 800a3e2:	bf14      	ite	ne
 800a3e4:	2301      	movne	r3, #1
 800a3e6:	2300      	moveq	r3, #0
 800a3e8:	b2db      	uxtb	r3, r3
 800a3ea:	e022      	b.n	800a432 <HAL_TIM_PWM_Start_IT+0xa2>
 800a3ec:	683b      	ldr	r3, [r7, #0]
 800a3ee:	2b0c      	cmp	r3, #12
 800a3f0:	d109      	bne.n	800a406 <HAL_TIM_PWM_Start_IT+0x76>
 800a3f2:	687b      	ldr	r3, [r7, #4]
 800a3f4:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800a3f8:	b2db      	uxtb	r3, r3
 800a3fa:	2b01      	cmp	r3, #1
 800a3fc:	bf14      	ite	ne
 800a3fe:	2301      	movne	r3, #1
 800a400:	2300      	moveq	r3, #0
 800a402:	b2db      	uxtb	r3, r3
 800a404:	e015      	b.n	800a432 <HAL_TIM_PWM_Start_IT+0xa2>
 800a406:	683b      	ldr	r3, [r7, #0]
 800a408:	2b10      	cmp	r3, #16
 800a40a:	d109      	bne.n	800a420 <HAL_TIM_PWM_Start_IT+0x90>
 800a40c:	687b      	ldr	r3, [r7, #4]
 800a40e:	f893 3042 	ldrb.w	r3, [r3, #66]	; 0x42
 800a412:	b2db      	uxtb	r3, r3
 800a414:	2b01      	cmp	r3, #1
 800a416:	bf14      	ite	ne
 800a418:	2301      	movne	r3, #1
 800a41a:	2300      	moveq	r3, #0
 800a41c:	b2db      	uxtb	r3, r3
 800a41e:	e008      	b.n	800a432 <HAL_TIM_PWM_Start_IT+0xa2>
 800a420:	687b      	ldr	r3, [r7, #4]
 800a422:	f893 3043 	ldrb.w	r3, [r3, #67]	; 0x43
 800a426:	b2db      	uxtb	r3, r3
 800a428:	2b01      	cmp	r3, #1
 800a42a:	bf14      	ite	ne
 800a42c:	2301      	movne	r3, #1
 800a42e:	2300      	moveq	r3, #0
 800a430:	b2db      	uxtb	r3, r3
 800a432:	2b00      	cmp	r3, #0
 800a434:	d001      	beq.n	800a43a <HAL_TIM_PWM_Start_IT+0xaa>
 800a436:	2301      	movs	r3, #1
 800a438:	e0f6      	b.n	800a628 <HAL_TIM_PWM_Start_IT+0x298>
 800a43a:	683b      	ldr	r3, [r7, #0]
 800a43c:	2b00      	cmp	r3, #0
 800a43e:	d104      	bne.n	800a44a <HAL_TIM_PWM_Start_IT+0xba>
 800a440:	687b      	ldr	r3, [r7, #4]
 800a442:	2202      	movs	r2, #2
 800a444:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a448:	e023      	b.n	800a492 <HAL_TIM_PWM_Start_IT+0x102>
 800a44a:	683b      	ldr	r3, [r7, #0]
 800a44c:	2b04      	cmp	r3, #4
 800a44e:	d104      	bne.n	800a45a <HAL_TIM_PWM_Start_IT+0xca>
 800a450:	687b      	ldr	r3, [r7, #4]
 800a452:	2202      	movs	r2, #2
 800a454:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a458:	e01b      	b.n	800a492 <HAL_TIM_PWM_Start_IT+0x102>
 800a45a:	683b      	ldr	r3, [r7, #0]
 800a45c:	2b08      	cmp	r3, #8
 800a45e:	d104      	bne.n	800a46a <HAL_TIM_PWM_Start_IT+0xda>
 800a460:	687b      	ldr	r3, [r7, #4]
 800a462:	2202      	movs	r2, #2
 800a464:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800a468:	e013      	b.n	800a492 <HAL_TIM_PWM_Start_IT+0x102>
 800a46a:	683b      	ldr	r3, [r7, #0]
 800a46c:	2b0c      	cmp	r3, #12
 800a46e:	d104      	bne.n	800a47a <HAL_TIM_PWM_Start_IT+0xea>
 800a470:	687b      	ldr	r3, [r7, #4]
 800a472:	2202      	movs	r2, #2
 800a474:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800a478:	e00b      	b.n	800a492 <HAL_TIM_PWM_Start_IT+0x102>
 800a47a:	683b      	ldr	r3, [r7, #0]
 800a47c:	2b10      	cmp	r3, #16
 800a47e:	d104      	bne.n	800a48a <HAL_TIM_PWM_Start_IT+0xfa>
 800a480:	687b      	ldr	r3, [r7, #4]
 800a482:	2202      	movs	r2, #2
 800a484:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 800a488:	e003      	b.n	800a492 <HAL_TIM_PWM_Start_IT+0x102>
 800a48a:	687b      	ldr	r3, [r7, #4]
 800a48c:	2202      	movs	r2, #2
 800a48e:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a492:	683b      	ldr	r3, [r7, #0]
 800a494:	2b0c      	cmp	r3, #12
 800a496:	d841      	bhi.n	800a51c <HAL_TIM_PWM_Start_IT+0x18c>
 800a498:	a201      	add	r2, pc, #4	; (adr r2, 800a4a0 <HAL_TIM_PWM_Start_IT+0x110>)
 800a49a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800a49e:	bf00      	nop
 800a4a0:	0800a4d5 	.word	0x0800a4d5
 800a4a4:	0800a51d 	.word	0x0800a51d
 800a4a8:	0800a51d 	.word	0x0800a51d
 800a4ac:	0800a51d 	.word	0x0800a51d
 800a4b0:	0800a4e7 	.word	0x0800a4e7
 800a4b4:	0800a51d 	.word	0x0800a51d
 800a4b8:	0800a51d 	.word	0x0800a51d
 800a4bc:	0800a51d 	.word	0x0800a51d
 800a4c0:	0800a4f9 	.word	0x0800a4f9
 800a4c4:	0800a51d 	.word	0x0800a51d
 800a4c8:	0800a51d 	.word	0x0800a51d
 800a4cc:	0800a51d 	.word	0x0800a51d
 800a4d0:	0800a50b 	.word	0x0800a50b
 800a4d4:	687b      	ldr	r3, [r7, #4]
 800a4d6:	681b      	ldr	r3, [r3, #0]
 800a4d8:	68da      	ldr	r2, [r3, #12]
 800a4da:	687b      	ldr	r3, [r7, #4]
 800a4dc:	681b      	ldr	r3, [r3, #0]
 800a4de:	f042 0202 	orr.w	r2, r2, #2
 800a4e2:	60da      	str	r2, [r3, #12]
 800a4e4:	e01d      	b.n	800a522 <HAL_TIM_PWM_Start_IT+0x192>
 800a4e6:	687b      	ldr	r3, [r7, #4]
 800a4e8:	681b      	ldr	r3, [r3, #0]
 800a4ea:	68da      	ldr	r2, [r3, #12]
 800a4ec:	687b      	ldr	r3, [r7, #4]
 800a4ee:	681b      	ldr	r3, [r3, #0]
 800a4f0:	f042 0204 	orr.w	r2, r2, #4
 800a4f4:	60da      	str	r2, [r3, #12]
 800a4f6:	e014      	b.n	800a522 <HAL_TIM_PWM_Start_IT+0x192>
 800a4f8:	687b      	ldr	r3, [r7, #4]
 800a4fa:	681b      	ldr	r3, [r3, #0]
 800a4fc:	68da      	ldr	r2, [r3, #12]
 800a4fe:	687b      	ldr	r3, [r7, #4]
 800a500:	681b      	ldr	r3, [r3, #0]
 800a502:	f042 0208 	orr.w	r2, r2, #8
 800a506:	60da      	str	r2, [r3, #12]
 800a508:	e00b      	b.n	800a522 <HAL_TIM_PWM_Start_IT+0x192>
 800a50a:	687b      	ldr	r3, [r7, #4]
 800a50c:	681b      	ldr	r3, [r3, #0]
 800a50e:	68da      	ldr	r2, [r3, #12]
 800a510:	687b      	ldr	r3, [r7, #4]
 800a512:	681b      	ldr	r3, [r3, #0]
 800a514:	f042 0210 	orr.w	r2, r2, #16
 800a518:	60da      	str	r2, [r3, #12]
 800a51a:	e002      	b.n	800a522 <HAL_TIM_PWM_Start_IT+0x192>
 800a51c:	2301      	movs	r3, #1
 800a51e:	73fb      	strb	r3, [r7, #15]
 800a520:	bf00      	nop
 800a522:	7bfb      	ldrb	r3, [r7, #15]
 800a524:	2b00      	cmp	r3, #0
 800a526:	d17e      	bne.n	800a626 <HAL_TIM_PWM_Start_IT+0x296>
 800a528:	687b      	ldr	r3, [r7, #4]
 800a52a:	681b      	ldr	r3, [r3, #0]
 800a52c:	2201      	movs	r2, #1
 800a52e:	6839      	ldr	r1, [r7, #0]
 800a530:	4618      	mov	r0, r3
 800a532:	f000 ffa1 	bl	800b478 <TIM_CCxChannelCmd>
 800a536:	687b      	ldr	r3, [r7, #4]
 800a538:	681b      	ldr	r3, [r3, #0]
 800a53a:	4a3d      	ldr	r2, [pc, #244]	; (800a630 <HAL_TIM_PWM_Start_IT+0x2a0>)
 800a53c:	4293      	cmp	r3, r2
 800a53e:	d013      	beq.n	800a568 <HAL_TIM_PWM_Start_IT+0x1d8>
 800a540:	687b      	ldr	r3, [r7, #4]
 800a542:	681b      	ldr	r3, [r3, #0]
 800a544:	4a3b      	ldr	r2, [pc, #236]	; (800a634 <HAL_TIM_PWM_Start_IT+0x2a4>)
 800a546:	4293      	cmp	r3, r2
 800a548:	d00e      	beq.n	800a568 <HAL_TIM_PWM_Start_IT+0x1d8>
 800a54a:	687b      	ldr	r3, [r7, #4]
 800a54c:	681b      	ldr	r3, [r3, #0]
 800a54e:	4a3a      	ldr	r2, [pc, #232]	; (800a638 <HAL_TIM_PWM_Start_IT+0x2a8>)
 800a550:	4293      	cmp	r3, r2
 800a552:	d009      	beq.n	800a568 <HAL_TIM_PWM_Start_IT+0x1d8>
 800a554:	687b      	ldr	r3, [r7, #4]
 800a556:	681b      	ldr	r3, [r3, #0]
 800a558:	4a38      	ldr	r2, [pc, #224]	; (800a63c <HAL_TIM_PWM_Start_IT+0x2ac>)
 800a55a:	4293      	cmp	r3, r2
 800a55c:	d004      	beq.n	800a568 <HAL_TIM_PWM_Start_IT+0x1d8>
 800a55e:	687b      	ldr	r3, [r7, #4]
 800a560:	681b      	ldr	r3, [r3, #0]
 800a562:	4a37      	ldr	r2, [pc, #220]	; (800a640 <HAL_TIM_PWM_Start_IT+0x2b0>)
 800a564:	4293      	cmp	r3, r2
 800a566:	d101      	bne.n	800a56c <HAL_TIM_PWM_Start_IT+0x1dc>
 800a568:	2301      	movs	r3, #1
 800a56a:	e000      	b.n	800a56e <HAL_TIM_PWM_Start_IT+0x1de>
 800a56c:	2300      	movs	r3, #0
 800a56e:	2b00      	cmp	r3, #0
 800a570:	d007      	beq.n	800a582 <HAL_TIM_PWM_Start_IT+0x1f2>
 800a572:	687b      	ldr	r3, [r7, #4]
 800a574:	681b      	ldr	r3, [r3, #0]
 800a576:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800a578:	687b      	ldr	r3, [r7, #4]
 800a57a:	681b      	ldr	r3, [r3, #0]
 800a57c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800a580:	645a      	str	r2, [r3, #68]	; 0x44
 800a582:	687b      	ldr	r3, [r7, #4]
 800a584:	681b      	ldr	r3, [r3, #0]
 800a586:	4a2a      	ldr	r2, [pc, #168]	; (800a630 <HAL_TIM_PWM_Start_IT+0x2a0>)
 800a588:	4293      	cmp	r3, r2
 800a58a:	d02c      	beq.n	800a5e6 <HAL_TIM_PWM_Start_IT+0x256>
 800a58c:	687b      	ldr	r3, [r7, #4]
 800a58e:	681b      	ldr	r3, [r3, #0]
 800a590:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800a594:	d027      	beq.n	800a5e6 <HAL_TIM_PWM_Start_IT+0x256>
 800a596:	687b      	ldr	r3, [r7, #4]
 800a598:	681b      	ldr	r3, [r3, #0]
 800a59a:	4a2a      	ldr	r2, [pc, #168]	; (800a644 <HAL_TIM_PWM_Start_IT+0x2b4>)
 800a59c:	4293      	cmp	r3, r2
 800a59e:	d022      	beq.n	800a5e6 <HAL_TIM_PWM_Start_IT+0x256>
 800a5a0:	687b      	ldr	r3, [r7, #4]
 800a5a2:	681b      	ldr	r3, [r3, #0]
 800a5a4:	4a28      	ldr	r2, [pc, #160]	; (800a648 <HAL_TIM_PWM_Start_IT+0x2b8>)
 800a5a6:	4293      	cmp	r3, r2
 800a5a8:	d01d      	beq.n	800a5e6 <HAL_TIM_PWM_Start_IT+0x256>
 800a5aa:	687b      	ldr	r3, [r7, #4]
 800a5ac:	681b      	ldr	r3, [r3, #0]
 800a5ae:	4a27      	ldr	r2, [pc, #156]	; (800a64c <HAL_TIM_PWM_Start_IT+0x2bc>)
 800a5b0:	4293      	cmp	r3, r2
 800a5b2:	d018      	beq.n	800a5e6 <HAL_TIM_PWM_Start_IT+0x256>
 800a5b4:	687b      	ldr	r3, [r7, #4]
 800a5b6:	681b      	ldr	r3, [r3, #0]
 800a5b8:	4a1e      	ldr	r2, [pc, #120]	; (800a634 <HAL_TIM_PWM_Start_IT+0x2a4>)
 800a5ba:	4293      	cmp	r3, r2
 800a5bc:	d013      	beq.n	800a5e6 <HAL_TIM_PWM_Start_IT+0x256>
 800a5be:	687b      	ldr	r3, [r7, #4]
 800a5c0:	681b      	ldr	r3, [r3, #0]
 800a5c2:	4a23      	ldr	r2, [pc, #140]	; (800a650 <HAL_TIM_PWM_Start_IT+0x2c0>)
 800a5c4:	4293      	cmp	r3, r2
 800a5c6:	d00e      	beq.n	800a5e6 <HAL_TIM_PWM_Start_IT+0x256>
 800a5c8:	687b      	ldr	r3, [r7, #4]
 800a5ca:	681b      	ldr	r3, [r3, #0]
 800a5cc:	4a1a      	ldr	r2, [pc, #104]	; (800a638 <HAL_TIM_PWM_Start_IT+0x2a8>)
 800a5ce:	4293      	cmp	r3, r2
 800a5d0:	d009      	beq.n	800a5e6 <HAL_TIM_PWM_Start_IT+0x256>
 800a5d2:	687b      	ldr	r3, [r7, #4]
 800a5d4:	681b      	ldr	r3, [r3, #0]
 800a5d6:	4a1f      	ldr	r2, [pc, #124]	; (800a654 <HAL_TIM_PWM_Start_IT+0x2c4>)
 800a5d8:	4293      	cmp	r3, r2
 800a5da:	d004      	beq.n	800a5e6 <HAL_TIM_PWM_Start_IT+0x256>
 800a5dc:	687b      	ldr	r3, [r7, #4]
 800a5de:	681b      	ldr	r3, [r3, #0]
 800a5e0:	4a1d      	ldr	r2, [pc, #116]	; (800a658 <HAL_TIM_PWM_Start_IT+0x2c8>)
 800a5e2:	4293      	cmp	r3, r2
 800a5e4:	d115      	bne.n	800a612 <HAL_TIM_PWM_Start_IT+0x282>
 800a5e6:	687b      	ldr	r3, [r7, #4]
 800a5e8:	681b      	ldr	r3, [r3, #0]
 800a5ea:	689a      	ldr	r2, [r3, #8]
 800a5ec:	4b1b      	ldr	r3, [pc, #108]	; (800a65c <HAL_TIM_PWM_Start_IT+0x2cc>)
 800a5ee:	4013      	ands	r3, r2
 800a5f0:	60bb      	str	r3, [r7, #8]
 800a5f2:	68bb      	ldr	r3, [r7, #8]
 800a5f4:	2b06      	cmp	r3, #6
 800a5f6:	d015      	beq.n	800a624 <HAL_TIM_PWM_Start_IT+0x294>
 800a5f8:	68bb      	ldr	r3, [r7, #8]
 800a5fa:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800a5fe:	d011      	beq.n	800a624 <HAL_TIM_PWM_Start_IT+0x294>
 800a600:	687b      	ldr	r3, [r7, #4]
 800a602:	681b      	ldr	r3, [r3, #0]
 800a604:	681a      	ldr	r2, [r3, #0]
 800a606:	687b      	ldr	r3, [r7, #4]
 800a608:	681b      	ldr	r3, [r3, #0]
 800a60a:	f042 0201 	orr.w	r2, r2, #1
 800a60e:	601a      	str	r2, [r3, #0]
 800a610:	e008      	b.n	800a624 <HAL_TIM_PWM_Start_IT+0x294>
 800a612:	687b      	ldr	r3, [r7, #4]
 800a614:	681b      	ldr	r3, [r3, #0]
 800a616:	681a      	ldr	r2, [r3, #0]
 800a618:	687b      	ldr	r3, [r7, #4]
 800a61a:	681b      	ldr	r3, [r3, #0]
 800a61c:	f042 0201 	orr.w	r2, r2, #1
 800a620:	601a      	str	r2, [r3, #0]
 800a622:	e000      	b.n	800a626 <HAL_TIM_PWM_Start_IT+0x296>
 800a624:	bf00      	nop
 800a626:	7bfb      	ldrb	r3, [r7, #15]
 800a628:	4618      	mov	r0, r3
 800a62a:	3710      	adds	r7, #16
 800a62c:	46bd      	mov	sp, r7
 800a62e:	bd80      	pop	{r7, pc}
 800a630:	40010000 	.word	0x40010000
 800a634:	40010400 	.word	0x40010400
 800a638:	40014000 	.word	0x40014000
 800a63c:	40014400 	.word	0x40014400
 800a640:	40014800 	.word	0x40014800
 800a644:	40000400 	.word	0x40000400
 800a648:	40000800 	.word	0x40000800
 800a64c:	40000c00 	.word	0x40000c00
 800a650:	40001800 	.word	0x40001800
 800a654:	4000e000 	.word	0x4000e000
 800a658:	4000e400 	.word	0x4000e400
 800a65c:	00010007 	.word	0x00010007

0800a660 <HAL_TIM_Encoder_Init>:
 800a660:	b580      	push	{r7, lr}
 800a662:	b086      	sub	sp, #24
 800a664:	af00      	add	r7, sp, #0
 800a666:	6078      	str	r0, [r7, #4]
 800a668:	6039      	str	r1, [r7, #0]
 800a66a:	687b      	ldr	r3, [r7, #4]
 800a66c:	2b00      	cmp	r3, #0
 800a66e:	d101      	bne.n	800a674 <HAL_TIM_Encoder_Init+0x14>
 800a670:	2301      	movs	r3, #1
 800a672:	e08f      	b.n	800a794 <HAL_TIM_Encoder_Init+0x134>
 800a674:	687b      	ldr	r3, [r7, #4]
 800a676:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a67a:	b2db      	uxtb	r3, r3
 800a67c:	2b00      	cmp	r3, #0
 800a67e:	d106      	bne.n	800a68e <HAL_TIM_Encoder_Init+0x2e>
 800a680:	687b      	ldr	r3, [r7, #4]
 800a682:	2200      	movs	r2, #0
 800a684:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a688:	6878      	ldr	r0, [r7, #4]
 800a68a:	f7f9 fbad 	bl	8003de8 <HAL_TIM_Encoder_MspInit>
 800a68e:	687b      	ldr	r3, [r7, #4]
 800a690:	2202      	movs	r2, #2
 800a692:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a696:	687b      	ldr	r3, [r7, #4]
 800a698:	681b      	ldr	r3, [r3, #0]
 800a69a:	6899      	ldr	r1, [r3, #8]
 800a69c:	687b      	ldr	r3, [r7, #4]
 800a69e:	681a      	ldr	r2, [r3, #0]
 800a6a0:	4b3e      	ldr	r3, [pc, #248]	; (800a79c <HAL_TIM_Encoder_Init+0x13c>)
 800a6a2:	400b      	ands	r3, r1
 800a6a4:	6093      	str	r3, [r2, #8]
 800a6a6:	687b      	ldr	r3, [r7, #4]
 800a6a8:	681a      	ldr	r2, [r3, #0]
 800a6aa:	687b      	ldr	r3, [r7, #4]
 800a6ac:	3304      	adds	r3, #4
 800a6ae:	4619      	mov	r1, r3
 800a6b0:	4610      	mov	r0, r2
 800a6b2:	f000 fb65 	bl	800ad80 <TIM_Base_SetConfig>
 800a6b6:	687b      	ldr	r3, [r7, #4]
 800a6b8:	681b      	ldr	r3, [r3, #0]
 800a6ba:	689b      	ldr	r3, [r3, #8]
 800a6bc:	617b      	str	r3, [r7, #20]
 800a6be:	687b      	ldr	r3, [r7, #4]
 800a6c0:	681b      	ldr	r3, [r3, #0]
 800a6c2:	699b      	ldr	r3, [r3, #24]
 800a6c4:	613b      	str	r3, [r7, #16]
 800a6c6:	687b      	ldr	r3, [r7, #4]
 800a6c8:	681b      	ldr	r3, [r3, #0]
 800a6ca:	6a1b      	ldr	r3, [r3, #32]
 800a6cc:	60fb      	str	r3, [r7, #12]
 800a6ce:	683b      	ldr	r3, [r7, #0]
 800a6d0:	681b      	ldr	r3, [r3, #0]
 800a6d2:	697a      	ldr	r2, [r7, #20]
 800a6d4:	4313      	orrs	r3, r2
 800a6d6:	617b      	str	r3, [r7, #20]
 800a6d8:	693a      	ldr	r2, [r7, #16]
 800a6da:	4b31      	ldr	r3, [pc, #196]	; (800a7a0 <HAL_TIM_Encoder_Init+0x140>)
 800a6dc:	4013      	ands	r3, r2
 800a6de:	613b      	str	r3, [r7, #16]
 800a6e0:	683b      	ldr	r3, [r7, #0]
 800a6e2:	689a      	ldr	r2, [r3, #8]
 800a6e4:	683b      	ldr	r3, [r7, #0]
 800a6e6:	699b      	ldr	r3, [r3, #24]
 800a6e8:	021b      	lsls	r3, r3, #8
 800a6ea:	4313      	orrs	r3, r2
 800a6ec:	693a      	ldr	r2, [r7, #16]
 800a6ee:	4313      	orrs	r3, r2
 800a6f0:	613b      	str	r3, [r7, #16]
 800a6f2:	693a      	ldr	r2, [r7, #16]
 800a6f4:	4b2b      	ldr	r3, [pc, #172]	; (800a7a4 <HAL_TIM_Encoder_Init+0x144>)
 800a6f6:	4013      	ands	r3, r2
 800a6f8:	613b      	str	r3, [r7, #16]
 800a6fa:	693a      	ldr	r2, [r7, #16]
 800a6fc:	4b2a      	ldr	r3, [pc, #168]	; (800a7a8 <HAL_TIM_Encoder_Init+0x148>)
 800a6fe:	4013      	ands	r3, r2
 800a700:	613b      	str	r3, [r7, #16]
 800a702:	683b      	ldr	r3, [r7, #0]
 800a704:	68da      	ldr	r2, [r3, #12]
 800a706:	683b      	ldr	r3, [r7, #0]
 800a708:	69db      	ldr	r3, [r3, #28]
 800a70a:	021b      	lsls	r3, r3, #8
 800a70c:	4313      	orrs	r3, r2
 800a70e:	693a      	ldr	r2, [r7, #16]
 800a710:	4313      	orrs	r3, r2
 800a712:	613b      	str	r3, [r7, #16]
 800a714:	683b      	ldr	r3, [r7, #0]
 800a716:	691b      	ldr	r3, [r3, #16]
 800a718:	011a      	lsls	r2, r3, #4
 800a71a:	683b      	ldr	r3, [r7, #0]
 800a71c:	6a1b      	ldr	r3, [r3, #32]
 800a71e:	031b      	lsls	r3, r3, #12
 800a720:	4313      	orrs	r3, r2
 800a722:	693a      	ldr	r2, [r7, #16]
 800a724:	4313      	orrs	r3, r2
 800a726:	613b      	str	r3, [r7, #16]
 800a728:	68fb      	ldr	r3, [r7, #12]
 800a72a:	f023 0322 	bic.w	r3, r3, #34	; 0x22
 800a72e:	60fb      	str	r3, [r7, #12]
 800a730:	68fb      	ldr	r3, [r7, #12]
 800a732:	f023 0388 	bic.w	r3, r3, #136	; 0x88
 800a736:	60fb      	str	r3, [r7, #12]
 800a738:	683b      	ldr	r3, [r7, #0]
 800a73a:	685a      	ldr	r2, [r3, #4]
 800a73c:	683b      	ldr	r3, [r7, #0]
 800a73e:	695b      	ldr	r3, [r3, #20]
 800a740:	011b      	lsls	r3, r3, #4
 800a742:	4313      	orrs	r3, r2
 800a744:	68fa      	ldr	r2, [r7, #12]
 800a746:	4313      	orrs	r3, r2
 800a748:	60fb      	str	r3, [r7, #12]
 800a74a:	687b      	ldr	r3, [r7, #4]
 800a74c:	681b      	ldr	r3, [r3, #0]
 800a74e:	697a      	ldr	r2, [r7, #20]
 800a750:	609a      	str	r2, [r3, #8]
 800a752:	687b      	ldr	r3, [r7, #4]
 800a754:	681b      	ldr	r3, [r3, #0]
 800a756:	693a      	ldr	r2, [r7, #16]
 800a758:	619a      	str	r2, [r3, #24]
 800a75a:	687b      	ldr	r3, [r7, #4]
 800a75c:	681b      	ldr	r3, [r3, #0]
 800a75e:	68fa      	ldr	r2, [r7, #12]
 800a760:	621a      	str	r2, [r3, #32]
 800a762:	687b      	ldr	r3, [r7, #4]
 800a764:	2201      	movs	r2, #1
 800a766:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 800a76a:	687b      	ldr	r3, [r7, #4]
 800a76c:	2201      	movs	r2, #1
 800a76e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a772:	687b      	ldr	r3, [r7, #4]
 800a774:	2201      	movs	r2, #1
 800a776:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a77a:	687b      	ldr	r3, [r7, #4]
 800a77c:	2201      	movs	r2, #1
 800a77e:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a782:	687b      	ldr	r3, [r7, #4]
 800a784:	2201      	movs	r2, #1
 800a786:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a78a:	687b      	ldr	r3, [r7, #4]
 800a78c:	2201      	movs	r2, #1
 800a78e:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a792:	2300      	movs	r3, #0
 800a794:	4618      	mov	r0, r3
 800a796:	3718      	adds	r7, #24
 800a798:	46bd      	mov	sp, r7
 800a79a:	bd80      	pop	{r7, pc}
 800a79c:	fffebff8 	.word	0xfffebff8
 800a7a0:	fffffcfc 	.word	0xfffffcfc
 800a7a4:	fffff3f3 	.word	0xfffff3f3
 800a7a8:	ffff0f0f 	.word	0xffff0f0f

0800a7ac <HAL_TIM_Encoder_Start>:
 800a7ac:	b580      	push	{r7, lr}
 800a7ae:	b084      	sub	sp, #16
 800a7b0:	af00      	add	r7, sp, #0
 800a7b2:	6078      	str	r0, [r7, #4]
 800a7b4:	6039      	str	r1, [r7, #0]
 800a7b6:	687b      	ldr	r3, [r7, #4]
 800a7b8:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 800a7bc:	73fb      	strb	r3, [r7, #15]
 800a7be:	687b      	ldr	r3, [r7, #4]
 800a7c0:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800a7c4:	73bb      	strb	r3, [r7, #14]
 800a7c6:	687b      	ldr	r3, [r7, #4]
 800a7c8:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800a7cc:	737b      	strb	r3, [r7, #13]
 800a7ce:	687b      	ldr	r3, [r7, #4]
 800a7d0:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800a7d4:	733b      	strb	r3, [r7, #12]
 800a7d6:	683b      	ldr	r3, [r7, #0]
 800a7d8:	2b00      	cmp	r3, #0
 800a7da:	d110      	bne.n	800a7fe <HAL_TIM_Encoder_Start+0x52>
 800a7dc:	7bfb      	ldrb	r3, [r7, #15]
 800a7de:	2b01      	cmp	r3, #1
 800a7e0:	d102      	bne.n	800a7e8 <HAL_TIM_Encoder_Start+0x3c>
 800a7e2:	7b7b      	ldrb	r3, [r7, #13]
 800a7e4:	2b01      	cmp	r3, #1
 800a7e6:	d001      	beq.n	800a7ec <HAL_TIM_Encoder_Start+0x40>
 800a7e8:	2301      	movs	r3, #1
 800a7ea:	e069      	b.n	800a8c0 <HAL_TIM_Encoder_Start+0x114>
 800a7ec:	687b      	ldr	r3, [r7, #4]
 800a7ee:	2202      	movs	r2, #2
 800a7f0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a7f4:	687b      	ldr	r3, [r7, #4]
 800a7f6:	2202      	movs	r2, #2
 800a7f8:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a7fc:	e031      	b.n	800a862 <HAL_TIM_Encoder_Start+0xb6>
 800a7fe:	683b      	ldr	r3, [r7, #0]
 800a800:	2b04      	cmp	r3, #4
 800a802:	d110      	bne.n	800a826 <HAL_TIM_Encoder_Start+0x7a>
 800a804:	7bbb      	ldrb	r3, [r7, #14]
 800a806:	2b01      	cmp	r3, #1
 800a808:	d102      	bne.n	800a810 <HAL_TIM_Encoder_Start+0x64>
 800a80a:	7b3b      	ldrb	r3, [r7, #12]
 800a80c:	2b01      	cmp	r3, #1
 800a80e:	d001      	beq.n	800a814 <HAL_TIM_Encoder_Start+0x68>
 800a810:	2301      	movs	r3, #1
 800a812:	e055      	b.n	800a8c0 <HAL_TIM_Encoder_Start+0x114>
 800a814:	687b      	ldr	r3, [r7, #4]
 800a816:	2202      	movs	r2, #2
 800a818:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a81c:	687b      	ldr	r3, [r7, #4]
 800a81e:	2202      	movs	r2, #2
 800a820:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a824:	e01d      	b.n	800a862 <HAL_TIM_Encoder_Start+0xb6>
 800a826:	7bfb      	ldrb	r3, [r7, #15]
 800a828:	2b01      	cmp	r3, #1
 800a82a:	d108      	bne.n	800a83e <HAL_TIM_Encoder_Start+0x92>
 800a82c:	7bbb      	ldrb	r3, [r7, #14]
 800a82e:	2b01      	cmp	r3, #1
 800a830:	d105      	bne.n	800a83e <HAL_TIM_Encoder_Start+0x92>
 800a832:	7b7b      	ldrb	r3, [r7, #13]
 800a834:	2b01      	cmp	r3, #1
 800a836:	d102      	bne.n	800a83e <HAL_TIM_Encoder_Start+0x92>
 800a838:	7b3b      	ldrb	r3, [r7, #12]
 800a83a:	2b01      	cmp	r3, #1
 800a83c:	d001      	beq.n	800a842 <HAL_TIM_Encoder_Start+0x96>
 800a83e:	2301      	movs	r3, #1
 800a840:	e03e      	b.n	800a8c0 <HAL_TIM_Encoder_Start+0x114>
 800a842:	687b      	ldr	r3, [r7, #4]
 800a844:	2202      	movs	r2, #2
 800a846:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800a84a:	687b      	ldr	r3, [r7, #4]
 800a84c:	2202      	movs	r2, #2
 800a84e:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800a852:	687b      	ldr	r3, [r7, #4]
 800a854:	2202      	movs	r2, #2
 800a856:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800a85a:	687b      	ldr	r3, [r7, #4]
 800a85c:	2202      	movs	r2, #2
 800a85e:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800a862:	683b      	ldr	r3, [r7, #0]
 800a864:	2b00      	cmp	r3, #0
 800a866:	d003      	beq.n	800a870 <HAL_TIM_Encoder_Start+0xc4>
 800a868:	683b      	ldr	r3, [r7, #0]
 800a86a:	2b04      	cmp	r3, #4
 800a86c:	d008      	beq.n	800a880 <HAL_TIM_Encoder_Start+0xd4>
 800a86e:	e00f      	b.n	800a890 <HAL_TIM_Encoder_Start+0xe4>
 800a870:	687b      	ldr	r3, [r7, #4]
 800a872:	681b      	ldr	r3, [r3, #0]
 800a874:	2201      	movs	r2, #1
 800a876:	2100      	movs	r1, #0
 800a878:	4618      	mov	r0, r3
 800a87a:	f000 fdfd 	bl	800b478 <TIM_CCxChannelCmd>
 800a87e:	e016      	b.n	800a8ae <HAL_TIM_Encoder_Start+0x102>
 800a880:	687b      	ldr	r3, [r7, #4]
 800a882:	681b      	ldr	r3, [r3, #0]
 800a884:	2201      	movs	r2, #1
 800a886:	2104      	movs	r1, #4
 800a888:	4618      	mov	r0, r3
 800a88a:	f000 fdf5 	bl	800b478 <TIM_CCxChannelCmd>
 800a88e:	e00e      	b.n	800a8ae <HAL_TIM_Encoder_Start+0x102>
 800a890:	687b      	ldr	r3, [r7, #4]
 800a892:	681b      	ldr	r3, [r3, #0]
 800a894:	2201      	movs	r2, #1
 800a896:	2100      	movs	r1, #0
 800a898:	4618      	mov	r0, r3
 800a89a:	f000 fded 	bl	800b478 <TIM_CCxChannelCmd>
 800a89e:	687b      	ldr	r3, [r7, #4]
 800a8a0:	681b      	ldr	r3, [r3, #0]
 800a8a2:	2201      	movs	r2, #1
 800a8a4:	2104      	movs	r1, #4
 800a8a6:	4618      	mov	r0, r3
 800a8a8:	f000 fde6 	bl	800b478 <TIM_CCxChannelCmd>
 800a8ac:	bf00      	nop
 800a8ae:	687b      	ldr	r3, [r7, #4]
 800a8b0:	681b      	ldr	r3, [r3, #0]
 800a8b2:	681a      	ldr	r2, [r3, #0]
 800a8b4:	687b      	ldr	r3, [r7, #4]
 800a8b6:	681b      	ldr	r3, [r3, #0]
 800a8b8:	f042 0201 	orr.w	r2, r2, #1
 800a8bc:	601a      	str	r2, [r3, #0]
 800a8be:	2300      	movs	r3, #0
 800a8c0:	4618      	mov	r0, r3
 800a8c2:	3710      	adds	r7, #16
 800a8c4:	46bd      	mov	sp, r7
 800a8c6:	bd80      	pop	{r7, pc}

0800a8c8 <HAL_TIM_IRQHandler>:
 800a8c8:	b580      	push	{r7, lr}
 800a8ca:	b082      	sub	sp, #8
 800a8cc:	af00      	add	r7, sp, #0
 800a8ce:	6078      	str	r0, [r7, #4]
 800a8d0:	687b      	ldr	r3, [r7, #4]
 800a8d2:	681b      	ldr	r3, [r3, #0]
 800a8d4:	691b      	ldr	r3, [r3, #16]
 800a8d6:	f003 0302 	and.w	r3, r3, #2
 800a8da:	2b02      	cmp	r3, #2
 800a8dc:	d122      	bne.n	800a924 <HAL_TIM_IRQHandler+0x5c>
 800a8de:	687b      	ldr	r3, [r7, #4]
 800a8e0:	681b      	ldr	r3, [r3, #0]
 800a8e2:	68db      	ldr	r3, [r3, #12]
 800a8e4:	f003 0302 	and.w	r3, r3, #2
 800a8e8:	2b02      	cmp	r3, #2
 800a8ea:	d11b      	bne.n	800a924 <HAL_TIM_IRQHandler+0x5c>
 800a8ec:	687b      	ldr	r3, [r7, #4]
 800a8ee:	681b      	ldr	r3, [r3, #0]
 800a8f0:	f06f 0202 	mvn.w	r2, #2
 800a8f4:	611a      	str	r2, [r3, #16]
 800a8f6:	687b      	ldr	r3, [r7, #4]
 800a8f8:	2201      	movs	r2, #1
 800a8fa:	771a      	strb	r2, [r3, #28]
 800a8fc:	687b      	ldr	r3, [r7, #4]
 800a8fe:	681b      	ldr	r3, [r3, #0]
 800a900:	699b      	ldr	r3, [r3, #24]
 800a902:	f003 0303 	and.w	r3, r3, #3
 800a906:	2b00      	cmp	r3, #0
 800a908:	d003      	beq.n	800a912 <HAL_TIM_IRQHandler+0x4a>
 800a90a:	6878      	ldr	r0, [r7, #4]
 800a90c:	f000 fa1a 	bl	800ad44 <HAL_TIM_IC_CaptureCallback>
 800a910:	e005      	b.n	800a91e <HAL_TIM_IRQHandler+0x56>
 800a912:	6878      	ldr	r0, [r7, #4]
 800a914:	f000 fa0c 	bl	800ad30 <HAL_TIM_OC_DelayElapsedCallback>
 800a918:	6878      	ldr	r0, [r7, #4]
 800a91a:	f000 fa1d 	bl	800ad58 <HAL_TIM_PWM_PulseFinishedCallback>
 800a91e:	687b      	ldr	r3, [r7, #4]
 800a920:	2200      	movs	r2, #0
 800a922:	771a      	strb	r2, [r3, #28]
 800a924:	687b      	ldr	r3, [r7, #4]
 800a926:	681b      	ldr	r3, [r3, #0]
 800a928:	691b      	ldr	r3, [r3, #16]
 800a92a:	f003 0304 	and.w	r3, r3, #4
 800a92e:	2b04      	cmp	r3, #4
 800a930:	d122      	bne.n	800a978 <HAL_TIM_IRQHandler+0xb0>
 800a932:	687b      	ldr	r3, [r7, #4]
 800a934:	681b      	ldr	r3, [r3, #0]
 800a936:	68db      	ldr	r3, [r3, #12]
 800a938:	f003 0304 	and.w	r3, r3, #4
 800a93c:	2b04      	cmp	r3, #4
 800a93e:	d11b      	bne.n	800a978 <HAL_TIM_IRQHandler+0xb0>
 800a940:	687b      	ldr	r3, [r7, #4]
 800a942:	681b      	ldr	r3, [r3, #0]
 800a944:	f06f 0204 	mvn.w	r2, #4
 800a948:	611a      	str	r2, [r3, #16]
 800a94a:	687b      	ldr	r3, [r7, #4]
 800a94c:	2202      	movs	r2, #2
 800a94e:	771a      	strb	r2, [r3, #28]
 800a950:	687b      	ldr	r3, [r7, #4]
 800a952:	681b      	ldr	r3, [r3, #0]
 800a954:	699b      	ldr	r3, [r3, #24]
 800a956:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800a95a:	2b00      	cmp	r3, #0
 800a95c:	d003      	beq.n	800a966 <HAL_TIM_IRQHandler+0x9e>
 800a95e:	6878      	ldr	r0, [r7, #4]
 800a960:	f000 f9f0 	bl	800ad44 <HAL_TIM_IC_CaptureCallback>
 800a964:	e005      	b.n	800a972 <HAL_TIM_IRQHandler+0xaa>
 800a966:	6878      	ldr	r0, [r7, #4]
 800a968:	f000 f9e2 	bl	800ad30 <HAL_TIM_OC_DelayElapsedCallback>
 800a96c:	6878      	ldr	r0, [r7, #4]
 800a96e:	f000 f9f3 	bl	800ad58 <HAL_TIM_PWM_PulseFinishedCallback>
 800a972:	687b      	ldr	r3, [r7, #4]
 800a974:	2200      	movs	r2, #0
 800a976:	771a      	strb	r2, [r3, #28]
 800a978:	687b      	ldr	r3, [r7, #4]
 800a97a:	681b      	ldr	r3, [r3, #0]
 800a97c:	691b      	ldr	r3, [r3, #16]
 800a97e:	f003 0308 	and.w	r3, r3, #8
 800a982:	2b08      	cmp	r3, #8
 800a984:	d122      	bne.n	800a9cc <HAL_TIM_IRQHandler+0x104>
 800a986:	687b      	ldr	r3, [r7, #4]
 800a988:	681b      	ldr	r3, [r3, #0]
 800a98a:	68db      	ldr	r3, [r3, #12]
 800a98c:	f003 0308 	and.w	r3, r3, #8
 800a990:	2b08      	cmp	r3, #8
 800a992:	d11b      	bne.n	800a9cc <HAL_TIM_IRQHandler+0x104>
 800a994:	687b      	ldr	r3, [r7, #4]
 800a996:	681b      	ldr	r3, [r3, #0]
 800a998:	f06f 0208 	mvn.w	r2, #8
 800a99c:	611a      	str	r2, [r3, #16]
 800a99e:	687b      	ldr	r3, [r7, #4]
 800a9a0:	2204      	movs	r2, #4
 800a9a2:	771a      	strb	r2, [r3, #28]
 800a9a4:	687b      	ldr	r3, [r7, #4]
 800a9a6:	681b      	ldr	r3, [r3, #0]
 800a9a8:	69db      	ldr	r3, [r3, #28]
 800a9aa:	f003 0303 	and.w	r3, r3, #3
 800a9ae:	2b00      	cmp	r3, #0
 800a9b0:	d003      	beq.n	800a9ba <HAL_TIM_IRQHandler+0xf2>
 800a9b2:	6878      	ldr	r0, [r7, #4]
 800a9b4:	f000 f9c6 	bl	800ad44 <HAL_TIM_IC_CaptureCallback>
 800a9b8:	e005      	b.n	800a9c6 <HAL_TIM_IRQHandler+0xfe>
 800a9ba:	6878      	ldr	r0, [r7, #4]
 800a9bc:	f000 f9b8 	bl	800ad30 <HAL_TIM_OC_DelayElapsedCallback>
 800a9c0:	6878      	ldr	r0, [r7, #4]
 800a9c2:	f000 f9c9 	bl	800ad58 <HAL_TIM_PWM_PulseFinishedCallback>
 800a9c6:	687b      	ldr	r3, [r7, #4]
 800a9c8:	2200      	movs	r2, #0
 800a9ca:	771a      	strb	r2, [r3, #28]
 800a9cc:	687b      	ldr	r3, [r7, #4]
 800a9ce:	681b      	ldr	r3, [r3, #0]
 800a9d0:	691b      	ldr	r3, [r3, #16]
 800a9d2:	f003 0310 	and.w	r3, r3, #16
 800a9d6:	2b10      	cmp	r3, #16
 800a9d8:	d122      	bne.n	800aa20 <HAL_TIM_IRQHandler+0x158>
 800a9da:	687b      	ldr	r3, [r7, #4]
 800a9dc:	681b      	ldr	r3, [r3, #0]
 800a9de:	68db      	ldr	r3, [r3, #12]
 800a9e0:	f003 0310 	and.w	r3, r3, #16
 800a9e4:	2b10      	cmp	r3, #16
 800a9e6:	d11b      	bne.n	800aa20 <HAL_TIM_IRQHandler+0x158>
 800a9e8:	687b      	ldr	r3, [r7, #4]
 800a9ea:	681b      	ldr	r3, [r3, #0]
 800a9ec:	f06f 0210 	mvn.w	r2, #16
 800a9f0:	611a      	str	r2, [r3, #16]
 800a9f2:	687b      	ldr	r3, [r7, #4]
 800a9f4:	2208      	movs	r2, #8
 800a9f6:	771a      	strb	r2, [r3, #28]
 800a9f8:	687b      	ldr	r3, [r7, #4]
 800a9fa:	681b      	ldr	r3, [r3, #0]
 800a9fc:	69db      	ldr	r3, [r3, #28]
 800a9fe:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800aa02:	2b00      	cmp	r3, #0
 800aa04:	d003      	beq.n	800aa0e <HAL_TIM_IRQHandler+0x146>
 800aa06:	6878      	ldr	r0, [r7, #4]
 800aa08:	f000 f99c 	bl	800ad44 <HAL_TIM_IC_CaptureCallback>
 800aa0c:	e005      	b.n	800aa1a <HAL_TIM_IRQHandler+0x152>
 800aa0e:	6878      	ldr	r0, [r7, #4]
 800aa10:	f000 f98e 	bl	800ad30 <HAL_TIM_OC_DelayElapsedCallback>
 800aa14:	6878      	ldr	r0, [r7, #4]
 800aa16:	f000 f99f 	bl	800ad58 <HAL_TIM_PWM_PulseFinishedCallback>
 800aa1a:	687b      	ldr	r3, [r7, #4]
 800aa1c:	2200      	movs	r2, #0
 800aa1e:	771a      	strb	r2, [r3, #28]
 800aa20:	687b      	ldr	r3, [r7, #4]
 800aa22:	681b      	ldr	r3, [r3, #0]
 800aa24:	691b      	ldr	r3, [r3, #16]
 800aa26:	f003 0301 	and.w	r3, r3, #1
 800aa2a:	2b01      	cmp	r3, #1
 800aa2c:	d10e      	bne.n	800aa4c <HAL_TIM_IRQHandler+0x184>
 800aa2e:	687b      	ldr	r3, [r7, #4]
 800aa30:	681b      	ldr	r3, [r3, #0]
 800aa32:	68db      	ldr	r3, [r3, #12]
 800aa34:	f003 0301 	and.w	r3, r3, #1
 800aa38:	2b01      	cmp	r3, #1
 800aa3a:	d107      	bne.n	800aa4c <HAL_TIM_IRQHandler+0x184>
 800aa3c:	687b      	ldr	r3, [r7, #4]
 800aa3e:	681b      	ldr	r3, [r3, #0]
 800aa40:	f06f 0201 	mvn.w	r2, #1
 800aa44:	611a      	str	r2, [r3, #16]
 800aa46:	6878      	ldr	r0, [r7, #4]
 800aa48:	f7f9 fdd0 	bl	80045ec <HAL_TIM_PeriodElapsedCallback>
 800aa4c:	687b      	ldr	r3, [r7, #4]
 800aa4e:	681b      	ldr	r3, [r3, #0]
 800aa50:	691b      	ldr	r3, [r3, #16]
 800aa52:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800aa56:	2b80      	cmp	r3, #128	; 0x80
 800aa58:	d10e      	bne.n	800aa78 <HAL_TIM_IRQHandler+0x1b0>
 800aa5a:	687b      	ldr	r3, [r7, #4]
 800aa5c:	681b      	ldr	r3, [r3, #0]
 800aa5e:	68db      	ldr	r3, [r3, #12]
 800aa60:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800aa64:	2b80      	cmp	r3, #128	; 0x80
 800aa66:	d107      	bne.n	800aa78 <HAL_TIM_IRQHandler+0x1b0>
 800aa68:	687b      	ldr	r3, [r7, #4]
 800aa6a:	681b      	ldr	r3, [r3, #0]
 800aa6c:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800aa70:	611a      	str	r2, [r3, #16]
 800aa72:	6878      	ldr	r0, [r7, #4]
 800aa74:	f000 fe6c 	bl	800b750 <HAL_TIMEx_BreakCallback>
 800aa78:	687b      	ldr	r3, [r7, #4]
 800aa7a:	681b      	ldr	r3, [r3, #0]
 800aa7c:	691b      	ldr	r3, [r3, #16]
 800aa7e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800aa82:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800aa86:	d10e      	bne.n	800aaa6 <HAL_TIM_IRQHandler+0x1de>
 800aa88:	687b      	ldr	r3, [r7, #4]
 800aa8a:	681b      	ldr	r3, [r3, #0]
 800aa8c:	68db      	ldr	r3, [r3, #12]
 800aa8e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800aa92:	2b80      	cmp	r3, #128	; 0x80
 800aa94:	d107      	bne.n	800aaa6 <HAL_TIM_IRQHandler+0x1de>
 800aa96:	687b      	ldr	r3, [r7, #4]
 800aa98:	681b      	ldr	r3, [r3, #0]
 800aa9a:	f46f 7280 	mvn.w	r2, #256	; 0x100
 800aa9e:	611a      	str	r2, [r3, #16]
 800aaa0:	6878      	ldr	r0, [r7, #4]
 800aaa2:	f000 fe5f 	bl	800b764 <HAL_TIMEx_Break2Callback>
 800aaa6:	687b      	ldr	r3, [r7, #4]
 800aaa8:	681b      	ldr	r3, [r3, #0]
 800aaaa:	691b      	ldr	r3, [r3, #16]
 800aaac:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800aab0:	2b40      	cmp	r3, #64	; 0x40
 800aab2:	d10e      	bne.n	800aad2 <HAL_TIM_IRQHandler+0x20a>
 800aab4:	687b      	ldr	r3, [r7, #4]
 800aab6:	681b      	ldr	r3, [r3, #0]
 800aab8:	68db      	ldr	r3, [r3, #12]
 800aaba:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800aabe:	2b40      	cmp	r3, #64	; 0x40
 800aac0:	d107      	bne.n	800aad2 <HAL_TIM_IRQHandler+0x20a>
 800aac2:	687b      	ldr	r3, [r7, #4]
 800aac4:	681b      	ldr	r3, [r3, #0]
 800aac6:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800aaca:	611a      	str	r2, [r3, #16]
 800aacc:	6878      	ldr	r0, [r7, #4]
 800aace:	f000 f94d 	bl	800ad6c <HAL_TIM_TriggerCallback>
 800aad2:	687b      	ldr	r3, [r7, #4]
 800aad4:	681b      	ldr	r3, [r3, #0]
 800aad6:	691b      	ldr	r3, [r3, #16]
 800aad8:	f003 0320 	and.w	r3, r3, #32
 800aadc:	2b20      	cmp	r3, #32
 800aade:	d10e      	bne.n	800aafe <HAL_TIM_IRQHandler+0x236>
 800aae0:	687b      	ldr	r3, [r7, #4]
 800aae2:	681b      	ldr	r3, [r3, #0]
 800aae4:	68db      	ldr	r3, [r3, #12]
 800aae6:	f003 0320 	and.w	r3, r3, #32
 800aaea:	2b20      	cmp	r3, #32
 800aaec:	d107      	bne.n	800aafe <HAL_TIM_IRQHandler+0x236>
 800aaee:	687b      	ldr	r3, [r7, #4]
 800aaf0:	681b      	ldr	r3, [r3, #0]
 800aaf2:	f06f 0220 	mvn.w	r2, #32
 800aaf6:	611a      	str	r2, [r3, #16]
 800aaf8:	6878      	ldr	r0, [r7, #4]
 800aafa:	f000 fe1f 	bl	800b73c <HAL_TIMEx_CommutCallback>
 800aafe:	bf00      	nop
 800ab00:	3708      	adds	r7, #8
 800ab02:	46bd      	mov	sp, r7
 800ab04:	bd80      	pop	{r7, pc}
	...

0800ab08 <HAL_TIM_PWM_ConfigChannel>:
 800ab08:	b580      	push	{r7, lr}
 800ab0a:	b086      	sub	sp, #24
 800ab0c:	af00      	add	r7, sp, #0
 800ab0e:	60f8      	str	r0, [r7, #12]
 800ab10:	60b9      	str	r1, [r7, #8]
 800ab12:	607a      	str	r2, [r7, #4]
 800ab14:	2300      	movs	r3, #0
 800ab16:	75fb      	strb	r3, [r7, #23]
 800ab18:	68fb      	ldr	r3, [r7, #12]
 800ab1a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800ab1e:	2b01      	cmp	r3, #1
 800ab20:	d101      	bne.n	800ab26 <HAL_TIM_PWM_ConfigChannel+0x1e>
 800ab22:	2302      	movs	r3, #2
 800ab24:	e0ff      	b.n	800ad26 <HAL_TIM_PWM_ConfigChannel+0x21e>
 800ab26:	68fb      	ldr	r3, [r7, #12]
 800ab28:	2201      	movs	r2, #1
 800ab2a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800ab2e:	687b      	ldr	r3, [r7, #4]
 800ab30:	2b14      	cmp	r3, #20
 800ab32:	f200 80f0 	bhi.w	800ad16 <HAL_TIM_PWM_ConfigChannel+0x20e>
 800ab36:	a201      	add	r2, pc, #4	; (adr r2, 800ab3c <HAL_TIM_PWM_ConfigChannel+0x34>)
 800ab38:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800ab3c:	0800ab91 	.word	0x0800ab91
 800ab40:	0800ad17 	.word	0x0800ad17
 800ab44:	0800ad17 	.word	0x0800ad17
 800ab48:	0800ad17 	.word	0x0800ad17
 800ab4c:	0800abd1 	.word	0x0800abd1
 800ab50:	0800ad17 	.word	0x0800ad17
 800ab54:	0800ad17 	.word	0x0800ad17
 800ab58:	0800ad17 	.word	0x0800ad17
 800ab5c:	0800ac13 	.word	0x0800ac13
 800ab60:	0800ad17 	.word	0x0800ad17
 800ab64:	0800ad17 	.word	0x0800ad17
 800ab68:	0800ad17 	.word	0x0800ad17
 800ab6c:	0800ac53 	.word	0x0800ac53
 800ab70:	0800ad17 	.word	0x0800ad17
 800ab74:	0800ad17 	.word	0x0800ad17
 800ab78:	0800ad17 	.word	0x0800ad17
 800ab7c:	0800ac95 	.word	0x0800ac95
 800ab80:	0800ad17 	.word	0x0800ad17
 800ab84:	0800ad17 	.word	0x0800ad17
 800ab88:	0800ad17 	.word	0x0800ad17
 800ab8c:	0800acd5 	.word	0x0800acd5
 800ab90:	68fb      	ldr	r3, [r7, #12]
 800ab92:	681b      	ldr	r3, [r3, #0]
 800ab94:	68b9      	ldr	r1, [r7, #8]
 800ab96:	4618      	mov	r0, r3
 800ab98:	f000 f998 	bl	800aecc <TIM_OC1_SetConfig>
 800ab9c:	68fb      	ldr	r3, [r7, #12]
 800ab9e:	681b      	ldr	r3, [r3, #0]
 800aba0:	699a      	ldr	r2, [r3, #24]
 800aba2:	68fb      	ldr	r3, [r7, #12]
 800aba4:	681b      	ldr	r3, [r3, #0]
 800aba6:	f042 0208 	orr.w	r2, r2, #8
 800abaa:	619a      	str	r2, [r3, #24]
 800abac:	68fb      	ldr	r3, [r7, #12]
 800abae:	681b      	ldr	r3, [r3, #0]
 800abb0:	699a      	ldr	r2, [r3, #24]
 800abb2:	68fb      	ldr	r3, [r7, #12]
 800abb4:	681b      	ldr	r3, [r3, #0]
 800abb6:	f022 0204 	bic.w	r2, r2, #4
 800abba:	619a      	str	r2, [r3, #24]
 800abbc:	68fb      	ldr	r3, [r7, #12]
 800abbe:	681b      	ldr	r3, [r3, #0]
 800abc0:	6999      	ldr	r1, [r3, #24]
 800abc2:	68bb      	ldr	r3, [r7, #8]
 800abc4:	691a      	ldr	r2, [r3, #16]
 800abc6:	68fb      	ldr	r3, [r7, #12]
 800abc8:	681b      	ldr	r3, [r3, #0]
 800abca:	430a      	orrs	r2, r1
 800abcc:	619a      	str	r2, [r3, #24]
 800abce:	e0a5      	b.n	800ad1c <HAL_TIM_PWM_ConfigChannel+0x214>
 800abd0:	68fb      	ldr	r3, [r7, #12]
 800abd2:	681b      	ldr	r3, [r3, #0]
 800abd4:	68b9      	ldr	r1, [r7, #8]
 800abd6:	4618      	mov	r0, r3
 800abd8:	f000 fa08 	bl	800afec <TIM_OC2_SetConfig>
 800abdc:	68fb      	ldr	r3, [r7, #12]
 800abde:	681b      	ldr	r3, [r3, #0]
 800abe0:	699a      	ldr	r2, [r3, #24]
 800abe2:	68fb      	ldr	r3, [r7, #12]
 800abe4:	681b      	ldr	r3, [r3, #0]
 800abe6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800abea:	619a      	str	r2, [r3, #24]
 800abec:	68fb      	ldr	r3, [r7, #12]
 800abee:	681b      	ldr	r3, [r3, #0]
 800abf0:	699a      	ldr	r2, [r3, #24]
 800abf2:	68fb      	ldr	r3, [r7, #12]
 800abf4:	681b      	ldr	r3, [r3, #0]
 800abf6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800abfa:	619a      	str	r2, [r3, #24]
 800abfc:	68fb      	ldr	r3, [r7, #12]
 800abfe:	681b      	ldr	r3, [r3, #0]
 800ac00:	6999      	ldr	r1, [r3, #24]
 800ac02:	68bb      	ldr	r3, [r7, #8]
 800ac04:	691b      	ldr	r3, [r3, #16]
 800ac06:	021a      	lsls	r2, r3, #8
 800ac08:	68fb      	ldr	r3, [r7, #12]
 800ac0a:	681b      	ldr	r3, [r3, #0]
 800ac0c:	430a      	orrs	r2, r1
 800ac0e:	619a      	str	r2, [r3, #24]
 800ac10:	e084      	b.n	800ad1c <HAL_TIM_PWM_ConfigChannel+0x214>
 800ac12:	68fb      	ldr	r3, [r7, #12]
 800ac14:	681b      	ldr	r3, [r3, #0]
 800ac16:	68b9      	ldr	r1, [r7, #8]
 800ac18:	4618      	mov	r0, r3
 800ac1a:	f000 fa71 	bl	800b100 <TIM_OC3_SetConfig>
 800ac1e:	68fb      	ldr	r3, [r7, #12]
 800ac20:	681b      	ldr	r3, [r3, #0]
 800ac22:	69da      	ldr	r2, [r3, #28]
 800ac24:	68fb      	ldr	r3, [r7, #12]
 800ac26:	681b      	ldr	r3, [r3, #0]
 800ac28:	f042 0208 	orr.w	r2, r2, #8
 800ac2c:	61da      	str	r2, [r3, #28]
 800ac2e:	68fb      	ldr	r3, [r7, #12]
 800ac30:	681b      	ldr	r3, [r3, #0]
 800ac32:	69da      	ldr	r2, [r3, #28]
 800ac34:	68fb      	ldr	r3, [r7, #12]
 800ac36:	681b      	ldr	r3, [r3, #0]
 800ac38:	f022 0204 	bic.w	r2, r2, #4
 800ac3c:	61da      	str	r2, [r3, #28]
 800ac3e:	68fb      	ldr	r3, [r7, #12]
 800ac40:	681b      	ldr	r3, [r3, #0]
 800ac42:	69d9      	ldr	r1, [r3, #28]
 800ac44:	68bb      	ldr	r3, [r7, #8]
 800ac46:	691a      	ldr	r2, [r3, #16]
 800ac48:	68fb      	ldr	r3, [r7, #12]
 800ac4a:	681b      	ldr	r3, [r3, #0]
 800ac4c:	430a      	orrs	r2, r1
 800ac4e:	61da      	str	r2, [r3, #28]
 800ac50:	e064      	b.n	800ad1c <HAL_TIM_PWM_ConfigChannel+0x214>
 800ac52:	68fb      	ldr	r3, [r7, #12]
 800ac54:	681b      	ldr	r3, [r3, #0]
 800ac56:	68b9      	ldr	r1, [r7, #8]
 800ac58:	4618      	mov	r0, r3
 800ac5a:	f000 fad9 	bl	800b210 <TIM_OC4_SetConfig>
 800ac5e:	68fb      	ldr	r3, [r7, #12]
 800ac60:	681b      	ldr	r3, [r3, #0]
 800ac62:	69da      	ldr	r2, [r3, #28]
 800ac64:	68fb      	ldr	r3, [r7, #12]
 800ac66:	681b      	ldr	r3, [r3, #0]
 800ac68:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800ac6c:	61da      	str	r2, [r3, #28]
 800ac6e:	68fb      	ldr	r3, [r7, #12]
 800ac70:	681b      	ldr	r3, [r3, #0]
 800ac72:	69da      	ldr	r2, [r3, #28]
 800ac74:	68fb      	ldr	r3, [r7, #12]
 800ac76:	681b      	ldr	r3, [r3, #0]
 800ac78:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800ac7c:	61da      	str	r2, [r3, #28]
 800ac7e:	68fb      	ldr	r3, [r7, #12]
 800ac80:	681b      	ldr	r3, [r3, #0]
 800ac82:	69d9      	ldr	r1, [r3, #28]
 800ac84:	68bb      	ldr	r3, [r7, #8]
 800ac86:	691b      	ldr	r3, [r3, #16]
 800ac88:	021a      	lsls	r2, r3, #8
 800ac8a:	68fb      	ldr	r3, [r7, #12]
 800ac8c:	681b      	ldr	r3, [r3, #0]
 800ac8e:	430a      	orrs	r2, r1
 800ac90:	61da      	str	r2, [r3, #28]
 800ac92:	e043      	b.n	800ad1c <HAL_TIM_PWM_ConfigChannel+0x214>
 800ac94:	68fb      	ldr	r3, [r7, #12]
 800ac96:	681b      	ldr	r3, [r3, #0]
 800ac98:	68b9      	ldr	r1, [r7, #8]
 800ac9a:	4618      	mov	r0, r3
 800ac9c:	f000 fb22 	bl	800b2e4 <TIM_OC5_SetConfig>
 800aca0:	68fb      	ldr	r3, [r7, #12]
 800aca2:	681b      	ldr	r3, [r3, #0]
 800aca4:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800aca6:	68fb      	ldr	r3, [r7, #12]
 800aca8:	681b      	ldr	r3, [r3, #0]
 800acaa:	f042 0208 	orr.w	r2, r2, #8
 800acae:	655a      	str	r2, [r3, #84]	; 0x54
 800acb0:	68fb      	ldr	r3, [r7, #12]
 800acb2:	681b      	ldr	r3, [r3, #0]
 800acb4:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800acb6:	68fb      	ldr	r3, [r7, #12]
 800acb8:	681b      	ldr	r3, [r3, #0]
 800acba:	f022 0204 	bic.w	r2, r2, #4
 800acbe:	655a      	str	r2, [r3, #84]	; 0x54
 800acc0:	68fb      	ldr	r3, [r7, #12]
 800acc2:	681b      	ldr	r3, [r3, #0]
 800acc4:	6d59      	ldr	r1, [r3, #84]	; 0x54
 800acc6:	68bb      	ldr	r3, [r7, #8]
 800acc8:	691a      	ldr	r2, [r3, #16]
 800acca:	68fb      	ldr	r3, [r7, #12]
 800accc:	681b      	ldr	r3, [r3, #0]
 800acce:	430a      	orrs	r2, r1
 800acd0:	655a      	str	r2, [r3, #84]	; 0x54
 800acd2:	e023      	b.n	800ad1c <HAL_TIM_PWM_ConfigChannel+0x214>
 800acd4:	68fb      	ldr	r3, [r7, #12]
 800acd6:	681b      	ldr	r3, [r3, #0]
 800acd8:	68b9      	ldr	r1, [r7, #8]
 800acda:	4618      	mov	r0, r3
 800acdc:	f000 fb66 	bl	800b3ac <TIM_OC6_SetConfig>
 800ace0:	68fb      	ldr	r3, [r7, #12]
 800ace2:	681b      	ldr	r3, [r3, #0]
 800ace4:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800ace6:	68fb      	ldr	r3, [r7, #12]
 800ace8:	681b      	ldr	r3, [r3, #0]
 800acea:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800acee:	655a      	str	r2, [r3, #84]	; 0x54
 800acf0:	68fb      	ldr	r3, [r7, #12]
 800acf2:	681b      	ldr	r3, [r3, #0]
 800acf4:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800acf6:	68fb      	ldr	r3, [r7, #12]
 800acf8:	681b      	ldr	r3, [r3, #0]
 800acfa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800acfe:	655a      	str	r2, [r3, #84]	; 0x54
 800ad00:	68fb      	ldr	r3, [r7, #12]
 800ad02:	681b      	ldr	r3, [r3, #0]
 800ad04:	6d59      	ldr	r1, [r3, #84]	; 0x54
 800ad06:	68bb      	ldr	r3, [r7, #8]
 800ad08:	691b      	ldr	r3, [r3, #16]
 800ad0a:	021a      	lsls	r2, r3, #8
 800ad0c:	68fb      	ldr	r3, [r7, #12]
 800ad0e:	681b      	ldr	r3, [r3, #0]
 800ad10:	430a      	orrs	r2, r1
 800ad12:	655a      	str	r2, [r3, #84]	; 0x54
 800ad14:	e002      	b.n	800ad1c <HAL_TIM_PWM_ConfigChannel+0x214>
 800ad16:	2301      	movs	r3, #1
 800ad18:	75fb      	strb	r3, [r7, #23]
 800ad1a:	bf00      	nop
 800ad1c:	68fb      	ldr	r3, [r7, #12]
 800ad1e:	2200      	movs	r2, #0
 800ad20:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800ad24:	7dfb      	ldrb	r3, [r7, #23]
 800ad26:	4618      	mov	r0, r3
 800ad28:	3718      	adds	r7, #24
 800ad2a:	46bd      	mov	sp, r7
 800ad2c:	bd80      	pop	{r7, pc}
 800ad2e:	bf00      	nop

0800ad30 <HAL_TIM_OC_DelayElapsedCallback>:
 800ad30:	b480      	push	{r7}
 800ad32:	b083      	sub	sp, #12
 800ad34:	af00      	add	r7, sp, #0
 800ad36:	6078      	str	r0, [r7, #4]
 800ad38:	bf00      	nop
 800ad3a:	370c      	adds	r7, #12
 800ad3c:	46bd      	mov	sp, r7
 800ad3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad42:	4770      	bx	lr

0800ad44 <HAL_TIM_IC_CaptureCallback>:
 800ad44:	b480      	push	{r7}
 800ad46:	b083      	sub	sp, #12
 800ad48:	af00      	add	r7, sp, #0
 800ad4a:	6078      	str	r0, [r7, #4]
 800ad4c:	bf00      	nop
 800ad4e:	370c      	adds	r7, #12
 800ad50:	46bd      	mov	sp, r7
 800ad52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad56:	4770      	bx	lr

0800ad58 <HAL_TIM_PWM_PulseFinishedCallback>:
 800ad58:	b480      	push	{r7}
 800ad5a:	b083      	sub	sp, #12
 800ad5c:	af00      	add	r7, sp, #0
 800ad5e:	6078      	str	r0, [r7, #4]
 800ad60:	bf00      	nop
 800ad62:	370c      	adds	r7, #12
 800ad64:	46bd      	mov	sp, r7
 800ad66:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad6a:	4770      	bx	lr

0800ad6c <HAL_TIM_TriggerCallback>:
 800ad6c:	b480      	push	{r7}
 800ad6e:	b083      	sub	sp, #12
 800ad70:	af00      	add	r7, sp, #0
 800ad72:	6078      	str	r0, [r7, #4]
 800ad74:	bf00      	nop
 800ad76:	370c      	adds	r7, #12
 800ad78:	46bd      	mov	sp, r7
 800ad7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad7e:	4770      	bx	lr

0800ad80 <TIM_Base_SetConfig>:
 800ad80:	b480      	push	{r7}
 800ad82:	b085      	sub	sp, #20
 800ad84:	af00      	add	r7, sp, #0
 800ad86:	6078      	str	r0, [r7, #4]
 800ad88:	6039      	str	r1, [r7, #0]
 800ad8a:	687b      	ldr	r3, [r7, #4]
 800ad8c:	681b      	ldr	r3, [r3, #0]
 800ad8e:	60fb      	str	r3, [r7, #12]
 800ad90:	687b      	ldr	r3, [r7, #4]
 800ad92:	4a44      	ldr	r2, [pc, #272]	; (800aea4 <TIM_Base_SetConfig+0x124>)
 800ad94:	4293      	cmp	r3, r2
 800ad96:	d013      	beq.n	800adc0 <TIM_Base_SetConfig+0x40>
 800ad98:	687b      	ldr	r3, [r7, #4]
 800ad9a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800ad9e:	d00f      	beq.n	800adc0 <TIM_Base_SetConfig+0x40>
 800ada0:	687b      	ldr	r3, [r7, #4]
 800ada2:	4a41      	ldr	r2, [pc, #260]	; (800aea8 <TIM_Base_SetConfig+0x128>)
 800ada4:	4293      	cmp	r3, r2
 800ada6:	d00b      	beq.n	800adc0 <TIM_Base_SetConfig+0x40>
 800ada8:	687b      	ldr	r3, [r7, #4]
 800adaa:	4a40      	ldr	r2, [pc, #256]	; (800aeac <TIM_Base_SetConfig+0x12c>)
 800adac:	4293      	cmp	r3, r2
 800adae:	d007      	beq.n	800adc0 <TIM_Base_SetConfig+0x40>
 800adb0:	687b      	ldr	r3, [r7, #4]
 800adb2:	4a3f      	ldr	r2, [pc, #252]	; (800aeb0 <TIM_Base_SetConfig+0x130>)
 800adb4:	4293      	cmp	r3, r2
 800adb6:	d003      	beq.n	800adc0 <TIM_Base_SetConfig+0x40>
 800adb8:	687b      	ldr	r3, [r7, #4]
 800adba:	4a3e      	ldr	r2, [pc, #248]	; (800aeb4 <TIM_Base_SetConfig+0x134>)
 800adbc:	4293      	cmp	r3, r2
 800adbe:	d108      	bne.n	800add2 <TIM_Base_SetConfig+0x52>
 800adc0:	68fb      	ldr	r3, [r7, #12]
 800adc2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800adc6:	60fb      	str	r3, [r7, #12]
 800adc8:	683b      	ldr	r3, [r7, #0]
 800adca:	685b      	ldr	r3, [r3, #4]
 800adcc:	68fa      	ldr	r2, [r7, #12]
 800adce:	4313      	orrs	r3, r2
 800add0:	60fb      	str	r3, [r7, #12]
 800add2:	687b      	ldr	r3, [r7, #4]
 800add4:	4a33      	ldr	r2, [pc, #204]	; (800aea4 <TIM_Base_SetConfig+0x124>)
 800add6:	4293      	cmp	r3, r2
 800add8:	d027      	beq.n	800ae2a <TIM_Base_SetConfig+0xaa>
 800adda:	687b      	ldr	r3, [r7, #4]
 800addc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800ade0:	d023      	beq.n	800ae2a <TIM_Base_SetConfig+0xaa>
 800ade2:	687b      	ldr	r3, [r7, #4]
 800ade4:	4a30      	ldr	r2, [pc, #192]	; (800aea8 <TIM_Base_SetConfig+0x128>)
 800ade6:	4293      	cmp	r3, r2
 800ade8:	d01f      	beq.n	800ae2a <TIM_Base_SetConfig+0xaa>
 800adea:	687b      	ldr	r3, [r7, #4]
 800adec:	4a2f      	ldr	r2, [pc, #188]	; (800aeac <TIM_Base_SetConfig+0x12c>)
 800adee:	4293      	cmp	r3, r2
 800adf0:	d01b      	beq.n	800ae2a <TIM_Base_SetConfig+0xaa>
 800adf2:	687b      	ldr	r3, [r7, #4]
 800adf4:	4a2e      	ldr	r2, [pc, #184]	; (800aeb0 <TIM_Base_SetConfig+0x130>)
 800adf6:	4293      	cmp	r3, r2
 800adf8:	d017      	beq.n	800ae2a <TIM_Base_SetConfig+0xaa>
 800adfa:	687b      	ldr	r3, [r7, #4]
 800adfc:	4a2d      	ldr	r2, [pc, #180]	; (800aeb4 <TIM_Base_SetConfig+0x134>)
 800adfe:	4293      	cmp	r3, r2
 800ae00:	d013      	beq.n	800ae2a <TIM_Base_SetConfig+0xaa>
 800ae02:	687b      	ldr	r3, [r7, #4]
 800ae04:	4a2c      	ldr	r2, [pc, #176]	; (800aeb8 <TIM_Base_SetConfig+0x138>)
 800ae06:	4293      	cmp	r3, r2
 800ae08:	d00f      	beq.n	800ae2a <TIM_Base_SetConfig+0xaa>
 800ae0a:	687b      	ldr	r3, [r7, #4]
 800ae0c:	4a2b      	ldr	r2, [pc, #172]	; (800aebc <TIM_Base_SetConfig+0x13c>)
 800ae0e:	4293      	cmp	r3, r2
 800ae10:	d00b      	beq.n	800ae2a <TIM_Base_SetConfig+0xaa>
 800ae12:	687b      	ldr	r3, [r7, #4]
 800ae14:	4a2a      	ldr	r2, [pc, #168]	; (800aec0 <TIM_Base_SetConfig+0x140>)
 800ae16:	4293      	cmp	r3, r2
 800ae18:	d007      	beq.n	800ae2a <TIM_Base_SetConfig+0xaa>
 800ae1a:	687b      	ldr	r3, [r7, #4]
 800ae1c:	4a29      	ldr	r2, [pc, #164]	; (800aec4 <TIM_Base_SetConfig+0x144>)
 800ae1e:	4293      	cmp	r3, r2
 800ae20:	d003      	beq.n	800ae2a <TIM_Base_SetConfig+0xaa>
 800ae22:	687b      	ldr	r3, [r7, #4]
 800ae24:	4a28      	ldr	r2, [pc, #160]	; (800aec8 <TIM_Base_SetConfig+0x148>)
 800ae26:	4293      	cmp	r3, r2
 800ae28:	d108      	bne.n	800ae3c <TIM_Base_SetConfig+0xbc>
 800ae2a:	68fb      	ldr	r3, [r7, #12]
 800ae2c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800ae30:	60fb      	str	r3, [r7, #12]
 800ae32:	683b      	ldr	r3, [r7, #0]
 800ae34:	68db      	ldr	r3, [r3, #12]
 800ae36:	68fa      	ldr	r2, [r7, #12]
 800ae38:	4313      	orrs	r3, r2
 800ae3a:	60fb      	str	r3, [r7, #12]
 800ae3c:	68fb      	ldr	r3, [r7, #12]
 800ae3e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800ae42:	683b      	ldr	r3, [r7, #0]
 800ae44:	695b      	ldr	r3, [r3, #20]
 800ae46:	4313      	orrs	r3, r2
 800ae48:	60fb      	str	r3, [r7, #12]
 800ae4a:	687b      	ldr	r3, [r7, #4]
 800ae4c:	68fa      	ldr	r2, [r7, #12]
 800ae4e:	601a      	str	r2, [r3, #0]
 800ae50:	683b      	ldr	r3, [r7, #0]
 800ae52:	689a      	ldr	r2, [r3, #8]
 800ae54:	687b      	ldr	r3, [r7, #4]
 800ae56:	62da      	str	r2, [r3, #44]	; 0x2c
 800ae58:	683b      	ldr	r3, [r7, #0]
 800ae5a:	681a      	ldr	r2, [r3, #0]
 800ae5c:	687b      	ldr	r3, [r7, #4]
 800ae5e:	629a      	str	r2, [r3, #40]	; 0x28
 800ae60:	687b      	ldr	r3, [r7, #4]
 800ae62:	4a10      	ldr	r2, [pc, #64]	; (800aea4 <TIM_Base_SetConfig+0x124>)
 800ae64:	4293      	cmp	r3, r2
 800ae66:	d00f      	beq.n	800ae88 <TIM_Base_SetConfig+0x108>
 800ae68:	687b      	ldr	r3, [r7, #4]
 800ae6a:	4a12      	ldr	r2, [pc, #72]	; (800aeb4 <TIM_Base_SetConfig+0x134>)
 800ae6c:	4293      	cmp	r3, r2
 800ae6e:	d00b      	beq.n	800ae88 <TIM_Base_SetConfig+0x108>
 800ae70:	687b      	ldr	r3, [r7, #4]
 800ae72:	4a11      	ldr	r2, [pc, #68]	; (800aeb8 <TIM_Base_SetConfig+0x138>)
 800ae74:	4293      	cmp	r3, r2
 800ae76:	d007      	beq.n	800ae88 <TIM_Base_SetConfig+0x108>
 800ae78:	687b      	ldr	r3, [r7, #4]
 800ae7a:	4a10      	ldr	r2, [pc, #64]	; (800aebc <TIM_Base_SetConfig+0x13c>)
 800ae7c:	4293      	cmp	r3, r2
 800ae7e:	d003      	beq.n	800ae88 <TIM_Base_SetConfig+0x108>
 800ae80:	687b      	ldr	r3, [r7, #4]
 800ae82:	4a0f      	ldr	r2, [pc, #60]	; (800aec0 <TIM_Base_SetConfig+0x140>)
 800ae84:	4293      	cmp	r3, r2
 800ae86:	d103      	bne.n	800ae90 <TIM_Base_SetConfig+0x110>
 800ae88:	683b      	ldr	r3, [r7, #0]
 800ae8a:	691a      	ldr	r2, [r3, #16]
 800ae8c:	687b      	ldr	r3, [r7, #4]
 800ae8e:	631a      	str	r2, [r3, #48]	; 0x30
 800ae90:	687b      	ldr	r3, [r7, #4]
 800ae92:	2201      	movs	r2, #1
 800ae94:	615a      	str	r2, [r3, #20]
 800ae96:	bf00      	nop
 800ae98:	3714      	adds	r7, #20
 800ae9a:	46bd      	mov	sp, r7
 800ae9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aea0:	4770      	bx	lr
 800aea2:	bf00      	nop
 800aea4:	40010000 	.word	0x40010000
 800aea8:	40000400 	.word	0x40000400
 800aeac:	40000800 	.word	0x40000800
 800aeb0:	40000c00 	.word	0x40000c00
 800aeb4:	40010400 	.word	0x40010400
 800aeb8:	40014000 	.word	0x40014000
 800aebc:	40014400 	.word	0x40014400
 800aec0:	40014800 	.word	0x40014800
 800aec4:	4000e000 	.word	0x4000e000
 800aec8:	4000e400 	.word	0x4000e400

0800aecc <TIM_OC1_SetConfig>:
 800aecc:	b480      	push	{r7}
 800aece:	b087      	sub	sp, #28
 800aed0:	af00      	add	r7, sp, #0
 800aed2:	6078      	str	r0, [r7, #4]
 800aed4:	6039      	str	r1, [r7, #0]
 800aed6:	687b      	ldr	r3, [r7, #4]
 800aed8:	6a1b      	ldr	r3, [r3, #32]
 800aeda:	f023 0201 	bic.w	r2, r3, #1
 800aede:	687b      	ldr	r3, [r7, #4]
 800aee0:	621a      	str	r2, [r3, #32]
 800aee2:	687b      	ldr	r3, [r7, #4]
 800aee4:	6a1b      	ldr	r3, [r3, #32]
 800aee6:	617b      	str	r3, [r7, #20]
 800aee8:	687b      	ldr	r3, [r7, #4]
 800aeea:	685b      	ldr	r3, [r3, #4]
 800aeec:	613b      	str	r3, [r7, #16]
 800aeee:	687b      	ldr	r3, [r7, #4]
 800aef0:	699b      	ldr	r3, [r3, #24]
 800aef2:	60fb      	str	r3, [r7, #12]
 800aef4:	68fa      	ldr	r2, [r7, #12]
 800aef6:	4b37      	ldr	r3, [pc, #220]	; (800afd4 <TIM_OC1_SetConfig+0x108>)
 800aef8:	4013      	ands	r3, r2
 800aefa:	60fb      	str	r3, [r7, #12]
 800aefc:	68fb      	ldr	r3, [r7, #12]
 800aefe:	f023 0303 	bic.w	r3, r3, #3
 800af02:	60fb      	str	r3, [r7, #12]
 800af04:	683b      	ldr	r3, [r7, #0]
 800af06:	681b      	ldr	r3, [r3, #0]
 800af08:	68fa      	ldr	r2, [r7, #12]
 800af0a:	4313      	orrs	r3, r2
 800af0c:	60fb      	str	r3, [r7, #12]
 800af0e:	697b      	ldr	r3, [r7, #20]
 800af10:	f023 0302 	bic.w	r3, r3, #2
 800af14:	617b      	str	r3, [r7, #20]
 800af16:	683b      	ldr	r3, [r7, #0]
 800af18:	689b      	ldr	r3, [r3, #8]
 800af1a:	697a      	ldr	r2, [r7, #20]
 800af1c:	4313      	orrs	r3, r2
 800af1e:	617b      	str	r3, [r7, #20]
 800af20:	687b      	ldr	r3, [r7, #4]
 800af22:	4a2d      	ldr	r2, [pc, #180]	; (800afd8 <TIM_OC1_SetConfig+0x10c>)
 800af24:	4293      	cmp	r3, r2
 800af26:	d00f      	beq.n	800af48 <TIM_OC1_SetConfig+0x7c>
 800af28:	687b      	ldr	r3, [r7, #4]
 800af2a:	4a2c      	ldr	r2, [pc, #176]	; (800afdc <TIM_OC1_SetConfig+0x110>)
 800af2c:	4293      	cmp	r3, r2
 800af2e:	d00b      	beq.n	800af48 <TIM_OC1_SetConfig+0x7c>
 800af30:	687b      	ldr	r3, [r7, #4]
 800af32:	4a2b      	ldr	r2, [pc, #172]	; (800afe0 <TIM_OC1_SetConfig+0x114>)
 800af34:	4293      	cmp	r3, r2
 800af36:	d007      	beq.n	800af48 <TIM_OC1_SetConfig+0x7c>
 800af38:	687b      	ldr	r3, [r7, #4]
 800af3a:	4a2a      	ldr	r2, [pc, #168]	; (800afe4 <TIM_OC1_SetConfig+0x118>)
 800af3c:	4293      	cmp	r3, r2
 800af3e:	d003      	beq.n	800af48 <TIM_OC1_SetConfig+0x7c>
 800af40:	687b      	ldr	r3, [r7, #4]
 800af42:	4a29      	ldr	r2, [pc, #164]	; (800afe8 <TIM_OC1_SetConfig+0x11c>)
 800af44:	4293      	cmp	r3, r2
 800af46:	d10c      	bne.n	800af62 <TIM_OC1_SetConfig+0x96>
 800af48:	697b      	ldr	r3, [r7, #20]
 800af4a:	f023 0308 	bic.w	r3, r3, #8
 800af4e:	617b      	str	r3, [r7, #20]
 800af50:	683b      	ldr	r3, [r7, #0]
 800af52:	68db      	ldr	r3, [r3, #12]
 800af54:	697a      	ldr	r2, [r7, #20]
 800af56:	4313      	orrs	r3, r2
 800af58:	617b      	str	r3, [r7, #20]
 800af5a:	697b      	ldr	r3, [r7, #20]
 800af5c:	f023 0304 	bic.w	r3, r3, #4
 800af60:	617b      	str	r3, [r7, #20]
 800af62:	687b      	ldr	r3, [r7, #4]
 800af64:	4a1c      	ldr	r2, [pc, #112]	; (800afd8 <TIM_OC1_SetConfig+0x10c>)
 800af66:	4293      	cmp	r3, r2
 800af68:	d00f      	beq.n	800af8a <TIM_OC1_SetConfig+0xbe>
 800af6a:	687b      	ldr	r3, [r7, #4]
 800af6c:	4a1b      	ldr	r2, [pc, #108]	; (800afdc <TIM_OC1_SetConfig+0x110>)
 800af6e:	4293      	cmp	r3, r2
 800af70:	d00b      	beq.n	800af8a <TIM_OC1_SetConfig+0xbe>
 800af72:	687b      	ldr	r3, [r7, #4]
 800af74:	4a1a      	ldr	r2, [pc, #104]	; (800afe0 <TIM_OC1_SetConfig+0x114>)
 800af76:	4293      	cmp	r3, r2
 800af78:	d007      	beq.n	800af8a <TIM_OC1_SetConfig+0xbe>
 800af7a:	687b      	ldr	r3, [r7, #4]
 800af7c:	4a19      	ldr	r2, [pc, #100]	; (800afe4 <TIM_OC1_SetConfig+0x118>)
 800af7e:	4293      	cmp	r3, r2
 800af80:	d003      	beq.n	800af8a <TIM_OC1_SetConfig+0xbe>
 800af82:	687b      	ldr	r3, [r7, #4]
 800af84:	4a18      	ldr	r2, [pc, #96]	; (800afe8 <TIM_OC1_SetConfig+0x11c>)
 800af86:	4293      	cmp	r3, r2
 800af88:	d111      	bne.n	800afae <TIM_OC1_SetConfig+0xe2>
 800af8a:	693b      	ldr	r3, [r7, #16]
 800af8c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800af90:	613b      	str	r3, [r7, #16]
 800af92:	693b      	ldr	r3, [r7, #16]
 800af94:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800af98:	613b      	str	r3, [r7, #16]
 800af9a:	683b      	ldr	r3, [r7, #0]
 800af9c:	695b      	ldr	r3, [r3, #20]
 800af9e:	693a      	ldr	r2, [r7, #16]
 800afa0:	4313      	orrs	r3, r2
 800afa2:	613b      	str	r3, [r7, #16]
 800afa4:	683b      	ldr	r3, [r7, #0]
 800afa6:	699b      	ldr	r3, [r3, #24]
 800afa8:	693a      	ldr	r2, [r7, #16]
 800afaa:	4313      	orrs	r3, r2
 800afac:	613b      	str	r3, [r7, #16]
 800afae:	687b      	ldr	r3, [r7, #4]
 800afb0:	693a      	ldr	r2, [r7, #16]
 800afb2:	605a      	str	r2, [r3, #4]
 800afb4:	687b      	ldr	r3, [r7, #4]
 800afb6:	68fa      	ldr	r2, [r7, #12]
 800afb8:	619a      	str	r2, [r3, #24]
 800afba:	683b      	ldr	r3, [r7, #0]
 800afbc:	685a      	ldr	r2, [r3, #4]
 800afbe:	687b      	ldr	r3, [r7, #4]
 800afc0:	635a      	str	r2, [r3, #52]	; 0x34
 800afc2:	687b      	ldr	r3, [r7, #4]
 800afc4:	697a      	ldr	r2, [r7, #20]
 800afc6:	621a      	str	r2, [r3, #32]
 800afc8:	bf00      	nop
 800afca:	371c      	adds	r7, #28
 800afcc:	46bd      	mov	sp, r7
 800afce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800afd2:	4770      	bx	lr
 800afd4:	fffeff8f 	.word	0xfffeff8f
 800afd8:	40010000 	.word	0x40010000
 800afdc:	40010400 	.word	0x40010400
 800afe0:	40014000 	.word	0x40014000
 800afe4:	40014400 	.word	0x40014400
 800afe8:	40014800 	.word	0x40014800

0800afec <TIM_OC2_SetConfig>:
 800afec:	b480      	push	{r7}
 800afee:	b087      	sub	sp, #28
 800aff0:	af00      	add	r7, sp, #0
 800aff2:	6078      	str	r0, [r7, #4]
 800aff4:	6039      	str	r1, [r7, #0]
 800aff6:	687b      	ldr	r3, [r7, #4]
 800aff8:	6a1b      	ldr	r3, [r3, #32]
 800affa:	f023 0210 	bic.w	r2, r3, #16
 800affe:	687b      	ldr	r3, [r7, #4]
 800b000:	621a      	str	r2, [r3, #32]
 800b002:	687b      	ldr	r3, [r7, #4]
 800b004:	6a1b      	ldr	r3, [r3, #32]
 800b006:	617b      	str	r3, [r7, #20]
 800b008:	687b      	ldr	r3, [r7, #4]
 800b00a:	685b      	ldr	r3, [r3, #4]
 800b00c:	613b      	str	r3, [r7, #16]
 800b00e:	687b      	ldr	r3, [r7, #4]
 800b010:	699b      	ldr	r3, [r3, #24]
 800b012:	60fb      	str	r3, [r7, #12]
 800b014:	68fa      	ldr	r2, [r7, #12]
 800b016:	4b34      	ldr	r3, [pc, #208]	; (800b0e8 <TIM_OC2_SetConfig+0xfc>)
 800b018:	4013      	ands	r3, r2
 800b01a:	60fb      	str	r3, [r7, #12]
 800b01c:	68fb      	ldr	r3, [r7, #12]
 800b01e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b022:	60fb      	str	r3, [r7, #12]
 800b024:	683b      	ldr	r3, [r7, #0]
 800b026:	681b      	ldr	r3, [r3, #0]
 800b028:	021b      	lsls	r3, r3, #8
 800b02a:	68fa      	ldr	r2, [r7, #12]
 800b02c:	4313      	orrs	r3, r2
 800b02e:	60fb      	str	r3, [r7, #12]
 800b030:	697b      	ldr	r3, [r7, #20]
 800b032:	f023 0320 	bic.w	r3, r3, #32
 800b036:	617b      	str	r3, [r7, #20]
 800b038:	683b      	ldr	r3, [r7, #0]
 800b03a:	689b      	ldr	r3, [r3, #8]
 800b03c:	011b      	lsls	r3, r3, #4
 800b03e:	697a      	ldr	r2, [r7, #20]
 800b040:	4313      	orrs	r3, r2
 800b042:	617b      	str	r3, [r7, #20]
 800b044:	687b      	ldr	r3, [r7, #4]
 800b046:	4a29      	ldr	r2, [pc, #164]	; (800b0ec <TIM_OC2_SetConfig+0x100>)
 800b048:	4293      	cmp	r3, r2
 800b04a:	d003      	beq.n	800b054 <TIM_OC2_SetConfig+0x68>
 800b04c:	687b      	ldr	r3, [r7, #4]
 800b04e:	4a28      	ldr	r2, [pc, #160]	; (800b0f0 <TIM_OC2_SetConfig+0x104>)
 800b050:	4293      	cmp	r3, r2
 800b052:	d10d      	bne.n	800b070 <TIM_OC2_SetConfig+0x84>
 800b054:	697b      	ldr	r3, [r7, #20]
 800b056:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800b05a:	617b      	str	r3, [r7, #20]
 800b05c:	683b      	ldr	r3, [r7, #0]
 800b05e:	68db      	ldr	r3, [r3, #12]
 800b060:	011b      	lsls	r3, r3, #4
 800b062:	697a      	ldr	r2, [r7, #20]
 800b064:	4313      	orrs	r3, r2
 800b066:	617b      	str	r3, [r7, #20]
 800b068:	697b      	ldr	r3, [r7, #20]
 800b06a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800b06e:	617b      	str	r3, [r7, #20]
 800b070:	687b      	ldr	r3, [r7, #4]
 800b072:	4a1e      	ldr	r2, [pc, #120]	; (800b0ec <TIM_OC2_SetConfig+0x100>)
 800b074:	4293      	cmp	r3, r2
 800b076:	d00f      	beq.n	800b098 <TIM_OC2_SetConfig+0xac>
 800b078:	687b      	ldr	r3, [r7, #4]
 800b07a:	4a1d      	ldr	r2, [pc, #116]	; (800b0f0 <TIM_OC2_SetConfig+0x104>)
 800b07c:	4293      	cmp	r3, r2
 800b07e:	d00b      	beq.n	800b098 <TIM_OC2_SetConfig+0xac>
 800b080:	687b      	ldr	r3, [r7, #4]
 800b082:	4a1c      	ldr	r2, [pc, #112]	; (800b0f4 <TIM_OC2_SetConfig+0x108>)
 800b084:	4293      	cmp	r3, r2
 800b086:	d007      	beq.n	800b098 <TIM_OC2_SetConfig+0xac>
 800b088:	687b      	ldr	r3, [r7, #4]
 800b08a:	4a1b      	ldr	r2, [pc, #108]	; (800b0f8 <TIM_OC2_SetConfig+0x10c>)
 800b08c:	4293      	cmp	r3, r2
 800b08e:	d003      	beq.n	800b098 <TIM_OC2_SetConfig+0xac>
 800b090:	687b      	ldr	r3, [r7, #4]
 800b092:	4a1a      	ldr	r2, [pc, #104]	; (800b0fc <TIM_OC2_SetConfig+0x110>)
 800b094:	4293      	cmp	r3, r2
 800b096:	d113      	bne.n	800b0c0 <TIM_OC2_SetConfig+0xd4>
 800b098:	693b      	ldr	r3, [r7, #16]
 800b09a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b09e:	613b      	str	r3, [r7, #16]
 800b0a0:	693b      	ldr	r3, [r7, #16]
 800b0a2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b0a6:	613b      	str	r3, [r7, #16]
 800b0a8:	683b      	ldr	r3, [r7, #0]
 800b0aa:	695b      	ldr	r3, [r3, #20]
 800b0ac:	009b      	lsls	r3, r3, #2
 800b0ae:	693a      	ldr	r2, [r7, #16]
 800b0b0:	4313      	orrs	r3, r2
 800b0b2:	613b      	str	r3, [r7, #16]
 800b0b4:	683b      	ldr	r3, [r7, #0]
 800b0b6:	699b      	ldr	r3, [r3, #24]
 800b0b8:	009b      	lsls	r3, r3, #2
 800b0ba:	693a      	ldr	r2, [r7, #16]
 800b0bc:	4313      	orrs	r3, r2
 800b0be:	613b      	str	r3, [r7, #16]
 800b0c0:	687b      	ldr	r3, [r7, #4]
 800b0c2:	693a      	ldr	r2, [r7, #16]
 800b0c4:	605a      	str	r2, [r3, #4]
 800b0c6:	687b      	ldr	r3, [r7, #4]
 800b0c8:	68fa      	ldr	r2, [r7, #12]
 800b0ca:	619a      	str	r2, [r3, #24]
 800b0cc:	683b      	ldr	r3, [r7, #0]
 800b0ce:	685a      	ldr	r2, [r3, #4]
 800b0d0:	687b      	ldr	r3, [r7, #4]
 800b0d2:	639a      	str	r2, [r3, #56]	; 0x38
 800b0d4:	687b      	ldr	r3, [r7, #4]
 800b0d6:	697a      	ldr	r2, [r7, #20]
 800b0d8:	621a      	str	r2, [r3, #32]
 800b0da:	bf00      	nop
 800b0dc:	371c      	adds	r7, #28
 800b0de:	46bd      	mov	sp, r7
 800b0e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b0e4:	4770      	bx	lr
 800b0e6:	bf00      	nop
 800b0e8:	feff8fff 	.word	0xfeff8fff
 800b0ec:	40010000 	.word	0x40010000
 800b0f0:	40010400 	.word	0x40010400
 800b0f4:	40014000 	.word	0x40014000
 800b0f8:	40014400 	.word	0x40014400
 800b0fc:	40014800 	.word	0x40014800

0800b100 <TIM_OC3_SetConfig>:
 800b100:	b480      	push	{r7}
 800b102:	b087      	sub	sp, #28
 800b104:	af00      	add	r7, sp, #0
 800b106:	6078      	str	r0, [r7, #4]
 800b108:	6039      	str	r1, [r7, #0]
 800b10a:	687b      	ldr	r3, [r7, #4]
 800b10c:	6a1b      	ldr	r3, [r3, #32]
 800b10e:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800b112:	687b      	ldr	r3, [r7, #4]
 800b114:	621a      	str	r2, [r3, #32]
 800b116:	687b      	ldr	r3, [r7, #4]
 800b118:	6a1b      	ldr	r3, [r3, #32]
 800b11a:	617b      	str	r3, [r7, #20]
 800b11c:	687b      	ldr	r3, [r7, #4]
 800b11e:	685b      	ldr	r3, [r3, #4]
 800b120:	613b      	str	r3, [r7, #16]
 800b122:	687b      	ldr	r3, [r7, #4]
 800b124:	69db      	ldr	r3, [r3, #28]
 800b126:	60fb      	str	r3, [r7, #12]
 800b128:	68fa      	ldr	r2, [r7, #12]
 800b12a:	4b33      	ldr	r3, [pc, #204]	; (800b1f8 <TIM_OC3_SetConfig+0xf8>)
 800b12c:	4013      	ands	r3, r2
 800b12e:	60fb      	str	r3, [r7, #12]
 800b130:	68fb      	ldr	r3, [r7, #12]
 800b132:	f023 0303 	bic.w	r3, r3, #3
 800b136:	60fb      	str	r3, [r7, #12]
 800b138:	683b      	ldr	r3, [r7, #0]
 800b13a:	681b      	ldr	r3, [r3, #0]
 800b13c:	68fa      	ldr	r2, [r7, #12]
 800b13e:	4313      	orrs	r3, r2
 800b140:	60fb      	str	r3, [r7, #12]
 800b142:	697b      	ldr	r3, [r7, #20]
 800b144:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800b148:	617b      	str	r3, [r7, #20]
 800b14a:	683b      	ldr	r3, [r7, #0]
 800b14c:	689b      	ldr	r3, [r3, #8]
 800b14e:	021b      	lsls	r3, r3, #8
 800b150:	697a      	ldr	r2, [r7, #20]
 800b152:	4313      	orrs	r3, r2
 800b154:	617b      	str	r3, [r7, #20]
 800b156:	687b      	ldr	r3, [r7, #4]
 800b158:	4a28      	ldr	r2, [pc, #160]	; (800b1fc <TIM_OC3_SetConfig+0xfc>)
 800b15a:	4293      	cmp	r3, r2
 800b15c:	d003      	beq.n	800b166 <TIM_OC3_SetConfig+0x66>
 800b15e:	687b      	ldr	r3, [r7, #4]
 800b160:	4a27      	ldr	r2, [pc, #156]	; (800b200 <TIM_OC3_SetConfig+0x100>)
 800b162:	4293      	cmp	r3, r2
 800b164:	d10d      	bne.n	800b182 <TIM_OC3_SetConfig+0x82>
 800b166:	697b      	ldr	r3, [r7, #20]
 800b168:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b16c:	617b      	str	r3, [r7, #20]
 800b16e:	683b      	ldr	r3, [r7, #0]
 800b170:	68db      	ldr	r3, [r3, #12]
 800b172:	021b      	lsls	r3, r3, #8
 800b174:	697a      	ldr	r2, [r7, #20]
 800b176:	4313      	orrs	r3, r2
 800b178:	617b      	str	r3, [r7, #20]
 800b17a:	697b      	ldr	r3, [r7, #20]
 800b17c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b180:	617b      	str	r3, [r7, #20]
 800b182:	687b      	ldr	r3, [r7, #4]
 800b184:	4a1d      	ldr	r2, [pc, #116]	; (800b1fc <TIM_OC3_SetConfig+0xfc>)
 800b186:	4293      	cmp	r3, r2
 800b188:	d00f      	beq.n	800b1aa <TIM_OC3_SetConfig+0xaa>
 800b18a:	687b      	ldr	r3, [r7, #4]
 800b18c:	4a1c      	ldr	r2, [pc, #112]	; (800b200 <TIM_OC3_SetConfig+0x100>)
 800b18e:	4293      	cmp	r3, r2
 800b190:	d00b      	beq.n	800b1aa <TIM_OC3_SetConfig+0xaa>
 800b192:	687b      	ldr	r3, [r7, #4]
 800b194:	4a1b      	ldr	r2, [pc, #108]	; (800b204 <TIM_OC3_SetConfig+0x104>)
 800b196:	4293      	cmp	r3, r2
 800b198:	d007      	beq.n	800b1aa <TIM_OC3_SetConfig+0xaa>
 800b19a:	687b      	ldr	r3, [r7, #4]
 800b19c:	4a1a      	ldr	r2, [pc, #104]	; (800b208 <TIM_OC3_SetConfig+0x108>)
 800b19e:	4293      	cmp	r3, r2
 800b1a0:	d003      	beq.n	800b1aa <TIM_OC3_SetConfig+0xaa>
 800b1a2:	687b      	ldr	r3, [r7, #4]
 800b1a4:	4a19      	ldr	r2, [pc, #100]	; (800b20c <TIM_OC3_SetConfig+0x10c>)
 800b1a6:	4293      	cmp	r3, r2
 800b1a8:	d113      	bne.n	800b1d2 <TIM_OC3_SetConfig+0xd2>
 800b1aa:	693b      	ldr	r3, [r7, #16]
 800b1ac:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800b1b0:	613b      	str	r3, [r7, #16]
 800b1b2:	693b      	ldr	r3, [r7, #16]
 800b1b4:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800b1b8:	613b      	str	r3, [r7, #16]
 800b1ba:	683b      	ldr	r3, [r7, #0]
 800b1bc:	695b      	ldr	r3, [r3, #20]
 800b1be:	011b      	lsls	r3, r3, #4
 800b1c0:	693a      	ldr	r2, [r7, #16]
 800b1c2:	4313      	orrs	r3, r2
 800b1c4:	613b      	str	r3, [r7, #16]
 800b1c6:	683b      	ldr	r3, [r7, #0]
 800b1c8:	699b      	ldr	r3, [r3, #24]
 800b1ca:	011b      	lsls	r3, r3, #4
 800b1cc:	693a      	ldr	r2, [r7, #16]
 800b1ce:	4313      	orrs	r3, r2
 800b1d0:	613b      	str	r3, [r7, #16]
 800b1d2:	687b      	ldr	r3, [r7, #4]
 800b1d4:	693a      	ldr	r2, [r7, #16]
 800b1d6:	605a      	str	r2, [r3, #4]
 800b1d8:	687b      	ldr	r3, [r7, #4]
 800b1da:	68fa      	ldr	r2, [r7, #12]
 800b1dc:	61da      	str	r2, [r3, #28]
 800b1de:	683b      	ldr	r3, [r7, #0]
 800b1e0:	685a      	ldr	r2, [r3, #4]
 800b1e2:	687b      	ldr	r3, [r7, #4]
 800b1e4:	63da      	str	r2, [r3, #60]	; 0x3c
 800b1e6:	687b      	ldr	r3, [r7, #4]
 800b1e8:	697a      	ldr	r2, [r7, #20]
 800b1ea:	621a      	str	r2, [r3, #32]
 800b1ec:	bf00      	nop
 800b1ee:	371c      	adds	r7, #28
 800b1f0:	46bd      	mov	sp, r7
 800b1f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1f6:	4770      	bx	lr
 800b1f8:	fffeff8f 	.word	0xfffeff8f
 800b1fc:	40010000 	.word	0x40010000
 800b200:	40010400 	.word	0x40010400
 800b204:	40014000 	.word	0x40014000
 800b208:	40014400 	.word	0x40014400
 800b20c:	40014800 	.word	0x40014800

0800b210 <TIM_OC4_SetConfig>:
 800b210:	b480      	push	{r7}
 800b212:	b087      	sub	sp, #28
 800b214:	af00      	add	r7, sp, #0
 800b216:	6078      	str	r0, [r7, #4]
 800b218:	6039      	str	r1, [r7, #0]
 800b21a:	687b      	ldr	r3, [r7, #4]
 800b21c:	6a1b      	ldr	r3, [r3, #32]
 800b21e:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800b222:	687b      	ldr	r3, [r7, #4]
 800b224:	621a      	str	r2, [r3, #32]
 800b226:	687b      	ldr	r3, [r7, #4]
 800b228:	6a1b      	ldr	r3, [r3, #32]
 800b22a:	613b      	str	r3, [r7, #16]
 800b22c:	687b      	ldr	r3, [r7, #4]
 800b22e:	685b      	ldr	r3, [r3, #4]
 800b230:	617b      	str	r3, [r7, #20]
 800b232:	687b      	ldr	r3, [r7, #4]
 800b234:	69db      	ldr	r3, [r3, #28]
 800b236:	60fb      	str	r3, [r7, #12]
 800b238:	68fa      	ldr	r2, [r7, #12]
 800b23a:	4b24      	ldr	r3, [pc, #144]	; (800b2cc <TIM_OC4_SetConfig+0xbc>)
 800b23c:	4013      	ands	r3, r2
 800b23e:	60fb      	str	r3, [r7, #12]
 800b240:	68fb      	ldr	r3, [r7, #12]
 800b242:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b246:	60fb      	str	r3, [r7, #12]
 800b248:	683b      	ldr	r3, [r7, #0]
 800b24a:	681b      	ldr	r3, [r3, #0]
 800b24c:	021b      	lsls	r3, r3, #8
 800b24e:	68fa      	ldr	r2, [r7, #12]
 800b250:	4313      	orrs	r3, r2
 800b252:	60fb      	str	r3, [r7, #12]
 800b254:	693b      	ldr	r3, [r7, #16]
 800b256:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800b25a:	613b      	str	r3, [r7, #16]
 800b25c:	683b      	ldr	r3, [r7, #0]
 800b25e:	689b      	ldr	r3, [r3, #8]
 800b260:	031b      	lsls	r3, r3, #12
 800b262:	693a      	ldr	r2, [r7, #16]
 800b264:	4313      	orrs	r3, r2
 800b266:	613b      	str	r3, [r7, #16]
 800b268:	687b      	ldr	r3, [r7, #4]
 800b26a:	4a19      	ldr	r2, [pc, #100]	; (800b2d0 <TIM_OC4_SetConfig+0xc0>)
 800b26c:	4293      	cmp	r3, r2
 800b26e:	d00f      	beq.n	800b290 <TIM_OC4_SetConfig+0x80>
 800b270:	687b      	ldr	r3, [r7, #4]
 800b272:	4a18      	ldr	r2, [pc, #96]	; (800b2d4 <TIM_OC4_SetConfig+0xc4>)
 800b274:	4293      	cmp	r3, r2
 800b276:	d00b      	beq.n	800b290 <TIM_OC4_SetConfig+0x80>
 800b278:	687b      	ldr	r3, [r7, #4]
 800b27a:	4a17      	ldr	r2, [pc, #92]	; (800b2d8 <TIM_OC4_SetConfig+0xc8>)
 800b27c:	4293      	cmp	r3, r2
 800b27e:	d007      	beq.n	800b290 <TIM_OC4_SetConfig+0x80>
 800b280:	687b      	ldr	r3, [r7, #4]
 800b282:	4a16      	ldr	r2, [pc, #88]	; (800b2dc <TIM_OC4_SetConfig+0xcc>)
 800b284:	4293      	cmp	r3, r2
 800b286:	d003      	beq.n	800b290 <TIM_OC4_SetConfig+0x80>
 800b288:	687b      	ldr	r3, [r7, #4]
 800b28a:	4a15      	ldr	r2, [pc, #84]	; (800b2e0 <TIM_OC4_SetConfig+0xd0>)
 800b28c:	4293      	cmp	r3, r2
 800b28e:	d109      	bne.n	800b2a4 <TIM_OC4_SetConfig+0x94>
 800b290:	697b      	ldr	r3, [r7, #20]
 800b292:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800b296:	617b      	str	r3, [r7, #20]
 800b298:	683b      	ldr	r3, [r7, #0]
 800b29a:	695b      	ldr	r3, [r3, #20]
 800b29c:	019b      	lsls	r3, r3, #6
 800b29e:	697a      	ldr	r2, [r7, #20]
 800b2a0:	4313      	orrs	r3, r2
 800b2a2:	617b      	str	r3, [r7, #20]
 800b2a4:	687b      	ldr	r3, [r7, #4]
 800b2a6:	697a      	ldr	r2, [r7, #20]
 800b2a8:	605a      	str	r2, [r3, #4]
 800b2aa:	687b      	ldr	r3, [r7, #4]
 800b2ac:	68fa      	ldr	r2, [r7, #12]
 800b2ae:	61da      	str	r2, [r3, #28]
 800b2b0:	683b      	ldr	r3, [r7, #0]
 800b2b2:	685a      	ldr	r2, [r3, #4]
 800b2b4:	687b      	ldr	r3, [r7, #4]
 800b2b6:	641a      	str	r2, [r3, #64]	; 0x40
 800b2b8:	687b      	ldr	r3, [r7, #4]
 800b2ba:	693a      	ldr	r2, [r7, #16]
 800b2bc:	621a      	str	r2, [r3, #32]
 800b2be:	bf00      	nop
 800b2c0:	371c      	adds	r7, #28
 800b2c2:	46bd      	mov	sp, r7
 800b2c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2c8:	4770      	bx	lr
 800b2ca:	bf00      	nop
 800b2cc:	feff8fff 	.word	0xfeff8fff
 800b2d0:	40010000 	.word	0x40010000
 800b2d4:	40010400 	.word	0x40010400
 800b2d8:	40014000 	.word	0x40014000
 800b2dc:	40014400 	.word	0x40014400
 800b2e0:	40014800 	.word	0x40014800

0800b2e4 <TIM_OC5_SetConfig>:
 800b2e4:	b480      	push	{r7}
 800b2e6:	b087      	sub	sp, #28
 800b2e8:	af00      	add	r7, sp, #0
 800b2ea:	6078      	str	r0, [r7, #4]
 800b2ec:	6039      	str	r1, [r7, #0]
 800b2ee:	687b      	ldr	r3, [r7, #4]
 800b2f0:	6a1b      	ldr	r3, [r3, #32]
 800b2f2:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 800b2f6:	687b      	ldr	r3, [r7, #4]
 800b2f8:	621a      	str	r2, [r3, #32]
 800b2fa:	687b      	ldr	r3, [r7, #4]
 800b2fc:	6a1b      	ldr	r3, [r3, #32]
 800b2fe:	613b      	str	r3, [r7, #16]
 800b300:	687b      	ldr	r3, [r7, #4]
 800b302:	685b      	ldr	r3, [r3, #4]
 800b304:	617b      	str	r3, [r7, #20]
 800b306:	687b      	ldr	r3, [r7, #4]
 800b308:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800b30a:	60fb      	str	r3, [r7, #12]
 800b30c:	68fa      	ldr	r2, [r7, #12]
 800b30e:	4b21      	ldr	r3, [pc, #132]	; (800b394 <TIM_OC5_SetConfig+0xb0>)
 800b310:	4013      	ands	r3, r2
 800b312:	60fb      	str	r3, [r7, #12]
 800b314:	683b      	ldr	r3, [r7, #0]
 800b316:	681b      	ldr	r3, [r3, #0]
 800b318:	68fa      	ldr	r2, [r7, #12]
 800b31a:	4313      	orrs	r3, r2
 800b31c:	60fb      	str	r3, [r7, #12]
 800b31e:	693b      	ldr	r3, [r7, #16]
 800b320:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 800b324:	613b      	str	r3, [r7, #16]
 800b326:	683b      	ldr	r3, [r7, #0]
 800b328:	689b      	ldr	r3, [r3, #8]
 800b32a:	041b      	lsls	r3, r3, #16
 800b32c:	693a      	ldr	r2, [r7, #16]
 800b32e:	4313      	orrs	r3, r2
 800b330:	613b      	str	r3, [r7, #16]
 800b332:	687b      	ldr	r3, [r7, #4]
 800b334:	4a18      	ldr	r2, [pc, #96]	; (800b398 <TIM_OC5_SetConfig+0xb4>)
 800b336:	4293      	cmp	r3, r2
 800b338:	d00f      	beq.n	800b35a <TIM_OC5_SetConfig+0x76>
 800b33a:	687b      	ldr	r3, [r7, #4]
 800b33c:	4a17      	ldr	r2, [pc, #92]	; (800b39c <TIM_OC5_SetConfig+0xb8>)
 800b33e:	4293      	cmp	r3, r2
 800b340:	d00b      	beq.n	800b35a <TIM_OC5_SetConfig+0x76>
 800b342:	687b      	ldr	r3, [r7, #4]
 800b344:	4a16      	ldr	r2, [pc, #88]	; (800b3a0 <TIM_OC5_SetConfig+0xbc>)
 800b346:	4293      	cmp	r3, r2
 800b348:	d007      	beq.n	800b35a <TIM_OC5_SetConfig+0x76>
 800b34a:	687b      	ldr	r3, [r7, #4]
 800b34c:	4a15      	ldr	r2, [pc, #84]	; (800b3a4 <TIM_OC5_SetConfig+0xc0>)
 800b34e:	4293      	cmp	r3, r2
 800b350:	d003      	beq.n	800b35a <TIM_OC5_SetConfig+0x76>
 800b352:	687b      	ldr	r3, [r7, #4]
 800b354:	4a14      	ldr	r2, [pc, #80]	; (800b3a8 <TIM_OC5_SetConfig+0xc4>)
 800b356:	4293      	cmp	r3, r2
 800b358:	d109      	bne.n	800b36e <TIM_OC5_SetConfig+0x8a>
 800b35a:	697b      	ldr	r3, [r7, #20]
 800b35c:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800b360:	617b      	str	r3, [r7, #20]
 800b362:	683b      	ldr	r3, [r7, #0]
 800b364:	695b      	ldr	r3, [r3, #20]
 800b366:	021b      	lsls	r3, r3, #8
 800b368:	697a      	ldr	r2, [r7, #20]
 800b36a:	4313      	orrs	r3, r2
 800b36c:	617b      	str	r3, [r7, #20]
 800b36e:	687b      	ldr	r3, [r7, #4]
 800b370:	697a      	ldr	r2, [r7, #20]
 800b372:	605a      	str	r2, [r3, #4]
 800b374:	687b      	ldr	r3, [r7, #4]
 800b376:	68fa      	ldr	r2, [r7, #12]
 800b378:	655a      	str	r2, [r3, #84]	; 0x54
 800b37a:	683b      	ldr	r3, [r7, #0]
 800b37c:	685a      	ldr	r2, [r3, #4]
 800b37e:	687b      	ldr	r3, [r7, #4]
 800b380:	659a      	str	r2, [r3, #88]	; 0x58
 800b382:	687b      	ldr	r3, [r7, #4]
 800b384:	693a      	ldr	r2, [r7, #16]
 800b386:	621a      	str	r2, [r3, #32]
 800b388:	bf00      	nop
 800b38a:	371c      	adds	r7, #28
 800b38c:	46bd      	mov	sp, r7
 800b38e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b392:	4770      	bx	lr
 800b394:	fffeff8f 	.word	0xfffeff8f
 800b398:	40010000 	.word	0x40010000
 800b39c:	40010400 	.word	0x40010400
 800b3a0:	40014000 	.word	0x40014000
 800b3a4:	40014400 	.word	0x40014400
 800b3a8:	40014800 	.word	0x40014800

0800b3ac <TIM_OC6_SetConfig>:
 800b3ac:	b480      	push	{r7}
 800b3ae:	b087      	sub	sp, #28
 800b3b0:	af00      	add	r7, sp, #0
 800b3b2:	6078      	str	r0, [r7, #4]
 800b3b4:	6039      	str	r1, [r7, #0]
 800b3b6:	687b      	ldr	r3, [r7, #4]
 800b3b8:	6a1b      	ldr	r3, [r3, #32]
 800b3ba:	f423 1280 	bic.w	r2, r3, #1048576	; 0x100000
 800b3be:	687b      	ldr	r3, [r7, #4]
 800b3c0:	621a      	str	r2, [r3, #32]
 800b3c2:	687b      	ldr	r3, [r7, #4]
 800b3c4:	6a1b      	ldr	r3, [r3, #32]
 800b3c6:	613b      	str	r3, [r7, #16]
 800b3c8:	687b      	ldr	r3, [r7, #4]
 800b3ca:	685b      	ldr	r3, [r3, #4]
 800b3cc:	617b      	str	r3, [r7, #20]
 800b3ce:	687b      	ldr	r3, [r7, #4]
 800b3d0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800b3d2:	60fb      	str	r3, [r7, #12]
 800b3d4:	68fa      	ldr	r2, [r7, #12]
 800b3d6:	4b22      	ldr	r3, [pc, #136]	; (800b460 <TIM_OC6_SetConfig+0xb4>)
 800b3d8:	4013      	ands	r3, r2
 800b3da:	60fb      	str	r3, [r7, #12]
 800b3dc:	683b      	ldr	r3, [r7, #0]
 800b3de:	681b      	ldr	r3, [r3, #0]
 800b3e0:	021b      	lsls	r3, r3, #8
 800b3e2:	68fa      	ldr	r2, [r7, #12]
 800b3e4:	4313      	orrs	r3, r2
 800b3e6:	60fb      	str	r3, [r7, #12]
 800b3e8:	693b      	ldr	r3, [r7, #16]
 800b3ea:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800b3ee:	613b      	str	r3, [r7, #16]
 800b3f0:	683b      	ldr	r3, [r7, #0]
 800b3f2:	689b      	ldr	r3, [r3, #8]
 800b3f4:	051b      	lsls	r3, r3, #20
 800b3f6:	693a      	ldr	r2, [r7, #16]
 800b3f8:	4313      	orrs	r3, r2
 800b3fa:	613b      	str	r3, [r7, #16]
 800b3fc:	687b      	ldr	r3, [r7, #4]
 800b3fe:	4a19      	ldr	r2, [pc, #100]	; (800b464 <TIM_OC6_SetConfig+0xb8>)
 800b400:	4293      	cmp	r3, r2
 800b402:	d00f      	beq.n	800b424 <TIM_OC6_SetConfig+0x78>
 800b404:	687b      	ldr	r3, [r7, #4]
 800b406:	4a18      	ldr	r2, [pc, #96]	; (800b468 <TIM_OC6_SetConfig+0xbc>)
 800b408:	4293      	cmp	r3, r2
 800b40a:	d00b      	beq.n	800b424 <TIM_OC6_SetConfig+0x78>
 800b40c:	687b      	ldr	r3, [r7, #4]
 800b40e:	4a17      	ldr	r2, [pc, #92]	; (800b46c <TIM_OC6_SetConfig+0xc0>)
 800b410:	4293      	cmp	r3, r2
 800b412:	d007      	beq.n	800b424 <TIM_OC6_SetConfig+0x78>
 800b414:	687b      	ldr	r3, [r7, #4]
 800b416:	4a16      	ldr	r2, [pc, #88]	; (800b470 <TIM_OC6_SetConfig+0xc4>)
 800b418:	4293      	cmp	r3, r2
 800b41a:	d003      	beq.n	800b424 <TIM_OC6_SetConfig+0x78>
 800b41c:	687b      	ldr	r3, [r7, #4]
 800b41e:	4a15      	ldr	r2, [pc, #84]	; (800b474 <TIM_OC6_SetConfig+0xc8>)
 800b420:	4293      	cmp	r3, r2
 800b422:	d109      	bne.n	800b438 <TIM_OC6_SetConfig+0x8c>
 800b424:	697b      	ldr	r3, [r7, #20]
 800b426:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800b42a:	617b      	str	r3, [r7, #20]
 800b42c:	683b      	ldr	r3, [r7, #0]
 800b42e:	695b      	ldr	r3, [r3, #20]
 800b430:	029b      	lsls	r3, r3, #10
 800b432:	697a      	ldr	r2, [r7, #20]
 800b434:	4313      	orrs	r3, r2
 800b436:	617b      	str	r3, [r7, #20]
 800b438:	687b      	ldr	r3, [r7, #4]
 800b43a:	697a      	ldr	r2, [r7, #20]
 800b43c:	605a      	str	r2, [r3, #4]
 800b43e:	687b      	ldr	r3, [r7, #4]
 800b440:	68fa      	ldr	r2, [r7, #12]
 800b442:	655a      	str	r2, [r3, #84]	; 0x54
 800b444:	683b      	ldr	r3, [r7, #0]
 800b446:	685a      	ldr	r2, [r3, #4]
 800b448:	687b      	ldr	r3, [r7, #4]
 800b44a:	65da      	str	r2, [r3, #92]	; 0x5c
 800b44c:	687b      	ldr	r3, [r7, #4]
 800b44e:	693a      	ldr	r2, [r7, #16]
 800b450:	621a      	str	r2, [r3, #32]
 800b452:	bf00      	nop
 800b454:	371c      	adds	r7, #28
 800b456:	46bd      	mov	sp, r7
 800b458:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b45c:	4770      	bx	lr
 800b45e:	bf00      	nop
 800b460:	feff8fff 	.word	0xfeff8fff
 800b464:	40010000 	.word	0x40010000
 800b468:	40010400 	.word	0x40010400
 800b46c:	40014000 	.word	0x40014000
 800b470:	40014400 	.word	0x40014400
 800b474:	40014800 	.word	0x40014800

0800b478 <TIM_CCxChannelCmd>:
 800b478:	b480      	push	{r7}
 800b47a:	b087      	sub	sp, #28
 800b47c:	af00      	add	r7, sp, #0
 800b47e:	60f8      	str	r0, [r7, #12]
 800b480:	60b9      	str	r1, [r7, #8]
 800b482:	607a      	str	r2, [r7, #4]
 800b484:	68bb      	ldr	r3, [r7, #8]
 800b486:	f003 031f 	and.w	r3, r3, #31
 800b48a:	2201      	movs	r2, #1
 800b48c:	fa02 f303 	lsl.w	r3, r2, r3
 800b490:	617b      	str	r3, [r7, #20]
 800b492:	68fb      	ldr	r3, [r7, #12]
 800b494:	6a1a      	ldr	r2, [r3, #32]
 800b496:	697b      	ldr	r3, [r7, #20]
 800b498:	43db      	mvns	r3, r3
 800b49a:	401a      	ands	r2, r3
 800b49c:	68fb      	ldr	r3, [r7, #12]
 800b49e:	621a      	str	r2, [r3, #32]
 800b4a0:	68fb      	ldr	r3, [r7, #12]
 800b4a2:	6a1a      	ldr	r2, [r3, #32]
 800b4a4:	68bb      	ldr	r3, [r7, #8]
 800b4a6:	f003 031f 	and.w	r3, r3, #31
 800b4aa:	6879      	ldr	r1, [r7, #4]
 800b4ac:	fa01 f303 	lsl.w	r3, r1, r3
 800b4b0:	431a      	orrs	r2, r3
 800b4b2:	68fb      	ldr	r3, [r7, #12]
 800b4b4:	621a      	str	r2, [r3, #32]
 800b4b6:	bf00      	nop
 800b4b8:	371c      	adds	r7, #28
 800b4ba:	46bd      	mov	sp, r7
 800b4bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b4c0:	4770      	bx	lr
	...

0800b4c4 <HAL_TIMEx_MasterConfigSynchronization>:
 800b4c4:	b480      	push	{r7}
 800b4c6:	b085      	sub	sp, #20
 800b4c8:	af00      	add	r7, sp, #0
 800b4ca:	6078      	str	r0, [r7, #4]
 800b4cc:	6039      	str	r1, [r7, #0]
 800b4ce:	687b      	ldr	r3, [r7, #4]
 800b4d0:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b4d4:	2b01      	cmp	r3, #1
 800b4d6:	d101      	bne.n	800b4dc <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800b4d8:	2302      	movs	r3, #2
 800b4da:	e077      	b.n	800b5cc <HAL_TIMEx_MasterConfigSynchronization+0x108>
 800b4dc:	687b      	ldr	r3, [r7, #4]
 800b4de:	2201      	movs	r2, #1
 800b4e0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b4e4:	687b      	ldr	r3, [r7, #4]
 800b4e6:	2202      	movs	r2, #2
 800b4e8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b4ec:	687b      	ldr	r3, [r7, #4]
 800b4ee:	681b      	ldr	r3, [r3, #0]
 800b4f0:	685b      	ldr	r3, [r3, #4]
 800b4f2:	60fb      	str	r3, [r7, #12]
 800b4f4:	687b      	ldr	r3, [r7, #4]
 800b4f6:	681b      	ldr	r3, [r3, #0]
 800b4f8:	689b      	ldr	r3, [r3, #8]
 800b4fa:	60bb      	str	r3, [r7, #8]
 800b4fc:	687b      	ldr	r3, [r7, #4]
 800b4fe:	681b      	ldr	r3, [r3, #0]
 800b500:	4a35      	ldr	r2, [pc, #212]	; (800b5d8 <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 800b502:	4293      	cmp	r3, r2
 800b504:	d004      	beq.n	800b510 <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 800b506:	687b      	ldr	r3, [r7, #4]
 800b508:	681b      	ldr	r3, [r3, #0]
 800b50a:	4a34      	ldr	r2, [pc, #208]	; (800b5dc <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 800b50c:	4293      	cmp	r3, r2
 800b50e:	d108      	bne.n	800b522 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800b510:	68fb      	ldr	r3, [r7, #12]
 800b512:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800b516:	60fb      	str	r3, [r7, #12]
 800b518:	683b      	ldr	r3, [r7, #0]
 800b51a:	685b      	ldr	r3, [r3, #4]
 800b51c:	68fa      	ldr	r2, [r7, #12]
 800b51e:	4313      	orrs	r3, r2
 800b520:	60fb      	str	r3, [r7, #12]
 800b522:	68fb      	ldr	r3, [r7, #12]
 800b524:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b528:	60fb      	str	r3, [r7, #12]
 800b52a:	683b      	ldr	r3, [r7, #0]
 800b52c:	681b      	ldr	r3, [r3, #0]
 800b52e:	68fa      	ldr	r2, [r7, #12]
 800b530:	4313      	orrs	r3, r2
 800b532:	60fb      	str	r3, [r7, #12]
 800b534:	687b      	ldr	r3, [r7, #4]
 800b536:	681b      	ldr	r3, [r3, #0]
 800b538:	68fa      	ldr	r2, [r7, #12]
 800b53a:	605a      	str	r2, [r3, #4]
 800b53c:	687b      	ldr	r3, [r7, #4]
 800b53e:	681b      	ldr	r3, [r3, #0]
 800b540:	4a25      	ldr	r2, [pc, #148]	; (800b5d8 <HAL_TIMEx_MasterConfigSynchronization+0x114>)
 800b542:	4293      	cmp	r3, r2
 800b544:	d02c      	beq.n	800b5a0 <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 800b546:	687b      	ldr	r3, [r7, #4]
 800b548:	681b      	ldr	r3, [r3, #0]
 800b54a:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b54e:	d027      	beq.n	800b5a0 <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 800b550:	687b      	ldr	r3, [r7, #4]
 800b552:	681b      	ldr	r3, [r3, #0]
 800b554:	4a22      	ldr	r2, [pc, #136]	; (800b5e0 <HAL_TIMEx_MasterConfigSynchronization+0x11c>)
 800b556:	4293      	cmp	r3, r2
 800b558:	d022      	beq.n	800b5a0 <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 800b55a:	687b      	ldr	r3, [r7, #4]
 800b55c:	681b      	ldr	r3, [r3, #0]
 800b55e:	4a21      	ldr	r2, [pc, #132]	; (800b5e4 <HAL_TIMEx_MasterConfigSynchronization+0x120>)
 800b560:	4293      	cmp	r3, r2
 800b562:	d01d      	beq.n	800b5a0 <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 800b564:	687b      	ldr	r3, [r7, #4]
 800b566:	681b      	ldr	r3, [r3, #0]
 800b568:	4a1f      	ldr	r2, [pc, #124]	; (800b5e8 <HAL_TIMEx_MasterConfigSynchronization+0x124>)
 800b56a:	4293      	cmp	r3, r2
 800b56c:	d018      	beq.n	800b5a0 <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 800b56e:	687b      	ldr	r3, [r7, #4]
 800b570:	681b      	ldr	r3, [r3, #0]
 800b572:	4a1a      	ldr	r2, [pc, #104]	; (800b5dc <HAL_TIMEx_MasterConfigSynchronization+0x118>)
 800b574:	4293      	cmp	r3, r2
 800b576:	d013      	beq.n	800b5a0 <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 800b578:	687b      	ldr	r3, [r7, #4]
 800b57a:	681b      	ldr	r3, [r3, #0]
 800b57c:	4a1b      	ldr	r2, [pc, #108]	; (800b5ec <HAL_TIMEx_MasterConfigSynchronization+0x128>)
 800b57e:	4293      	cmp	r3, r2
 800b580:	d00e      	beq.n	800b5a0 <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 800b582:	687b      	ldr	r3, [r7, #4]
 800b584:	681b      	ldr	r3, [r3, #0]
 800b586:	4a1a      	ldr	r2, [pc, #104]	; (800b5f0 <HAL_TIMEx_MasterConfigSynchronization+0x12c>)
 800b588:	4293      	cmp	r3, r2
 800b58a:	d009      	beq.n	800b5a0 <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 800b58c:	687b      	ldr	r3, [r7, #4]
 800b58e:	681b      	ldr	r3, [r3, #0]
 800b590:	4a18      	ldr	r2, [pc, #96]	; (800b5f4 <HAL_TIMEx_MasterConfigSynchronization+0x130>)
 800b592:	4293      	cmp	r3, r2
 800b594:	d004      	beq.n	800b5a0 <HAL_TIMEx_MasterConfigSynchronization+0xdc>
 800b596:	687b      	ldr	r3, [r7, #4]
 800b598:	681b      	ldr	r3, [r3, #0]
 800b59a:	4a17      	ldr	r2, [pc, #92]	; (800b5f8 <HAL_TIMEx_MasterConfigSynchronization+0x134>)
 800b59c:	4293      	cmp	r3, r2
 800b59e:	d10c      	bne.n	800b5ba <HAL_TIMEx_MasterConfigSynchronization+0xf6>
 800b5a0:	68bb      	ldr	r3, [r7, #8]
 800b5a2:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800b5a6:	60bb      	str	r3, [r7, #8]
 800b5a8:	683b      	ldr	r3, [r7, #0]
 800b5aa:	689b      	ldr	r3, [r3, #8]
 800b5ac:	68ba      	ldr	r2, [r7, #8]
 800b5ae:	4313      	orrs	r3, r2
 800b5b0:	60bb      	str	r3, [r7, #8]
 800b5b2:	687b      	ldr	r3, [r7, #4]
 800b5b4:	681b      	ldr	r3, [r3, #0]
 800b5b6:	68ba      	ldr	r2, [r7, #8]
 800b5b8:	609a      	str	r2, [r3, #8]
 800b5ba:	687b      	ldr	r3, [r7, #4]
 800b5bc:	2201      	movs	r2, #1
 800b5be:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b5c2:	687b      	ldr	r3, [r7, #4]
 800b5c4:	2200      	movs	r2, #0
 800b5c6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b5ca:	2300      	movs	r3, #0
 800b5cc:	4618      	mov	r0, r3
 800b5ce:	3714      	adds	r7, #20
 800b5d0:	46bd      	mov	sp, r7
 800b5d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5d6:	4770      	bx	lr
 800b5d8:	40010000 	.word	0x40010000
 800b5dc:	40010400 	.word	0x40010400
 800b5e0:	40000400 	.word	0x40000400
 800b5e4:	40000800 	.word	0x40000800
 800b5e8:	40000c00 	.word	0x40000c00
 800b5ec:	40001800 	.word	0x40001800
 800b5f0:	40014000 	.word	0x40014000
 800b5f4:	4000e000 	.word	0x4000e000
 800b5f8:	4000e400 	.word	0x4000e400

0800b5fc <HAL_TIMEx_ConfigBreakDeadTime>:
 800b5fc:	b480      	push	{r7}
 800b5fe:	b085      	sub	sp, #20
 800b600:	af00      	add	r7, sp, #0
 800b602:	6078      	str	r0, [r7, #4]
 800b604:	6039      	str	r1, [r7, #0]
 800b606:	2300      	movs	r3, #0
 800b608:	60fb      	str	r3, [r7, #12]
 800b60a:	687b      	ldr	r3, [r7, #4]
 800b60c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b610:	2b01      	cmp	r3, #1
 800b612:	d101      	bne.n	800b618 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 800b614:	2302      	movs	r3, #2
 800b616:	e087      	b.n	800b728 <HAL_TIMEx_ConfigBreakDeadTime+0x12c>
 800b618:	687b      	ldr	r3, [r7, #4]
 800b61a:	2201      	movs	r2, #1
 800b61c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b620:	68fb      	ldr	r3, [r7, #12]
 800b622:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 800b626:	683b      	ldr	r3, [r7, #0]
 800b628:	68db      	ldr	r3, [r3, #12]
 800b62a:	4313      	orrs	r3, r2
 800b62c:	60fb      	str	r3, [r7, #12]
 800b62e:	68fb      	ldr	r3, [r7, #12]
 800b630:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800b634:	683b      	ldr	r3, [r7, #0]
 800b636:	689b      	ldr	r3, [r3, #8]
 800b638:	4313      	orrs	r3, r2
 800b63a:	60fb      	str	r3, [r7, #12]
 800b63c:	68fb      	ldr	r3, [r7, #12]
 800b63e:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 800b642:	683b      	ldr	r3, [r7, #0]
 800b644:	685b      	ldr	r3, [r3, #4]
 800b646:	4313      	orrs	r3, r2
 800b648:	60fb      	str	r3, [r7, #12]
 800b64a:	68fb      	ldr	r3, [r7, #12]
 800b64c:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 800b650:	683b      	ldr	r3, [r7, #0]
 800b652:	681b      	ldr	r3, [r3, #0]
 800b654:	4313      	orrs	r3, r2
 800b656:	60fb      	str	r3, [r7, #12]
 800b658:	68fb      	ldr	r3, [r7, #12]
 800b65a:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800b65e:	683b      	ldr	r3, [r7, #0]
 800b660:	691b      	ldr	r3, [r3, #16]
 800b662:	4313      	orrs	r3, r2
 800b664:	60fb      	str	r3, [r7, #12]
 800b666:	68fb      	ldr	r3, [r7, #12]
 800b668:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 800b66c:	683b      	ldr	r3, [r7, #0]
 800b66e:	695b      	ldr	r3, [r3, #20]
 800b670:	4313      	orrs	r3, r2
 800b672:	60fb      	str	r3, [r7, #12]
 800b674:	68fb      	ldr	r3, [r7, #12]
 800b676:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 800b67a:	683b      	ldr	r3, [r7, #0]
 800b67c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b67e:	4313      	orrs	r3, r2
 800b680:	60fb      	str	r3, [r7, #12]
 800b682:	68fb      	ldr	r3, [r7, #12]
 800b684:	f423 2270 	bic.w	r2, r3, #983040	; 0xf0000
 800b688:	683b      	ldr	r3, [r7, #0]
 800b68a:	699b      	ldr	r3, [r3, #24]
 800b68c:	041b      	lsls	r3, r3, #16
 800b68e:	4313      	orrs	r3, r2
 800b690:	60fb      	str	r3, [r7, #12]
 800b692:	687b      	ldr	r3, [r7, #4]
 800b694:	681b      	ldr	r3, [r3, #0]
 800b696:	4a27      	ldr	r2, [pc, #156]	; (800b734 <HAL_TIMEx_ConfigBreakDeadTime+0x138>)
 800b698:	4293      	cmp	r3, r2
 800b69a:	d004      	beq.n	800b6a6 <HAL_TIMEx_ConfigBreakDeadTime+0xaa>
 800b69c:	687b      	ldr	r3, [r7, #4]
 800b69e:	681b      	ldr	r3, [r3, #0]
 800b6a0:	4a25      	ldr	r2, [pc, #148]	; (800b738 <HAL_TIMEx_ConfigBreakDeadTime+0x13c>)
 800b6a2:	4293      	cmp	r3, r2
 800b6a4:	d106      	bne.n	800b6b4 <HAL_TIMEx_ConfigBreakDeadTime+0xb8>
 800b6a6:	68fb      	ldr	r3, [r7, #12]
 800b6a8:	f023 5280 	bic.w	r2, r3, #268435456	; 0x10000000
 800b6ac:	683b      	ldr	r3, [r7, #0]
 800b6ae:	69db      	ldr	r3, [r3, #28]
 800b6b0:	4313      	orrs	r3, r2
 800b6b2:	60fb      	str	r3, [r7, #12]
 800b6b4:	687b      	ldr	r3, [r7, #4]
 800b6b6:	681b      	ldr	r3, [r3, #0]
 800b6b8:	4a1e      	ldr	r2, [pc, #120]	; (800b734 <HAL_TIMEx_ConfigBreakDeadTime+0x138>)
 800b6ba:	4293      	cmp	r3, r2
 800b6bc:	d004      	beq.n	800b6c8 <HAL_TIMEx_ConfigBreakDeadTime+0xcc>
 800b6be:	687b      	ldr	r3, [r7, #4]
 800b6c0:	681b      	ldr	r3, [r3, #0]
 800b6c2:	4a1d      	ldr	r2, [pc, #116]	; (800b738 <HAL_TIMEx_ConfigBreakDeadTime+0x13c>)
 800b6c4:	4293      	cmp	r3, r2
 800b6c6:	d126      	bne.n	800b716 <HAL_TIMEx_ConfigBreakDeadTime+0x11a>
 800b6c8:	68fb      	ldr	r3, [r7, #12]
 800b6ca:	f423 0270 	bic.w	r2, r3, #15728640	; 0xf00000
 800b6ce:	683b      	ldr	r3, [r7, #0]
 800b6d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b6d2:	051b      	lsls	r3, r3, #20
 800b6d4:	4313      	orrs	r3, r2
 800b6d6:	60fb      	str	r3, [r7, #12]
 800b6d8:	68fb      	ldr	r3, [r7, #12]
 800b6da:	f023 7280 	bic.w	r2, r3, #16777216	; 0x1000000
 800b6de:	683b      	ldr	r3, [r7, #0]
 800b6e0:	6a1b      	ldr	r3, [r3, #32]
 800b6e2:	4313      	orrs	r3, r2
 800b6e4:	60fb      	str	r3, [r7, #12]
 800b6e6:	68fb      	ldr	r3, [r7, #12]
 800b6e8:	f023 7200 	bic.w	r2, r3, #33554432	; 0x2000000
 800b6ec:	683b      	ldr	r3, [r7, #0]
 800b6ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b6f0:	4313      	orrs	r3, r2
 800b6f2:	60fb      	str	r3, [r7, #12]
 800b6f4:	687b      	ldr	r3, [r7, #4]
 800b6f6:	681b      	ldr	r3, [r3, #0]
 800b6f8:	4a0e      	ldr	r2, [pc, #56]	; (800b734 <HAL_TIMEx_ConfigBreakDeadTime+0x138>)
 800b6fa:	4293      	cmp	r3, r2
 800b6fc:	d004      	beq.n	800b708 <HAL_TIMEx_ConfigBreakDeadTime+0x10c>
 800b6fe:	687b      	ldr	r3, [r7, #4]
 800b700:	681b      	ldr	r3, [r3, #0]
 800b702:	4a0d      	ldr	r2, [pc, #52]	; (800b738 <HAL_TIMEx_ConfigBreakDeadTime+0x13c>)
 800b704:	4293      	cmp	r3, r2
 800b706:	d106      	bne.n	800b716 <HAL_TIMEx_ConfigBreakDeadTime+0x11a>
 800b708:	68fb      	ldr	r3, [r7, #12]
 800b70a:	f023 5200 	bic.w	r2, r3, #536870912	; 0x20000000
 800b70e:	683b      	ldr	r3, [r7, #0]
 800b710:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b712:	4313      	orrs	r3, r2
 800b714:	60fb      	str	r3, [r7, #12]
 800b716:	687b      	ldr	r3, [r7, #4]
 800b718:	681b      	ldr	r3, [r3, #0]
 800b71a:	68fa      	ldr	r2, [r7, #12]
 800b71c:	645a      	str	r2, [r3, #68]	; 0x44
 800b71e:	687b      	ldr	r3, [r7, #4]
 800b720:	2200      	movs	r2, #0
 800b722:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b726:	2300      	movs	r3, #0
 800b728:	4618      	mov	r0, r3
 800b72a:	3714      	adds	r7, #20
 800b72c:	46bd      	mov	sp, r7
 800b72e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b732:	4770      	bx	lr
 800b734:	40010000 	.word	0x40010000
 800b738:	40010400 	.word	0x40010400

0800b73c <HAL_TIMEx_CommutCallback>:
 800b73c:	b480      	push	{r7}
 800b73e:	b083      	sub	sp, #12
 800b740:	af00      	add	r7, sp, #0
 800b742:	6078      	str	r0, [r7, #4]
 800b744:	bf00      	nop
 800b746:	370c      	adds	r7, #12
 800b748:	46bd      	mov	sp, r7
 800b74a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b74e:	4770      	bx	lr

0800b750 <HAL_TIMEx_BreakCallback>:
 800b750:	b480      	push	{r7}
 800b752:	b083      	sub	sp, #12
 800b754:	af00      	add	r7, sp, #0
 800b756:	6078      	str	r0, [r7, #4]
 800b758:	bf00      	nop
 800b75a:	370c      	adds	r7, #12
 800b75c:	46bd      	mov	sp, r7
 800b75e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b762:	4770      	bx	lr

0800b764 <HAL_TIMEx_Break2Callback>:
 800b764:	b480      	push	{r7}
 800b766:	b083      	sub	sp, #12
 800b768:	af00      	add	r7, sp, #0
 800b76a:	6078      	str	r0, [r7, #4]
 800b76c:	bf00      	nop
 800b76e:	370c      	adds	r7, #12
 800b770:	46bd      	mov	sp, r7
 800b772:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b776:	4770      	bx	lr

0800b778 <HAL_UART_Init>:
 800b778:	b580      	push	{r7, lr}
 800b77a:	b082      	sub	sp, #8
 800b77c:	af00      	add	r7, sp, #0
 800b77e:	6078      	str	r0, [r7, #4]
 800b780:	687b      	ldr	r3, [r7, #4]
 800b782:	2b00      	cmp	r3, #0
 800b784:	d101      	bne.n	800b78a <HAL_UART_Init+0x12>
 800b786:	2301      	movs	r3, #1
 800b788:	e042      	b.n	800b810 <HAL_UART_Init+0x98>
 800b78a:	687b      	ldr	r3, [r7, #4]
 800b78c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b790:	2b00      	cmp	r3, #0
 800b792:	d106      	bne.n	800b7a2 <HAL_UART_Init+0x2a>
 800b794:	687b      	ldr	r3, [r7, #4]
 800b796:	2200      	movs	r2, #0
 800b798:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800b79c:	6878      	ldr	r0, [r7, #4]
 800b79e:	f7f8 fd05 	bl	80041ac <HAL_UART_MspInit>
 800b7a2:	687b      	ldr	r3, [r7, #4]
 800b7a4:	2224      	movs	r2, #36	; 0x24
 800b7a6:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800b7aa:	687b      	ldr	r3, [r7, #4]
 800b7ac:	681b      	ldr	r3, [r3, #0]
 800b7ae:	681a      	ldr	r2, [r3, #0]
 800b7b0:	687b      	ldr	r3, [r7, #4]
 800b7b2:	681b      	ldr	r3, [r3, #0]
 800b7b4:	f022 0201 	bic.w	r2, r2, #1
 800b7b8:	601a      	str	r2, [r3, #0]
 800b7ba:	6878      	ldr	r0, [r7, #4]
 800b7bc:	f000 fcdc 	bl	800c178 <UART_SetConfig>
 800b7c0:	4603      	mov	r3, r0
 800b7c2:	2b01      	cmp	r3, #1
 800b7c4:	d101      	bne.n	800b7ca <HAL_UART_Init+0x52>
 800b7c6:	2301      	movs	r3, #1
 800b7c8:	e022      	b.n	800b810 <HAL_UART_Init+0x98>
 800b7ca:	687b      	ldr	r3, [r7, #4]
 800b7cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b7ce:	2b00      	cmp	r3, #0
 800b7d0:	d002      	beq.n	800b7d8 <HAL_UART_Init+0x60>
 800b7d2:	6878      	ldr	r0, [r7, #4]
 800b7d4:	f001 fb3c 	bl	800ce50 <UART_AdvFeatureConfig>
 800b7d8:	687b      	ldr	r3, [r7, #4]
 800b7da:	681b      	ldr	r3, [r3, #0]
 800b7dc:	685a      	ldr	r2, [r3, #4]
 800b7de:	687b      	ldr	r3, [r7, #4]
 800b7e0:	681b      	ldr	r3, [r3, #0]
 800b7e2:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800b7e6:	605a      	str	r2, [r3, #4]
 800b7e8:	687b      	ldr	r3, [r7, #4]
 800b7ea:	681b      	ldr	r3, [r3, #0]
 800b7ec:	689a      	ldr	r2, [r3, #8]
 800b7ee:	687b      	ldr	r3, [r7, #4]
 800b7f0:	681b      	ldr	r3, [r3, #0]
 800b7f2:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800b7f6:	609a      	str	r2, [r3, #8]
 800b7f8:	687b      	ldr	r3, [r7, #4]
 800b7fa:	681b      	ldr	r3, [r3, #0]
 800b7fc:	681a      	ldr	r2, [r3, #0]
 800b7fe:	687b      	ldr	r3, [r7, #4]
 800b800:	681b      	ldr	r3, [r3, #0]
 800b802:	f042 0201 	orr.w	r2, r2, #1
 800b806:	601a      	str	r2, [r3, #0]
 800b808:	6878      	ldr	r0, [r7, #4]
 800b80a:	f001 fbc3 	bl	800cf94 <UART_CheckIdleState>
 800b80e:	4603      	mov	r3, r0
 800b810:	4618      	mov	r0, r3
 800b812:	3708      	adds	r7, #8
 800b814:	46bd      	mov	sp, r7
 800b816:	bd80      	pop	{r7, pc}

0800b818 <HAL_UART_Transmit_DMA>:
 800b818:	b580      	push	{r7, lr}
 800b81a:	b08a      	sub	sp, #40	; 0x28
 800b81c:	af00      	add	r7, sp, #0
 800b81e:	60f8      	str	r0, [r7, #12]
 800b820:	60b9      	str	r1, [r7, #8]
 800b822:	4613      	mov	r3, r2
 800b824:	80fb      	strh	r3, [r7, #6]
 800b826:	68fb      	ldr	r3, [r7, #12]
 800b828:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800b82c:	2b20      	cmp	r3, #32
 800b82e:	d17a      	bne.n	800b926 <HAL_UART_Transmit_DMA+0x10e>
 800b830:	68bb      	ldr	r3, [r7, #8]
 800b832:	2b00      	cmp	r3, #0
 800b834:	d002      	beq.n	800b83c <HAL_UART_Transmit_DMA+0x24>
 800b836:	88fb      	ldrh	r3, [r7, #6]
 800b838:	2b00      	cmp	r3, #0
 800b83a:	d101      	bne.n	800b840 <HAL_UART_Transmit_DMA+0x28>
 800b83c:	2301      	movs	r3, #1
 800b83e:	e073      	b.n	800b928 <HAL_UART_Transmit_DMA+0x110>
 800b840:	68fb      	ldr	r3, [r7, #12]
 800b842:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800b846:	2b01      	cmp	r3, #1
 800b848:	d101      	bne.n	800b84e <HAL_UART_Transmit_DMA+0x36>
 800b84a:	2302      	movs	r3, #2
 800b84c:	e06c      	b.n	800b928 <HAL_UART_Transmit_DMA+0x110>
 800b84e:	68fb      	ldr	r3, [r7, #12]
 800b850:	2201      	movs	r2, #1
 800b852:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800b856:	68fb      	ldr	r3, [r7, #12]
 800b858:	68ba      	ldr	r2, [r7, #8]
 800b85a:	651a      	str	r2, [r3, #80]	; 0x50
 800b85c:	68fb      	ldr	r3, [r7, #12]
 800b85e:	88fa      	ldrh	r2, [r7, #6]
 800b860:	f8a3 2054 	strh.w	r2, [r3, #84]	; 0x54
 800b864:	68fb      	ldr	r3, [r7, #12]
 800b866:	88fa      	ldrh	r2, [r7, #6]
 800b868:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 800b86c:	68fb      	ldr	r3, [r7, #12]
 800b86e:	2200      	movs	r2, #0
 800b870:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800b874:	68fb      	ldr	r3, [r7, #12]
 800b876:	2221      	movs	r2, #33	; 0x21
 800b878:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800b87c:	68fb      	ldr	r3, [r7, #12]
 800b87e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b880:	2b00      	cmp	r3, #0
 800b882:	d02c      	beq.n	800b8de <HAL_UART_Transmit_DMA+0xc6>
 800b884:	68fb      	ldr	r3, [r7, #12]
 800b886:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b888:	4a29      	ldr	r2, [pc, #164]	; (800b930 <HAL_UART_Transmit_DMA+0x118>)
 800b88a:	63da      	str	r2, [r3, #60]	; 0x3c
 800b88c:	68fb      	ldr	r3, [r7, #12]
 800b88e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b890:	4a28      	ldr	r2, [pc, #160]	; (800b934 <HAL_UART_Transmit_DMA+0x11c>)
 800b892:	641a      	str	r2, [r3, #64]	; 0x40
 800b894:	68fb      	ldr	r3, [r7, #12]
 800b896:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b898:	4a27      	ldr	r2, [pc, #156]	; (800b938 <HAL_UART_Transmit_DMA+0x120>)
 800b89a:	64da      	str	r2, [r3, #76]	; 0x4c
 800b89c:	68fb      	ldr	r3, [r7, #12]
 800b89e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800b8a0:	2200      	movs	r2, #0
 800b8a2:	651a      	str	r2, [r3, #80]	; 0x50
 800b8a4:	68fb      	ldr	r3, [r7, #12]
 800b8a6:	6f98      	ldr	r0, [r3, #120]	; 0x78
 800b8a8:	68fb      	ldr	r3, [r7, #12]
 800b8aa:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800b8ac:	4619      	mov	r1, r3
 800b8ae:	68fb      	ldr	r3, [r7, #12]
 800b8b0:	681b      	ldr	r3, [r3, #0]
 800b8b2:	3328      	adds	r3, #40	; 0x28
 800b8b4:	461a      	mov	r2, r3
 800b8b6:	88fb      	ldrh	r3, [r7, #6]
 800b8b8:	f7f9 fd02 	bl	80052c0 <HAL_DMA_Start_IT>
 800b8bc:	4603      	mov	r3, r0
 800b8be:	2b00      	cmp	r3, #0
 800b8c0:	d00d      	beq.n	800b8de <HAL_UART_Transmit_DMA+0xc6>
 800b8c2:	68fb      	ldr	r3, [r7, #12]
 800b8c4:	2210      	movs	r2, #16
 800b8c6:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800b8ca:	68fb      	ldr	r3, [r7, #12]
 800b8cc:	2200      	movs	r2, #0
 800b8ce:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800b8d2:	68fb      	ldr	r3, [r7, #12]
 800b8d4:	2220      	movs	r2, #32
 800b8d6:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800b8da:	2301      	movs	r3, #1
 800b8dc:	e024      	b.n	800b928 <HAL_UART_Transmit_DMA+0x110>
 800b8de:	68fb      	ldr	r3, [r7, #12]
 800b8e0:	681b      	ldr	r3, [r3, #0]
 800b8e2:	2240      	movs	r2, #64	; 0x40
 800b8e4:	621a      	str	r2, [r3, #32]
 800b8e6:	68fb      	ldr	r3, [r7, #12]
 800b8e8:	2200      	movs	r2, #0
 800b8ea:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800b8ee:	68fb      	ldr	r3, [r7, #12]
 800b8f0:	681b      	ldr	r3, [r3, #0]
 800b8f2:	3308      	adds	r3, #8
 800b8f4:	617b      	str	r3, [r7, #20]
 800b8f6:	697b      	ldr	r3, [r7, #20]
 800b8f8:	e853 3f00 	ldrex	r3, [r3]
 800b8fc:	613b      	str	r3, [r7, #16]
 800b8fe:	693b      	ldr	r3, [r7, #16]
 800b900:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800b904:	627b      	str	r3, [r7, #36]	; 0x24
 800b906:	68fb      	ldr	r3, [r7, #12]
 800b908:	681b      	ldr	r3, [r3, #0]
 800b90a:	3308      	adds	r3, #8
 800b90c:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800b90e:	623a      	str	r2, [r7, #32]
 800b910:	61fb      	str	r3, [r7, #28]
 800b912:	69f9      	ldr	r1, [r7, #28]
 800b914:	6a3a      	ldr	r2, [r7, #32]
 800b916:	e841 2300 	strex	r3, r2, [r1]
 800b91a:	61bb      	str	r3, [r7, #24]
 800b91c:	69bb      	ldr	r3, [r7, #24]
 800b91e:	2b00      	cmp	r3, #0
 800b920:	d1e5      	bne.n	800b8ee <HAL_UART_Transmit_DMA+0xd6>
 800b922:	2300      	movs	r3, #0
 800b924:	e000      	b.n	800b928 <HAL_UART_Transmit_DMA+0x110>
 800b926:	2302      	movs	r3, #2
 800b928:	4618      	mov	r0, r3
 800b92a:	3728      	adds	r7, #40	; 0x28
 800b92c:	46bd      	mov	sp, r7
 800b92e:	bd80      	pop	{r7, pc}
 800b930:	0800d45d 	.word	0x0800d45d
 800b934:	0800d4f3 	.word	0x0800d4f3
 800b938:	0800d669 	.word	0x0800d669

0800b93c <HAL_UART_Receive_DMA>:
 800b93c:	b580      	push	{r7, lr}
 800b93e:	b08a      	sub	sp, #40	; 0x28
 800b940:	af00      	add	r7, sp, #0
 800b942:	60f8      	str	r0, [r7, #12]
 800b944:	60b9      	str	r1, [r7, #8]
 800b946:	4613      	mov	r3, r2
 800b948:	80fb      	strh	r3, [r7, #6]
 800b94a:	68fb      	ldr	r3, [r7, #12]
 800b94c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800b950:	2b20      	cmp	r3, #32
 800b952:	d142      	bne.n	800b9da <HAL_UART_Receive_DMA+0x9e>
 800b954:	68bb      	ldr	r3, [r7, #8]
 800b956:	2b00      	cmp	r3, #0
 800b958:	d002      	beq.n	800b960 <HAL_UART_Receive_DMA+0x24>
 800b95a:	88fb      	ldrh	r3, [r7, #6]
 800b95c:	2b00      	cmp	r3, #0
 800b95e:	d101      	bne.n	800b964 <HAL_UART_Receive_DMA+0x28>
 800b960:	2301      	movs	r3, #1
 800b962:	e03b      	b.n	800b9dc <HAL_UART_Receive_DMA+0xa0>
 800b964:	68fb      	ldr	r3, [r7, #12]
 800b966:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800b96a:	2b01      	cmp	r3, #1
 800b96c:	d101      	bne.n	800b972 <HAL_UART_Receive_DMA+0x36>
 800b96e:	2302      	movs	r3, #2
 800b970:	e034      	b.n	800b9dc <HAL_UART_Receive_DMA+0xa0>
 800b972:	68fb      	ldr	r3, [r7, #12]
 800b974:	2201      	movs	r2, #1
 800b976:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800b97a:	68fb      	ldr	r3, [r7, #12]
 800b97c:	2200      	movs	r2, #0
 800b97e:	66da      	str	r2, [r3, #108]	; 0x6c
 800b980:	68fb      	ldr	r3, [r7, #12]
 800b982:	681b      	ldr	r3, [r3, #0]
 800b984:	4a17      	ldr	r2, [pc, #92]	; (800b9e4 <HAL_UART_Receive_DMA+0xa8>)
 800b986:	4293      	cmp	r3, r2
 800b988:	d01f      	beq.n	800b9ca <HAL_UART_Receive_DMA+0x8e>
 800b98a:	68fb      	ldr	r3, [r7, #12]
 800b98c:	681b      	ldr	r3, [r3, #0]
 800b98e:	685b      	ldr	r3, [r3, #4]
 800b990:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800b994:	2b00      	cmp	r3, #0
 800b996:	d018      	beq.n	800b9ca <HAL_UART_Receive_DMA+0x8e>
 800b998:	68fb      	ldr	r3, [r7, #12]
 800b99a:	681b      	ldr	r3, [r3, #0]
 800b99c:	617b      	str	r3, [r7, #20]
 800b99e:	697b      	ldr	r3, [r7, #20]
 800b9a0:	e853 3f00 	ldrex	r3, [r3]
 800b9a4:	613b      	str	r3, [r7, #16]
 800b9a6:	693b      	ldr	r3, [r7, #16]
 800b9a8:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800b9ac:	627b      	str	r3, [r7, #36]	; 0x24
 800b9ae:	68fb      	ldr	r3, [r7, #12]
 800b9b0:	681b      	ldr	r3, [r3, #0]
 800b9b2:	461a      	mov	r2, r3
 800b9b4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800b9b6:	623b      	str	r3, [r7, #32]
 800b9b8:	61fa      	str	r2, [r7, #28]
 800b9ba:	69f9      	ldr	r1, [r7, #28]
 800b9bc:	6a3a      	ldr	r2, [r7, #32]
 800b9be:	e841 2300 	strex	r3, r2, [r1]
 800b9c2:	61bb      	str	r3, [r7, #24]
 800b9c4:	69bb      	ldr	r3, [r7, #24]
 800b9c6:	2b00      	cmp	r3, #0
 800b9c8:	d1e6      	bne.n	800b998 <HAL_UART_Receive_DMA+0x5c>
 800b9ca:	88fb      	ldrh	r3, [r7, #6]
 800b9cc:	461a      	mov	r2, r3
 800b9ce:	68b9      	ldr	r1, [r7, #8]
 800b9d0:	68f8      	ldr	r0, [r7, #12]
 800b9d2:	f001 fbf3 	bl	800d1bc <UART_Start_Receive_DMA>
 800b9d6:	4603      	mov	r3, r0
 800b9d8:	e000      	b.n	800b9dc <HAL_UART_Receive_DMA+0xa0>
 800b9da:	2302      	movs	r3, #2
 800b9dc:	4618      	mov	r0, r3
 800b9de:	3728      	adds	r7, #40	; 0x28
 800b9e0:	46bd      	mov	sp, r7
 800b9e2:	bd80      	pop	{r7, pc}
 800b9e4:	58000c00 	.word	0x58000c00

0800b9e8 <HAL_UART_IRQHandler>:
 800b9e8:	b580      	push	{r7, lr}
 800b9ea:	b0ba      	sub	sp, #232	; 0xe8
 800b9ec:	af00      	add	r7, sp, #0
 800b9ee:	6078      	str	r0, [r7, #4]
 800b9f0:	687b      	ldr	r3, [r7, #4]
 800b9f2:	681b      	ldr	r3, [r3, #0]
 800b9f4:	69db      	ldr	r3, [r3, #28]
 800b9f6:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 800b9fa:	687b      	ldr	r3, [r7, #4]
 800b9fc:	681b      	ldr	r3, [r3, #0]
 800b9fe:	681b      	ldr	r3, [r3, #0]
 800ba00:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 800ba04:	687b      	ldr	r3, [r7, #4]
 800ba06:	681b      	ldr	r3, [r3, #0]
 800ba08:	689b      	ldr	r3, [r3, #8]
 800ba0a:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 800ba0e:	f8d7 20e4 	ldr.w	r2, [r7, #228]	; 0xe4
 800ba12:	f640 030f 	movw	r3, #2063	; 0x80f
 800ba16:	4013      	ands	r3, r2
 800ba18:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800ba1c:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800ba20:	2b00      	cmp	r3, #0
 800ba22:	d11b      	bne.n	800ba5c <HAL_UART_IRQHandler+0x74>
 800ba24:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800ba28:	f003 0320 	and.w	r3, r3, #32
 800ba2c:	2b00      	cmp	r3, #0
 800ba2e:	d015      	beq.n	800ba5c <HAL_UART_IRQHandler+0x74>
 800ba30:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800ba34:	f003 0320 	and.w	r3, r3, #32
 800ba38:	2b00      	cmp	r3, #0
 800ba3a:	d105      	bne.n	800ba48 <HAL_UART_IRQHandler+0x60>
 800ba3c:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800ba40:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800ba44:	2b00      	cmp	r3, #0
 800ba46:	d009      	beq.n	800ba5c <HAL_UART_IRQHandler+0x74>
 800ba48:	687b      	ldr	r3, [r7, #4]
 800ba4a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800ba4c:	2b00      	cmp	r3, #0
 800ba4e:	f000 835a 	beq.w	800c106 <HAL_UART_IRQHandler+0x71e>
 800ba52:	687b      	ldr	r3, [r7, #4]
 800ba54:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800ba56:	6878      	ldr	r0, [r7, #4]
 800ba58:	4798      	blx	r3
 800ba5a:	e354      	b.n	800c106 <HAL_UART_IRQHandler+0x71e>
 800ba5c:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 800ba60:	2b00      	cmp	r3, #0
 800ba62:	f000 811f 	beq.w	800bca4 <HAL_UART_IRQHandler+0x2bc>
 800ba66:	f8d7 20dc 	ldr.w	r2, [r7, #220]	; 0xdc
 800ba6a:	4b8b      	ldr	r3, [pc, #556]	; (800bc98 <HAL_UART_IRQHandler+0x2b0>)
 800ba6c:	4013      	ands	r3, r2
 800ba6e:	2b00      	cmp	r3, #0
 800ba70:	d106      	bne.n	800ba80 <HAL_UART_IRQHandler+0x98>
 800ba72:	f8d7 20e0 	ldr.w	r2, [r7, #224]	; 0xe0
 800ba76:	4b89      	ldr	r3, [pc, #548]	; (800bc9c <HAL_UART_IRQHandler+0x2b4>)
 800ba78:	4013      	ands	r3, r2
 800ba7a:	2b00      	cmp	r3, #0
 800ba7c:	f000 8112 	beq.w	800bca4 <HAL_UART_IRQHandler+0x2bc>
 800ba80:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800ba84:	f003 0301 	and.w	r3, r3, #1
 800ba88:	2b00      	cmp	r3, #0
 800ba8a:	d011      	beq.n	800bab0 <HAL_UART_IRQHandler+0xc8>
 800ba8c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800ba90:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ba94:	2b00      	cmp	r3, #0
 800ba96:	d00b      	beq.n	800bab0 <HAL_UART_IRQHandler+0xc8>
 800ba98:	687b      	ldr	r3, [r7, #4]
 800ba9a:	681b      	ldr	r3, [r3, #0]
 800ba9c:	2201      	movs	r2, #1
 800ba9e:	621a      	str	r2, [r3, #32]
 800baa0:	687b      	ldr	r3, [r7, #4]
 800baa2:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800baa6:	f043 0201 	orr.w	r2, r3, #1
 800baaa:	687b      	ldr	r3, [r7, #4]
 800baac:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800bab0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800bab4:	f003 0302 	and.w	r3, r3, #2
 800bab8:	2b00      	cmp	r3, #0
 800baba:	d011      	beq.n	800bae0 <HAL_UART_IRQHandler+0xf8>
 800babc:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800bac0:	f003 0301 	and.w	r3, r3, #1
 800bac4:	2b00      	cmp	r3, #0
 800bac6:	d00b      	beq.n	800bae0 <HAL_UART_IRQHandler+0xf8>
 800bac8:	687b      	ldr	r3, [r7, #4]
 800baca:	681b      	ldr	r3, [r3, #0]
 800bacc:	2202      	movs	r2, #2
 800bace:	621a      	str	r2, [r3, #32]
 800bad0:	687b      	ldr	r3, [r7, #4]
 800bad2:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800bad6:	f043 0204 	orr.w	r2, r3, #4
 800bada:	687b      	ldr	r3, [r7, #4]
 800badc:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800bae0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800bae4:	f003 0304 	and.w	r3, r3, #4
 800bae8:	2b00      	cmp	r3, #0
 800baea:	d011      	beq.n	800bb10 <HAL_UART_IRQHandler+0x128>
 800baec:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800baf0:	f003 0301 	and.w	r3, r3, #1
 800baf4:	2b00      	cmp	r3, #0
 800baf6:	d00b      	beq.n	800bb10 <HAL_UART_IRQHandler+0x128>
 800baf8:	687b      	ldr	r3, [r7, #4]
 800bafa:	681b      	ldr	r3, [r3, #0]
 800bafc:	2204      	movs	r2, #4
 800bafe:	621a      	str	r2, [r3, #32]
 800bb00:	687b      	ldr	r3, [r7, #4]
 800bb02:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800bb06:	f043 0202 	orr.w	r2, r3, #2
 800bb0a:	687b      	ldr	r3, [r7, #4]
 800bb0c:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800bb10:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800bb14:	f003 0308 	and.w	r3, r3, #8
 800bb18:	2b00      	cmp	r3, #0
 800bb1a:	d017      	beq.n	800bb4c <HAL_UART_IRQHandler+0x164>
 800bb1c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800bb20:	f003 0320 	and.w	r3, r3, #32
 800bb24:	2b00      	cmp	r3, #0
 800bb26:	d105      	bne.n	800bb34 <HAL_UART_IRQHandler+0x14c>
 800bb28:	f8d7 20dc 	ldr.w	r2, [r7, #220]	; 0xdc
 800bb2c:	4b5a      	ldr	r3, [pc, #360]	; (800bc98 <HAL_UART_IRQHandler+0x2b0>)
 800bb2e:	4013      	ands	r3, r2
 800bb30:	2b00      	cmp	r3, #0
 800bb32:	d00b      	beq.n	800bb4c <HAL_UART_IRQHandler+0x164>
 800bb34:	687b      	ldr	r3, [r7, #4]
 800bb36:	681b      	ldr	r3, [r3, #0]
 800bb38:	2208      	movs	r2, #8
 800bb3a:	621a      	str	r2, [r3, #32]
 800bb3c:	687b      	ldr	r3, [r7, #4]
 800bb3e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800bb42:	f043 0208 	orr.w	r2, r3, #8
 800bb46:	687b      	ldr	r3, [r7, #4]
 800bb48:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800bb4c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800bb50:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800bb54:	2b00      	cmp	r3, #0
 800bb56:	d012      	beq.n	800bb7e <HAL_UART_IRQHandler+0x196>
 800bb58:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800bb5c:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 800bb60:	2b00      	cmp	r3, #0
 800bb62:	d00c      	beq.n	800bb7e <HAL_UART_IRQHandler+0x196>
 800bb64:	687b      	ldr	r3, [r7, #4]
 800bb66:	681b      	ldr	r3, [r3, #0]
 800bb68:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800bb6c:	621a      	str	r2, [r3, #32]
 800bb6e:	687b      	ldr	r3, [r7, #4]
 800bb70:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800bb74:	f043 0220 	orr.w	r2, r3, #32
 800bb78:	687b      	ldr	r3, [r7, #4]
 800bb7a:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800bb7e:	687b      	ldr	r3, [r7, #4]
 800bb80:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800bb84:	2b00      	cmp	r3, #0
 800bb86:	f000 82c0 	beq.w	800c10a <HAL_UART_IRQHandler+0x722>
 800bb8a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800bb8e:	f003 0320 	and.w	r3, r3, #32
 800bb92:	2b00      	cmp	r3, #0
 800bb94:	d013      	beq.n	800bbbe <HAL_UART_IRQHandler+0x1d6>
 800bb96:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800bb9a:	f003 0320 	and.w	r3, r3, #32
 800bb9e:	2b00      	cmp	r3, #0
 800bba0:	d105      	bne.n	800bbae <HAL_UART_IRQHandler+0x1c6>
 800bba2:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800bba6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800bbaa:	2b00      	cmp	r3, #0
 800bbac:	d007      	beq.n	800bbbe <HAL_UART_IRQHandler+0x1d6>
 800bbae:	687b      	ldr	r3, [r7, #4]
 800bbb0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800bbb2:	2b00      	cmp	r3, #0
 800bbb4:	d003      	beq.n	800bbbe <HAL_UART_IRQHandler+0x1d6>
 800bbb6:	687b      	ldr	r3, [r7, #4]
 800bbb8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800bbba:	6878      	ldr	r0, [r7, #4]
 800bbbc:	4798      	blx	r3
 800bbbe:	687b      	ldr	r3, [r7, #4]
 800bbc0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800bbc4:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 800bbc8:	687b      	ldr	r3, [r7, #4]
 800bbca:	681b      	ldr	r3, [r3, #0]
 800bbcc:	689b      	ldr	r3, [r3, #8]
 800bbce:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800bbd2:	2b40      	cmp	r3, #64	; 0x40
 800bbd4:	d005      	beq.n	800bbe2 <HAL_UART_IRQHandler+0x1fa>
 800bbd6:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 800bbda:	f003 0328 	and.w	r3, r3, #40	; 0x28
 800bbde:	2b00      	cmp	r3, #0
 800bbe0:	d04f      	beq.n	800bc82 <HAL_UART_IRQHandler+0x29a>
 800bbe2:	6878      	ldr	r0, [r7, #4]
 800bbe4:	f001 fbd4 	bl	800d390 <UART_EndRxTransfer>
 800bbe8:	687b      	ldr	r3, [r7, #4]
 800bbea:	681b      	ldr	r3, [r3, #0]
 800bbec:	689b      	ldr	r3, [r3, #8]
 800bbee:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800bbf2:	2b40      	cmp	r3, #64	; 0x40
 800bbf4:	d141      	bne.n	800bc7a <HAL_UART_IRQHandler+0x292>
 800bbf6:	687b      	ldr	r3, [r7, #4]
 800bbf8:	681b      	ldr	r3, [r3, #0]
 800bbfa:	3308      	adds	r3, #8
 800bbfc:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 800bc00:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800bc04:	e853 3f00 	ldrex	r3, [r3]
 800bc08:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 800bc0c:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 800bc10:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800bc14:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 800bc18:	687b      	ldr	r3, [r7, #4]
 800bc1a:	681b      	ldr	r3, [r3, #0]
 800bc1c:	3308      	adds	r3, #8
 800bc1e:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 800bc22:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 800bc26:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 800bc2a:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 800bc2e:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 800bc32:	e841 2300 	strex	r3, r2, [r1]
 800bc36:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800bc3a:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 800bc3e:	2b00      	cmp	r3, #0
 800bc40:	d1d9      	bne.n	800bbf6 <HAL_UART_IRQHandler+0x20e>
 800bc42:	687b      	ldr	r3, [r7, #4]
 800bc44:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bc46:	2b00      	cmp	r3, #0
 800bc48:	d013      	beq.n	800bc72 <HAL_UART_IRQHandler+0x28a>
 800bc4a:	687b      	ldr	r3, [r7, #4]
 800bc4c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bc4e:	4a14      	ldr	r2, [pc, #80]	; (800bca0 <HAL_UART_IRQHandler+0x2b8>)
 800bc50:	651a      	str	r2, [r3, #80]	; 0x50
 800bc52:	687b      	ldr	r3, [r7, #4]
 800bc54:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bc56:	4618      	mov	r0, r3
 800bc58:	f7fa f8ba 	bl	8005dd0 <HAL_DMA_Abort_IT>
 800bc5c:	4603      	mov	r3, r0
 800bc5e:	2b00      	cmp	r3, #0
 800bc60:	d017      	beq.n	800bc92 <HAL_UART_IRQHandler+0x2aa>
 800bc62:	687b      	ldr	r3, [r7, #4]
 800bc64:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bc66:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800bc68:	687a      	ldr	r2, [r7, #4]
 800bc6a:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 800bc6c:	4610      	mov	r0, r2
 800bc6e:	4798      	blx	r3
 800bc70:	e00f      	b.n	800bc92 <HAL_UART_IRQHandler+0x2aa>
 800bc72:	6878      	ldr	r0, [r7, #4]
 800bc74:	f000 fa6a 	bl	800c14c <HAL_UART_ErrorCallback>
 800bc78:	e00b      	b.n	800bc92 <HAL_UART_IRQHandler+0x2aa>
 800bc7a:	6878      	ldr	r0, [r7, #4]
 800bc7c:	f000 fa66 	bl	800c14c <HAL_UART_ErrorCallback>
 800bc80:	e007      	b.n	800bc92 <HAL_UART_IRQHandler+0x2aa>
 800bc82:	6878      	ldr	r0, [r7, #4]
 800bc84:	f000 fa62 	bl	800c14c <HAL_UART_ErrorCallback>
 800bc88:	687b      	ldr	r3, [r7, #4]
 800bc8a:	2200      	movs	r2, #0
 800bc8c:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800bc90:	e23b      	b.n	800c10a <HAL_UART_IRQHandler+0x722>
 800bc92:	bf00      	nop
 800bc94:	e239      	b.n	800c10a <HAL_UART_IRQHandler+0x722>
 800bc96:	bf00      	nop
 800bc98:	10000001 	.word	0x10000001
 800bc9c:	04000120 	.word	0x04000120
 800bca0:	0800d6e9 	.word	0x0800d6e9
 800bca4:	687b      	ldr	r3, [r7, #4]
 800bca6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800bca8:	2b01      	cmp	r3, #1
 800bcaa:	f040 81ce 	bne.w	800c04a <HAL_UART_IRQHandler+0x662>
 800bcae:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800bcb2:	f003 0310 	and.w	r3, r3, #16
 800bcb6:	2b00      	cmp	r3, #0
 800bcb8:	f000 81c7 	beq.w	800c04a <HAL_UART_IRQHandler+0x662>
 800bcbc:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800bcc0:	f003 0310 	and.w	r3, r3, #16
 800bcc4:	2b00      	cmp	r3, #0
 800bcc6:	f000 81c0 	beq.w	800c04a <HAL_UART_IRQHandler+0x662>
 800bcca:	687b      	ldr	r3, [r7, #4]
 800bccc:	681b      	ldr	r3, [r3, #0]
 800bcce:	2210      	movs	r2, #16
 800bcd0:	621a      	str	r2, [r3, #32]
 800bcd2:	687b      	ldr	r3, [r7, #4]
 800bcd4:	681b      	ldr	r3, [r3, #0]
 800bcd6:	689b      	ldr	r3, [r3, #8]
 800bcd8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800bcdc:	2b40      	cmp	r3, #64	; 0x40
 800bcde:	f040 813b 	bne.w	800bf58 <HAL_UART_IRQHandler+0x570>
 800bce2:	687b      	ldr	r3, [r7, #4]
 800bce4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bce6:	681b      	ldr	r3, [r3, #0]
 800bce8:	4a8b      	ldr	r2, [pc, #556]	; (800bf18 <HAL_UART_IRQHandler+0x530>)
 800bcea:	4293      	cmp	r3, r2
 800bcec:	d059      	beq.n	800bda2 <HAL_UART_IRQHandler+0x3ba>
 800bcee:	687b      	ldr	r3, [r7, #4]
 800bcf0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bcf2:	681b      	ldr	r3, [r3, #0]
 800bcf4:	4a89      	ldr	r2, [pc, #548]	; (800bf1c <HAL_UART_IRQHandler+0x534>)
 800bcf6:	4293      	cmp	r3, r2
 800bcf8:	d053      	beq.n	800bda2 <HAL_UART_IRQHandler+0x3ba>
 800bcfa:	687b      	ldr	r3, [r7, #4]
 800bcfc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bcfe:	681b      	ldr	r3, [r3, #0]
 800bd00:	4a87      	ldr	r2, [pc, #540]	; (800bf20 <HAL_UART_IRQHandler+0x538>)
 800bd02:	4293      	cmp	r3, r2
 800bd04:	d04d      	beq.n	800bda2 <HAL_UART_IRQHandler+0x3ba>
 800bd06:	687b      	ldr	r3, [r7, #4]
 800bd08:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bd0a:	681b      	ldr	r3, [r3, #0]
 800bd0c:	4a85      	ldr	r2, [pc, #532]	; (800bf24 <HAL_UART_IRQHandler+0x53c>)
 800bd0e:	4293      	cmp	r3, r2
 800bd10:	d047      	beq.n	800bda2 <HAL_UART_IRQHandler+0x3ba>
 800bd12:	687b      	ldr	r3, [r7, #4]
 800bd14:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bd16:	681b      	ldr	r3, [r3, #0]
 800bd18:	4a83      	ldr	r2, [pc, #524]	; (800bf28 <HAL_UART_IRQHandler+0x540>)
 800bd1a:	4293      	cmp	r3, r2
 800bd1c:	d041      	beq.n	800bda2 <HAL_UART_IRQHandler+0x3ba>
 800bd1e:	687b      	ldr	r3, [r7, #4]
 800bd20:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bd22:	681b      	ldr	r3, [r3, #0]
 800bd24:	4a81      	ldr	r2, [pc, #516]	; (800bf2c <HAL_UART_IRQHandler+0x544>)
 800bd26:	4293      	cmp	r3, r2
 800bd28:	d03b      	beq.n	800bda2 <HAL_UART_IRQHandler+0x3ba>
 800bd2a:	687b      	ldr	r3, [r7, #4]
 800bd2c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bd2e:	681b      	ldr	r3, [r3, #0]
 800bd30:	4a7f      	ldr	r2, [pc, #508]	; (800bf30 <HAL_UART_IRQHandler+0x548>)
 800bd32:	4293      	cmp	r3, r2
 800bd34:	d035      	beq.n	800bda2 <HAL_UART_IRQHandler+0x3ba>
 800bd36:	687b      	ldr	r3, [r7, #4]
 800bd38:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bd3a:	681b      	ldr	r3, [r3, #0]
 800bd3c:	4a7d      	ldr	r2, [pc, #500]	; (800bf34 <HAL_UART_IRQHandler+0x54c>)
 800bd3e:	4293      	cmp	r3, r2
 800bd40:	d02f      	beq.n	800bda2 <HAL_UART_IRQHandler+0x3ba>
 800bd42:	687b      	ldr	r3, [r7, #4]
 800bd44:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bd46:	681b      	ldr	r3, [r3, #0]
 800bd48:	4a7b      	ldr	r2, [pc, #492]	; (800bf38 <HAL_UART_IRQHandler+0x550>)
 800bd4a:	4293      	cmp	r3, r2
 800bd4c:	d029      	beq.n	800bda2 <HAL_UART_IRQHandler+0x3ba>
 800bd4e:	687b      	ldr	r3, [r7, #4]
 800bd50:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bd52:	681b      	ldr	r3, [r3, #0]
 800bd54:	4a79      	ldr	r2, [pc, #484]	; (800bf3c <HAL_UART_IRQHandler+0x554>)
 800bd56:	4293      	cmp	r3, r2
 800bd58:	d023      	beq.n	800bda2 <HAL_UART_IRQHandler+0x3ba>
 800bd5a:	687b      	ldr	r3, [r7, #4]
 800bd5c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bd5e:	681b      	ldr	r3, [r3, #0]
 800bd60:	4a77      	ldr	r2, [pc, #476]	; (800bf40 <HAL_UART_IRQHandler+0x558>)
 800bd62:	4293      	cmp	r3, r2
 800bd64:	d01d      	beq.n	800bda2 <HAL_UART_IRQHandler+0x3ba>
 800bd66:	687b      	ldr	r3, [r7, #4]
 800bd68:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bd6a:	681b      	ldr	r3, [r3, #0]
 800bd6c:	4a75      	ldr	r2, [pc, #468]	; (800bf44 <HAL_UART_IRQHandler+0x55c>)
 800bd6e:	4293      	cmp	r3, r2
 800bd70:	d017      	beq.n	800bda2 <HAL_UART_IRQHandler+0x3ba>
 800bd72:	687b      	ldr	r3, [r7, #4]
 800bd74:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bd76:	681b      	ldr	r3, [r3, #0]
 800bd78:	4a73      	ldr	r2, [pc, #460]	; (800bf48 <HAL_UART_IRQHandler+0x560>)
 800bd7a:	4293      	cmp	r3, r2
 800bd7c:	d011      	beq.n	800bda2 <HAL_UART_IRQHandler+0x3ba>
 800bd7e:	687b      	ldr	r3, [r7, #4]
 800bd80:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bd82:	681b      	ldr	r3, [r3, #0]
 800bd84:	4a71      	ldr	r2, [pc, #452]	; (800bf4c <HAL_UART_IRQHandler+0x564>)
 800bd86:	4293      	cmp	r3, r2
 800bd88:	d00b      	beq.n	800bda2 <HAL_UART_IRQHandler+0x3ba>
 800bd8a:	687b      	ldr	r3, [r7, #4]
 800bd8c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bd8e:	681b      	ldr	r3, [r3, #0]
 800bd90:	4a6f      	ldr	r2, [pc, #444]	; (800bf50 <HAL_UART_IRQHandler+0x568>)
 800bd92:	4293      	cmp	r3, r2
 800bd94:	d005      	beq.n	800bda2 <HAL_UART_IRQHandler+0x3ba>
 800bd96:	687b      	ldr	r3, [r7, #4]
 800bd98:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bd9a:	681b      	ldr	r3, [r3, #0]
 800bd9c:	4a6d      	ldr	r2, [pc, #436]	; (800bf54 <HAL_UART_IRQHandler+0x56c>)
 800bd9e:	4293      	cmp	r3, r2
 800bda0:	d105      	bne.n	800bdae <HAL_UART_IRQHandler+0x3c6>
 800bda2:	687b      	ldr	r3, [r7, #4]
 800bda4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bda6:	681b      	ldr	r3, [r3, #0]
 800bda8:	685b      	ldr	r3, [r3, #4]
 800bdaa:	b29b      	uxth	r3, r3
 800bdac:	e004      	b.n	800bdb8 <HAL_UART_IRQHandler+0x3d0>
 800bdae:	687b      	ldr	r3, [r7, #4]
 800bdb0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bdb2:	681b      	ldr	r3, [r3, #0]
 800bdb4:	685b      	ldr	r3, [r3, #4]
 800bdb6:	b29b      	uxth	r3, r3
 800bdb8:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 800bdbc:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 800bdc0:	2b00      	cmp	r3, #0
 800bdc2:	f000 81a4 	beq.w	800c10e <HAL_UART_IRQHandler+0x726>
 800bdc6:	687b      	ldr	r3, [r7, #4]
 800bdc8:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800bdcc:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800bdd0:	429a      	cmp	r2, r3
 800bdd2:	f080 819c 	bcs.w	800c10e <HAL_UART_IRQHandler+0x726>
 800bdd6:	687b      	ldr	r3, [r7, #4]
 800bdd8:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 800bddc:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800bde0:	687b      	ldr	r3, [r7, #4]
 800bde2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bde4:	69db      	ldr	r3, [r3, #28]
 800bde6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800bdea:	f000 8086 	beq.w	800befa <HAL_UART_IRQHandler+0x512>
 800bdee:	687b      	ldr	r3, [r7, #4]
 800bdf0:	681b      	ldr	r3, [r3, #0]
 800bdf2:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800bdf6:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 800bdfa:	e853 3f00 	ldrex	r3, [r3]
 800bdfe:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 800be02:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800be06:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800be0a:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800be0e:	687b      	ldr	r3, [r7, #4]
 800be10:	681b      	ldr	r3, [r3, #0]
 800be12:	461a      	mov	r2, r3
 800be14:	f8d7 30b8 	ldr.w	r3, [r7, #184]	; 0xb8
 800be18:	f8c7 3094 	str.w	r3, [r7, #148]	; 0x94
 800be1c:	f8c7 2090 	str.w	r2, [r7, #144]	; 0x90
 800be20:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 800be24:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800be28:	e841 2300 	strex	r3, r2, [r1]
 800be2c:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 800be30:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800be34:	2b00      	cmp	r3, #0
 800be36:	d1da      	bne.n	800bdee <HAL_UART_IRQHandler+0x406>
 800be38:	687b      	ldr	r3, [r7, #4]
 800be3a:	681b      	ldr	r3, [r3, #0]
 800be3c:	3308      	adds	r3, #8
 800be3e:	677b      	str	r3, [r7, #116]	; 0x74
 800be40:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 800be42:	e853 3f00 	ldrex	r3, [r3]
 800be46:	673b      	str	r3, [r7, #112]	; 0x70
 800be48:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 800be4a:	f023 0301 	bic.w	r3, r3, #1
 800be4e:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 800be52:	687b      	ldr	r3, [r7, #4]
 800be54:	681b      	ldr	r3, [r3, #0]
 800be56:	3308      	adds	r3, #8
 800be58:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 800be5c:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 800be60:	67fb      	str	r3, [r7, #124]	; 0x7c
 800be62:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 800be64:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 800be68:	e841 2300 	strex	r3, r2, [r1]
 800be6c:	67bb      	str	r3, [r7, #120]	; 0x78
 800be6e:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800be70:	2b00      	cmp	r3, #0
 800be72:	d1e1      	bne.n	800be38 <HAL_UART_IRQHandler+0x450>
 800be74:	687b      	ldr	r3, [r7, #4]
 800be76:	681b      	ldr	r3, [r3, #0]
 800be78:	3308      	adds	r3, #8
 800be7a:	663b      	str	r3, [r7, #96]	; 0x60
 800be7c:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800be7e:	e853 3f00 	ldrex	r3, [r3]
 800be82:	65fb      	str	r3, [r7, #92]	; 0x5c
 800be84:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800be86:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800be8a:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 800be8e:	687b      	ldr	r3, [r7, #4]
 800be90:	681b      	ldr	r3, [r3, #0]
 800be92:	3308      	adds	r3, #8
 800be94:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 800be98:	66fa      	str	r2, [r7, #108]	; 0x6c
 800be9a:	66bb      	str	r3, [r7, #104]	; 0x68
 800be9c:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 800be9e:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 800bea0:	e841 2300 	strex	r3, r2, [r1]
 800bea4:	667b      	str	r3, [r7, #100]	; 0x64
 800bea6:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800bea8:	2b00      	cmp	r3, #0
 800beaa:	d1e3      	bne.n	800be74 <HAL_UART_IRQHandler+0x48c>
 800beac:	687b      	ldr	r3, [r7, #4]
 800beae:	2220      	movs	r2, #32
 800beb0:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800beb4:	687b      	ldr	r3, [r7, #4]
 800beb6:	2200      	movs	r2, #0
 800beb8:	66da      	str	r2, [r3, #108]	; 0x6c
 800beba:	687b      	ldr	r3, [r7, #4]
 800bebc:	681b      	ldr	r3, [r3, #0]
 800bebe:	64fb      	str	r3, [r7, #76]	; 0x4c
 800bec0:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800bec2:	e853 3f00 	ldrex	r3, [r3]
 800bec6:	64bb      	str	r3, [r7, #72]	; 0x48
 800bec8:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800beca:	f023 0310 	bic.w	r3, r3, #16
 800bece:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800bed2:	687b      	ldr	r3, [r7, #4]
 800bed4:	681b      	ldr	r3, [r3, #0]
 800bed6:	461a      	mov	r2, r3
 800bed8:	f8d7 30ac 	ldr.w	r3, [r7, #172]	; 0xac
 800bedc:	65bb      	str	r3, [r7, #88]	; 0x58
 800bede:	657a      	str	r2, [r7, #84]	; 0x54
 800bee0:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800bee2:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800bee4:	e841 2300 	strex	r3, r2, [r1]
 800bee8:	653b      	str	r3, [r7, #80]	; 0x50
 800beea:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800beec:	2b00      	cmp	r3, #0
 800beee:	d1e4      	bne.n	800beba <HAL_UART_IRQHandler+0x4d2>
 800bef0:	687b      	ldr	r3, [r7, #4]
 800bef2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bef4:	4618      	mov	r0, r3
 800bef6:	f7f9 fc4d 	bl	8005794 <HAL_DMA_Abort>
 800befa:	687b      	ldr	r3, [r7, #4]
 800befc:	f8b3 205c 	ldrh.w	r2, [r3, #92]	; 0x5c
 800bf00:	687b      	ldr	r3, [r7, #4]
 800bf02:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800bf06:	b29b      	uxth	r3, r3
 800bf08:	1ad3      	subs	r3, r2, r3
 800bf0a:	b29b      	uxth	r3, r3
 800bf0c:	4619      	mov	r1, r3
 800bf0e:	6878      	ldr	r0, [r7, #4]
 800bf10:	f000 f926 	bl	800c160 <HAL_UARTEx_RxEventCallback>
 800bf14:	e0fb      	b.n	800c10e <HAL_UART_IRQHandler+0x726>
 800bf16:	bf00      	nop
 800bf18:	40020010 	.word	0x40020010
 800bf1c:	40020028 	.word	0x40020028
 800bf20:	40020040 	.word	0x40020040
 800bf24:	40020058 	.word	0x40020058
 800bf28:	40020070 	.word	0x40020070
 800bf2c:	40020088 	.word	0x40020088
 800bf30:	400200a0 	.word	0x400200a0
 800bf34:	400200b8 	.word	0x400200b8
 800bf38:	40020410 	.word	0x40020410
 800bf3c:	40020428 	.word	0x40020428
 800bf40:	40020440 	.word	0x40020440
 800bf44:	40020458 	.word	0x40020458
 800bf48:	40020470 	.word	0x40020470
 800bf4c:	40020488 	.word	0x40020488
 800bf50:	400204a0 	.word	0x400204a0
 800bf54:	400204b8 	.word	0x400204b8
 800bf58:	687b      	ldr	r3, [r7, #4]
 800bf5a:	f8b3 205c 	ldrh.w	r2, [r3, #92]	; 0x5c
 800bf5e:	687b      	ldr	r3, [r7, #4]
 800bf60:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800bf64:	b29b      	uxth	r3, r3
 800bf66:	1ad3      	subs	r3, r2, r3
 800bf68:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 800bf6c:	687b      	ldr	r3, [r7, #4]
 800bf6e:	f8b3 305e 	ldrh.w	r3, [r3, #94]	; 0x5e
 800bf72:	b29b      	uxth	r3, r3
 800bf74:	2b00      	cmp	r3, #0
 800bf76:	f000 80cc 	beq.w	800c112 <HAL_UART_IRQHandler+0x72a>
 800bf7a:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800bf7e:	2b00      	cmp	r3, #0
 800bf80:	f000 80c7 	beq.w	800c112 <HAL_UART_IRQHandler+0x72a>
 800bf84:	687b      	ldr	r3, [r7, #4]
 800bf86:	681b      	ldr	r3, [r3, #0]
 800bf88:	63bb      	str	r3, [r7, #56]	; 0x38
 800bf8a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800bf8c:	e853 3f00 	ldrex	r3, [r3]
 800bf90:	637b      	str	r3, [r7, #52]	; 0x34
 800bf92:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800bf94:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800bf98:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800bf9c:	687b      	ldr	r3, [r7, #4]
 800bf9e:	681b      	ldr	r3, [r3, #0]
 800bfa0:	461a      	mov	r2, r3
 800bfa2:	f8d7 30c8 	ldr.w	r3, [r7, #200]	; 0xc8
 800bfa6:	647b      	str	r3, [r7, #68]	; 0x44
 800bfa8:	643a      	str	r2, [r7, #64]	; 0x40
 800bfaa:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800bfac:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800bfae:	e841 2300 	strex	r3, r2, [r1]
 800bfb2:	63fb      	str	r3, [r7, #60]	; 0x3c
 800bfb4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800bfb6:	2b00      	cmp	r3, #0
 800bfb8:	d1e4      	bne.n	800bf84 <HAL_UART_IRQHandler+0x59c>
 800bfba:	687b      	ldr	r3, [r7, #4]
 800bfbc:	681b      	ldr	r3, [r3, #0]
 800bfbe:	3308      	adds	r3, #8
 800bfc0:	627b      	str	r3, [r7, #36]	; 0x24
 800bfc2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800bfc4:	e853 3f00 	ldrex	r3, [r3]
 800bfc8:	623b      	str	r3, [r7, #32]
 800bfca:	6a3a      	ldr	r2, [r7, #32]
 800bfcc:	4b54      	ldr	r3, [pc, #336]	; (800c120 <HAL_UART_IRQHandler+0x738>)
 800bfce:	4013      	ands	r3, r2
 800bfd0:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 800bfd4:	687b      	ldr	r3, [r7, #4]
 800bfd6:	681b      	ldr	r3, [r3, #0]
 800bfd8:	3308      	adds	r3, #8
 800bfda:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 800bfde:	633a      	str	r2, [r7, #48]	; 0x30
 800bfe0:	62fb      	str	r3, [r7, #44]	; 0x2c
 800bfe2:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800bfe4:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800bfe6:	e841 2300 	strex	r3, r2, [r1]
 800bfea:	62bb      	str	r3, [r7, #40]	; 0x28
 800bfec:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800bfee:	2b00      	cmp	r3, #0
 800bff0:	d1e3      	bne.n	800bfba <HAL_UART_IRQHandler+0x5d2>
 800bff2:	687b      	ldr	r3, [r7, #4]
 800bff4:	2220      	movs	r2, #32
 800bff6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800bffa:	687b      	ldr	r3, [r7, #4]
 800bffc:	2200      	movs	r2, #0
 800bffe:	66da      	str	r2, [r3, #108]	; 0x6c
 800c000:	687b      	ldr	r3, [r7, #4]
 800c002:	2200      	movs	r2, #0
 800c004:	671a      	str	r2, [r3, #112]	; 0x70
 800c006:	687b      	ldr	r3, [r7, #4]
 800c008:	681b      	ldr	r3, [r3, #0]
 800c00a:	613b      	str	r3, [r7, #16]
 800c00c:	693b      	ldr	r3, [r7, #16]
 800c00e:	e853 3f00 	ldrex	r3, [r3]
 800c012:	60fb      	str	r3, [r7, #12]
 800c014:	68fb      	ldr	r3, [r7, #12]
 800c016:	f023 0310 	bic.w	r3, r3, #16
 800c01a:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 800c01e:	687b      	ldr	r3, [r7, #4]
 800c020:	681b      	ldr	r3, [r3, #0]
 800c022:	461a      	mov	r2, r3
 800c024:	f8d7 30c0 	ldr.w	r3, [r7, #192]	; 0xc0
 800c028:	61fb      	str	r3, [r7, #28]
 800c02a:	61ba      	str	r2, [r7, #24]
 800c02c:	69b9      	ldr	r1, [r7, #24]
 800c02e:	69fa      	ldr	r2, [r7, #28]
 800c030:	e841 2300 	strex	r3, r2, [r1]
 800c034:	617b      	str	r3, [r7, #20]
 800c036:	697b      	ldr	r3, [r7, #20]
 800c038:	2b00      	cmp	r3, #0
 800c03a:	d1e4      	bne.n	800c006 <HAL_UART_IRQHandler+0x61e>
 800c03c:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 800c040:	4619      	mov	r1, r3
 800c042:	6878      	ldr	r0, [r7, #4]
 800c044:	f000 f88c 	bl	800c160 <HAL_UARTEx_RxEventCallback>
 800c048:	e063      	b.n	800c112 <HAL_UART_IRQHandler+0x72a>
 800c04a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c04e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800c052:	2b00      	cmp	r3, #0
 800c054:	d00e      	beq.n	800c074 <HAL_UART_IRQHandler+0x68c>
 800c056:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c05a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800c05e:	2b00      	cmp	r3, #0
 800c060:	d008      	beq.n	800c074 <HAL_UART_IRQHandler+0x68c>
 800c062:	687b      	ldr	r3, [r7, #4]
 800c064:	681b      	ldr	r3, [r3, #0]
 800c066:	f44f 1280 	mov.w	r2, #1048576	; 0x100000
 800c06a:	621a      	str	r2, [r3, #32]
 800c06c:	6878      	ldr	r0, [r7, #4]
 800c06e:	f001 fb7c 	bl	800d76a <HAL_UARTEx_WakeupCallback>
 800c072:	e051      	b.n	800c118 <HAL_UART_IRQHandler+0x730>
 800c074:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c078:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800c07c:	2b00      	cmp	r3, #0
 800c07e:	d014      	beq.n	800c0aa <HAL_UART_IRQHandler+0x6c2>
 800c080:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c084:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800c088:	2b00      	cmp	r3, #0
 800c08a:	d105      	bne.n	800c098 <HAL_UART_IRQHandler+0x6b0>
 800c08c:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800c090:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800c094:	2b00      	cmp	r3, #0
 800c096:	d008      	beq.n	800c0aa <HAL_UART_IRQHandler+0x6c2>
 800c098:	687b      	ldr	r3, [r7, #4]
 800c09a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800c09c:	2b00      	cmp	r3, #0
 800c09e:	d03a      	beq.n	800c116 <HAL_UART_IRQHandler+0x72e>
 800c0a0:	687b      	ldr	r3, [r7, #4]
 800c0a2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800c0a4:	6878      	ldr	r0, [r7, #4]
 800c0a6:	4798      	blx	r3
 800c0a8:	e035      	b.n	800c116 <HAL_UART_IRQHandler+0x72e>
 800c0aa:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c0ae:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c0b2:	2b00      	cmp	r3, #0
 800c0b4:	d009      	beq.n	800c0ca <HAL_UART_IRQHandler+0x6e2>
 800c0b6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c0ba:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800c0be:	2b00      	cmp	r3, #0
 800c0c0:	d003      	beq.n	800c0ca <HAL_UART_IRQHandler+0x6e2>
 800c0c2:	6878      	ldr	r0, [r7, #4]
 800c0c4:	f001 fb26 	bl	800d714 <UART_EndTransmit_IT>
 800c0c8:	e026      	b.n	800c118 <HAL_UART_IRQHandler+0x730>
 800c0ca:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c0ce:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800c0d2:	2b00      	cmp	r3, #0
 800c0d4:	d009      	beq.n	800c0ea <HAL_UART_IRQHandler+0x702>
 800c0d6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c0da:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 800c0de:	2b00      	cmp	r3, #0
 800c0e0:	d003      	beq.n	800c0ea <HAL_UART_IRQHandler+0x702>
 800c0e2:	6878      	ldr	r0, [r7, #4]
 800c0e4:	f001 fb55 	bl	800d792 <HAL_UARTEx_TxFifoEmptyCallback>
 800c0e8:	e016      	b.n	800c118 <HAL_UART_IRQHandler+0x730>
 800c0ea:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800c0ee:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800c0f2:	2b00      	cmp	r3, #0
 800c0f4:	d010      	beq.n	800c118 <HAL_UART_IRQHandler+0x730>
 800c0f6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800c0fa:	2b00      	cmp	r3, #0
 800c0fc:	da0c      	bge.n	800c118 <HAL_UART_IRQHandler+0x730>
 800c0fe:	6878      	ldr	r0, [r7, #4]
 800c100:	f001 fb3d 	bl	800d77e <HAL_UARTEx_RxFifoFullCallback>
 800c104:	e008      	b.n	800c118 <HAL_UART_IRQHandler+0x730>
 800c106:	bf00      	nop
 800c108:	e006      	b.n	800c118 <HAL_UART_IRQHandler+0x730>
 800c10a:	bf00      	nop
 800c10c:	e004      	b.n	800c118 <HAL_UART_IRQHandler+0x730>
 800c10e:	bf00      	nop
 800c110:	e002      	b.n	800c118 <HAL_UART_IRQHandler+0x730>
 800c112:	bf00      	nop
 800c114:	e000      	b.n	800c118 <HAL_UART_IRQHandler+0x730>
 800c116:	bf00      	nop
 800c118:	37e8      	adds	r7, #232	; 0xe8
 800c11a:	46bd      	mov	sp, r7
 800c11c:	bd80      	pop	{r7, pc}
 800c11e:	bf00      	nop
 800c120:	effffffe 	.word	0xeffffffe

0800c124 <HAL_UART_TxHalfCpltCallback>:
 800c124:	b480      	push	{r7}
 800c126:	b083      	sub	sp, #12
 800c128:	af00      	add	r7, sp, #0
 800c12a:	6078      	str	r0, [r7, #4]
 800c12c:	bf00      	nop
 800c12e:	370c      	adds	r7, #12
 800c130:	46bd      	mov	sp, r7
 800c132:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c136:	4770      	bx	lr

0800c138 <HAL_UART_RxHalfCpltCallback>:
 800c138:	b480      	push	{r7}
 800c13a:	b083      	sub	sp, #12
 800c13c:	af00      	add	r7, sp, #0
 800c13e:	6078      	str	r0, [r7, #4]
 800c140:	bf00      	nop
 800c142:	370c      	adds	r7, #12
 800c144:	46bd      	mov	sp, r7
 800c146:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c14a:	4770      	bx	lr

0800c14c <HAL_UART_ErrorCallback>:
 800c14c:	b480      	push	{r7}
 800c14e:	b083      	sub	sp, #12
 800c150:	af00      	add	r7, sp, #0
 800c152:	6078      	str	r0, [r7, #4]
 800c154:	bf00      	nop
 800c156:	370c      	adds	r7, #12
 800c158:	46bd      	mov	sp, r7
 800c15a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c15e:	4770      	bx	lr

0800c160 <HAL_UARTEx_RxEventCallback>:
 800c160:	b480      	push	{r7}
 800c162:	b083      	sub	sp, #12
 800c164:	af00      	add	r7, sp, #0
 800c166:	6078      	str	r0, [r7, #4]
 800c168:	460b      	mov	r3, r1
 800c16a:	807b      	strh	r3, [r7, #2]
 800c16c:	bf00      	nop
 800c16e:	370c      	adds	r7, #12
 800c170:	46bd      	mov	sp, r7
 800c172:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c176:	4770      	bx	lr

0800c178 <UART_SetConfig>:
 800c178:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800c17c:	b092      	sub	sp, #72	; 0x48
 800c17e:	af00      	add	r7, sp, #0
 800c180:	6178      	str	r0, [r7, #20]
 800c182:	2300      	movs	r3, #0
 800c184:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 800c188:	697b      	ldr	r3, [r7, #20]
 800c18a:	689a      	ldr	r2, [r3, #8]
 800c18c:	697b      	ldr	r3, [r7, #20]
 800c18e:	691b      	ldr	r3, [r3, #16]
 800c190:	431a      	orrs	r2, r3
 800c192:	697b      	ldr	r3, [r7, #20]
 800c194:	695b      	ldr	r3, [r3, #20]
 800c196:	431a      	orrs	r2, r3
 800c198:	697b      	ldr	r3, [r7, #20]
 800c19a:	69db      	ldr	r3, [r3, #28]
 800c19c:	4313      	orrs	r3, r2
 800c19e:	647b      	str	r3, [r7, #68]	; 0x44
 800c1a0:	697b      	ldr	r3, [r7, #20]
 800c1a2:	681b      	ldr	r3, [r3, #0]
 800c1a4:	681a      	ldr	r2, [r3, #0]
 800c1a6:	4bbe      	ldr	r3, [pc, #760]	; (800c4a0 <UART_SetConfig+0x328>)
 800c1a8:	4013      	ands	r3, r2
 800c1aa:	697a      	ldr	r2, [r7, #20]
 800c1ac:	6812      	ldr	r2, [r2, #0]
 800c1ae:	6c79      	ldr	r1, [r7, #68]	; 0x44
 800c1b0:	430b      	orrs	r3, r1
 800c1b2:	6013      	str	r3, [r2, #0]
 800c1b4:	697b      	ldr	r3, [r7, #20]
 800c1b6:	681b      	ldr	r3, [r3, #0]
 800c1b8:	685b      	ldr	r3, [r3, #4]
 800c1ba:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 800c1be:	697b      	ldr	r3, [r7, #20]
 800c1c0:	68da      	ldr	r2, [r3, #12]
 800c1c2:	697b      	ldr	r3, [r7, #20]
 800c1c4:	681b      	ldr	r3, [r3, #0]
 800c1c6:	430a      	orrs	r2, r1
 800c1c8:	605a      	str	r2, [r3, #4]
 800c1ca:	697b      	ldr	r3, [r7, #20]
 800c1cc:	699b      	ldr	r3, [r3, #24]
 800c1ce:	647b      	str	r3, [r7, #68]	; 0x44
 800c1d0:	697b      	ldr	r3, [r7, #20]
 800c1d2:	681b      	ldr	r3, [r3, #0]
 800c1d4:	4ab3      	ldr	r2, [pc, #716]	; (800c4a4 <UART_SetConfig+0x32c>)
 800c1d6:	4293      	cmp	r3, r2
 800c1d8:	d004      	beq.n	800c1e4 <UART_SetConfig+0x6c>
 800c1da:	697b      	ldr	r3, [r7, #20]
 800c1dc:	6a1b      	ldr	r3, [r3, #32]
 800c1de:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800c1e0:	4313      	orrs	r3, r2
 800c1e2:	647b      	str	r3, [r7, #68]	; 0x44
 800c1e4:	697b      	ldr	r3, [r7, #20]
 800c1e6:	681b      	ldr	r3, [r3, #0]
 800c1e8:	689a      	ldr	r2, [r3, #8]
 800c1ea:	4baf      	ldr	r3, [pc, #700]	; (800c4a8 <UART_SetConfig+0x330>)
 800c1ec:	4013      	ands	r3, r2
 800c1ee:	697a      	ldr	r2, [r7, #20]
 800c1f0:	6812      	ldr	r2, [r2, #0]
 800c1f2:	6c79      	ldr	r1, [r7, #68]	; 0x44
 800c1f4:	430b      	orrs	r3, r1
 800c1f6:	6093      	str	r3, [r2, #8]
 800c1f8:	697b      	ldr	r3, [r7, #20]
 800c1fa:	681b      	ldr	r3, [r3, #0]
 800c1fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c1fe:	f023 010f 	bic.w	r1, r3, #15
 800c202:	697b      	ldr	r3, [r7, #20]
 800c204:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800c206:	697b      	ldr	r3, [r7, #20]
 800c208:	681b      	ldr	r3, [r3, #0]
 800c20a:	430a      	orrs	r2, r1
 800c20c:	62da      	str	r2, [r3, #44]	; 0x2c
 800c20e:	697b      	ldr	r3, [r7, #20]
 800c210:	681b      	ldr	r3, [r3, #0]
 800c212:	4aa6      	ldr	r2, [pc, #664]	; (800c4ac <UART_SetConfig+0x334>)
 800c214:	4293      	cmp	r3, r2
 800c216:	d177      	bne.n	800c308 <UART_SetConfig+0x190>
 800c218:	4ba5      	ldr	r3, [pc, #660]	; (800c4b0 <UART_SetConfig+0x338>)
 800c21a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800c21c:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800c220:	2b28      	cmp	r3, #40	; 0x28
 800c222:	d86d      	bhi.n	800c300 <UART_SetConfig+0x188>
 800c224:	a201      	add	r2, pc, #4	; (adr r2, 800c22c <UART_SetConfig+0xb4>)
 800c226:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c22a:	bf00      	nop
 800c22c:	0800c2d1 	.word	0x0800c2d1
 800c230:	0800c301 	.word	0x0800c301
 800c234:	0800c301 	.word	0x0800c301
 800c238:	0800c301 	.word	0x0800c301
 800c23c:	0800c301 	.word	0x0800c301
 800c240:	0800c301 	.word	0x0800c301
 800c244:	0800c301 	.word	0x0800c301
 800c248:	0800c301 	.word	0x0800c301
 800c24c:	0800c2d9 	.word	0x0800c2d9
 800c250:	0800c301 	.word	0x0800c301
 800c254:	0800c301 	.word	0x0800c301
 800c258:	0800c301 	.word	0x0800c301
 800c25c:	0800c301 	.word	0x0800c301
 800c260:	0800c301 	.word	0x0800c301
 800c264:	0800c301 	.word	0x0800c301
 800c268:	0800c301 	.word	0x0800c301
 800c26c:	0800c2e1 	.word	0x0800c2e1
 800c270:	0800c301 	.word	0x0800c301
 800c274:	0800c301 	.word	0x0800c301
 800c278:	0800c301 	.word	0x0800c301
 800c27c:	0800c301 	.word	0x0800c301
 800c280:	0800c301 	.word	0x0800c301
 800c284:	0800c301 	.word	0x0800c301
 800c288:	0800c301 	.word	0x0800c301
 800c28c:	0800c2e9 	.word	0x0800c2e9
 800c290:	0800c301 	.word	0x0800c301
 800c294:	0800c301 	.word	0x0800c301
 800c298:	0800c301 	.word	0x0800c301
 800c29c:	0800c301 	.word	0x0800c301
 800c2a0:	0800c301 	.word	0x0800c301
 800c2a4:	0800c301 	.word	0x0800c301
 800c2a8:	0800c301 	.word	0x0800c301
 800c2ac:	0800c2f1 	.word	0x0800c2f1
 800c2b0:	0800c301 	.word	0x0800c301
 800c2b4:	0800c301 	.word	0x0800c301
 800c2b8:	0800c301 	.word	0x0800c301
 800c2bc:	0800c301 	.word	0x0800c301
 800c2c0:	0800c301 	.word	0x0800c301
 800c2c4:	0800c301 	.word	0x0800c301
 800c2c8:	0800c301 	.word	0x0800c301
 800c2cc:	0800c2f9 	.word	0x0800c2f9
 800c2d0:	2301      	movs	r3, #1
 800c2d2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c2d6:	e326      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c2d8:	2304      	movs	r3, #4
 800c2da:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c2de:	e322      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c2e0:	2308      	movs	r3, #8
 800c2e2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c2e6:	e31e      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c2e8:	2310      	movs	r3, #16
 800c2ea:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c2ee:	e31a      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c2f0:	2320      	movs	r3, #32
 800c2f2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c2f6:	e316      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c2f8:	2340      	movs	r3, #64	; 0x40
 800c2fa:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c2fe:	e312      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c300:	2380      	movs	r3, #128	; 0x80
 800c302:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c306:	e30e      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c308:	697b      	ldr	r3, [r7, #20]
 800c30a:	681b      	ldr	r3, [r3, #0]
 800c30c:	4a69      	ldr	r2, [pc, #420]	; (800c4b4 <UART_SetConfig+0x33c>)
 800c30e:	4293      	cmp	r3, r2
 800c310:	d130      	bne.n	800c374 <UART_SetConfig+0x1fc>
 800c312:	4b67      	ldr	r3, [pc, #412]	; (800c4b0 <UART_SetConfig+0x338>)
 800c314:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800c316:	f003 0307 	and.w	r3, r3, #7
 800c31a:	2b05      	cmp	r3, #5
 800c31c:	d826      	bhi.n	800c36c <UART_SetConfig+0x1f4>
 800c31e:	a201      	add	r2, pc, #4	; (adr r2, 800c324 <UART_SetConfig+0x1ac>)
 800c320:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c324:	0800c33d 	.word	0x0800c33d
 800c328:	0800c345 	.word	0x0800c345
 800c32c:	0800c34d 	.word	0x0800c34d
 800c330:	0800c355 	.word	0x0800c355
 800c334:	0800c35d 	.word	0x0800c35d
 800c338:	0800c365 	.word	0x0800c365
 800c33c:	2300      	movs	r3, #0
 800c33e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c342:	e2f0      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c344:	2304      	movs	r3, #4
 800c346:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c34a:	e2ec      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c34c:	2308      	movs	r3, #8
 800c34e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c352:	e2e8      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c354:	2310      	movs	r3, #16
 800c356:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c35a:	e2e4      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c35c:	2320      	movs	r3, #32
 800c35e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c362:	e2e0      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c364:	2340      	movs	r3, #64	; 0x40
 800c366:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c36a:	e2dc      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c36c:	2380      	movs	r3, #128	; 0x80
 800c36e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c372:	e2d8      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c374:	697b      	ldr	r3, [r7, #20]
 800c376:	681b      	ldr	r3, [r3, #0]
 800c378:	4a4f      	ldr	r2, [pc, #316]	; (800c4b8 <UART_SetConfig+0x340>)
 800c37a:	4293      	cmp	r3, r2
 800c37c:	d130      	bne.n	800c3e0 <UART_SetConfig+0x268>
 800c37e:	4b4c      	ldr	r3, [pc, #304]	; (800c4b0 <UART_SetConfig+0x338>)
 800c380:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800c382:	f003 0307 	and.w	r3, r3, #7
 800c386:	2b05      	cmp	r3, #5
 800c388:	d826      	bhi.n	800c3d8 <UART_SetConfig+0x260>
 800c38a:	a201      	add	r2, pc, #4	; (adr r2, 800c390 <UART_SetConfig+0x218>)
 800c38c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c390:	0800c3a9 	.word	0x0800c3a9
 800c394:	0800c3b1 	.word	0x0800c3b1
 800c398:	0800c3b9 	.word	0x0800c3b9
 800c39c:	0800c3c1 	.word	0x0800c3c1
 800c3a0:	0800c3c9 	.word	0x0800c3c9
 800c3a4:	0800c3d1 	.word	0x0800c3d1
 800c3a8:	2300      	movs	r3, #0
 800c3aa:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c3ae:	e2ba      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c3b0:	2304      	movs	r3, #4
 800c3b2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c3b6:	e2b6      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c3b8:	2308      	movs	r3, #8
 800c3ba:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c3be:	e2b2      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c3c0:	2310      	movs	r3, #16
 800c3c2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c3c6:	e2ae      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c3c8:	2320      	movs	r3, #32
 800c3ca:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c3ce:	e2aa      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c3d0:	2340      	movs	r3, #64	; 0x40
 800c3d2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c3d6:	e2a6      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c3d8:	2380      	movs	r3, #128	; 0x80
 800c3da:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c3de:	e2a2      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c3e0:	697b      	ldr	r3, [r7, #20]
 800c3e2:	681b      	ldr	r3, [r3, #0]
 800c3e4:	4a35      	ldr	r2, [pc, #212]	; (800c4bc <UART_SetConfig+0x344>)
 800c3e6:	4293      	cmp	r3, r2
 800c3e8:	d130      	bne.n	800c44c <UART_SetConfig+0x2d4>
 800c3ea:	4b31      	ldr	r3, [pc, #196]	; (800c4b0 <UART_SetConfig+0x338>)
 800c3ec:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800c3ee:	f003 0307 	and.w	r3, r3, #7
 800c3f2:	2b05      	cmp	r3, #5
 800c3f4:	d826      	bhi.n	800c444 <UART_SetConfig+0x2cc>
 800c3f6:	a201      	add	r2, pc, #4	; (adr r2, 800c3fc <UART_SetConfig+0x284>)
 800c3f8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c3fc:	0800c415 	.word	0x0800c415
 800c400:	0800c41d 	.word	0x0800c41d
 800c404:	0800c425 	.word	0x0800c425
 800c408:	0800c42d 	.word	0x0800c42d
 800c40c:	0800c435 	.word	0x0800c435
 800c410:	0800c43d 	.word	0x0800c43d
 800c414:	2300      	movs	r3, #0
 800c416:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c41a:	e284      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c41c:	2304      	movs	r3, #4
 800c41e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c422:	e280      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c424:	2308      	movs	r3, #8
 800c426:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c42a:	e27c      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c42c:	2310      	movs	r3, #16
 800c42e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c432:	e278      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c434:	2320      	movs	r3, #32
 800c436:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c43a:	e274      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c43c:	2340      	movs	r3, #64	; 0x40
 800c43e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c442:	e270      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c444:	2380      	movs	r3, #128	; 0x80
 800c446:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c44a:	e26c      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c44c:	697b      	ldr	r3, [r7, #20]
 800c44e:	681b      	ldr	r3, [r3, #0]
 800c450:	4a1b      	ldr	r2, [pc, #108]	; (800c4c0 <UART_SetConfig+0x348>)
 800c452:	4293      	cmp	r3, r2
 800c454:	d142      	bne.n	800c4dc <UART_SetConfig+0x364>
 800c456:	4b16      	ldr	r3, [pc, #88]	; (800c4b0 <UART_SetConfig+0x338>)
 800c458:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800c45a:	f003 0307 	and.w	r3, r3, #7
 800c45e:	2b05      	cmp	r3, #5
 800c460:	d838      	bhi.n	800c4d4 <UART_SetConfig+0x35c>
 800c462:	a201      	add	r2, pc, #4	; (adr r2, 800c468 <UART_SetConfig+0x2f0>)
 800c464:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c468:	0800c481 	.word	0x0800c481
 800c46c:	0800c489 	.word	0x0800c489
 800c470:	0800c491 	.word	0x0800c491
 800c474:	0800c499 	.word	0x0800c499
 800c478:	0800c4c5 	.word	0x0800c4c5
 800c47c:	0800c4cd 	.word	0x0800c4cd
 800c480:	2300      	movs	r3, #0
 800c482:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c486:	e24e      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c488:	2304      	movs	r3, #4
 800c48a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c48e:	e24a      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c490:	2308      	movs	r3, #8
 800c492:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c496:	e246      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c498:	2310      	movs	r3, #16
 800c49a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c49e:	e242      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c4a0:	cfff69f3 	.word	0xcfff69f3
 800c4a4:	58000c00 	.word	0x58000c00
 800c4a8:	11fff4ff 	.word	0x11fff4ff
 800c4ac:	40011000 	.word	0x40011000
 800c4b0:	58024400 	.word	0x58024400
 800c4b4:	40004400 	.word	0x40004400
 800c4b8:	40004800 	.word	0x40004800
 800c4bc:	40004c00 	.word	0x40004c00
 800c4c0:	40005000 	.word	0x40005000
 800c4c4:	2320      	movs	r3, #32
 800c4c6:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c4ca:	e22c      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c4cc:	2340      	movs	r3, #64	; 0x40
 800c4ce:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c4d2:	e228      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c4d4:	2380      	movs	r3, #128	; 0x80
 800c4d6:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c4da:	e224      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c4dc:	697b      	ldr	r3, [r7, #20]
 800c4de:	681b      	ldr	r3, [r3, #0]
 800c4e0:	4ab1      	ldr	r2, [pc, #708]	; (800c7a8 <UART_SetConfig+0x630>)
 800c4e2:	4293      	cmp	r3, r2
 800c4e4:	d176      	bne.n	800c5d4 <UART_SetConfig+0x45c>
 800c4e6:	4bb1      	ldr	r3, [pc, #708]	; (800c7ac <UART_SetConfig+0x634>)
 800c4e8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800c4ea:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800c4ee:	2b28      	cmp	r3, #40	; 0x28
 800c4f0:	d86c      	bhi.n	800c5cc <UART_SetConfig+0x454>
 800c4f2:	a201      	add	r2, pc, #4	; (adr r2, 800c4f8 <UART_SetConfig+0x380>)
 800c4f4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c4f8:	0800c59d 	.word	0x0800c59d
 800c4fc:	0800c5cd 	.word	0x0800c5cd
 800c500:	0800c5cd 	.word	0x0800c5cd
 800c504:	0800c5cd 	.word	0x0800c5cd
 800c508:	0800c5cd 	.word	0x0800c5cd
 800c50c:	0800c5cd 	.word	0x0800c5cd
 800c510:	0800c5cd 	.word	0x0800c5cd
 800c514:	0800c5cd 	.word	0x0800c5cd
 800c518:	0800c5a5 	.word	0x0800c5a5
 800c51c:	0800c5cd 	.word	0x0800c5cd
 800c520:	0800c5cd 	.word	0x0800c5cd
 800c524:	0800c5cd 	.word	0x0800c5cd
 800c528:	0800c5cd 	.word	0x0800c5cd
 800c52c:	0800c5cd 	.word	0x0800c5cd
 800c530:	0800c5cd 	.word	0x0800c5cd
 800c534:	0800c5cd 	.word	0x0800c5cd
 800c538:	0800c5ad 	.word	0x0800c5ad
 800c53c:	0800c5cd 	.word	0x0800c5cd
 800c540:	0800c5cd 	.word	0x0800c5cd
 800c544:	0800c5cd 	.word	0x0800c5cd
 800c548:	0800c5cd 	.word	0x0800c5cd
 800c54c:	0800c5cd 	.word	0x0800c5cd
 800c550:	0800c5cd 	.word	0x0800c5cd
 800c554:	0800c5cd 	.word	0x0800c5cd
 800c558:	0800c5b5 	.word	0x0800c5b5
 800c55c:	0800c5cd 	.word	0x0800c5cd
 800c560:	0800c5cd 	.word	0x0800c5cd
 800c564:	0800c5cd 	.word	0x0800c5cd
 800c568:	0800c5cd 	.word	0x0800c5cd
 800c56c:	0800c5cd 	.word	0x0800c5cd
 800c570:	0800c5cd 	.word	0x0800c5cd
 800c574:	0800c5cd 	.word	0x0800c5cd
 800c578:	0800c5bd 	.word	0x0800c5bd
 800c57c:	0800c5cd 	.word	0x0800c5cd
 800c580:	0800c5cd 	.word	0x0800c5cd
 800c584:	0800c5cd 	.word	0x0800c5cd
 800c588:	0800c5cd 	.word	0x0800c5cd
 800c58c:	0800c5cd 	.word	0x0800c5cd
 800c590:	0800c5cd 	.word	0x0800c5cd
 800c594:	0800c5cd 	.word	0x0800c5cd
 800c598:	0800c5c5 	.word	0x0800c5c5
 800c59c:	2301      	movs	r3, #1
 800c59e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c5a2:	e1c0      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c5a4:	2304      	movs	r3, #4
 800c5a6:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c5aa:	e1bc      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c5ac:	2308      	movs	r3, #8
 800c5ae:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c5b2:	e1b8      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c5b4:	2310      	movs	r3, #16
 800c5b6:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c5ba:	e1b4      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c5bc:	2320      	movs	r3, #32
 800c5be:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c5c2:	e1b0      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c5c4:	2340      	movs	r3, #64	; 0x40
 800c5c6:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c5ca:	e1ac      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c5cc:	2380      	movs	r3, #128	; 0x80
 800c5ce:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c5d2:	e1a8      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c5d4:	697b      	ldr	r3, [r7, #20]
 800c5d6:	681b      	ldr	r3, [r3, #0]
 800c5d8:	4a75      	ldr	r2, [pc, #468]	; (800c7b0 <UART_SetConfig+0x638>)
 800c5da:	4293      	cmp	r3, r2
 800c5dc:	d130      	bne.n	800c640 <UART_SetConfig+0x4c8>
 800c5de:	4b73      	ldr	r3, [pc, #460]	; (800c7ac <UART_SetConfig+0x634>)
 800c5e0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800c5e2:	f003 0307 	and.w	r3, r3, #7
 800c5e6:	2b05      	cmp	r3, #5
 800c5e8:	d826      	bhi.n	800c638 <UART_SetConfig+0x4c0>
 800c5ea:	a201      	add	r2, pc, #4	; (adr r2, 800c5f0 <UART_SetConfig+0x478>)
 800c5ec:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c5f0:	0800c609 	.word	0x0800c609
 800c5f4:	0800c611 	.word	0x0800c611
 800c5f8:	0800c619 	.word	0x0800c619
 800c5fc:	0800c621 	.word	0x0800c621
 800c600:	0800c629 	.word	0x0800c629
 800c604:	0800c631 	.word	0x0800c631
 800c608:	2300      	movs	r3, #0
 800c60a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c60e:	e18a      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c610:	2304      	movs	r3, #4
 800c612:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c616:	e186      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c618:	2308      	movs	r3, #8
 800c61a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c61e:	e182      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c620:	2310      	movs	r3, #16
 800c622:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c626:	e17e      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c628:	2320      	movs	r3, #32
 800c62a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c62e:	e17a      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c630:	2340      	movs	r3, #64	; 0x40
 800c632:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c636:	e176      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c638:	2380      	movs	r3, #128	; 0x80
 800c63a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c63e:	e172      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c640:	697b      	ldr	r3, [r7, #20]
 800c642:	681b      	ldr	r3, [r3, #0]
 800c644:	4a5b      	ldr	r2, [pc, #364]	; (800c7b4 <UART_SetConfig+0x63c>)
 800c646:	4293      	cmp	r3, r2
 800c648:	d130      	bne.n	800c6ac <UART_SetConfig+0x534>
 800c64a:	4b58      	ldr	r3, [pc, #352]	; (800c7ac <UART_SetConfig+0x634>)
 800c64c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800c64e:	f003 0307 	and.w	r3, r3, #7
 800c652:	2b05      	cmp	r3, #5
 800c654:	d826      	bhi.n	800c6a4 <UART_SetConfig+0x52c>
 800c656:	a201      	add	r2, pc, #4	; (adr r2, 800c65c <UART_SetConfig+0x4e4>)
 800c658:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c65c:	0800c675 	.word	0x0800c675
 800c660:	0800c67d 	.word	0x0800c67d
 800c664:	0800c685 	.word	0x0800c685
 800c668:	0800c68d 	.word	0x0800c68d
 800c66c:	0800c695 	.word	0x0800c695
 800c670:	0800c69d 	.word	0x0800c69d
 800c674:	2300      	movs	r3, #0
 800c676:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c67a:	e154      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c67c:	2304      	movs	r3, #4
 800c67e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c682:	e150      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c684:	2308      	movs	r3, #8
 800c686:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c68a:	e14c      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c68c:	2310      	movs	r3, #16
 800c68e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c692:	e148      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c694:	2320      	movs	r3, #32
 800c696:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c69a:	e144      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c69c:	2340      	movs	r3, #64	; 0x40
 800c69e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c6a2:	e140      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c6a4:	2380      	movs	r3, #128	; 0x80
 800c6a6:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c6aa:	e13c      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c6ac:	697b      	ldr	r3, [r7, #20]
 800c6ae:	681b      	ldr	r3, [r3, #0]
 800c6b0:	4a41      	ldr	r2, [pc, #260]	; (800c7b8 <UART_SetConfig+0x640>)
 800c6b2:	4293      	cmp	r3, r2
 800c6b4:	f040 8082 	bne.w	800c7bc <UART_SetConfig+0x644>
 800c6b8:	4b3c      	ldr	r3, [pc, #240]	; (800c7ac <UART_SetConfig+0x634>)
 800c6ba:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800c6bc:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800c6c0:	2b28      	cmp	r3, #40	; 0x28
 800c6c2:	d86d      	bhi.n	800c7a0 <UART_SetConfig+0x628>
 800c6c4:	a201      	add	r2, pc, #4	; (adr r2, 800c6cc <UART_SetConfig+0x554>)
 800c6c6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c6ca:	bf00      	nop
 800c6cc:	0800c771 	.word	0x0800c771
 800c6d0:	0800c7a1 	.word	0x0800c7a1
 800c6d4:	0800c7a1 	.word	0x0800c7a1
 800c6d8:	0800c7a1 	.word	0x0800c7a1
 800c6dc:	0800c7a1 	.word	0x0800c7a1
 800c6e0:	0800c7a1 	.word	0x0800c7a1
 800c6e4:	0800c7a1 	.word	0x0800c7a1
 800c6e8:	0800c7a1 	.word	0x0800c7a1
 800c6ec:	0800c779 	.word	0x0800c779
 800c6f0:	0800c7a1 	.word	0x0800c7a1
 800c6f4:	0800c7a1 	.word	0x0800c7a1
 800c6f8:	0800c7a1 	.word	0x0800c7a1
 800c6fc:	0800c7a1 	.word	0x0800c7a1
 800c700:	0800c7a1 	.word	0x0800c7a1
 800c704:	0800c7a1 	.word	0x0800c7a1
 800c708:	0800c7a1 	.word	0x0800c7a1
 800c70c:	0800c781 	.word	0x0800c781
 800c710:	0800c7a1 	.word	0x0800c7a1
 800c714:	0800c7a1 	.word	0x0800c7a1
 800c718:	0800c7a1 	.word	0x0800c7a1
 800c71c:	0800c7a1 	.word	0x0800c7a1
 800c720:	0800c7a1 	.word	0x0800c7a1
 800c724:	0800c7a1 	.word	0x0800c7a1
 800c728:	0800c7a1 	.word	0x0800c7a1
 800c72c:	0800c789 	.word	0x0800c789
 800c730:	0800c7a1 	.word	0x0800c7a1
 800c734:	0800c7a1 	.word	0x0800c7a1
 800c738:	0800c7a1 	.word	0x0800c7a1
 800c73c:	0800c7a1 	.word	0x0800c7a1
 800c740:	0800c7a1 	.word	0x0800c7a1
 800c744:	0800c7a1 	.word	0x0800c7a1
 800c748:	0800c7a1 	.word	0x0800c7a1
 800c74c:	0800c791 	.word	0x0800c791
 800c750:	0800c7a1 	.word	0x0800c7a1
 800c754:	0800c7a1 	.word	0x0800c7a1
 800c758:	0800c7a1 	.word	0x0800c7a1
 800c75c:	0800c7a1 	.word	0x0800c7a1
 800c760:	0800c7a1 	.word	0x0800c7a1
 800c764:	0800c7a1 	.word	0x0800c7a1
 800c768:	0800c7a1 	.word	0x0800c7a1
 800c76c:	0800c799 	.word	0x0800c799
 800c770:	2301      	movs	r3, #1
 800c772:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c776:	e0d6      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c778:	2304      	movs	r3, #4
 800c77a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c77e:	e0d2      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c780:	2308      	movs	r3, #8
 800c782:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c786:	e0ce      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c788:	2310      	movs	r3, #16
 800c78a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c78e:	e0ca      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c790:	2320      	movs	r3, #32
 800c792:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c796:	e0c6      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c798:	2340      	movs	r3, #64	; 0x40
 800c79a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c79e:	e0c2      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c7a0:	2380      	movs	r3, #128	; 0x80
 800c7a2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c7a6:	e0be      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c7a8:	40011400 	.word	0x40011400
 800c7ac:	58024400 	.word	0x58024400
 800c7b0:	40007800 	.word	0x40007800
 800c7b4:	40007c00 	.word	0x40007c00
 800c7b8:	40011800 	.word	0x40011800
 800c7bc:	697b      	ldr	r3, [r7, #20]
 800c7be:	681b      	ldr	r3, [r3, #0]
 800c7c0:	4aad      	ldr	r2, [pc, #692]	; (800ca78 <UART_SetConfig+0x900>)
 800c7c2:	4293      	cmp	r3, r2
 800c7c4:	d176      	bne.n	800c8b4 <UART_SetConfig+0x73c>
 800c7c6:	4bad      	ldr	r3, [pc, #692]	; (800ca7c <UART_SetConfig+0x904>)
 800c7c8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800c7ca:	f003 0338 	and.w	r3, r3, #56	; 0x38
 800c7ce:	2b28      	cmp	r3, #40	; 0x28
 800c7d0:	d86c      	bhi.n	800c8ac <UART_SetConfig+0x734>
 800c7d2:	a201      	add	r2, pc, #4	; (adr r2, 800c7d8 <UART_SetConfig+0x660>)
 800c7d4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c7d8:	0800c87d 	.word	0x0800c87d
 800c7dc:	0800c8ad 	.word	0x0800c8ad
 800c7e0:	0800c8ad 	.word	0x0800c8ad
 800c7e4:	0800c8ad 	.word	0x0800c8ad
 800c7e8:	0800c8ad 	.word	0x0800c8ad
 800c7ec:	0800c8ad 	.word	0x0800c8ad
 800c7f0:	0800c8ad 	.word	0x0800c8ad
 800c7f4:	0800c8ad 	.word	0x0800c8ad
 800c7f8:	0800c885 	.word	0x0800c885
 800c7fc:	0800c8ad 	.word	0x0800c8ad
 800c800:	0800c8ad 	.word	0x0800c8ad
 800c804:	0800c8ad 	.word	0x0800c8ad
 800c808:	0800c8ad 	.word	0x0800c8ad
 800c80c:	0800c8ad 	.word	0x0800c8ad
 800c810:	0800c8ad 	.word	0x0800c8ad
 800c814:	0800c8ad 	.word	0x0800c8ad
 800c818:	0800c88d 	.word	0x0800c88d
 800c81c:	0800c8ad 	.word	0x0800c8ad
 800c820:	0800c8ad 	.word	0x0800c8ad
 800c824:	0800c8ad 	.word	0x0800c8ad
 800c828:	0800c8ad 	.word	0x0800c8ad
 800c82c:	0800c8ad 	.word	0x0800c8ad
 800c830:	0800c8ad 	.word	0x0800c8ad
 800c834:	0800c8ad 	.word	0x0800c8ad
 800c838:	0800c895 	.word	0x0800c895
 800c83c:	0800c8ad 	.word	0x0800c8ad
 800c840:	0800c8ad 	.word	0x0800c8ad
 800c844:	0800c8ad 	.word	0x0800c8ad
 800c848:	0800c8ad 	.word	0x0800c8ad
 800c84c:	0800c8ad 	.word	0x0800c8ad
 800c850:	0800c8ad 	.word	0x0800c8ad
 800c854:	0800c8ad 	.word	0x0800c8ad
 800c858:	0800c89d 	.word	0x0800c89d
 800c85c:	0800c8ad 	.word	0x0800c8ad
 800c860:	0800c8ad 	.word	0x0800c8ad
 800c864:	0800c8ad 	.word	0x0800c8ad
 800c868:	0800c8ad 	.word	0x0800c8ad
 800c86c:	0800c8ad 	.word	0x0800c8ad
 800c870:	0800c8ad 	.word	0x0800c8ad
 800c874:	0800c8ad 	.word	0x0800c8ad
 800c878:	0800c8a5 	.word	0x0800c8a5
 800c87c:	2301      	movs	r3, #1
 800c87e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c882:	e050      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c884:	2304      	movs	r3, #4
 800c886:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c88a:	e04c      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c88c:	2308      	movs	r3, #8
 800c88e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c892:	e048      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c894:	2310      	movs	r3, #16
 800c896:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c89a:	e044      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c89c:	2320      	movs	r3, #32
 800c89e:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c8a2:	e040      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c8a4:	2340      	movs	r3, #64	; 0x40
 800c8a6:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c8aa:	e03c      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c8ac:	2380      	movs	r3, #128	; 0x80
 800c8ae:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c8b2:	e038      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c8b4:	697b      	ldr	r3, [r7, #20]
 800c8b6:	681b      	ldr	r3, [r3, #0]
 800c8b8:	4a71      	ldr	r2, [pc, #452]	; (800ca80 <UART_SetConfig+0x908>)
 800c8ba:	4293      	cmp	r3, r2
 800c8bc:	d130      	bne.n	800c920 <UART_SetConfig+0x7a8>
 800c8be:	4b6f      	ldr	r3, [pc, #444]	; (800ca7c <UART_SetConfig+0x904>)
 800c8c0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800c8c2:	f003 0307 	and.w	r3, r3, #7
 800c8c6:	2b05      	cmp	r3, #5
 800c8c8:	d826      	bhi.n	800c918 <UART_SetConfig+0x7a0>
 800c8ca:	a201      	add	r2, pc, #4	; (adr r2, 800c8d0 <UART_SetConfig+0x758>)
 800c8cc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c8d0:	0800c8e9 	.word	0x0800c8e9
 800c8d4:	0800c8f1 	.word	0x0800c8f1
 800c8d8:	0800c8f9 	.word	0x0800c8f9
 800c8dc:	0800c901 	.word	0x0800c901
 800c8e0:	0800c909 	.word	0x0800c909
 800c8e4:	0800c911 	.word	0x0800c911
 800c8e8:	2302      	movs	r3, #2
 800c8ea:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c8ee:	e01a      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c8f0:	2304      	movs	r3, #4
 800c8f2:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c8f6:	e016      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c8f8:	2308      	movs	r3, #8
 800c8fa:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c8fe:	e012      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c900:	2310      	movs	r3, #16
 800c902:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c906:	e00e      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c908:	2320      	movs	r3, #32
 800c90a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c90e:	e00a      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c910:	2340      	movs	r3, #64	; 0x40
 800c912:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c916:	e006      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c918:	2380      	movs	r3, #128	; 0x80
 800c91a:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c91e:	e002      	b.n	800c926 <UART_SetConfig+0x7ae>
 800c920:	2380      	movs	r3, #128	; 0x80
 800c922:	f887 3043 	strb.w	r3, [r7, #67]	; 0x43
 800c926:	697b      	ldr	r3, [r7, #20]
 800c928:	681b      	ldr	r3, [r3, #0]
 800c92a:	4a55      	ldr	r2, [pc, #340]	; (800ca80 <UART_SetConfig+0x908>)
 800c92c:	4293      	cmp	r3, r2
 800c92e:	f040 80f8 	bne.w	800cb22 <UART_SetConfig+0x9aa>
 800c932:	f897 3043 	ldrb.w	r3, [r7, #67]	; 0x43
 800c936:	2b20      	cmp	r3, #32
 800c938:	dc46      	bgt.n	800c9c8 <UART_SetConfig+0x850>
 800c93a:	2b02      	cmp	r3, #2
 800c93c:	db75      	blt.n	800ca2a <UART_SetConfig+0x8b2>
 800c93e:	3b02      	subs	r3, #2
 800c940:	2b1e      	cmp	r3, #30
 800c942:	d872      	bhi.n	800ca2a <UART_SetConfig+0x8b2>
 800c944:	a201      	add	r2, pc, #4	; (adr r2, 800c94c <UART_SetConfig+0x7d4>)
 800c946:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c94a:	bf00      	nop
 800c94c:	0800c9cf 	.word	0x0800c9cf
 800c950:	0800ca2b 	.word	0x0800ca2b
 800c954:	0800c9d7 	.word	0x0800c9d7
 800c958:	0800ca2b 	.word	0x0800ca2b
 800c95c:	0800ca2b 	.word	0x0800ca2b
 800c960:	0800ca2b 	.word	0x0800ca2b
 800c964:	0800c9e7 	.word	0x0800c9e7
 800c968:	0800ca2b 	.word	0x0800ca2b
 800c96c:	0800ca2b 	.word	0x0800ca2b
 800c970:	0800ca2b 	.word	0x0800ca2b
 800c974:	0800ca2b 	.word	0x0800ca2b
 800c978:	0800ca2b 	.word	0x0800ca2b
 800c97c:	0800ca2b 	.word	0x0800ca2b
 800c980:	0800ca2b 	.word	0x0800ca2b
 800c984:	0800c9f7 	.word	0x0800c9f7
 800c988:	0800ca2b 	.word	0x0800ca2b
 800c98c:	0800ca2b 	.word	0x0800ca2b
 800c990:	0800ca2b 	.word	0x0800ca2b
 800c994:	0800ca2b 	.word	0x0800ca2b
 800c998:	0800ca2b 	.word	0x0800ca2b
 800c99c:	0800ca2b 	.word	0x0800ca2b
 800c9a0:	0800ca2b 	.word	0x0800ca2b
 800c9a4:	0800ca2b 	.word	0x0800ca2b
 800c9a8:	0800ca2b 	.word	0x0800ca2b
 800c9ac:	0800ca2b 	.word	0x0800ca2b
 800c9b0:	0800ca2b 	.word	0x0800ca2b
 800c9b4:	0800ca2b 	.word	0x0800ca2b
 800c9b8:	0800ca2b 	.word	0x0800ca2b
 800c9bc:	0800ca2b 	.word	0x0800ca2b
 800c9c0:	0800ca2b 	.word	0x0800ca2b
 800c9c4:	0800ca1d 	.word	0x0800ca1d
 800c9c8:	2b40      	cmp	r3, #64	; 0x40
 800c9ca:	d02a      	beq.n	800ca22 <UART_SetConfig+0x8aa>
 800c9cc:	e02d      	b.n	800ca2a <UART_SetConfig+0x8b2>
 800c9ce:	f7fc ff87 	bl	80098e0 <HAL_RCCEx_GetD3PCLK1Freq>
 800c9d2:	63f8      	str	r0, [r7, #60]	; 0x3c
 800c9d4:	e02f      	b.n	800ca36 <UART_SetConfig+0x8be>
 800c9d6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800c9da:	4618      	mov	r0, r3
 800c9dc:	f7fc ff96 	bl	800990c <HAL_RCCEx_GetPLL2ClockFreq>
 800c9e0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800c9e2:	63fb      	str	r3, [r7, #60]	; 0x3c
 800c9e4:	e027      	b.n	800ca36 <UART_SetConfig+0x8be>
 800c9e6:	f107 0318 	add.w	r3, r7, #24
 800c9ea:	4618      	mov	r0, r3
 800c9ec:	f7fd f8e2 	bl	8009bb4 <HAL_RCCEx_GetPLL3ClockFreq>
 800c9f0:	69fb      	ldr	r3, [r7, #28]
 800c9f2:	63fb      	str	r3, [r7, #60]	; 0x3c
 800c9f4:	e01f      	b.n	800ca36 <UART_SetConfig+0x8be>
 800c9f6:	4b21      	ldr	r3, [pc, #132]	; (800ca7c <UART_SetConfig+0x904>)
 800c9f8:	681b      	ldr	r3, [r3, #0]
 800c9fa:	f003 0320 	and.w	r3, r3, #32
 800c9fe:	2b00      	cmp	r3, #0
 800ca00:	d009      	beq.n	800ca16 <UART_SetConfig+0x89e>
 800ca02:	4b1e      	ldr	r3, [pc, #120]	; (800ca7c <UART_SetConfig+0x904>)
 800ca04:	681b      	ldr	r3, [r3, #0]
 800ca06:	08db      	lsrs	r3, r3, #3
 800ca08:	f003 0303 	and.w	r3, r3, #3
 800ca0c:	4a1d      	ldr	r2, [pc, #116]	; (800ca84 <UART_SetConfig+0x90c>)
 800ca0e:	fa22 f303 	lsr.w	r3, r2, r3
 800ca12:	63fb      	str	r3, [r7, #60]	; 0x3c
 800ca14:	e00f      	b.n	800ca36 <UART_SetConfig+0x8be>
 800ca16:	4b1b      	ldr	r3, [pc, #108]	; (800ca84 <UART_SetConfig+0x90c>)
 800ca18:	63fb      	str	r3, [r7, #60]	; 0x3c
 800ca1a:	e00c      	b.n	800ca36 <UART_SetConfig+0x8be>
 800ca1c:	4b1a      	ldr	r3, [pc, #104]	; (800ca88 <UART_SetConfig+0x910>)
 800ca1e:	63fb      	str	r3, [r7, #60]	; 0x3c
 800ca20:	e009      	b.n	800ca36 <UART_SetConfig+0x8be>
 800ca22:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800ca26:	63fb      	str	r3, [r7, #60]	; 0x3c
 800ca28:	e005      	b.n	800ca36 <UART_SetConfig+0x8be>
 800ca2a:	2300      	movs	r3, #0
 800ca2c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800ca2e:	2301      	movs	r3, #1
 800ca30:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 800ca34:	bf00      	nop
 800ca36:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800ca38:	2b00      	cmp	r3, #0
 800ca3a:	f000 81ee 	beq.w	800ce1a <UART_SetConfig+0xca2>
 800ca3e:	697b      	ldr	r3, [r7, #20]
 800ca40:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ca42:	4a12      	ldr	r2, [pc, #72]	; (800ca8c <UART_SetConfig+0x914>)
 800ca44:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800ca48:	461a      	mov	r2, r3
 800ca4a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800ca4c:	fbb3 f3f2 	udiv	r3, r3, r2
 800ca50:	633b      	str	r3, [r7, #48]	; 0x30
 800ca52:	697b      	ldr	r3, [r7, #20]
 800ca54:	685a      	ldr	r2, [r3, #4]
 800ca56:	4613      	mov	r3, r2
 800ca58:	005b      	lsls	r3, r3, #1
 800ca5a:	4413      	add	r3, r2
 800ca5c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800ca5e:	429a      	cmp	r2, r3
 800ca60:	d305      	bcc.n	800ca6e <UART_SetConfig+0x8f6>
 800ca62:	697b      	ldr	r3, [r7, #20]
 800ca64:	685b      	ldr	r3, [r3, #4]
 800ca66:	031b      	lsls	r3, r3, #12
 800ca68:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800ca6a:	429a      	cmp	r2, r3
 800ca6c:	d910      	bls.n	800ca90 <UART_SetConfig+0x918>
 800ca6e:	2301      	movs	r3, #1
 800ca70:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 800ca74:	e1d1      	b.n	800ce1a <UART_SetConfig+0xca2>
 800ca76:	bf00      	nop
 800ca78:	40011c00 	.word	0x40011c00
 800ca7c:	58024400 	.word	0x58024400
 800ca80:	58000c00 	.word	0x58000c00
 800ca84:	03d09000 	.word	0x03d09000
 800ca88:	003d0900 	.word	0x003d0900
 800ca8c:	0800e004 	.word	0x0800e004
 800ca90:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800ca92:	2200      	movs	r2, #0
 800ca94:	60bb      	str	r3, [r7, #8]
 800ca96:	60fa      	str	r2, [r7, #12]
 800ca98:	697b      	ldr	r3, [r7, #20]
 800ca9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ca9c:	4ac0      	ldr	r2, [pc, #768]	; (800cda0 <UART_SetConfig+0xc28>)
 800ca9e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800caa2:	b29b      	uxth	r3, r3
 800caa4:	2200      	movs	r2, #0
 800caa6:	603b      	str	r3, [r7, #0]
 800caa8:	607a      	str	r2, [r7, #4]
 800caaa:	e9d7 2300 	ldrd	r2, r3, [r7]
 800caae:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 800cab2:	f7f3 fc35 	bl	8000320 <__aeabi_uldivmod>
 800cab6:	4602      	mov	r2, r0
 800cab8:	460b      	mov	r3, r1
 800caba:	4610      	mov	r0, r2
 800cabc:	4619      	mov	r1, r3
 800cabe:	f04f 0200 	mov.w	r2, #0
 800cac2:	f04f 0300 	mov.w	r3, #0
 800cac6:	020b      	lsls	r3, r1, #8
 800cac8:	ea43 6310 	orr.w	r3, r3, r0, lsr #24
 800cacc:	0202      	lsls	r2, r0, #8
 800cace:	6979      	ldr	r1, [r7, #20]
 800cad0:	6849      	ldr	r1, [r1, #4]
 800cad2:	0849      	lsrs	r1, r1, #1
 800cad4:	2000      	movs	r0, #0
 800cad6:	460c      	mov	r4, r1
 800cad8:	4605      	mov	r5, r0
 800cada:	eb12 0804 	adds.w	r8, r2, r4
 800cade:	eb43 0905 	adc.w	r9, r3, r5
 800cae2:	697b      	ldr	r3, [r7, #20]
 800cae4:	685b      	ldr	r3, [r3, #4]
 800cae6:	2200      	movs	r2, #0
 800cae8:	469a      	mov	sl, r3
 800caea:	4693      	mov	fp, r2
 800caec:	4652      	mov	r2, sl
 800caee:	465b      	mov	r3, fp
 800caf0:	4640      	mov	r0, r8
 800caf2:	4649      	mov	r1, r9
 800caf4:	f7f3 fc14 	bl	8000320 <__aeabi_uldivmod>
 800caf8:	4602      	mov	r2, r0
 800cafa:	460b      	mov	r3, r1
 800cafc:	4613      	mov	r3, r2
 800cafe:	63bb      	str	r3, [r7, #56]	; 0x38
 800cb00:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800cb02:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800cb06:	d308      	bcc.n	800cb1a <UART_SetConfig+0x9a2>
 800cb08:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800cb0a:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800cb0e:	d204      	bcs.n	800cb1a <UART_SetConfig+0x9a2>
 800cb10:	697b      	ldr	r3, [r7, #20]
 800cb12:	681b      	ldr	r3, [r3, #0]
 800cb14:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800cb16:	60da      	str	r2, [r3, #12]
 800cb18:	e17f      	b.n	800ce1a <UART_SetConfig+0xca2>
 800cb1a:	2301      	movs	r3, #1
 800cb1c:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 800cb20:	e17b      	b.n	800ce1a <UART_SetConfig+0xca2>
 800cb22:	697b      	ldr	r3, [r7, #20]
 800cb24:	69db      	ldr	r3, [r3, #28]
 800cb26:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800cb2a:	f040 80bd 	bne.w	800cca8 <UART_SetConfig+0xb30>
 800cb2e:	f897 3043 	ldrb.w	r3, [r7, #67]	; 0x43
 800cb32:	2b20      	cmp	r3, #32
 800cb34:	dc48      	bgt.n	800cbc8 <UART_SetConfig+0xa50>
 800cb36:	2b00      	cmp	r3, #0
 800cb38:	db7b      	blt.n	800cc32 <UART_SetConfig+0xaba>
 800cb3a:	2b20      	cmp	r3, #32
 800cb3c:	d879      	bhi.n	800cc32 <UART_SetConfig+0xaba>
 800cb3e:	a201      	add	r2, pc, #4	; (adr r2, 800cb44 <UART_SetConfig+0x9cc>)
 800cb40:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800cb44:	0800cbcf 	.word	0x0800cbcf
 800cb48:	0800cbd7 	.word	0x0800cbd7
 800cb4c:	0800cc33 	.word	0x0800cc33
 800cb50:	0800cc33 	.word	0x0800cc33
 800cb54:	0800cbdf 	.word	0x0800cbdf
 800cb58:	0800cc33 	.word	0x0800cc33
 800cb5c:	0800cc33 	.word	0x0800cc33
 800cb60:	0800cc33 	.word	0x0800cc33
 800cb64:	0800cbef 	.word	0x0800cbef
 800cb68:	0800cc33 	.word	0x0800cc33
 800cb6c:	0800cc33 	.word	0x0800cc33
 800cb70:	0800cc33 	.word	0x0800cc33
 800cb74:	0800cc33 	.word	0x0800cc33
 800cb78:	0800cc33 	.word	0x0800cc33
 800cb7c:	0800cc33 	.word	0x0800cc33
 800cb80:	0800cc33 	.word	0x0800cc33
 800cb84:	0800cbff 	.word	0x0800cbff
 800cb88:	0800cc33 	.word	0x0800cc33
 800cb8c:	0800cc33 	.word	0x0800cc33
 800cb90:	0800cc33 	.word	0x0800cc33
 800cb94:	0800cc33 	.word	0x0800cc33
 800cb98:	0800cc33 	.word	0x0800cc33
 800cb9c:	0800cc33 	.word	0x0800cc33
 800cba0:	0800cc33 	.word	0x0800cc33
 800cba4:	0800cc33 	.word	0x0800cc33
 800cba8:	0800cc33 	.word	0x0800cc33
 800cbac:	0800cc33 	.word	0x0800cc33
 800cbb0:	0800cc33 	.word	0x0800cc33
 800cbb4:	0800cc33 	.word	0x0800cc33
 800cbb8:	0800cc33 	.word	0x0800cc33
 800cbbc:	0800cc33 	.word	0x0800cc33
 800cbc0:	0800cc33 	.word	0x0800cc33
 800cbc4:	0800cc25 	.word	0x0800cc25
 800cbc8:	2b40      	cmp	r3, #64	; 0x40
 800cbca:	d02e      	beq.n	800cc2a <UART_SetConfig+0xab2>
 800cbcc:	e031      	b.n	800cc32 <UART_SetConfig+0xaba>
 800cbce:	f7fb ff61 	bl	8008a94 <HAL_RCC_GetPCLK1Freq>
 800cbd2:	63f8      	str	r0, [r7, #60]	; 0x3c
 800cbd4:	e033      	b.n	800cc3e <UART_SetConfig+0xac6>
 800cbd6:	f7fb ff73 	bl	8008ac0 <HAL_RCC_GetPCLK2Freq>
 800cbda:	63f8      	str	r0, [r7, #60]	; 0x3c
 800cbdc:	e02f      	b.n	800cc3e <UART_SetConfig+0xac6>
 800cbde:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800cbe2:	4618      	mov	r0, r3
 800cbe4:	f7fc fe92 	bl	800990c <HAL_RCCEx_GetPLL2ClockFreq>
 800cbe8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800cbea:	63fb      	str	r3, [r7, #60]	; 0x3c
 800cbec:	e027      	b.n	800cc3e <UART_SetConfig+0xac6>
 800cbee:	f107 0318 	add.w	r3, r7, #24
 800cbf2:	4618      	mov	r0, r3
 800cbf4:	f7fc ffde 	bl	8009bb4 <HAL_RCCEx_GetPLL3ClockFreq>
 800cbf8:	69fb      	ldr	r3, [r7, #28]
 800cbfa:	63fb      	str	r3, [r7, #60]	; 0x3c
 800cbfc:	e01f      	b.n	800cc3e <UART_SetConfig+0xac6>
 800cbfe:	4b69      	ldr	r3, [pc, #420]	; (800cda4 <UART_SetConfig+0xc2c>)
 800cc00:	681b      	ldr	r3, [r3, #0]
 800cc02:	f003 0320 	and.w	r3, r3, #32
 800cc06:	2b00      	cmp	r3, #0
 800cc08:	d009      	beq.n	800cc1e <UART_SetConfig+0xaa6>
 800cc0a:	4b66      	ldr	r3, [pc, #408]	; (800cda4 <UART_SetConfig+0xc2c>)
 800cc0c:	681b      	ldr	r3, [r3, #0]
 800cc0e:	08db      	lsrs	r3, r3, #3
 800cc10:	f003 0303 	and.w	r3, r3, #3
 800cc14:	4a64      	ldr	r2, [pc, #400]	; (800cda8 <UART_SetConfig+0xc30>)
 800cc16:	fa22 f303 	lsr.w	r3, r2, r3
 800cc1a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800cc1c:	e00f      	b.n	800cc3e <UART_SetConfig+0xac6>
 800cc1e:	4b62      	ldr	r3, [pc, #392]	; (800cda8 <UART_SetConfig+0xc30>)
 800cc20:	63fb      	str	r3, [r7, #60]	; 0x3c
 800cc22:	e00c      	b.n	800cc3e <UART_SetConfig+0xac6>
 800cc24:	4b61      	ldr	r3, [pc, #388]	; (800cdac <UART_SetConfig+0xc34>)
 800cc26:	63fb      	str	r3, [r7, #60]	; 0x3c
 800cc28:	e009      	b.n	800cc3e <UART_SetConfig+0xac6>
 800cc2a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800cc2e:	63fb      	str	r3, [r7, #60]	; 0x3c
 800cc30:	e005      	b.n	800cc3e <UART_SetConfig+0xac6>
 800cc32:	2300      	movs	r3, #0
 800cc34:	63fb      	str	r3, [r7, #60]	; 0x3c
 800cc36:	2301      	movs	r3, #1
 800cc38:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 800cc3c:	bf00      	nop
 800cc3e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800cc40:	2b00      	cmp	r3, #0
 800cc42:	f000 80ea 	beq.w	800ce1a <UART_SetConfig+0xca2>
 800cc46:	697b      	ldr	r3, [r7, #20]
 800cc48:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cc4a:	4a55      	ldr	r2, [pc, #340]	; (800cda0 <UART_SetConfig+0xc28>)
 800cc4c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800cc50:	461a      	mov	r2, r3
 800cc52:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800cc54:	fbb3 f3f2 	udiv	r3, r3, r2
 800cc58:	005a      	lsls	r2, r3, #1
 800cc5a:	697b      	ldr	r3, [r7, #20]
 800cc5c:	685b      	ldr	r3, [r3, #4]
 800cc5e:	085b      	lsrs	r3, r3, #1
 800cc60:	441a      	add	r2, r3
 800cc62:	697b      	ldr	r3, [r7, #20]
 800cc64:	685b      	ldr	r3, [r3, #4]
 800cc66:	fbb2 f3f3 	udiv	r3, r2, r3
 800cc6a:	63bb      	str	r3, [r7, #56]	; 0x38
 800cc6c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800cc6e:	2b0f      	cmp	r3, #15
 800cc70:	d916      	bls.n	800cca0 <UART_SetConfig+0xb28>
 800cc72:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800cc74:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800cc78:	d212      	bcs.n	800cca0 <UART_SetConfig+0xb28>
 800cc7a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800cc7c:	b29b      	uxth	r3, r3
 800cc7e:	f023 030f 	bic.w	r3, r3, #15
 800cc82:	86fb      	strh	r3, [r7, #54]	; 0x36
 800cc84:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800cc86:	085b      	lsrs	r3, r3, #1
 800cc88:	b29b      	uxth	r3, r3
 800cc8a:	f003 0307 	and.w	r3, r3, #7
 800cc8e:	b29a      	uxth	r2, r3
 800cc90:	8efb      	ldrh	r3, [r7, #54]	; 0x36
 800cc92:	4313      	orrs	r3, r2
 800cc94:	86fb      	strh	r3, [r7, #54]	; 0x36
 800cc96:	697b      	ldr	r3, [r7, #20]
 800cc98:	681b      	ldr	r3, [r3, #0]
 800cc9a:	8efa      	ldrh	r2, [r7, #54]	; 0x36
 800cc9c:	60da      	str	r2, [r3, #12]
 800cc9e:	e0bc      	b.n	800ce1a <UART_SetConfig+0xca2>
 800cca0:	2301      	movs	r3, #1
 800cca2:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 800cca6:	e0b8      	b.n	800ce1a <UART_SetConfig+0xca2>
 800cca8:	f897 3043 	ldrb.w	r3, [r7, #67]	; 0x43
 800ccac:	2b20      	cmp	r3, #32
 800ccae:	dc4b      	bgt.n	800cd48 <UART_SetConfig+0xbd0>
 800ccb0:	2b00      	cmp	r3, #0
 800ccb2:	f2c0 8087 	blt.w	800cdc4 <UART_SetConfig+0xc4c>
 800ccb6:	2b20      	cmp	r3, #32
 800ccb8:	f200 8084 	bhi.w	800cdc4 <UART_SetConfig+0xc4c>
 800ccbc:	a201      	add	r2, pc, #4	; (adr r2, 800ccc4 <UART_SetConfig+0xb4c>)
 800ccbe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800ccc2:	bf00      	nop
 800ccc4:	0800cd4f 	.word	0x0800cd4f
 800ccc8:	0800cd57 	.word	0x0800cd57
 800cccc:	0800cdc5 	.word	0x0800cdc5
 800ccd0:	0800cdc5 	.word	0x0800cdc5
 800ccd4:	0800cd5f 	.word	0x0800cd5f
 800ccd8:	0800cdc5 	.word	0x0800cdc5
 800ccdc:	0800cdc5 	.word	0x0800cdc5
 800cce0:	0800cdc5 	.word	0x0800cdc5
 800cce4:	0800cd6f 	.word	0x0800cd6f
 800cce8:	0800cdc5 	.word	0x0800cdc5
 800ccec:	0800cdc5 	.word	0x0800cdc5
 800ccf0:	0800cdc5 	.word	0x0800cdc5
 800ccf4:	0800cdc5 	.word	0x0800cdc5
 800ccf8:	0800cdc5 	.word	0x0800cdc5
 800ccfc:	0800cdc5 	.word	0x0800cdc5
 800cd00:	0800cdc5 	.word	0x0800cdc5
 800cd04:	0800cd7f 	.word	0x0800cd7f
 800cd08:	0800cdc5 	.word	0x0800cdc5
 800cd0c:	0800cdc5 	.word	0x0800cdc5
 800cd10:	0800cdc5 	.word	0x0800cdc5
 800cd14:	0800cdc5 	.word	0x0800cdc5
 800cd18:	0800cdc5 	.word	0x0800cdc5
 800cd1c:	0800cdc5 	.word	0x0800cdc5
 800cd20:	0800cdc5 	.word	0x0800cdc5
 800cd24:	0800cdc5 	.word	0x0800cdc5
 800cd28:	0800cdc5 	.word	0x0800cdc5
 800cd2c:	0800cdc5 	.word	0x0800cdc5
 800cd30:	0800cdc5 	.word	0x0800cdc5
 800cd34:	0800cdc5 	.word	0x0800cdc5
 800cd38:	0800cdc5 	.word	0x0800cdc5
 800cd3c:	0800cdc5 	.word	0x0800cdc5
 800cd40:	0800cdc5 	.word	0x0800cdc5
 800cd44:	0800cdb7 	.word	0x0800cdb7
 800cd48:	2b40      	cmp	r3, #64	; 0x40
 800cd4a:	d037      	beq.n	800cdbc <UART_SetConfig+0xc44>
 800cd4c:	e03a      	b.n	800cdc4 <UART_SetConfig+0xc4c>
 800cd4e:	f7fb fea1 	bl	8008a94 <HAL_RCC_GetPCLK1Freq>
 800cd52:	63f8      	str	r0, [r7, #60]	; 0x3c
 800cd54:	e03c      	b.n	800cdd0 <UART_SetConfig+0xc58>
 800cd56:	f7fb feb3 	bl	8008ac0 <HAL_RCC_GetPCLK2Freq>
 800cd5a:	63f8      	str	r0, [r7, #60]	; 0x3c
 800cd5c:	e038      	b.n	800cdd0 <UART_SetConfig+0xc58>
 800cd5e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800cd62:	4618      	mov	r0, r3
 800cd64:	f7fc fdd2 	bl	800990c <HAL_RCCEx_GetPLL2ClockFreq>
 800cd68:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800cd6a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800cd6c:	e030      	b.n	800cdd0 <UART_SetConfig+0xc58>
 800cd6e:	f107 0318 	add.w	r3, r7, #24
 800cd72:	4618      	mov	r0, r3
 800cd74:	f7fc ff1e 	bl	8009bb4 <HAL_RCCEx_GetPLL3ClockFreq>
 800cd78:	69fb      	ldr	r3, [r7, #28]
 800cd7a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800cd7c:	e028      	b.n	800cdd0 <UART_SetConfig+0xc58>
 800cd7e:	4b09      	ldr	r3, [pc, #36]	; (800cda4 <UART_SetConfig+0xc2c>)
 800cd80:	681b      	ldr	r3, [r3, #0]
 800cd82:	f003 0320 	and.w	r3, r3, #32
 800cd86:	2b00      	cmp	r3, #0
 800cd88:	d012      	beq.n	800cdb0 <UART_SetConfig+0xc38>
 800cd8a:	4b06      	ldr	r3, [pc, #24]	; (800cda4 <UART_SetConfig+0xc2c>)
 800cd8c:	681b      	ldr	r3, [r3, #0]
 800cd8e:	08db      	lsrs	r3, r3, #3
 800cd90:	f003 0303 	and.w	r3, r3, #3
 800cd94:	4a04      	ldr	r2, [pc, #16]	; (800cda8 <UART_SetConfig+0xc30>)
 800cd96:	fa22 f303 	lsr.w	r3, r2, r3
 800cd9a:	63fb      	str	r3, [r7, #60]	; 0x3c
 800cd9c:	e018      	b.n	800cdd0 <UART_SetConfig+0xc58>
 800cd9e:	bf00      	nop
 800cda0:	0800e004 	.word	0x0800e004
 800cda4:	58024400 	.word	0x58024400
 800cda8:	03d09000 	.word	0x03d09000
 800cdac:	003d0900 	.word	0x003d0900
 800cdb0:	4b24      	ldr	r3, [pc, #144]	; (800ce44 <UART_SetConfig+0xccc>)
 800cdb2:	63fb      	str	r3, [r7, #60]	; 0x3c
 800cdb4:	e00c      	b.n	800cdd0 <UART_SetConfig+0xc58>
 800cdb6:	4b24      	ldr	r3, [pc, #144]	; (800ce48 <UART_SetConfig+0xcd0>)
 800cdb8:	63fb      	str	r3, [r7, #60]	; 0x3c
 800cdba:	e009      	b.n	800cdd0 <UART_SetConfig+0xc58>
 800cdbc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800cdc0:	63fb      	str	r3, [r7, #60]	; 0x3c
 800cdc2:	e005      	b.n	800cdd0 <UART_SetConfig+0xc58>
 800cdc4:	2300      	movs	r3, #0
 800cdc6:	63fb      	str	r3, [r7, #60]	; 0x3c
 800cdc8:	2301      	movs	r3, #1
 800cdca:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 800cdce:	bf00      	nop
 800cdd0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800cdd2:	2b00      	cmp	r3, #0
 800cdd4:	d021      	beq.n	800ce1a <UART_SetConfig+0xca2>
 800cdd6:	697b      	ldr	r3, [r7, #20]
 800cdd8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cdda:	4a1c      	ldr	r2, [pc, #112]	; (800ce4c <UART_SetConfig+0xcd4>)
 800cddc:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800cde0:	461a      	mov	r2, r3
 800cde2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800cde4:	fbb3 f2f2 	udiv	r2, r3, r2
 800cde8:	697b      	ldr	r3, [r7, #20]
 800cdea:	685b      	ldr	r3, [r3, #4]
 800cdec:	085b      	lsrs	r3, r3, #1
 800cdee:	441a      	add	r2, r3
 800cdf0:	697b      	ldr	r3, [r7, #20]
 800cdf2:	685b      	ldr	r3, [r3, #4]
 800cdf4:	fbb2 f3f3 	udiv	r3, r2, r3
 800cdf8:	63bb      	str	r3, [r7, #56]	; 0x38
 800cdfa:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800cdfc:	2b0f      	cmp	r3, #15
 800cdfe:	d909      	bls.n	800ce14 <UART_SetConfig+0xc9c>
 800ce00:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800ce02:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800ce06:	d205      	bcs.n	800ce14 <UART_SetConfig+0xc9c>
 800ce08:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800ce0a:	b29a      	uxth	r2, r3
 800ce0c:	697b      	ldr	r3, [r7, #20]
 800ce0e:	681b      	ldr	r3, [r3, #0]
 800ce10:	60da      	str	r2, [r3, #12]
 800ce12:	e002      	b.n	800ce1a <UART_SetConfig+0xca2>
 800ce14:	2301      	movs	r3, #1
 800ce16:	f887 3042 	strb.w	r3, [r7, #66]	; 0x42
 800ce1a:	697b      	ldr	r3, [r7, #20]
 800ce1c:	2201      	movs	r2, #1
 800ce1e:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800ce22:	697b      	ldr	r3, [r7, #20]
 800ce24:	2201      	movs	r2, #1
 800ce26:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 800ce2a:	697b      	ldr	r3, [r7, #20]
 800ce2c:	2200      	movs	r2, #0
 800ce2e:	671a      	str	r2, [r3, #112]	; 0x70
 800ce30:	697b      	ldr	r3, [r7, #20]
 800ce32:	2200      	movs	r2, #0
 800ce34:	675a      	str	r2, [r3, #116]	; 0x74
 800ce36:	f897 3042 	ldrb.w	r3, [r7, #66]	; 0x42
 800ce3a:	4618      	mov	r0, r3
 800ce3c:	3748      	adds	r7, #72	; 0x48
 800ce3e:	46bd      	mov	sp, r7
 800ce40:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800ce44:	03d09000 	.word	0x03d09000
 800ce48:	003d0900 	.word	0x003d0900
 800ce4c:	0800e004 	.word	0x0800e004

0800ce50 <UART_AdvFeatureConfig>:
 800ce50:	b480      	push	{r7}
 800ce52:	b083      	sub	sp, #12
 800ce54:	af00      	add	r7, sp, #0
 800ce56:	6078      	str	r0, [r7, #4]
 800ce58:	687b      	ldr	r3, [r7, #4]
 800ce5a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ce5c:	f003 0301 	and.w	r3, r3, #1
 800ce60:	2b00      	cmp	r3, #0
 800ce62:	d00a      	beq.n	800ce7a <UART_AdvFeatureConfig+0x2a>
 800ce64:	687b      	ldr	r3, [r7, #4]
 800ce66:	681b      	ldr	r3, [r3, #0]
 800ce68:	685b      	ldr	r3, [r3, #4]
 800ce6a:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 800ce6e:	687b      	ldr	r3, [r7, #4]
 800ce70:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ce72:	687b      	ldr	r3, [r7, #4]
 800ce74:	681b      	ldr	r3, [r3, #0]
 800ce76:	430a      	orrs	r2, r1
 800ce78:	605a      	str	r2, [r3, #4]
 800ce7a:	687b      	ldr	r3, [r7, #4]
 800ce7c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ce7e:	f003 0302 	and.w	r3, r3, #2
 800ce82:	2b00      	cmp	r3, #0
 800ce84:	d00a      	beq.n	800ce9c <UART_AdvFeatureConfig+0x4c>
 800ce86:	687b      	ldr	r3, [r7, #4]
 800ce88:	681b      	ldr	r3, [r3, #0]
 800ce8a:	685b      	ldr	r3, [r3, #4]
 800ce8c:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 800ce90:	687b      	ldr	r3, [r7, #4]
 800ce92:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800ce94:	687b      	ldr	r3, [r7, #4]
 800ce96:	681b      	ldr	r3, [r3, #0]
 800ce98:	430a      	orrs	r2, r1
 800ce9a:	605a      	str	r2, [r3, #4]
 800ce9c:	687b      	ldr	r3, [r7, #4]
 800ce9e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cea0:	f003 0304 	and.w	r3, r3, #4
 800cea4:	2b00      	cmp	r3, #0
 800cea6:	d00a      	beq.n	800cebe <UART_AdvFeatureConfig+0x6e>
 800cea8:	687b      	ldr	r3, [r7, #4]
 800ceaa:	681b      	ldr	r3, [r3, #0]
 800ceac:	685b      	ldr	r3, [r3, #4]
 800ceae:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 800ceb2:	687b      	ldr	r3, [r7, #4]
 800ceb4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800ceb6:	687b      	ldr	r3, [r7, #4]
 800ceb8:	681b      	ldr	r3, [r3, #0]
 800ceba:	430a      	orrs	r2, r1
 800cebc:	605a      	str	r2, [r3, #4]
 800cebe:	687b      	ldr	r3, [r7, #4]
 800cec0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cec2:	f003 0308 	and.w	r3, r3, #8
 800cec6:	2b00      	cmp	r3, #0
 800cec8:	d00a      	beq.n	800cee0 <UART_AdvFeatureConfig+0x90>
 800ceca:	687b      	ldr	r3, [r7, #4]
 800cecc:	681b      	ldr	r3, [r3, #0]
 800cece:	685b      	ldr	r3, [r3, #4]
 800ced0:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 800ced4:	687b      	ldr	r3, [r7, #4]
 800ced6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800ced8:	687b      	ldr	r3, [r7, #4]
 800ceda:	681b      	ldr	r3, [r3, #0]
 800cedc:	430a      	orrs	r2, r1
 800cede:	605a      	str	r2, [r3, #4]
 800cee0:	687b      	ldr	r3, [r7, #4]
 800cee2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cee4:	f003 0310 	and.w	r3, r3, #16
 800cee8:	2b00      	cmp	r3, #0
 800ceea:	d00a      	beq.n	800cf02 <UART_AdvFeatureConfig+0xb2>
 800ceec:	687b      	ldr	r3, [r7, #4]
 800ceee:	681b      	ldr	r3, [r3, #0]
 800cef0:	689b      	ldr	r3, [r3, #8]
 800cef2:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 800cef6:	687b      	ldr	r3, [r7, #4]
 800cef8:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800cefa:	687b      	ldr	r3, [r7, #4]
 800cefc:	681b      	ldr	r3, [r3, #0]
 800cefe:	430a      	orrs	r2, r1
 800cf00:	609a      	str	r2, [r3, #8]
 800cf02:	687b      	ldr	r3, [r7, #4]
 800cf04:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cf06:	f003 0320 	and.w	r3, r3, #32
 800cf0a:	2b00      	cmp	r3, #0
 800cf0c:	d00a      	beq.n	800cf24 <UART_AdvFeatureConfig+0xd4>
 800cf0e:	687b      	ldr	r3, [r7, #4]
 800cf10:	681b      	ldr	r3, [r3, #0]
 800cf12:	689b      	ldr	r3, [r3, #8]
 800cf14:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 800cf18:	687b      	ldr	r3, [r7, #4]
 800cf1a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800cf1c:	687b      	ldr	r3, [r7, #4]
 800cf1e:	681b      	ldr	r3, [r3, #0]
 800cf20:	430a      	orrs	r2, r1
 800cf22:	609a      	str	r2, [r3, #8]
 800cf24:	687b      	ldr	r3, [r7, #4]
 800cf26:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cf28:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800cf2c:	2b00      	cmp	r3, #0
 800cf2e:	d01a      	beq.n	800cf66 <UART_AdvFeatureConfig+0x116>
 800cf30:	687b      	ldr	r3, [r7, #4]
 800cf32:	681b      	ldr	r3, [r3, #0]
 800cf34:	685b      	ldr	r3, [r3, #4]
 800cf36:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 800cf3a:	687b      	ldr	r3, [r7, #4]
 800cf3c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800cf3e:	687b      	ldr	r3, [r7, #4]
 800cf40:	681b      	ldr	r3, [r3, #0]
 800cf42:	430a      	orrs	r2, r1
 800cf44:	605a      	str	r2, [r3, #4]
 800cf46:	687b      	ldr	r3, [r7, #4]
 800cf48:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800cf4a:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800cf4e:	d10a      	bne.n	800cf66 <UART_AdvFeatureConfig+0x116>
 800cf50:	687b      	ldr	r3, [r7, #4]
 800cf52:	681b      	ldr	r3, [r3, #0]
 800cf54:	685b      	ldr	r3, [r3, #4]
 800cf56:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 800cf5a:	687b      	ldr	r3, [r7, #4]
 800cf5c:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800cf5e:	687b      	ldr	r3, [r7, #4]
 800cf60:	681b      	ldr	r3, [r3, #0]
 800cf62:	430a      	orrs	r2, r1
 800cf64:	605a      	str	r2, [r3, #4]
 800cf66:	687b      	ldr	r3, [r7, #4]
 800cf68:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cf6a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800cf6e:	2b00      	cmp	r3, #0
 800cf70:	d00a      	beq.n	800cf88 <UART_AdvFeatureConfig+0x138>
 800cf72:	687b      	ldr	r3, [r7, #4]
 800cf74:	681b      	ldr	r3, [r3, #0]
 800cf76:	685b      	ldr	r3, [r3, #4]
 800cf78:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 800cf7c:	687b      	ldr	r3, [r7, #4]
 800cf7e:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800cf80:	687b      	ldr	r3, [r7, #4]
 800cf82:	681b      	ldr	r3, [r3, #0]
 800cf84:	430a      	orrs	r2, r1
 800cf86:	605a      	str	r2, [r3, #4]
 800cf88:	bf00      	nop
 800cf8a:	370c      	adds	r7, #12
 800cf8c:	46bd      	mov	sp, r7
 800cf8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cf92:	4770      	bx	lr

0800cf94 <UART_CheckIdleState>:
 800cf94:	b580      	push	{r7, lr}
 800cf96:	b086      	sub	sp, #24
 800cf98:	af02      	add	r7, sp, #8
 800cf9a:	6078      	str	r0, [r7, #4]
 800cf9c:	687b      	ldr	r3, [r7, #4]
 800cf9e:	2200      	movs	r2, #0
 800cfa0:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800cfa4:	f7f7 fd16 	bl	80049d4 <HAL_GetTick>
 800cfa8:	60f8      	str	r0, [r7, #12]
 800cfaa:	687b      	ldr	r3, [r7, #4]
 800cfac:	681b      	ldr	r3, [r3, #0]
 800cfae:	681b      	ldr	r3, [r3, #0]
 800cfb0:	f003 0308 	and.w	r3, r3, #8
 800cfb4:	2b08      	cmp	r3, #8
 800cfb6:	d10e      	bne.n	800cfd6 <UART_CheckIdleState+0x42>
 800cfb8:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 800cfbc:	9300      	str	r3, [sp, #0]
 800cfbe:	68fb      	ldr	r3, [r7, #12]
 800cfc0:	2200      	movs	r2, #0
 800cfc2:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 800cfc6:	6878      	ldr	r0, [r7, #4]
 800cfc8:	f000 f82f 	bl	800d02a <UART_WaitOnFlagUntilTimeout>
 800cfcc:	4603      	mov	r3, r0
 800cfce:	2b00      	cmp	r3, #0
 800cfd0:	d001      	beq.n	800cfd6 <UART_CheckIdleState+0x42>
 800cfd2:	2303      	movs	r3, #3
 800cfd4:	e025      	b.n	800d022 <UART_CheckIdleState+0x8e>
 800cfd6:	687b      	ldr	r3, [r7, #4]
 800cfd8:	681b      	ldr	r3, [r3, #0]
 800cfda:	681b      	ldr	r3, [r3, #0]
 800cfdc:	f003 0304 	and.w	r3, r3, #4
 800cfe0:	2b04      	cmp	r3, #4
 800cfe2:	d10e      	bne.n	800d002 <UART_CheckIdleState+0x6e>
 800cfe4:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 800cfe8:	9300      	str	r3, [sp, #0]
 800cfea:	68fb      	ldr	r3, [r7, #12]
 800cfec:	2200      	movs	r2, #0
 800cfee:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 800cff2:	6878      	ldr	r0, [r7, #4]
 800cff4:	f000 f819 	bl	800d02a <UART_WaitOnFlagUntilTimeout>
 800cff8:	4603      	mov	r3, r0
 800cffa:	2b00      	cmp	r3, #0
 800cffc:	d001      	beq.n	800d002 <UART_CheckIdleState+0x6e>
 800cffe:	2303      	movs	r3, #3
 800d000:	e00f      	b.n	800d022 <UART_CheckIdleState+0x8e>
 800d002:	687b      	ldr	r3, [r7, #4]
 800d004:	2220      	movs	r2, #32
 800d006:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800d00a:	687b      	ldr	r3, [r7, #4]
 800d00c:	2220      	movs	r2, #32
 800d00e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800d012:	687b      	ldr	r3, [r7, #4]
 800d014:	2200      	movs	r2, #0
 800d016:	66da      	str	r2, [r3, #108]	; 0x6c
 800d018:	687b      	ldr	r3, [r7, #4]
 800d01a:	2200      	movs	r2, #0
 800d01c:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800d020:	2300      	movs	r3, #0
 800d022:	4618      	mov	r0, r3
 800d024:	3710      	adds	r7, #16
 800d026:	46bd      	mov	sp, r7
 800d028:	bd80      	pop	{r7, pc}

0800d02a <UART_WaitOnFlagUntilTimeout>:
 800d02a:	b580      	push	{r7, lr}
 800d02c:	b09c      	sub	sp, #112	; 0x70
 800d02e:	af00      	add	r7, sp, #0
 800d030:	60f8      	str	r0, [r7, #12]
 800d032:	60b9      	str	r1, [r7, #8]
 800d034:	603b      	str	r3, [r7, #0]
 800d036:	4613      	mov	r3, r2
 800d038:	71fb      	strb	r3, [r7, #7]
 800d03a:	e0a9      	b.n	800d190 <UART_WaitOnFlagUntilTimeout+0x166>
 800d03c:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800d03e:	f1b3 3fff 	cmp.w	r3, #4294967295
 800d042:	f000 80a5 	beq.w	800d190 <UART_WaitOnFlagUntilTimeout+0x166>
 800d046:	f7f7 fcc5 	bl	80049d4 <HAL_GetTick>
 800d04a:	4602      	mov	r2, r0
 800d04c:	683b      	ldr	r3, [r7, #0]
 800d04e:	1ad3      	subs	r3, r2, r3
 800d050:	6fba      	ldr	r2, [r7, #120]	; 0x78
 800d052:	429a      	cmp	r2, r3
 800d054:	d302      	bcc.n	800d05c <UART_WaitOnFlagUntilTimeout+0x32>
 800d056:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 800d058:	2b00      	cmp	r3, #0
 800d05a:	d140      	bne.n	800d0de <UART_WaitOnFlagUntilTimeout+0xb4>
 800d05c:	68fb      	ldr	r3, [r7, #12]
 800d05e:	681b      	ldr	r3, [r3, #0]
 800d060:	653b      	str	r3, [r7, #80]	; 0x50
 800d062:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800d064:	e853 3f00 	ldrex	r3, [r3]
 800d068:	64fb      	str	r3, [r7, #76]	; 0x4c
 800d06a:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800d06c:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 800d070:	667b      	str	r3, [r7, #100]	; 0x64
 800d072:	68fb      	ldr	r3, [r7, #12]
 800d074:	681b      	ldr	r3, [r3, #0]
 800d076:	461a      	mov	r2, r3
 800d078:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 800d07a:	65fb      	str	r3, [r7, #92]	; 0x5c
 800d07c:	65ba      	str	r2, [r7, #88]	; 0x58
 800d07e:	6db9      	ldr	r1, [r7, #88]	; 0x58
 800d080:	6dfa      	ldr	r2, [r7, #92]	; 0x5c
 800d082:	e841 2300 	strex	r3, r2, [r1]
 800d086:	657b      	str	r3, [r7, #84]	; 0x54
 800d088:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800d08a:	2b00      	cmp	r3, #0
 800d08c:	d1e6      	bne.n	800d05c <UART_WaitOnFlagUntilTimeout+0x32>
 800d08e:	68fb      	ldr	r3, [r7, #12]
 800d090:	681b      	ldr	r3, [r3, #0]
 800d092:	3308      	adds	r3, #8
 800d094:	63fb      	str	r3, [r7, #60]	; 0x3c
 800d096:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800d098:	e853 3f00 	ldrex	r3, [r3]
 800d09c:	63bb      	str	r3, [r7, #56]	; 0x38
 800d09e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800d0a0:	f023 0301 	bic.w	r3, r3, #1
 800d0a4:	663b      	str	r3, [r7, #96]	; 0x60
 800d0a6:	68fb      	ldr	r3, [r7, #12]
 800d0a8:	681b      	ldr	r3, [r3, #0]
 800d0aa:	3308      	adds	r3, #8
 800d0ac:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 800d0ae:	64ba      	str	r2, [r7, #72]	; 0x48
 800d0b0:	647b      	str	r3, [r7, #68]	; 0x44
 800d0b2:	6c79      	ldr	r1, [r7, #68]	; 0x44
 800d0b4:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800d0b6:	e841 2300 	strex	r3, r2, [r1]
 800d0ba:	643b      	str	r3, [r7, #64]	; 0x40
 800d0bc:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800d0be:	2b00      	cmp	r3, #0
 800d0c0:	d1e5      	bne.n	800d08e <UART_WaitOnFlagUntilTimeout+0x64>
 800d0c2:	68fb      	ldr	r3, [r7, #12]
 800d0c4:	2220      	movs	r2, #32
 800d0c6:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800d0ca:	68fb      	ldr	r3, [r7, #12]
 800d0cc:	2220      	movs	r2, #32
 800d0ce:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800d0d2:	68fb      	ldr	r3, [r7, #12]
 800d0d4:	2200      	movs	r2, #0
 800d0d6:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800d0da:	2303      	movs	r3, #3
 800d0dc:	e069      	b.n	800d1b2 <UART_WaitOnFlagUntilTimeout+0x188>
 800d0de:	68fb      	ldr	r3, [r7, #12]
 800d0e0:	681b      	ldr	r3, [r3, #0]
 800d0e2:	681b      	ldr	r3, [r3, #0]
 800d0e4:	f003 0304 	and.w	r3, r3, #4
 800d0e8:	2b00      	cmp	r3, #0
 800d0ea:	d051      	beq.n	800d190 <UART_WaitOnFlagUntilTimeout+0x166>
 800d0ec:	68fb      	ldr	r3, [r7, #12]
 800d0ee:	681b      	ldr	r3, [r3, #0]
 800d0f0:	69db      	ldr	r3, [r3, #28]
 800d0f2:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800d0f6:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800d0fa:	d149      	bne.n	800d190 <UART_WaitOnFlagUntilTimeout+0x166>
 800d0fc:	68fb      	ldr	r3, [r7, #12]
 800d0fe:	681b      	ldr	r3, [r3, #0]
 800d100:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800d104:	621a      	str	r2, [r3, #32]
 800d106:	68fb      	ldr	r3, [r7, #12]
 800d108:	681b      	ldr	r3, [r3, #0]
 800d10a:	62bb      	str	r3, [r7, #40]	; 0x28
 800d10c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800d10e:	e853 3f00 	ldrex	r3, [r3]
 800d112:	627b      	str	r3, [r7, #36]	; 0x24
 800d114:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d116:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 800d11a:	66fb      	str	r3, [r7, #108]	; 0x6c
 800d11c:	68fb      	ldr	r3, [r7, #12]
 800d11e:	681b      	ldr	r3, [r3, #0]
 800d120:	461a      	mov	r2, r3
 800d122:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800d124:	637b      	str	r3, [r7, #52]	; 0x34
 800d126:	633a      	str	r2, [r7, #48]	; 0x30
 800d128:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800d12a:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800d12c:	e841 2300 	strex	r3, r2, [r1]
 800d130:	62fb      	str	r3, [r7, #44]	; 0x2c
 800d132:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d134:	2b00      	cmp	r3, #0
 800d136:	d1e6      	bne.n	800d106 <UART_WaitOnFlagUntilTimeout+0xdc>
 800d138:	68fb      	ldr	r3, [r7, #12]
 800d13a:	681b      	ldr	r3, [r3, #0]
 800d13c:	3308      	adds	r3, #8
 800d13e:	617b      	str	r3, [r7, #20]
 800d140:	697b      	ldr	r3, [r7, #20]
 800d142:	e853 3f00 	ldrex	r3, [r3]
 800d146:	613b      	str	r3, [r7, #16]
 800d148:	693b      	ldr	r3, [r7, #16]
 800d14a:	f023 0301 	bic.w	r3, r3, #1
 800d14e:	66bb      	str	r3, [r7, #104]	; 0x68
 800d150:	68fb      	ldr	r3, [r7, #12]
 800d152:	681b      	ldr	r3, [r3, #0]
 800d154:	3308      	adds	r3, #8
 800d156:	6eba      	ldr	r2, [r7, #104]	; 0x68
 800d158:	623a      	str	r2, [r7, #32]
 800d15a:	61fb      	str	r3, [r7, #28]
 800d15c:	69f9      	ldr	r1, [r7, #28]
 800d15e:	6a3a      	ldr	r2, [r7, #32]
 800d160:	e841 2300 	strex	r3, r2, [r1]
 800d164:	61bb      	str	r3, [r7, #24]
 800d166:	69bb      	ldr	r3, [r7, #24]
 800d168:	2b00      	cmp	r3, #0
 800d16a:	d1e5      	bne.n	800d138 <UART_WaitOnFlagUntilTimeout+0x10e>
 800d16c:	68fb      	ldr	r3, [r7, #12]
 800d16e:	2220      	movs	r2, #32
 800d170:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800d174:	68fb      	ldr	r3, [r7, #12]
 800d176:	2220      	movs	r2, #32
 800d178:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800d17c:	68fb      	ldr	r3, [r7, #12]
 800d17e:	2220      	movs	r2, #32
 800d180:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800d184:	68fb      	ldr	r3, [r7, #12]
 800d186:	2200      	movs	r2, #0
 800d188:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800d18c:	2303      	movs	r3, #3
 800d18e:	e010      	b.n	800d1b2 <UART_WaitOnFlagUntilTimeout+0x188>
 800d190:	68fb      	ldr	r3, [r7, #12]
 800d192:	681b      	ldr	r3, [r3, #0]
 800d194:	69da      	ldr	r2, [r3, #28]
 800d196:	68bb      	ldr	r3, [r7, #8]
 800d198:	4013      	ands	r3, r2
 800d19a:	68ba      	ldr	r2, [r7, #8]
 800d19c:	429a      	cmp	r2, r3
 800d19e:	bf0c      	ite	eq
 800d1a0:	2301      	moveq	r3, #1
 800d1a2:	2300      	movne	r3, #0
 800d1a4:	b2db      	uxtb	r3, r3
 800d1a6:	461a      	mov	r2, r3
 800d1a8:	79fb      	ldrb	r3, [r7, #7]
 800d1aa:	429a      	cmp	r2, r3
 800d1ac:	f43f af46 	beq.w	800d03c <UART_WaitOnFlagUntilTimeout+0x12>
 800d1b0:	2300      	movs	r3, #0
 800d1b2:	4618      	mov	r0, r3
 800d1b4:	3770      	adds	r7, #112	; 0x70
 800d1b6:	46bd      	mov	sp, r7
 800d1b8:	bd80      	pop	{r7, pc}
	...

0800d1bc <UART_Start_Receive_DMA>:
 800d1bc:	b580      	push	{r7, lr}
 800d1be:	b096      	sub	sp, #88	; 0x58
 800d1c0:	af00      	add	r7, sp, #0
 800d1c2:	60f8      	str	r0, [r7, #12]
 800d1c4:	60b9      	str	r1, [r7, #8]
 800d1c6:	4613      	mov	r3, r2
 800d1c8:	80fb      	strh	r3, [r7, #6]
 800d1ca:	68fb      	ldr	r3, [r7, #12]
 800d1cc:	68ba      	ldr	r2, [r7, #8]
 800d1ce:	659a      	str	r2, [r3, #88]	; 0x58
 800d1d0:	68fb      	ldr	r3, [r7, #12]
 800d1d2:	88fa      	ldrh	r2, [r7, #6]
 800d1d4:	f8a3 205c 	strh.w	r2, [r3, #92]	; 0x5c
 800d1d8:	68fb      	ldr	r3, [r7, #12]
 800d1da:	2200      	movs	r2, #0
 800d1dc:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800d1e0:	68fb      	ldr	r3, [r7, #12]
 800d1e2:	2222      	movs	r2, #34	; 0x22
 800d1e4:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800d1e8:	68fb      	ldr	r3, [r7, #12]
 800d1ea:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d1ec:	2b00      	cmp	r3, #0
 800d1ee:	d02c      	beq.n	800d24a <UART_Start_Receive_DMA+0x8e>
 800d1f0:	68fb      	ldr	r3, [r7, #12]
 800d1f2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d1f4:	4a42      	ldr	r2, [pc, #264]	; (800d300 <UART_Start_Receive_DMA+0x144>)
 800d1f6:	63da      	str	r2, [r3, #60]	; 0x3c
 800d1f8:	68fb      	ldr	r3, [r7, #12]
 800d1fa:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d1fc:	4a41      	ldr	r2, [pc, #260]	; (800d304 <UART_Start_Receive_DMA+0x148>)
 800d1fe:	641a      	str	r2, [r3, #64]	; 0x40
 800d200:	68fb      	ldr	r3, [r7, #12]
 800d202:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d204:	4a40      	ldr	r2, [pc, #256]	; (800d308 <UART_Start_Receive_DMA+0x14c>)
 800d206:	64da      	str	r2, [r3, #76]	; 0x4c
 800d208:	68fb      	ldr	r3, [r7, #12]
 800d20a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d20c:	2200      	movs	r2, #0
 800d20e:	651a      	str	r2, [r3, #80]	; 0x50
 800d210:	68fb      	ldr	r3, [r7, #12]
 800d212:	6fd8      	ldr	r0, [r3, #124]	; 0x7c
 800d214:	68fb      	ldr	r3, [r7, #12]
 800d216:	681b      	ldr	r3, [r3, #0]
 800d218:	3324      	adds	r3, #36	; 0x24
 800d21a:	4619      	mov	r1, r3
 800d21c:	68fb      	ldr	r3, [r7, #12]
 800d21e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800d220:	461a      	mov	r2, r3
 800d222:	88fb      	ldrh	r3, [r7, #6]
 800d224:	f7f8 f84c 	bl	80052c0 <HAL_DMA_Start_IT>
 800d228:	4603      	mov	r3, r0
 800d22a:	2b00      	cmp	r3, #0
 800d22c:	d00d      	beq.n	800d24a <UART_Start_Receive_DMA+0x8e>
 800d22e:	68fb      	ldr	r3, [r7, #12]
 800d230:	2210      	movs	r2, #16
 800d232:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800d236:	68fb      	ldr	r3, [r7, #12]
 800d238:	2200      	movs	r2, #0
 800d23a:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800d23e:	68fb      	ldr	r3, [r7, #12]
 800d240:	2220      	movs	r2, #32
 800d242:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800d246:	2301      	movs	r3, #1
 800d248:	e055      	b.n	800d2f6 <UART_Start_Receive_DMA+0x13a>
 800d24a:	68fb      	ldr	r3, [r7, #12]
 800d24c:	2200      	movs	r2, #0
 800d24e:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800d252:	68fb      	ldr	r3, [r7, #12]
 800d254:	691b      	ldr	r3, [r3, #16]
 800d256:	2b00      	cmp	r3, #0
 800d258:	d018      	beq.n	800d28c <UART_Start_Receive_DMA+0xd0>
 800d25a:	68fb      	ldr	r3, [r7, #12]
 800d25c:	681b      	ldr	r3, [r3, #0]
 800d25e:	63fb      	str	r3, [r7, #60]	; 0x3c
 800d260:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800d262:	e853 3f00 	ldrex	r3, [r3]
 800d266:	63bb      	str	r3, [r7, #56]	; 0x38
 800d268:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800d26a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800d26e:	657b      	str	r3, [r7, #84]	; 0x54
 800d270:	68fb      	ldr	r3, [r7, #12]
 800d272:	681b      	ldr	r3, [r3, #0]
 800d274:	461a      	mov	r2, r3
 800d276:	6d7b      	ldr	r3, [r7, #84]	; 0x54
 800d278:	64bb      	str	r3, [r7, #72]	; 0x48
 800d27a:	647a      	str	r2, [r7, #68]	; 0x44
 800d27c:	6c79      	ldr	r1, [r7, #68]	; 0x44
 800d27e:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800d280:	e841 2300 	strex	r3, r2, [r1]
 800d284:	643b      	str	r3, [r7, #64]	; 0x40
 800d286:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800d288:	2b00      	cmp	r3, #0
 800d28a:	d1e6      	bne.n	800d25a <UART_Start_Receive_DMA+0x9e>
 800d28c:	68fb      	ldr	r3, [r7, #12]
 800d28e:	681b      	ldr	r3, [r3, #0]
 800d290:	3308      	adds	r3, #8
 800d292:	62bb      	str	r3, [r7, #40]	; 0x28
 800d294:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800d296:	e853 3f00 	ldrex	r3, [r3]
 800d29a:	627b      	str	r3, [r7, #36]	; 0x24
 800d29c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d29e:	f043 0301 	orr.w	r3, r3, #1
 800d2a2:	653b      	str	r3, [r7, #80]	; 0x50
 800d2a4:	68fb      	ldr	r3, [r7, #12]
 800d2a6:	681b      	ldr	r3, [r3, #0]
 800d2a8:	3308      	adds	r3, #8
 800d2aa:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 800d2ac:	637a      	str	r2, [r7, #52]	; 0x34
 800d2ae:	633b      	str	r3, [r7, #48]	; 0x30
 800d2b0:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800d2b2:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800d2b4:	e841 2300 	strex	r3, r2, [r1]
 800d2b8:	62fb      	str	r3, [r7, #44]	; 0x2c
 800d2ba:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800d2bc:	2b00      	cmp	r3, #0
 800d2be:	d1e5      	bne.n	800d28c <UART_Start_Receive_DMA+0xd0>
 800d2c0:	68fb      	ldr	r3, [r7, #12]
 800d2c2:	681b      	ldr	r3, [r3, #0]
 800d2c4:	3308      	adds	r3, #8
 800d2c6:	617b      	str	r3, [r7, #20]
 800d2c8:	697b      	ldr	r3, [r7, #20]
 800d2ca:	e853 3f00 	ldrex	r3, [r3]
 800d2ce:	613b      	str	r3, [r7, #16]
 800d2d0:	693b      	ldr	r3, [r7, #16]
 800d2d2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800d2d6:	64fb      	str	r3, [r7, #76]	; 0x4c
 800d2d8:	68fb      	ldr	r3, [r7, #12]
 800d2da:	681b      	ldr	r3, [r3, #0]
 800d2dc:	3308      	adds	r3, #8
 800d2de:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 800d2e0:	623a      	str	r2, [r7, #32]
 800d2e2:	61fb      	str	r3, [r7, #28]
 800d2e4:	69f9      	ldr	r1, [r7, #28]
 800d2e6:	6a3a      	ldr	r2, [r7, #32]
 800d2e8:	e841 2300 	strex	r3, r2, [r1]
 800d2ec:	61bb      	str	r3, [r7, #24]
 800d2ee:	69bb      	ldr	r3, [r7, #24]
 800d2f0:	2b00      	cmp	r3, #0
 800d2f2:	d1e5      	bne.n	800d2c0 <UART_Start_Receive_DMA+0x104>
 800d2f4:	2300      	movs	r3, #0
 800d2f6:	4618      	mov	r0, r3
 800d2f8:	3758      	adds	r7, #88	; 0x58
 800d2fa:	46bd      	mov	sp, r7
 800d2fc:	bd80      	pop	{r7, pc}
 800d2fe:	bf00      	nop
 800d300:	0800d50f 	.word	0x0800d50f
 800d304:	0800d631 	.word	0x0800d631
 800d308:	0800d669 	.word	0x0800d669

0800d30c <UART_EndTxTransfer>:
 800d30c:	b480      	push	{r7}
 800d30e:	b08f      	sub	sp, #60	; 0x3c
 800d310:	af00      	add	r7, sp, #0
 800d312:	6078      	str	r0, [r7, #4]
 800d314:	687b      	ldr	r3, [r7, #4]
 800d316:	681b      	ldr	r3, [r3, #0]
 800d318:	623b      	str	r3, [r7, #32]
 800d31a:	6a3b      	ldr	r3, [r7, #32]
 800d31c:	e853 3f00 	ldrex	r3, [r3]
 800d320:	61fb      	str	r3, [r7, #28]
 800d322:	69fb      	ldr	r3, [r7, #28]
 800d324:	f023 03c0 	bic.w	r3, r3, #192	; 0xc0
 800d328:	637b      	str	r3, [r7, #52]	; 0x34
 800d32a:	687b      	ldr	r3, [r7, #4]
 800d32c:	681b      	ldr	r3, [r3, #0]
 800d32e:	461a      	mov	r2, r3
 800d330:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800d332:	62fb      	str	r3, [r7, #44]	; 0x2c
 800d334:	62ba      	str	r2, [r7, #40]	; 0x28
 800d336:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800d338:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800d33a:	e841 2300 	strex	r3, r2, [r1]
 800d33e:	627b      	str	r3, [r7, #36]	; 0x24
 800d340:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d342:	2b00      	cmp	r3, #0
 800d344:	d1e6      	bne.n	800d314 <UART_EndTxTransfer+0x8>
 800d346:	687b      	ldr	r3, [r7, #4]
 800d348:	681b      	ldr	r3, [r3, #0]
 800d34a:	3308      	adds	r3, #8
 800d34c:	60fb      	str	r3, [r7, #12]
 800d34e:	68fb      	ldr	r3, [r7, #12]
 800d350:	e853 3f00 	ldrex	r3, [r3]
 800d354:	60bb      	str	r3, [r7, #8]
 800d356:	68bb      	ldr	r3, [r7, #8]
 800d358:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 800d35c:	633b      	str	r3, [r7, #48]	; 0x30
 800d35e:	687b      	ldr	r3, [r7, #4]
 800d360:	681b      	ldr	r3, [r3, #0]
 800d362:	3308      	adds	r3, #8
 800d364:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800d366:	61ba      	str	r2, [r7, #24]
 800d368:	617b      	str	r3, [r7, #20]
 800d36a:	6979      	ldr	r1, [r7, #20]
 800d36c:	69ba      	ldr	r2, [r7, #24]
 800d36e:	e841 2300 	strex	r3, r2, [r1]
 800d372:	613b      	str	r3, [r7, #16]
 800d374:	693b      	ldr	r3, [r7, #16]
 800d376:	2b00      	cmp	r3, #0
 800d378:	d1e5      	bne.n	800d346 <UART_EndTxTransfer+0x3a>
 800d37a:	687b      	ldr	r3, [r7, #4]
 800d37c:	2220      	movs	r2, #32
 800d37e:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800d382:	bf00      	nop
 800d384:	373c      	adds	r7, #60	; 0x3c
 800d386:	46bd      	mov	sp, r7
 800d388:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d38c:	4770      	bx	lr
	...

0800d390 <UART_EndRxTransfer>:
 800d390:	b480      	push	{r7}
 800d392:	b095      	sub	sp, #84	; 0x54
 800d394:	af00      	add	r7, sp, #0
 800d396:	6078      	str	r0, [r7, #4]
 800d398:	687b      	ldr	r3, [r7, #4]
 800d39a:	681b      	ldr	r3, [r3, #0]
 800d39c:	637b      	str	r3, [r7, #52]	; 0x34
 800d39e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800d3a0:	e853 3f00 	ldrex	r3, [r3]
 800d3a4:	633b      	str	r3, [r7, #48]	; 0x30
 800d3a6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d3a8:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 800d3ac:	64fb      	str	r3, [r7, #76]	; 0x4c
 800d3ae:	687b      	ldr	r3, [r7, #4]
 800d3b0:	681b      	ldr	r3, [r3, #0]
 800d3b2:	461a      	mov	r2, r3
 800d3b4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800d3b6:	643b      	str	r3, [r7, #64]	; 0x40
 800d3b8:	63fa      	str	r2, [r7, #60]	; 0x3c
 800d3ba:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 800d3bc:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 800d3be:	e841 2300 	strex	r3, r2, [r1]
 800d3c2:	63bb      	str	r3, [r7, #56]	; 0x38
 800d3c4:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800d3c6:	2b00      	cmp	r3, #0
 800d3c8:	d1e6      	bne.n	800d398 <UART_EndRxTransfer+0x8>
 800d3ca:	687b      	ldr	r3, [r7, #4]
 800d3cc:	681b      	ldr	r3, [r3, #0]
 800d3ce:	3308      	adds	r3, #8
 800d3d0:	623b      	str	r3, [r7, #32]
 800d3d2:	6a3b      	ldr	r3, [r7, #32]
 800d3d4:	e853 3f00 	ldrex	r3, [r3]
 800d3d8:	61fb      	str	r3, [r7, #28]
 800d3da:	69fa      	ldr	r2, [r7, #28]
 800d3dc:	4b1e      	ldr	r3, [pc, #120]	; (800d458 <UART_EndRxTransfer+0xc8>)
 800d3de:	4013      	ands	r3, r2
 800d3e0:	64bb      	str	r3, [r7, #72]	; 0x48
 800d3e2:	687b      	ldr	r3, [r7, #4]
 800d3e4:	681b      	ldr	r3, [r3, #0]
 800d3e6:	3308      	adds	r3, #8
 800d3e8:	6cba      	ldr	r2, [r7, #72]	; 0x48
 800d3ea:	62fa      	str	r2, [r7, #44]	; 0x2c
 800d3ec:	62bb      	str	r3, [r7, #40]	; 0x28
 800d3ee:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 800d3f0:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800d3f2:	e841 2300 	strex	r3, r2, [r1]
 800d3f6:	627b      	str	r3, [r7, #36]	; 0x24
 800d3f8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d3fa:	2b00      	cmp	r3, #0
 800d3fc:	d1e5      	bne.n	800d3ca <UART_EndRxTransfer+0x3a>
 800d3fe:	687b      	ldr	r3, [r7, #4]
 800d400:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800d402:	2b01      	cmp	r3, #1
 800d404:	d118      	bne.n	800d438 <UART_EndRxTransfer+0xa8>
 800d406:	687b      	ldr	r3, [r7, #4]
 800d408:	681b      	ldr	r3, [r3, #0]
 800d40a:	60fb      	str	r3, [r7, #12]
 800d40c:	68fb      	ldr	r3, [r7, #12]
 800d40e:	e853 3f00 	ldrex	r3, [r3]
 800d412:	60bb      	str	r3, [r7, #8]
 800d414:	68bb      	ldr	r3, [r7, #8]
 800d416:	f023 0310 	bic.w	r3, r3, #16
 800d41a:	647b      	str	r3, [r7, #68]	; 0x44
 800d41c:	687b      	ldr	r3, [r7, #4]
 800d41e:	681b      	ldr	r3, [r3, #0]
 800d420:	461a      	mov	r2, r3
 800d422:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800d424:	61bb      	str	r3, [r7, #24]
 800d426:	617a      	str	r2, [r7, #20]
 800d428:	6979      	ldr	r1, [r7, #20]
 800d42a:	69ba      	ldr	r2, [r7, #24]
 800d42c:	e841 2300 	strex	r3, r2, [r1]
 800d430:	613b      	str	r3, [r7, #16]
 800d432:	693b      	ldr	r3, [r7, #16]
 800d434:	2b00      	cmp	r3, #0
 800d436:	d1e6      	bne.n	800d406 <UART_EndRxTransfer+0x76>
 800d438:	687b      	ldr	r3, [r7, #4]
 800d43a:	2220      	movs	r2, #32
 800d43c:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800d440:	687b      	ldr	r3, [r7, #4]
 800d442:	2200      	movs	r2, #0
 800d444:	66da      	str	r2, [r3, #108]	; 0x6c
 800d446:	687b      	ldr	r3, [r7, #4]
 800d448:	2200      	movs	r2, #0
 800d44a:	671a      	str	r2, [r3, #112]	; 0x70
 800d44c:	bf00      	nop
 800d44e:	3754      	adds	r7, #84	; 0x54
 800d450:	46bd      	mov	sp, r7
 800d452:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d456:	4770      	bx	lr
 800d458:	effffffe 	.word	0xeffffffe

0800d45c <UART_DMATransmitCplt>:
 800d45c:	b580      	push	{r7, lr}
 800d45e:	b090      	sub	sp, #64	; 0x40
 800d460:	af00      	add	r7, sp, #0
 800d462:	6078      	str	r0, [r7, #4]
 800d464:	687b      	ldr	r3, [r7, #4]
 800d466:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d468:	63fb      	str	r3, [r7, #60]	; 0x3c
 800d46a:	687b      	ldr	r3, [r7, #4]
 800d46c:	69db      	ldr	r3, [r3, #28]
 800d46e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800d472:	d037      	beq.n	800d4e4 <UART_DMATransmitCplt+0x88>
 800d474:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800d476:	2200      	movs	r2, #0
 800d478:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 800d47c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800d47e:	681b      	ldr	r3, [r3, #0]
 800d480:	3308      	adds	r3, #8
 800d482:	627b      	str	r3, [r7, #36]	; 0x24
 800d484:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d486:	e853 3f00 	ldrex	r3, [r3]
 800d48a:	623b      	str	r3, [r7, #32]
 800d48c:	6a3b      	ldr	r3, [r7, #32]
 800d48e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800d492:	63bb      	str	r3, [r7, #56]	; 0x38
 800d494:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800d496:	681b      	ldr	r3, [r3, #0]
 800d498:	3308      	adds	r3, #8
 800d49a:	6bba      	ldr	r2, [r7, #56]	; 0x38
 800d49c:	633a      	str	r2, [r7, #48]	; 0x30
 800d49e:	62fb      	str	r3, [r7, #44]	; 0x2c
 800d4a0:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800d4a2:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800d4a4:	e841 2300 	strex	r3, r2, [r1]
 800d4a8:	62bb      	str	r3, [r7, #40]	; 0x28
 800d4aa:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800d4ac:	2b00      	cmp	r3, #0
 800d4ae:	d1e5      	bne.n	800d47c <UART_DMATransmitCplt+0x20>
 800d4b0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800d4b2:	681b      	ldr	r3, [r3, #0]
 800d4b4:	613b      	str	r3, [r7, #16]
 800d4b6:	693b      	ldr	r3, [r7, #16]
 800d4b8:	e853 3f00 	ldrex	r3, [r3]
 800d4bc:	60fb      	str	r3, [r7, #12]
 800d4be:	68fb      	ldr	r3, [r7, #12]
 800d4c0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800d4c4:	637b      	str	r3, [r7, #52]	; 0x34
 800d4c6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800d4c8:	681b      	ldr	r3, [r3, #0]
 800d4ca:	461a      	mov	r2, r3
 800d4cc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800d4ce:	61fb      	str	r3, [r7, #28]
 800d4d0:	61ba      	str	r2, [r7, #24]
 800d4d2:	69b9      	ldr	r1, [r7, #24]
 800d4d4:	69fa      	ldr	r2, [r7, #28]
 800d4d6:	e841 2300 	strex	r3, r2, [r1]
 800d4da:	617b      	str	r3, [r7, #20]
 800d4dc:	697b      	ldr	r3, [r7, #20]
 800d4de:	2b00      	cmp	r3, #0
 800d4e0:	d1e6      	bne.n	800d4b0 <UART_DMATransmitCplt+0x54>
 800d4e2:	e002      	b.n	800d4ea <UART_DMATransmitCplt+0x8e>
 800d4e4:	6bf8      	ldr	r0, [r7, #60]	; 0x3c
 800d4e6:	f7f5 fe3b 	bl	8003160 <HAL_UART_TxCpltCallback>
 800d4ea:	bf00      	nop
 800d4ec:	3740      	adds	r7, #64	; 0x40
 800d4ee:	46bd      	mov	sp, r7
 800d4f0:	bd80      	pop	{r7, pc}

0800d4f2 <UART_DMATxHalfCplt>:
 800d4f2:	b580      	push	{r7, lr}
 800d4f4:	b084      	sub	sp, #16
 800d4f6:	af00      	add	r7, sp, #0
 800d4f8:	6078      	str	r0, [r7, #4]
 800d4fa:	687b      	ldr	r3, [r7, #4]
 800d4fc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d4fe:	60fb      	str	r3, [r7, #12]
 800d500:	68f8      	ldr	r0, [r7, #12]
 800d502:	f7fe fe0f 	bl	800c124 <HAL_UART_TxHalfCpltCallback>
 800d506:	bf00      	nop
 800d508:	3710      	adds	r7, #16
 800d50a:	46bd      	mov	sp, r7
 800d50c:	bd80      	pop	{r7, pc}

0800d50e <UART_DMAReceiveCplt>:
 800d50e:	b580      	push	{r7, lr}
 800d510:	b09c      	sub	sp, #112	; 0x70
 800d512:	af00      	add	r7, sp, #0
 800d514:	6078      	str	r0, [r7, #4]
 800d516:	687b      	ldr	r3, [r7, #4]
 800d518:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d51a:	66fb      	str	r3, [r7, #108]	; 0x6c
 800d51c:	687b      	ldr	r3, [r7, #4]
 800d51e:	69db      	ldr	r3, [r3, #28]
 800d520:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800d524:	d071      	beq.n	800d60a <UART_DMAReceiveCplt+0xfc>
 800d526:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800d528:	2200      	movs	r2, #0
 800d52a:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800d52e:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800d530:	681b      	ldr	r3, [r3, #0]
 800d532:	64fb      	str	r3, [r7, #76]	; 0x4c
 800d534:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800d536:	e853 3f00 	ldrex	r3, [r3]
 800d53a:	64bb      	str	r3, [r7, #72]	; 0x48
 800d53c:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 800d53e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800d542:	66bb      	str	r3, [r7, #104]	; 0x68
 800d544:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800d546:	681b      	ldr	r3, [r3, #0]
 800d548:	461a      	mov	r2, r3
 800d54a:	6ebb      	ldr	r3, [r7, #104]	; 0x68
 800d54c:	65bb      	str	r3, [r7, #88]	; 0x58
 800d54e:	657a      	str	r2, [r7, #84]	; 0x54
 800d550:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800d552:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800d554:	e841 2300 	strex	r3, r2, [r1]
 800d558:	653b      	str	r3, [r7, #80]	; 0x50
 800d55a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 800d55c:	2b00      	cmp	r3, #0
 800d55e:	d1e6      	bne.n	800d52e <UART_DMAReceiveCplt+0x20>
 800d560:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800d562:	681b      	ldr	r3, [r3, #0]
 800d564:	3308      	adds	r3, #8
 800d566:	63bb      	str	r3, [r7, #56]	; 0x38
 800d568:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800d56a:	e853 3f00 	ldrex	r3, [r3]
 800d56e:	637b      	str	r3, [r7, #52]	; 0x34
 800d570:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800d572:	f023 0301 	bic.w	r3, r3, #1
 800d576:	667b      	str	r3, [r7, #100]	; 0x64
 800d578:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800d57a:	681b      	ldr	r3, [r3, #0]
 800d57c:	3308      	adds	r3, #8
 800d57e:	6e7a      	ldr	r2, [r7, #100]	; 0x64
 800d580:	647a      	str	r2, [r7, #68]	; 0x44
 800d582:	643b      	str	r3, [r7, #64]	; 0x40
 800d584:	6c39      	ldr	r1, [r7, #64]	; 0x40
 800d586:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 800d588:	e841 2300 	strex	r3, r2, [r1]
 800d58c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800d58e:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800d590:	2b00      	cmp	r3, #0
 800d592:	d1e5      	bne.n	800d560 <UART_DMAReceiveCplt+0x52>
 800d594:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800d596:	681b      	ldr	r3, [r3, #0]
 800d598:	3308      	adds	r3, #8
 800d59a:	627b      	str	r3, [r7, #36]	; 0x24
 800d59c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d59e:	e853 3f00 	ldrex	r3, [r3]
 800d5a2:	623b      	str	r3, [r7, #32]
 800d5a4:	6a3b      	ldr	r3, [r7, #32]
 800d5a6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800d5aa:	663b      	str	r3, [r7, #96]	; 0x60
 800d5ac:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800d5ae:	681b      	ldr	r3, [r3, #0]
 800d5b0:	3308      	adds	r3, #8
 800d5b2:	6e3a      	ldr	r2, [r7, #96]	; 0x60
 800d5b4:	633a      	str	r2, [r7, #48]	; 0x30
 800d5b6:	62fb      	str	r3, [r7, #44]	; 0x2c
 800d5b8:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800d5ba:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800d5bc:	e841 2300 	strex	r3, r2, [r1]
 800d5c0:	62bb      	str	r3, [r7, #40]	; 0x28
 800d5c2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800d5c4:	2b00      	cmp	r3, #0
 800d5c6:	d1e5      	bne.n	800d594 <UART_DMAReceiveCplt+0x86>
 800d5c8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800d5ca:	2220      	movs	r2, #32
 800d5cc:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800d5d0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800d5d2:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800d5d4:	2b01      	cmp	r3, #1
 800d5d6:	d118      	bne.n	800d60a <UART_DMAReceiveCplt+0xfc>
 800d5d8:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800d5da:	681b      	ldr	r3, [r3, #0]
 800d5dc:	613b      	str	r3, [r7, #16]
 800d5de:	693b      	ldr	r3, [r7, #16]
 800d5e0:	e853 3f00 	ldrex	r3, [r3]
 800d5e4:	60fb      	str	r3, [r7, #12]
 800d5e6:	68fb      	ldr	r3, [r7, #12]
 800d5e8:	f023 0310 	bic.w	r3, r3, #16
 800d5ec:	65fb      	str	r3, [r7, #92]	; 0x5c
 800d5ee:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800d5f0:	681b      	ldr	r3, [r3, #0]
 800d5f2:	461a      	mov	r2, r3
 800d5f4:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 800d5f6:	61fb      	str	r3, [r7, #28]
 800d5f8:	61ba      	str	r2, [r7, #24]
 800d5fa:	69b9      	ldr	r1, [r7, #24]
 800d5fc:	69fa      	ldr	r2, [r7, #28]
 800d5fe:	e841 2300 	strex	r3, r2, [r1]
 800d602:	617b      	str	r3, [r7, #20]
 800d604:	697b      	ldr	r3, [r7, #20]
 800d606:	2b00      	cmp	r3, #0
 800d608:	d1e6      	bne.n	800d5d8 <UART_DMAReceiveCplt+0xca>
 800d60a:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800d60c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800d60e:	2b01      	cmp	r3, #1
 800d610:	d107      	bne.n	800d622 <UART_DMAReceiveCplt+0x114>
 800d612:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 800d614:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800d618:	4619      	mov	r1, r3
 800d61a:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 800d61c:	f7fe fda0 	bl	800c160 <HAL_UARTEx_RxEventCallback>
 800d620:	e002      	b.n	800d628 <UART_DMAReceiveCplt+0x11a>
 800d622:	6ef8      	ldr	r0, [r7, #108]	; 0x6c
 800d624:	f7f5 fdae 	bl	8003184 <HAL_UART_RxCpltCallback>
 800d628:	bf00      	nop
 800d62a:	3770      	adds	r7, #112	; 0x70
 800d62c:	46bd      	mov	sp, r7
 800d62e:	bd80      	pop	{r7, pc}

0800d630 <UART_DMARxHalfCplt>:
 800d630:	b580      	push	{r7, lr}
 800d632:	b084      	sub	sp, #16
 800d634:	af00      	add	r7, sp, #0
 800d636:	6078      	str	r0, [r7, #4]
 800d638:	687b      	ldr	r3, [r7, #4]
 800d63a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d63c:	60fb      	str	r3, [r7, #12]
 800d63e:	68fb      	ldr	r3, [r7, #12]
 800d640:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800d642:	2b01      	cmp	r3, #1
 800d644:	d109      	bne.n	800d65a <UART_DMARxHalfCplt+0x2a>
 800d646:	68fb      	ldr	r3, [r7, #12]
 800d648:	f8b3 305c 	ldrh.w	r3, [r3, #92]	; 0x5c
 800d64c:	085b      	lsrs	r3, r3, #1
 800d64e:	b29b      	uxth	r3, r3
 800d650:	4619      	mov	r1, r3
 800d652:	68f8      	ldr	r0, [r7, #12]
 800d654:	f7fe fd84 	bl	800c160 <HAL_UARTEx_RxEventCallback>
 800d658:	e002      	b.n	800d660 <UART_DMARxHalfCplt+0x30>
 800d65a:	68f8      	ldr	r0, [r7, #12]
 800d65c:	f7fe fd6c 	bl	800c138 <HAL_UART_RxHalfCpltCallback>
 800d660:	bf00      	nop
 800d662:	3710      	adds	r7, #16
 800d664:	46bd      	mov	sp, r7
 800d666:	bd80      	pop	{r7, pc}

0800d668 <UART_DMAError>:
 800d668:	b580      	push	{r7, lr}
 800d66a:	b086      	sub	sp, #24
 800d66c:	af00      	add	r7, sp, #0
 800d66e:	6078      	str	r0, [r7, #4]
 800d670:	687b      	ldr	r3, [r7, #4]
 800d672:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d674:	617b      	str	r3, [r7, #20]
 800d676:	697b      	ldr	r3, [r7, #20]
 800d678:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d67c:	613b      	str	r3, [r7, #16]
 800d67e:	697b      	ldr	r3, [r7, #20]
 800d680:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800d684:	60fb      	str	r3, [r7, #12]
 800d686:	697b      	ldr	r3, [r7, #20]
 800d688:	681b      	ldr	r3, [r3, #0]
 800d68a:	689b      	ldr	r3, [r3, #8]
 800d68c:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800d690:	2b80      	cmp	r3, #128	; 0x80
 800d692:	d109      	bne.n	800d6a8 <UART_DMAError+0x40>
 800d694:	693b      	ldr	r3, [r7, #16]
 800d696:	2b21      	cmp	r3, #33	; 0x21
 800d698:	d106      	bne.n	800d6a8 <UART_DMAError+0x40>
 800d69a:	697b      	ldr	r3, [r7, #20]
 800d69c:	2200      	movs	r2, #0
 800d69e:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 800d6a2:	6978      	ldr	r0, [r7, #20]
 800d6a4:	f7ff fe32 	bl	800d30c <UART_EndTxTransfer>
 800d6a8:	697b      	ldr	r3, [r7, #20]
 800d6aa:	681b      	ldr	r3, [r3, #0]
 800d6ac:	689b      	ldr	r3, [r3, #8]
 800d6ae:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800d6b2:	2b40      	cmp	r3, #64	; 0x40
 800d6b4:	d109      	bne.n	800d6ca <UART_DMAError+0x62>
 800d6b6:	68fb      	ldr	r3, [r7, #12]
 800d6b8:	2b22      	cmp	r3, #34	; 0x22
 800d6ba:	d106      	bne.n	800d6ca <UART_DMAError+0x62>
 800d6bc:	697b      	ldr	r3, [r7, #20]
 800d6be:	2200      	movs	r2, #0
 800d6c0:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800d6c4:	6978      	ldr	r0, [r7, #20]
 800d6c6:	f7ff fe63 	bl	800d390 <UART_EndRxTransfer>
 800d6ca:	697b      	ldr	r3, [r7, #20]
 800d6cc:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800d6d0:	f043 0210 	orr.w	r2, r3, #16
 800d6d4:	697b      	ldr	r3, [r7, #20]
 800d6d6:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
 800d6da:	6978      	ldr	r0, [r7, #20]
 800d6dc:	f7fe fd36 	bl	800c14c <HAL_UART_ErrorCallback>
 800d6e0:	bf00      	nop
 800d6e2:	3718      	adds	r7, #24
 800d6e4:	46bd      	mov	sp, r7
 800d6e6:	bd80      	pop	{r7, pc}

0800d6e8 <UART_DMAAbortOnError>:
 800d6e8:	b580      	push	{r7, lr}
 800d6ea:	b084      	sub	sp, #16
 800d6ec:	af00      	add	r7, sp, #0
 800d6ee:	6078      	str	r0, [r7, #4]
 800d6f0:	687b      	ldr	r3, [r7, #4]
 800d6f2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d6f4:	60fb      	str	r3, [r7, #12]
 800d6f6:	68fb      	ldr	r3, [r7, #12]
 800d6f8:	2200      	movs	r2, #0
 800d6fa:	f8a3 205e 	strh.w	r2, [r3, #94]	; 0x5e
 800d6fe:	68fb      	ldr	r3, [r7, #12]
 800d700:	2200      	movs	r2, #0
 800d702:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 800d706:	68f8      	ldr	r0, [r7, #12]
 800d708:	f7fe fd20 	bl	800c14c <HAL_UART_ErrorCallback>
 800d70c:	bf00      	nop
 800d70e:	3710      	adds	r7, #16
 800d710:	46bd      	mov	sp, r7
 800d712:	bd80      	pop	{r7, pc}

0800d714 <UART_EndTransmit_IT>:
 800d714:	b580      	push	{r7, lr}
 800d716:	b088      	sub	sp, #32
 800d718:	af00      	add	r7, sp, #0
 800d71a:	6078      	str	r0, [r7, #4]
 800d71c:	687b      	ldr	r3, [r7, #4]
 800d71e:	681b      	ldr	r3, [r3, #0]
 800d720:	60fb      	str	r3, [r7, #12]
 800d722:	68fb      	ldr	r3, [r7, #12]
 800d724:	e853 3f00 	ldrex	r3, [r3]
 800d728:	60bb      	str	r3, [r7, #8]
 800d72a:	68bb      	ldr	r3, [r7, #8]
 800d72c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800d730:	61fb      	str	r3, [r7, #28]
 800d732:	687b      	ldr	r3, [r7, #4]
 800d734:	681b      	ldr	r3, [r3, #0]
 800d736:	461a      	mov	r2, r3
 800d738:	69fb      	ldr	r3, [r7, #28]
 800d73a:	61bb      	str	r3, [r7, #24]
 800d73c:	617a      	str	r2, [r7, #20]
 800d73e:	6979      	ldr	r1, [r7, #20]
 800d740:	69ba      	ldr	r2, [r7, #24]
 800d742:	e841 2300 	strex	r3, r2, [r1]
 800d746:	613b      	str	r3, [r7, #16]
 800d748:	693b      	ldr	r3, [r7, #16]
 800d74a:	2b00      	cmp	r3, #0
 800d74c:	d1e6      	bne.n	800d71c <UART_EndTransmit_IT+0x8>
 800d74e:	687b      	ldr	r3, [r7, #4]
 800d750:	2220      	movs	r2, #32
 800d752:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800d756:	687b      	ldr	r3, [r7, #4]
 800d758:	2200      	movs	r2, #0
 800d75a:	675a      	str	r2, [r3, #116]	; 0x74
 800d75c:	6878      	ldr	r0, [r7, #4]
 800d75e:	f7f5 fcff 	bl	8003160 <HAL_UART_TxCpltCallback>
 800d762:	bf00      	nop
 800d764:	3720      	adds	r7, #32
 800d766:	46bd      	mov	sp, r7
 800d768:	bd80      	pop	{r7, pc}

0800d76a <HAL_UARTEx_WakeupCallback>:
 800d76a:	b480      	push	{r7}
 800d76c:	b083      	sub	sp, #12
 800d76e:	af00      	add	r7, sp, #0
 800d770:	6078      	str	r0, [r7, #4]
 800d772:	bf00      	nop
 800d774:	370c      	adds	r7, #12
 800d776:	46bd      	mov	sp, r7
 800d778:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d77c:	4770      	bx	lr

0800d77e <HAL_UARTEx_RxFifoFullCallback>:
 800d77e:	b480      	push	{r7}
 800d780:	b083      	sub	sp, #12
 800d782:	af00      	add	r7, sp, #0
 800d784:	6078      	str	r0, [r7, #4]
 800d786:	bf00      	nop
 800d788:	370c      	adds	r7, #12
 800d78a:	46bd      	mov	sp, r7
 800d78c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d790:	4770      	bx	lr

0800d792 <HAL_UARTEx_TxFifoEmptyCallback>:
 800d792:	b480      	push	{r7}
 800d794:	b083      	sub	sp, #12
 800d796:	af00      	add	r7, sp, #0
 800d798:	6078      	str	r0, [r7, #4]
 800d79a:	bf00      	nop
 800d79c:	370c      	adds	r7, #12
 800d79e:	46bd      	mov	sp, r7
 800d7a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7a4:	4770      	bx	lr

0800d7a6 <HAL_UARTEx_DisableFifoMode>:
 800d7a6:	b480      	push	{r7}
 800d7a8:	b085      	sub	sp, #20
 800d7aa:	af00      	add	r7, sp, #0
 800d7ac:	6078      	str	r0, [r7, #4]
 800d7ae:	687b      	ldr	r3, [r7, #4]
 800d7b0:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800d7b4:	2b01      	cmp	r3, #1
 800d7b6:	d101      	bne.n	800d7bc <HAL_UARTEx_DisableFifoMode+0x16>
 800d7b8:	2302      	movs	r3, #2
 800d7ba:	e027      	b.n	800d80c <HAL_UARTEx_DisableFifoMode+0x66>
 800d7bc:	687b      	ldr	r3, [r7, #4]
 800d7be:	2201      	movs	r2, #1
 800d7c0:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800d7c4:	687b      	ldr	r3, [r7, #4]
 800d7c6:	2224      	movs	r2, #36	; 0x24
 800d7c8:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800d7cc:	687b      	ldr	r3, [r7, #4]
 800d7ce:	681b      	ldr	r3, [r3, #0]
 800d7d0:	681b      	ldr	r3, [r3, #0]
 800d7d2:	60fb      	str	r3, [r7, #12]
 800d7d4:	687b      	ldr	r3, [r7, #4]
 800d7d6:	681b      	ldr	r3, [r3, #0]
 800d7d8:	681a      	ldr	r2, [r3, #0]
 800d7da:	687b      	ldr	r3, [r7, #4]
 800d7dc:	681b      	ldr	r3, [r3, #0]
 800d7de:	f022 0201 	bic.w	r2, r2, #1
 800d7e2:	601a      	str	r2, [r3, #0]
 800d7e4:	68fb      	ldr	r3, [r7, #12]
 800d7e6:	f023 5300 	bic.w	r3, r3, #536870912	; 0x20000000
 800d7ea:	60fb      	str	r3, [r7, #12]
 800d7ec:	687b      	ldr	r3, [r7, #4]
 800d7ee:	2200      	movs	r2, #0
 800d7f0:	665a      	str	r2, [r3, #100]	; 0x64
 800d7f2:	687b      	ldr	r3, [r7, #4]
 800d7f4:	681b      	ldr	r3, [r3, #0]
 800d7f6:	68fa      	ldr	r2, [r7, #12]
 800d7f8:	601a      	str	r2, [r3, #0]
 800d7fa:	687b      	ldr	r3, [r7, #4]
 800d7fc:	2220      	movs	r2, #32
 800d7fe:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800d802:	687b      	ldr	r3, [r7, #4]
 800d804:	2200      	movs	r2, #0
 800d806:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800d80a:	2300      	movs	r3, #0
 800d80c:	4618      	mov	r0, r3
 800d80e:	3714      	adds	r7, #20
 800d810:	46bd      	mov	sp, r7
 800d812:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d816:	4770      	bx	lr

0800d818 <HAL_UARTEx_SetTxFifoThreshold>:
 800d818:	b580      	push	{r7, lr}
 800d81a:	b084      	sub	sp, #16
 800d81c:	af00      	add	r7, sp, #0
 800d81e:	6078      	str	r0, [r7, #4]
 800d820:	6039      	str	r1, [r7, #0]
 800d822:	687b      	ldr	r3, [r7, #4]
 800d824:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800d828:	2b01      	cmp	r3, #1
 800d82a:	d101      	bne.n	800d830 <HAL_UARTEx_SetTxFifoThreshold+0x18>
 800d82c:	2302      	movs	r3, #2
 800d82e:	e02d      	b.n	800d88c <HAL_UARTEx_SetTxFifoThreshold+0x74>
 800d830:	687b      	ldr	r3, [r7, #4]
 800d832:	2201      	movs	r2, #1
 800d834:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800d838:	687b      	ldr	r3, [r7, #4]
 800d83a:	2224      	movs	r2, #36	; 0x24
 800d83c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800d840:	687b      	ldr	r3, [r7, #4]
 800d842:	681b      	ldr	r3, [r3, #0]
 800d844:	681b      	ldr	r3, [r3, #0]
 800d846:	60fb      	str	r3, [r7, #12]
 800d848:	687b      	ldr	r3, [r7, #4]
 800d84a:	681b      	ldr	r3, [r3, #0]
 800d84c:	681a      	ldr	r2, [r3, #0]
 800d84e:	687b      	ldr	r3, [r7, #4]
 800d850:	681b      	ldr	r3, [r3, #0]
 800d852:	f022 0201 	bic.w	r2, r2, #1
 800d856:	601a      	str	r2, [r3, #0]
 800d858:	687b      	ldr	r3, [r7, #4]
 800d85a:	681b      	ldr	r3, [r3, #0]
 800d85c:	689b      	ldr	r3, [r3, #8]
 800d85e:	f023 4160 	bic.w	r1, r3, #3758096384	; 0xe0000000
 800d862:	687b      	ldr	r3, [r7, #4]
 800d864:	681b      	ldr	r3, [r3, #0]
 800d866:	683a      	ldr	r2, [r7, #0]
 800d868:	430a      	orrs	r2, r1
 800d86a:	609a      	str	r2, [r3, #8]
 800d86c:	6878      	ldr	r0, [r7, #4]
 800d86e:	f000 f84f 	bl	800d910 <UARTEx_SetNbDataToProcess>
 800d872:	687b      	ldr	r3, [r7, #4]
 800d874:	681b      	ldr	r3, [r3, #0]
 800d876:	68fa      	ldr	r2, [r7, #12]
 800d878:	601a      	str	r2, [r3, #0]
 800d87a:	687b      	ldr	r3, [r7, #4]
 800d87c:	2220      	movs	r2, #32
 800d87e:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800d882:	687b      	ldr	r3, [r7, #4]
 800d884:	2200      	movs	r2, #0
 800d886:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800d88a:	2300      	movs	r3, #0
 800d88c:	4618      	mov	r0, r3
 800d88e:	3710      	adds	r7, #16
 800d890:	46bd      	mov	sp, r7
 800d892:	bd80      	pop	{r7, pc}

0800d894 <HAL_UARTEx_SetRxFifoThreshold>:
 800d894:	b580      	push	{r7, lr}
 800d896:	b084      	sub	sp, #16
 800d898:	af00      	add	r7, sp, #0
 800d89a:	6078      	str	r0, [r7, #4]
 800d89c:	6039      	str	r1, [r7, #0]
 800d89e:	687b      	ldr	r3, [r7, #4]
 800d8a0:	f893 3080 	ldrb.w	r3, [r3, #128]	; 0x80
 800d8a4:	2b01      	cmp	r3, #1
 800d8a6:	d101      	bne.n	800d8ac <HAL_UARTEx_SetRxFifoThreshold+0x18>
 800d8a8:	2302      	movs	r3, #2
 800d8aa:	e02d      	b.n	800d908 <HAL_UARTEx_SetRxFifoThreshold+0x74>
 800d8ac:	687b      	ldr	r3, [r7, #4]
 800d8ae:	2201      	movs	r2, #1
 800d8b0:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800d8b4:	687b      	ldr	r3, [r7, #4]
 800d8b6:	2224      	movs	r2, #36	; 0x24
 800d8b8:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800d8bc:	687b      	ldr	r3, [r7, #4]
 800d8be:	681b      	ldr	r3, [r3, #0]
 800d8c0:	681b      	ldr	r3, [r3, #0]
 800d8c2:	60fb      	str	r3, [r7, #12]
 800d8c4:	687b      	ldr	r3, [r7, #4]
 800d8c6:	681b      	ldr	r3, [r3, #0]
 800d8c8:	681a      	ldr	r2, [r3, #0]
 800d8ca:	687b      	ldr	r3, [r7, #4]
 800d8cc:	681b      	ldr	r3, [r3, #0]
 800d8ce:	f022 0201 	bic.w	r2, r2, #1
 800d8d2:	601a      	str	r2, [r3, #0]
 800d8d4:	687b      	ldr	r3, [r7, #4]
 800d8d6:	681b      	ldr	r3, [r3, #0]
 800d8d8:	689b      	ldr	r3, [r3, #8]
 800d8da:	f023 6160 	bic.w	r1, r3, #234881024	; 0xe000000
 800d8de:	687b      	ldr	r3, [r7, #4]
 800d8e0:	681b      	ldr	r3, [r3, #0]
 800d8e2:	683a      	ldr	r2, [r7, #0]
 800d8e4:	430a      	orrs	r2, r1
 800d8e6:	609a      	str	r2, [r3, #8]
 800d8e8:	6878      	ldr	r0, [r7, #4]
 800d8ea:	f000 f811 	bl	800d910 <UARTEx_SetNbDataToProcess>
 800d8ee:	687b      	ldr	r3, [r7, #4]
 800d8f0:	681b      	ldr	r3, [r3, #0]
 800d8f2:	68fa      	ldr	r2, [r7, #12]
 800d8f4:	601a      	str	r2, [r3, #0]
 800d8f6:	687b      	ldr	r3, [r7, #4]
 800d8f8:	2220      	movs	r2, #32
 800d8fa:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800d8fe:	687b      	ldr	r3, [r7, #4]
 800d900:	2200      	movs	r2, #0
 800d902:	f883 2080 	strb.w	r2, [r3, #128]	; 0x80
 800d906:	2300      	movs	r3, #0
 800d908:	4618      	mov	r0, r3
 800d90a:	3710      	adds	r7, #16
 800d90c:	46bd      	mov	sp, r7
 800d90e:	bd80      	pop	{r7, pc}

0800d910 <UARTEx_SetNbDataToProcess>:
 800d910:	b480      	push	{r7}
 800d912:	b085      	sub	sp, #20
 800d914:	af00      	add	r7, sp, #0
 800d916:	6078      	str	r0, [r7, #4]
 800d918:	687b      	ldr	r3, [r7, #4]
 800d91a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d91c:	2b00      	cmp	r3, #0
 800d91e:	d108      	bne.n	800d932 <UARTEx_SetNbDataToProcess+0x22>
 800d920:	687b      	ldr	r3, [r7, #4]
 800d922:	2201      	movs	r2, #1
 800d924:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800d928:	687b      	ldr	r3, [r7, #4]
 800d92a:	2201      	movs	r2, #1
 800d92c:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 800d930:	e031      	b.n	800d996 <UARTEx_SetNbDataToProcess+0x86>
 800d932:	2310      	movs	r3, #16
 800d934:	73fb      	strb	r3, [r7, #15]
 800d936:	2310      	movs	r3, #16
 800d938:	73bb      	strb	r3, [r7, #14]
 800d93a:	687b      	ldr	r3, [r7, #4]
 800d93c:	681b      	ldr	r3, [r3, #0]
 800d93e:	689b      	ldr	r3, [r3, #8]
 800d940:	0e5b      	lsrs	r3, r3, #25
 800d942:	b2db      	uxtb	r3, r3
 800d944:	f003 0307 	and.w	r3, r3, #7
 800d948:	737b      	strb	r3, [r7, #13]
 800d94a:	687b      	ldr	r3, [r7, #4]
 800d94c:	681b      	ldr	r3, [r3, #0]
 800d94e:	689b      	ldr	r3, [r3, #8]
 800d950:	0f5b      	lsrs	r3, r3, #29
 800d952:	b2db      	uxtb	r3, r3
 800d954:	f003 0307 	and.w	r3, r3, #7
 800d958:	733b      	strb	r3, [r7, #12]
 800d95a:	7bbb      	ldrb	r3, [r7, #14]
 800d95c:	7b3a      	ldrb	r2, [r7, #12]
 800d95e:	4911      	ldr	r1, [pc, #68]	; (800d9a4 <UARTEx_SetNbDataToProcess+0x94>)
 800d960:	5c8a      	ldrb	r2, [r1, r2]
 800d962:	fb02 f303 	mul.w	r3, r2, r3
 800d966:	7b3a      	ldrb	r2, [r7, #12]
 800d968:	490f      	ldr	r1, [pc, #60]	; (800d9a8 <UARTEx_SetNbDataToProcess+0x98>)
 800d96a:	5c8a      	ldrb	r2, [r1, r2]
 800d96c:	fb93 f3f2 	sdiv	r3, r3, r2
 800d970:	b29a      	uxth	r2, r3
 800d972:	687b      	ldr	r3, [r7, #4]
 800d974:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800d978:	7bfb      	ldrb	r3, [r7, #15]
 800d97a:	7b7a      	ldrb	r2, [r7, #13]
 800d97c:	4909      	ldr	r1, [pc, #36]	; (800d9a4 <UARTEx_SetNbDataToProcess+0x94>)
 800d97e:	5c8a      	ldrb	r2, [r1, r2]
 800d980:	fb02 f303 	mul.w	r3, r2, r3
 800d984:	7b7a      	ldrb	r2, [r7, #13]
 800d986:	4908      	ldr	r1, [pc, #32]	; (800d9a8 <UARTEx_SetNbDataToProcess+0x98>)
 800d988:	5c8a      	ldrb	r2, [r1, r2]
 800d98a:	fb93 f3f2 	sdiv	r3, r3, r2
 800d98e:	b29a      	uxth	r2, r3
 800d990:	687b      	ldr	r3, [r7, #4]
 800d992:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 800d996:	bf00      	nop
 800d998:	3714      	adds	r7, #20
 800d99a:	46bd      	mov	sp, r7
 800d99c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d9a0:	4770      	bx	lr
 800d9a2:	bf00      	nop
 800d9a4:	0800e01c 	.word	0x0800e01c
 800d9a8:	0800e024 	.word	0x0800e024

0800d9ac <__cxa_pure_virtual>:
 800d9ac:	b508      	push	{r3, lr}
 800d9ae:	f000 f80d 	bl	800d9cc <_ZSt9terminatev>

0800d9b2 <_ZN10__cxxabiv111__terminateEPFvvE>:
 800d9b2:	b508      	push	{r3, lr}
 800d9b4:	4780      	blx	r0
 800d9b6:	f000 f80e 	bl	800d9d6 <abort>
	...

0800d9bc <_ZSt13get_terminatev>:
 800d9bc:	4b02      	ldr	r3, [pc, #8]	; (800d9c8 <_ZSt13get_terminatev+0xc>)
 800d9be:	6818      	ldr	r0, [r3, #0]
 800d9c0:	f3bf 8f5b 	dmb	ish
 800d9c4:	4770      	bx	lr
 800d9c6:	bf00      	nop
 800d9c8:	24000014 	.word	0x24000014

0800d9cc <_ZSt9terminatev>:
 800d9cc:	b508      	push	{r3, lr}
 800d9ce:	f7ff fff5 	bl	800d9bc <_ZSt13get_terminatev>
 800d9d2:	f7ff ffee 	bl	800d9b2 <_ZN10__cxxabiv111__terminateEPFvvE>

0800d9d6 <abort>:
 800d9d6:	b508      	push	{r3, lr}
 800d9d8:	2006      	movs	r0, #6
 800d9da:	f000 f873 	bl	800dac4 <raise>
 800d9de:	2001      	movs	r0, #1
 800d9e0:	f7f6 fd4c 	bl	800447c <_exit>

0800d9e4 <__errno>:
 800d9e4:	4b01      	ldr	r3, [pc, #4]	; (800d9ec <__errno+0x8>)
 800d9e6:	6818      	ldr	r0, [r3, #0]
 800d9e8:	4770      	bx	lr
 800d9ea:	bf00      	nop
 800d9ec:	24000018 	.word	0x24000018

0800d9f0 <__libc_init_array>:
 800d9f0:	b570      	push	{r4, r5, r6, lr}
 800d9f2:	4d0d      	ldr	r5, [pc, #52]	; (800da28 <__libc_init_array+0x38>)
 800d9f4:	4c0d      	ldr	r4, [pc, #52]	; (800da2c <__libc_init_array+0x3c>)
 800d9f6:	1b64      	subs	r4, r4, r5
 800d9f8:	10a4      	asrs	r4, r4, #2
 800d9fa:	2600      	movs	r6, #0
 800d9fc:	42a6      	cmp	r6, r4
 800d9fe:	d109      	bne.n	800da14 <__libc_init_array+0x24>
 800da00:	4d0b      	ldr	r5, [pc, #44]	; (800da30 <__libc_init_array+0x40>)
 800da02:	4c0c      	ldr	r4, [pc, #48]	; (800da34 <__libc_init_array+0x44>)
 800da04:	f000 f9b0 	bl	800dd68 <_init>
 800da08:	1b64      	subs	r4, r4, r5
 800da0a:	10a4      	asrs	r4, r4, #2
 800da0c:	2600      	movs	r6, #0
 800da0e:	42a6      	cmp	r6, r4
 800da10:	d105      	bne.n	800da1e <__libc_init_array+0x2e>
 800da12:	bd70      	pop	{r4, r5, r6, pc}
 800da14:	f855 3b04 	ldr.w	r3, [r5], #4
 800da18:	4798      	blx	r3
 800da1a:	3601      	adds	r6, #1
 800da1c:	e7ee      	b.n	800d9fc <__libc_init_array+0xc>
 800da1e:	f855 3b04 	ldr.w	r3, [r5], #4
 800da22:	4798      	blx	r3
 800da24:	3601      	adds	r6, #1
 800da26:	e7f2      	b.n	800da0e <__libc_init_array+0x1e>
 800da28:	0800e034 	.word	0x0800e034
 800da2c:	0800e034 	.word	0x0800e034
 800da30:	0800e034 	.word	0x0800e034
 800da34:	0800e044 	.word	0x0800e044

0800da38 <memcpy>:
 800da38:	440a      	add	r2, r1
 800da3a:	4291      	cmp	r1, r2
 800da3c:	f100 33ff 	add.w	r3, r0, #4294967295
 800da40:	d100      	bne.n	800da44 <memcpy+0xc>
 800da42:	4770      	bx	lr
 800da44:	b510      	push	{r4, lr}
 800da46:	f811 4b01 	ldrb.w	r4, [r1], #1
 800da4a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800da4e:	4291      	cmp	r1, r2
 800da50:	d1f9      	bne.n	800da46 <memcpy+0xe>
 800da52:	bd10      	pop	{r4, pc}

0800da54 <memset>:
 800da54:	4402      	add	r2, r0
 800da56:	4603      	mov	r3, r0
 800da58:	4293      	cmp	r3, r2
 800da5a:	d100      	bne.n	800da5e <memset+0xa>
 800da5c:	4770      	bx	lr
 800da5e:	f803 1b01 	strb.w	r1, [r3], #1
 800da62:	e7f9      	b.n	800da58 <memset+0x4>

0800da64 <realloc>:
 800da64:	4b02      	ldr	r3, [pc, #8]	; (800da70 <realloc+0xc>)
 800da66:	460a      	mov	r2, r1
 800da68:	4601      	mov	r1, r0
 800da6a:	6818      	ldr	r0, [r3, #0]
 800da6c:	f000 b8da 	b.w	800dc24 <_realloc_r>
 800da70:	24000018 	.word	0x24000018

0800da74 <_raise_r>:
 800da74:	291f      	cmp	r1, #31
 800da76:	b538      	push	{r3, r4, r5, lr}
 800da78:	4604      	mov	r4, r0
 800da7a:	460d      	mov	r5, r1
 800da7c:	d904      	bls.n	800da88 <_raise_r+0x14>
 800da7e:	2316      	movs	r3, #22
 800da80:	6003      	str	r3, [r0, #0]
 800da82:	f04f 30ff 	mov.w	r0, #4294967295
 800da86:	bd38      	pop	{r3, r4, r5, pc}
 800da88:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800da8a:	b112      	cbz	r2, 800da92 <_raise_r+0x1e>
 800da8c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800da90:	b94b      	cbnz	r3, 800daa6 <_raise_r+0x32>
 800da92:	4620      	mov	r0, r4
 800da94:	f000 f830 	bl	800daf8 <_getpid_r>
 800da98:	462a      	mov	r2, r5
 800da9a:	4601      	mov	r1, r0
 800da9c:	4620      	mov	r0, r4
 800da9e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800daa2:	f000 b817 	b.w	800dad4 <_kill_r>
 800daa6:	2b01      	cmp	r3, #1
 800daa8:	d00a      	beq.n	800dac0 <_raise_r+0x4c>
 800daaa:	1c59      	adds	r1, r3, #1
 800daac:	d103      	bne.n	800dab6 <_raise_r+0x42>
 800daae:	2316      	movs	r3, #22
 800dab0:	6003      	str	r3, [r0, #0]
 800dab2:	2001      	movs	r0, #1
 800dab4:	e7e7      	b.n	800da86 <_raise_r+0x12>
 800dab6:	2400      	movs	r4, #0
 800dab8:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800dabc:	4628      	mov	r0, r5
 800dabe:	4798      	blx	r3
 800dac0:	2000      	movs	r0, #0
 800dac2:	e7e0      	b.n	800da86 <_raise_r+0x12>

0800dac4 <raise>:
 800dac4:	4b02      	ldr	r3, [pc, #8]	; (800dad0 <raise+0xc>)
 800dac6:	4601      	mov	r1, r0
 800dac8:	6818      	ldr	r0, [r3, #0]
 800daca:	f7ff bfd3 	b.w	800da74 <_raise_r>
 800dace:	bf00      	nop
 800dad0:	24000018 	.word	0x24000018

0800dad4 <_kill_r>:
 800dad4:	b538      	push	{r3, r4, r5, lr}
 800dad6:	4d07      	ldr	r5, [pc, #28]	; (800daf4 <_kill_r+0x20>)
 800dad8:	2300      	movs	r3, #0
 800dada:	4604      	mov	r4, r0
 800dadc:	4608      	mov	r0, r1
 800dade:	4611      	mov	r1, r2
 800dae0:	602b      	str	r3, [r5, #0]
 800dae2:	f7f6 fcbb 	bl	800445c <_kill>
 800dae6:	1c43      	adds	r3, r0, #1
 800dae8:	d102      	bne.n	800daf0 <_kill_r+0x1c>
 800daea:	682b      	ldr	r3, [r5, #0]
 800daec:	b103      	cbz	r3, 800daf0 <_kill_r+0x1c>
 800daee:	6023      	str	r3, [r4, #0]
 800daf0:	bd38      	pop	{r3, r4, r5, pc}
 800daf2:	bf00      	nop
 800daf4:	2400107c 	.word	0x2400107c

0800daf8 <_getpid_r>:
 800daf8:	f7f6 bca8 	b.w	800444c <_getpid>

0800dafc <sbrk_aligned>:
 800dafc:	b570      	push	{r4, r5, r6, lr}
 800dafe:	4e0e      	ldr	r6, [pc, #56]	; (800db38 <sbrk_aligned+0x3c>)
 800db00:	460c      	mov	r4, r1
 800db02:	6831      	ldr	r1, [r6, #0]
 800db04:	4605      	mov	r5, r0
 800db06:	b911      	cbnz	r1, 800db0e <sbrk_aligned+0x12>
 800db08:	f000 f8bc 	bl	800dc84 <_sbrk_r>
 800db0c:	6030      	str	r0, [r6, #0]
 800db0e:	4621      	mov	r1, r4
 800db10:	4628      	mov	r0, r5
 800db12:	f000 f8b7 	bl	800dc84 <_sbrk_r>
 800db16:	1c43      	adds	r3, r0, #1
 800db18:	d00a      	beq.n	800db30 <sbrk_aligned+0x34>
 800db1a:	1cc4      	adds	r4, r0, #3
 800db1c:	f024 0403 	bic.w	r4, r4, #3
 800db20:	42a0      	cmp	r0, r4
 800db22:	d007      	beq.n	800db34 <sbrk_aligned+0x38>
 800db24:	1a21      	subs	r1, r4, r0
 800db26:	4628      	mov	r0, r5
 800db28:	f000 f8ac 	bl	800dc84 <_sbrk_r>
 800db2c:	3001      	adds	r0, #1
 800db2e:	d101      	bne.n	800db34 <sbrk_aligned+0x38>
 800db30:	f04f 34ff 	mov.w	r4, #4294967295
 800db34:	4620      	mov	r0, r4
 800db36:	bd70      	pop	{r4, r5, r6, pc}
 800db38:	24001078 	.word	0x24001078

0800db3c <_malloc_r>:
 800db3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800db40:	1ccd      	adds	r5, r1, #3
 800db42:	f025 0503 	bic.w	r5, r5, #3
 800db46:	3508      	adds	r5, #8
 800db48:	2d0c      	cmp	r5, #12
 800db4a:	bf38      	it	cc
 800db4c:	250c      	movcc	r5, #12
 800db4e:	2d00      	cmp	r5, #0
 800db50:	4607      	mov	r7, r0
 800db52:	db01      	blt.n	800db58 <_malloc_r+0x1c>
 800db54:	42a9      	cmp	r1, r5
 800db56:	d905      	bls.n	800db64 <_malloc_r+0x28>
 800db58:	230c      	movs	r3, #12
 800db5a:	603b      	str	r3, [r7, #0]
 800db5c:	2600      	movs	r6, #0
 800db5e:	4630      	mov	r0, r6
 800db60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800db64:	4e2e      	ldr	r6, [pc, #184]	; (800dc20 <_malloc_r+0xe4>)
 800db66:	f000 f89d 	bl	800dca4 <__malloc_lock>
 800db6a:	6833      	ldr	r3, [r6, #0]
 800db6c:	461c      	mov	r4, r3
 800db6e:	bb34      	cbnz	r4, 800dbbe <_malloc_r+0x82>
 800db70:	4629      	mov	r1, r5
 800db72:	4638      	mov	r0, r7
 800db74:	f7ff ffc2 	bl	800dafc <sbrk_aligned>
 800db78:	1c43      	adds	r3, r0, #1
 800db7a:	4604      	mov	r4, r0
 800db7c:	d14d      	bne.n	800dc1a <_malloc_r+0xde>
 800db7e:	6834      	ldr	r4, [r6, #0]
 800db80:	4626      	mov	r6, r4
 800db82:	2e00      	cmp	r6, #0
 800db84:	d140      	bne.n	800dc08 <_malloc_r+0xcc>
 800db86:	6823      	ldr	r3, [r4, #0]
 800db88:	4631      	mov	r1, r6
 800db8a:	4638      	mov	r0, r7
 800db8c:	eb04 0803 	add.w	r8, r4, r3
 800db90:	f000 f878 	bl	800dc84 <_sbrk_r>
 800db94:	4580      	cmp	r8, r0
 800db96:	d13a      	bne.n	800dc0e <_malloc_r+0xd2>
 800db98:	6821      	ldr	r1, [r4, #0]
 800db9a:	3503      	adds	r5, #3
 800db9c:	1a6d      	subs	r5, r5, r1
 800db9e:	f025 0503 	bic.w	r5, r5, #3
 800dba2:	3508      	adds	r5, #8
 800dba4:	2d0c      	cmp	r5, #12
 800dba6:	bf38      	it	cc
 800dba8:	250c      	movcc	r5, #12
 800dbaa:	4629      	mov	r1, r5
 800dbac:	4638      	mov	r0, r7
 800dbae:	f7ff ffa5 	bl	800dafc <sbrk_aligned>
 800dbb2:	3001      	adds	r0, #1
 800dbb4:	d02b      	beq.n	800dc0e <_malloc_r+0xd2>
 800dbb6:	6823      	ldr	r3, [r4, #0]
 800dbb8:	442b      	add	r3, r5
 800dbba:	6023      	str	r3, [r4, #0]
 800dbbc:	e00e      	b.n	800dbdc <_malloc_r+0xa0>
 800dbbe:	6822      	ldr	r2, [r4, #0]
 800dbc0:	1b52      	subs	r2, r2, r5
 800dbc2:	d41e      	bmi.n	800dc02 <_malloc_r+0xc6>
 800dbc4:	2a0b      	cmp	r2, #11
 800dbc6:	d916      	bls.n	800dbf6 <_malloc_r+0xba>
 800dbc8:	1961      	adds	r1, r4, r5
 800dbca:	42a3      	cmp	r3, r4
 800dbcc:	6025      	str	r5, [r4, #0]
 800dbce:	bf18      	it	ne
 800dbd0:	6059      	strne	r1, [r3, #4]
 800dbd2:	6863      	ldr	r3, [r4, #4]
 800dbd4:	bf08      	it	eq
 800dbd6:	6031      	streq	r1, [r6, #0]
 800dbd8:	5162      	str	r2, [r4, r5]
 800dbda:	604b      	str	r3, [r1, #4]
 800dbdc:	4638      	mov	r0, r7
 800dbde:	f104 060b 	add.w	r6, r4, #11
 800dbe2:	f000 f865 	bl	800dcb0 <__malloc_unlock>
 800dbe6:	f026 0607 	bic.w	r6, r6, #7
 800dbea:	1d23      	adds	r3, r4, #4
 800dbec:	1af2      	subs	r2, r6, r3
 800dbee:	d0b6      	beq.n	800db5e <_malloc_r+0x22>
 800dbf0:	1b9b      	subs	r3, r3, r6
 800dbf2:	50a3      	str	r3, [r4, r2]
 800dbf4:	e7b3      	b.n	800db5e <_malloc_r+0x22>
 800dbf6:	6862      	ldr	r2, [r4, #4]
 800dbf8:	42a3      	cmp	r3, r4
 800dbfa:	bf0c      	ite	eq
 800dbfc:	6032      	streq	r2, [r6, #0]
 800dbfe:	605a      	strne	r2, [r3, #4]
 800dc00:	e7ec      	b.n	800dbdc <_malloc_r+0xa0>
 800dc02:	4623      	mov	r3, r4
 800dc04:	6864      	ldr	r4, [r4, #4]
 800dc06:	e7b2      	b.n	800db6e <_malloc_r+0x32>
 800dc08:	4634      	mov	r4, r6
 800dc0a:	6876      	ldr	r6, [r6, #4]
 800dc0c:	e7b9      	b.n	800db82 <_malloc_r+0x46>
 800dc0e:	230c      	movs	r3, #12
 800dc10:	603b      	str	r3, [r7, #0]
 800dc12:	4638      	mov	r0, r7
 800dc14:	f000 f84c 	bl	800dcb0 <__malloc_unlock>
 800dc18:	e7a1      	b.n	800db5e <_malloc_r+0x22>
 800dc1a:	6025      	str	r5, [r4, #0]
 800dc1c:	e7de      	b.n	800dbdc <_malloc_r+0xa0>
 800dc1e:	bf00      	nop
 800dc20:	24001074 	.word	0x24001074

0800dc24 <_realloc_r>:
 800dc24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dc28:	4680      	mov	r8, r0
 800dc2a:	4614      	mov	r4, r2
 800dc2c:	460e      	mov	r6, r1
 800dc2e:	b921      	cbnz	r1, 800dc3a <_realloc_r+0x16>
 800dc30:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800dc34:	4611      	mov	r1, r2
 800dc36:	f7ff bf81 	b.w	800db3c <_malloc_r>
 800dc3a:	b92a      	cbnz	r2, 800dc48 <_realloc_r+0x24>
 800dc3c:	f000 f83e 	bl	800dcbc <_free_r>
 800dc40:	4625      	mov	r5, r4
 800dc42:	4628      	mov	r0, r5
 800dc44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dc48:	f000 f884 	bl	800dd54 <_malloc_usable_size_r>
 800dc4c:	4284      	cmp	r4, r0
 800dc4e:	4607      	mov	r7, r0
 800dc50:	d802      	bhi.n	800dc58 <_realloc_r+0x34>
 800dc52:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800dc56:	d812      	bhi.n	800dc7e <_realloc_r+0x5a>
 800dc58:	4621      	mov	r1, r4
 800dc5a:	4640      	mov	r0, r8
 800dc5c:	f7ff ff6e 	bl	800db3c <_malloc_r>
 800dc60:	4605      	mov	r5, r0
 800dc62:	2800      	cmp	r0, #0
 800dc64:	d0ed      	beq.n	800dc42 <_realloc_r+0x1e>
 800dc66:	42bc      	cmp	r4, r7
 800dc68:	4622      	mov	r2, r4
 800dc6a:	4631      	mov	r1, r6
 800dc6c:	bf28      	it	cs
 800dc6e:	463a      	movcs	r2, r7
 800dc70:	f7ff fee2 	bl	800da38 <memcpy>
 800dc74:	4631      	mov	r1, r6
 800dc76:	4640      	mov	r0, r8
 800dc78:	f000 f820 	bl	800dcbc <_free_r>
 800dc7c:	e7e1      	b.n	800dc42 <_realloc_r+0x1e>
 800dc7e:	4635      	mov	r5, r6
 800dc80:	e7df      	b.n	800dc42 <_realloc_r+0x1e>
	...

0800dc84 <_sbrk_r>:
 800dc84:	b538      	push	{r3, r4, r5, lr}
 800dc86:	4d06      	ldr	r5, [pc, #24]	; (800dca0 <_sbrk_r+0x1c>)
 800dc88:	2300      	movs	r3, #0
 800dc8a:	4604      	mov	r4, r0
 800dc8c:	4608      	mov	r0, r1
 800dc8e:	602b      	str	r3, [r5, #0]
 800dc90:	f7f6 fbfe 	bl	8004490 <_sbrk>
 800dc94:	1c43      	adds	r3, r0, #1
 800dc96:	d102      	bne.n	800dc9e <_sbrk_r+0x1a>
 800dc98:	682b      	ldr	r3, [r5, #0]
 800dc9a:	b103      	cbz	r3, 800dc9e <_sbrk_r+0x1a>
 800dc9c:	6023      	str	r3, [r4, #0]
 800dc9e:	bd38      	pop	{r3, r4, r5, pc}
 800dca0:	2400107c 	.word	0x2400107c

0800dca4 <__malloc_lock>:
 800dca4:	4801      	ldr	r0, [pc, #4]	; (800dcac <__malloc_lock+0x8>)
 800dca6:	f000 b85d 	b.w	800dd64 <__retarget_lock_acquire_recursive>
 800dcaa:	bf00      	nop
 800dcac:	24001080 	.word	0x24001080

0800dcb0 <__malloc_unlock>:
 800dcb0:	4801      	ldr	r0, [pc, #4]	; (800dcb8 <__malloc_unlock+0x8>)
 800dcb2:	f000 b858 	b.w	800dd66 <__retarget_lock_release_recursive>
 800dcb6:	bf00      	nop
 800dcb8:	24001080 	.word	0x24001080

0800dcbc <_free_r>:
 800dcbc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dcbe:	2900      	cmp	r1, #0
 800dcc0:	d044      	beq.n	800dd4c <_free_r+0x90>
 800dcc2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800dcc6:	9001      	str	r0, [sp, #4]
 800dcc8:	2b00      	cmp	r3, #0
 800dcca:	f1a1 0404 	sub.w	r4, r1, #4
 800dcce:	bfb8      	it	lt
 800dcd0:	18e4      	addlt	r4, r4, r3
 800dcd2:	f7ff ffe7 	bl	800dca4 <__malloc_lock>
 800dcd6:	4a1e      	ldr	r2, [pc, #120]	; (800dd50 <_free_r+0x94>)
 800dcd8:	9801      	ldr	r0, [sp, #4]
 800dcda:	6813      	ldr	r3, [r2, #0]
 800dcdc:	b933      	cbnz	r3, 800dcec <_free_r+0x30>
 800dcde:	6063      	str	r3, [r4, #4]
 800dce0:	6014      	str	r4, [r2, #0]
 800dce2:	b003      	add	sp, #12
 800dce4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800dce8:	f7ff bfe2 	b.w	800dcb0 <__malloc_unlock>
 800dcec:	42a3      	cmp	r3, r4
 800dcee:	d908      	bls.n	800dd02 <_free_r+0x46>
 800dcf0:	6825      	ldr	r5, [r4, #0]
 800dcf2:	1961      	adds	r1, r4, r5
 800dcf4:	428b      	cmp	r3, r1
 800dcf6:	bf01      	itttt	eq
 800dcf8:	6819      	ldreq	r1, [r3, #0]
 800dcfa:	685b      	ldreq	r3, [r3, #4]
 800dcfc:	1949      	addeq	r1, r1, r5
 800dcfe:	6021      	streq	r1, [r4, #0]
 800dd00:	e7ed      	b.n	800dcde <_free_r+0x22>
 800dd02:	461a      	mov	r2, r3
 800dd04:	685b      	ldr	r3, [r3, #4]
 800dd06:	b10b      	cbz	r3, 800dd0c <_free_r+0x50>
 800dd08:	42a3      	cmp	r3, r4
 800dd0a:	d9fa      	bls.n	800dd02 <_free_r+0x46>
 800dd0c:	6811      	ldr	r1, [r2, #0]
 800dd0e:	1855      	adds	r5, r2, r1
 800dd10:	42a5      	cmp	r5, r4
 800dd12:	d10b      	bne.n	800dd2c <_free_r+0x70>
 800dd14:	6824      	ldr	r4, [r4, #0]
 800dd16:	4421      	add	r1, r4
 800dd18:	1854      	adds	r4, r2, r1
 800dd1a:	42a3      	cmp	r3, r4
 800dd1c:	6011      	str	r1, [r2, #0]
 800dd1e:	d1e0      	bne.n	800dce2 <_free_r+0x26>
 800dd20:	681c      	ldr	r4, [r3, #0]
 800dd22:	685b      	ldr	r3, [r3, #4]
 800dd24:	6053      	str	r3, [r2, #4]
 800dd26:	4421      	add	r1, r4
 800dd28:	6011      	str	r1, [r2, #0]
 800dd2a:	e7da      	b.n	800dce2 <_free_r+0x26>
 800dd2c:	d902      	bls.n	800dd34 <_free_r+0x78>
 800dd2e:	230c      	movs	r3, #12
 800dd30:	6003      	str	r3, [r0, #0]
 800dd32:	e7d6      	b.n	800dce2 <_free_r+0x26>
 800dd34:	6825      	ldr	r5, [r4, #0]
 800dd36:	1961      	adds	r1, r4, r5
 800dd38:	428b      	cmp	r3, r1
 800dd3a:	bf04      	itt	eq
 800dd3c:	6819      	ldreq	r1, [r3, #0]
 800dd3e:	685b      	ldreq	r3, [r3, #4]
 800dd40:	6063      	str	r3, [r4, #4]
 800dd42:	bf04      	itt	eq
 800dd44:	1949      	addeq	r1, r1, r5
 800dd46:	6021      	streq	r1, [r4, #0]
 800dd48:	6054      	str	r4, [r2, #4]
 800dd4a:	e7ca      	b.n	800dce2 <_free_r+0x26>
 800dd4c:	b003      	add	sp, #12
 800dd4e:	bd30      	pop	{r4, r5, pc}
 800dd50:	24001074 	.word	0x24001074

0800dd54 <_malloc_usable_size_r>:
 800dd54:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800dd58:	1f18      	subs	r0, r3, #4
 800dd5a:	2b00      	cmp	r3, #0
 800dd5c:	bfbc      	itt	lt
 800dd5e:	580b      	ldrlt	r3, [r1, r0]
 800dd60:	18c0      	addlt	r0, r0, r3
 800dd62:	4770      	bx	lr

0800dd64 <__retarget_lock_acquire_recursive>:
 800dd64:	4770      	bx	lr

0800dd66 <__retarget_lock_release_recursive>:
 800dd66:	4770      	bx	lr

0800dd68 <_init>:
 800dd68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dd6a:	bf00      	nop
 800dd6c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800dd6e:	bc08      	pop	{r3}
 800dd70:	469e      	mov	lr, r3
 800dd72:	4770      	bx	lr

0800dd74 <_fini>:
 800dd74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dd76:	bf00      	nop
 800dd78:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800dd7a:	bc08      	pop	{r3}
 800dd7c:	469e      	mov	lr, r3
 800dd7e:	4770      	bx	lr
